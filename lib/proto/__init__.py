# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: BengHuai.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto
from betterproto.grpc.grpclib_server import ServiceBase


class AccountType(betterproto.Enum):
    ACCOUNT_NONE = 0
    ACCOUNT_MIHOYO = 1
    ACCOUNT_BILIBILI = 2
    ACCOUNT_UC = 3
    ACCOUNT_360 = 4
    ACCOUNT_YYB = 5
    ACCOUNT_XIAOMI = 6
    ACCOUNT_HUAWEI = 7
    ACCOUNT_OPPO = 8
    ACCOUNT_VIVO = 9
    ACCOUNT_MEIZU = 10
    ACCOUNT_COOLPAD = 11
    ACCOUNT_LENOVO = 12
    ACCOUNT_GIONEE = 13
    ACCOUNT_BAIDU = 14
    ACCOUNT_WANDOUJIA = 15
    ACCOUNT_LESHI = 16
    ACCOUNT_GOOGLE = 17
    ACCOUNT_FACEBOOK = 18
    ACCOUNT_ITUNES_GC = 19
    ACCOUNT_SIGNIN_APPLE = 20
    ACCOUNT_WEGAME = 21
    ACCOUNT_BYTEDANCE = 22
    ACCOUNT_STEAM = 23
    ACCOUNT_HOYOLAB = 24


class AccurateGoodsTriggerType(betterproto.Enum):
    ACCURATE_GOODS_TRIGGER_TYPE_NONE = 0
    ACCURATE_GOODS_TRIGGER_TYPE_UNLOCK_AVATAR = 1
    ACCURATE_GOODS_TRIGGER_TYPE_FIRST_GOT = 2
    ACCURATE_GOODS_TRIGGER_TYPE_REPEAT_GOT = 3
    ACCURATE_GOODS_TRIGGER_TYPE_UNLOCK_ELF = 4
    ACCURATE_GOODS_TRIGGER_TYPE_FINISH_MISSION = 5
    ACCURATE_GOODS_TRIGGER_TYPE_EXCHANGE_SCOIN = 6
    ACCURATE_GOODS_TRIGGER_TYPE_EXCHANGE_STAMINA = 7
    ACCURATE_GOODS_TRIGGER_TYPE_LOSE_STAGE = 8
    ACCURATE_GOODS_TRIGGER_TYPE_WIN_STAGE_FIRST = 9
    ACCURATE_GOODS_TRIGGER_TYPE_AVATAR_LEVEL = 10
    ACCURATE_GOODS_TRIGGER_TYPE_PLAYER_LEVEL = 11
    ACCURATE_GOODS_TRIGGER_TYPE_GOBACK_DAYS = 12
    ACCURATE_GOODS_TRIGGER_TYPE_AVATAR_STAR = 13


class AchievementType(betterproto.Enum):
    ACHIEVE_TYPE_NONE = 0
    ACHIEVE_TYPE_CAPTAIN = 1
    ACHIEVE_TYPE_DEVELOP = 2
    ACHIEVE_TYPE_SOCIAL = 3
    ACHIEVE_TYPE_STAGE = 4
    ACHIEVE_TYPE_ISLAND = 5
    ACHIEVE_TYPE_CHALLENGE = 6
    ACHIEVE_TYPE_DORM = 7
    ACHIEVE_TYPE_EXTRA_STORY = 8


class ActivitySeriesSweepTimesType(betterproto.Enum):
    ACTIVITY_SERIES_SWEEP_TIMES_NONE = 0
    ACTIVITY_SERIES_SWEEP_TIMES_DAILY = 1
    ACTIVITY_SERIES_SWEEP_TIMES_WEEKLY = 2


class ActivityType(betterproto.Enum):
    ACTIVITY_NONE = 0
    ACTIVITY_WEEK_DAY = 1
    ACTIVITY_BEFALL = 2
    ACTIVITY_NUCLEAR = 3
    ACTIVITY_MULTIPLAYER = 4
    ACTIVITY_MP_RAID = 5
    ACTIVITY_SIMULATE_RANK = 7
    ACTIVITY_BOSS_RUSH = 8
    ACTIVITY_MINUTE = 9
    ACTIVITY_SIMULATE_NO_RANK = 10
    ACTIVITY_WORLDBOSS = 11
    ACTIVITY_RECLAIM = 12
    ACTIVITY_MP_OPENWORLD_BOSS = 13
    ACTIVITY_MATRIX = 14


class ActivityWorldChatroomType(betterproto.Enum):
    ACTIVITY_WORLD_CHATROOM_TYPE_NONE = 0
    ACTIVITY_WORLD_CHATROOM_TYPE_KINGDOM = 1
    ACTIVITY_WORLD_CHATROOM_TYPE_GLOBAL_WAR = 2
    ACTIVITY_WORLD_CHATROOM_TYPE_CHATWORLD_BEAST = 3
    ACTIVITY_WORLD_CHATROOM_TYPE_SLG = 4


class AddFriendAction(betterproto.Enum):
    ADD_FRIEND_ACTION_ASK = 1
    ADD_FRIEND_ACTION_AGREE = 2
    ADD_FRIEND_ACTION_REJECT = 3


class AdventureQuestResult(betterproto.Enum):
    ADVENTURE_QUEST_RESULT_NONE = 0
    ADVENTURE_QUEST_RESULT_FAIL = 1
    ADVENTURE_QUEST_RESULT_SUCC = 2
    ADVENTURE_QUEST_RESULT_BIG_SUCC = 3


class AdventureQuestStatus(betterproto.Enum):
    ADVENTURE_QUEST_STATUS_NONE = 0
    ADVENTURE_QUEST_STATUS_DOING = 1
    ADVENTURE_QUEST_STATUS_FINISHED = 2


class AdventureRecordType(betterproto.Enum):
    ADVENTURE_RECORD_NONE = 0
    ADVENTURE_RECORD_GROWTH = 1
    ADVENTURE_RECORD_GROWTH_STAGE = 2
    ADVENTURE_RECORD_SKILL_STAGE = 3


class AdventureWelfareType(betterproto.Enum):
    ADVENTURE_WELFARE_NONE = 0
    ADVENTURE_WELFARE_VENTURE_STAMINA = 1
    ADVENTURE_WELFARE_SHOP = 2
    ADVENTURE_WELFARE_QUEST_LEVEL = 3
    ADVENTURE_WELFARE_SCOIN = 4
    ADVENTURE_WELFARE_STAMINA = 5


class AreaType(betterproto.Enum):
    AREA_CN = 1
    AREA_JP = 2
    AREA_ASIA = 3
    AREA_WEST = 4
    AREA_KR = 5
    AREA_OVERSEAS = 6


class ArmadaActivityType(betterproto.Enum):
    ARMADA_ACTIVITY_TYPE_NONE = 0
    ARMADA_ACTIVITY_ARMADA_BOSS = 1
    ARMADA_ACTIVITY_MATRIX = 2
    ARMADA_ACTIVITY_QUESTION = 3
    ARMADA_ACTIVITY_TRADING_CARD = 4
    ARMADA_ACTIVITY_ARMADA_STAGE_SCORE_ACTIVITY = 5
    ARMADA_ACTIVITY_REUNION = 6


class ArmadaApplyNotifyType(betterproto.Enum):
    ARMADA_APPLY_NOTIFY_NEW = 1
    ARMADA_APPLY_NOTIFY_APPROVE = 2
    ARMADA_APPLY_NOTIFY_REJECT = 3


class ArmadaBuildNotifyType(betterproto.Enum):
    ARMADA_BUILD_NOTIFY_START = 1
    ARMADA_BUILD_NOTIFY_CANCEL = 2
    ARMADA_BUILD_NOTIFY_FINISH = 3
    ARMADA_BUILD_NOTIFY_MOVE = 4


class ArmadaCabinType(betterproto.Enum):
    ARMADA_CABIN_NONE = 0
    ARMADA_CABIN_MAIN = 1
    ARMADA_CABIN_CONTACT = 2
    ARMADA_CABIN_HANGAR = 3
    ARMADA_CABIN_WORKSHOP = 4
    ARMADA_CABIN_EXCHEQUER = 5
    ARMADA_CABIN_BOSS = 6


class ArmadaImpeachOperation(betterproto.Enum):
    START_IMPEACH = 1
    END_IMPEACH = 2
    CANCEL_IMPEACH = 3


class ArmadaImpeachStatus(betterproto.Enum):
    ARMADA_IMPEACH_STATUS_NORMAL = 0
    ARMADA_IMPEACH_STATUS_IMPEACH = 1
    ARMADA_IMPEACH_STATUS_ELECTION = 2


class ArmadaLabelType(betterproto.Enum):
    ARMADA_LABEL_PREFIX = 1
    ARMADA_LABEL = 2


class ArmadaManageNotifyType(betterproto.Enum):
    ARMADA_MANAGE_NOTIFY_LEADER = 1
    ARMADA_MANAGE_NOTIFY_VICE_LEADER_SET = 2
    ARMADA_MANAGE_NOTIFY_VICE_LEADER_CANCEL = 3


class ArmadaMatrixAvatarState(betterproto.Enum):
    ARMADA_MATRIX_AVATAR_STATE_INVALID = 0
    ARMADA_MATRIX_AVATAR_STATE_LIVE = 1
    ARMADA_MATRIX_AVATAR_STATE_DEAD = 2


class ArmadaMatrixBuffCategory(betterproto.Enum):
    ARMADA_MATRIX_BUFF_OVERLAP = 1
    ARMADA_MATRIX_BUFF_TEMPORARY = 2
    ARMADA_MATRIX_BUFF_FLOOR = 3


class ArmadaMatrixEventType(betterproto.Enum):
    ARMADA_MATRIX_EVENT_TYPE_ITEM = 1
    ARMADA_MATRIX_EVENT_TYPE_DEPOSIT = 2
    ARMADA_MATRIX_EVENT_TYPE_BATTLE = 3
    ARMADA_MATRIX_EVENT_TYPE_FATIGUE = 4
    ARMADA_MATRIX_EVENT_TYPE_EXPLORE_POWER = 5
    ARMADA_MATRIX_EVENT_TYPE_SHOP = 6
    ARMADA_MATRIX_EVENT_TYPE_OUTER_ITEM = 7
    ARMADA_MATRIX_EVENT_TYPE_SUPPLY = 8


class ArmadaMatrixExitConditionStatus(betterproto.Enum):
    ARMADA_MATRIX_EXIT_CONDITION_STATUS_NONE = 0
    ARMADA_MATRIX_EXIT_CONDITION_STATUS_DOING = 1
    ARMADA_MATRIX_EXIT_CONDITION_STATUS_FINISH = 2


class ArmadaMatrixExitConditionType(betterproto.Enum):
    ARMADA_MATRIX_EXIT_CONDITION_BOSS = 1
    ARMADA_MATRIX_EXIT_CONDITION_MONSTER = 2
    ARMADA_MATRIX_EXIT_CONDITION_ITEM = 3
    ARMADA_MATRIX_EXIT_CONDITION_TREASURE = 4


class ArmadaMatrixGridState(betterproto.Enum):
    ARMADA_MATRIX_GRID_STATE_NONE = 0
    ARMADA_MATRIX_GRID_STATE_FOG = 1
    ARMADA_MATRIX_GRID_STATE_VISBLE = 2


class ArmadaMatrixGridType(betterproto.Enum):
    ARMADA_MATRIX_GRID_NONE = 0
    ARMADA_MATRIX_GRID_EMPTY = 1
    ARMADA_MATRIX_GRID_BARRIER = 2
    ARMADA_MATRIX_GRID_START = 3
    ARMADA_MATRIX_GRID_ITEM = 4
    ARMADA_MATRIX_GRID_MONSTER = 5
    ARMADA_MATRIX_GRID_RANDOM = 6
    ARMADA_MATRIX_GRID_TRAP = 7
    ARMADA_MATRIX_GRID_SHOP = 8
    ARMADA_MATRIX_GRID_EXIT = 9
    ARMADA_MATRIX_GRID_DIALOG = 10
    ARMADA_MATRIX_GRID_TRANSPORT = 11
    ARMADA_MATRIX_GRID_QUESTION = 12
    ARMADA_MATRIX_GRID_INVALID = -1


class ArmadaMatrixItemEffectType(betterproto.Enum):
    ARMADA_MATRIX_ITEM_EFFECT_TYPE_RECOVER_FATIGUE = 1
    ARMADA_MATRIX_ITEM_EFFECT_TYPE_BUFF = 2
    ARMADA_MATRIX_ITEM_EFFECT_TYPE_FLARE = 3
    ARMADA_MATRIX_ITEM_EFFECT_TYPE_SIGNAL_FLARE = 4
    ARMADA_MATRIX_ITEM_EFFECT_TYPE_EXPLORE_POWER = 5
    ARMADA_MATRIX_ITEM_EFFECT_TYPE_INTERACT_SUPPLY = 6
    ARMADA_MATRIX_ITEM_EFFECT_TYPE_INTERACT_BOSS = 7


class ArmadaMatrixItemSubType(betterproto.Enum):
    ARMADA_MATRIX_ITEM_TYPE_TEAM = 1
    ARMADA_MATRIX_ITEM_TYPE_AVATAR = 2
    ARMADA_MATRIX_ITEM_TYPE_MAP = 3
    ARMADA_MATRIX_ITEM_TYPE_GLOBAL = 4
    ARMADA_MATRIX_ITEM_TYPE_OTHERS = 5


class ArmadaMatrixItemType(betterproto.Enum):
    ARMADA_MATRIX_NONE = 0
    ARMADA_MATRIX_ITEM = 2
    ARMADA_MATRIX_BUFF = 3


class ArmadaMatrixLocationType(betterproto.Enum):
    ARMADA_MATRIX_LOCATION_NONE = 0
    ARMADA_MATRIX_LOCATION_PLAYER = 1
    ARMADA_MATRIX_LOCATION_MONSTER = 2


class ArmadaMatrixMissionMonsterType(betterproto.Enum):
    ARMADA_MATRIX_MISSION_MONSTER_ANY = 0
    ARMADA_MATRIX_MISSION_MONSTER_LOCAL = 1
    ARMADA_MATRIX_MISSION_MONSTER_ARMADA = 2


class ArmadaMatrixMonsterType(betterproto.Enum):
    ARMADA_MATRIX_MONSTER_TYPE_NONE = 0
    ARMADA_MATRIX_MONSTER_TYPE_1 = 1
    ARMADA_MATRIX_MONSTER_TYPE_2 = 2
    ARMADA_MATRIX_MONSTER_TYPE_3 = 3


class ArmadaMatrixPresetType(betterproto.Enum):
    ARMADA_MATRIX_PRESET_TYPE_NONE = 0
    ARMADA_MATRIX_PRESET_TYPE_ARMADA_BOSS = 100


class ArmadaMatrixRewardType(betterproto.Enum):
    ARMADA_MATRIX_REWARD_TYPE_NONE = 0
    ARMADA_MATRIX_REWARD_TYPE_PERSONAL = 1
    ARMADA_MATRIX_REWARD_TYPE_ARMADA = 2


class ArmadaMatrixShopType(betterproto.Enum):
    ARMADA_MATRIX_SHOP_TYPE_GRID = 1
    ARMADA_MATRIX_SHOP_TYPE_EVENT = 2


class ArmadaMatrixSyncNotifyType(betterproto.Enum):
    ARMADA_MATRIX_NOTIFY_UNKNOWN = 0
    ARMADA_MATRIX_NOTIFY_ADVANCE = 1
    ARMADA_MATRIX_NOTIFY_TRANSPORT = 2


class ArmadaMatrixTreasureType(betterproto.Enum):
    ARMADA_MATRIX_TREASURE_ITEM = 1
    ARMADA_MATRIX_TREASURE_DEPOSIT = 2
    ARMADA_MATRIX_TREASURE_OUTER_ITEM = 3


class ArmadaPlayerNotifyType(betterproto.Enum):
    ARMADA_PLAYER_NOTIFY_JOIN = 1
    ARMADA_PLAYER_NOTIFY_QUIT = 2
    ARMADA_PLAYER_NOTIFY_KICK = 3
    ARMADA_PLAYER_NOTIFY_DISSOLVE = 4
    ARMADA_PLAYER_NOTIFY_CHANGE_NAME = 5


class ArmadaPlayerStatus(betterproto.Enum):
    ARMADA_PLAYER_NOT_JOIN = 1
    ARMADA_PLAYER_APPLY = 2
    ARMADA_PLAYER_CHOOSE_CONTACT = 3
    ARMADA_PLAYER_JOINED = 4


class ArmadaPosition(betterproto.Enum):
    ARMADA_POSITION_NONE = 0
    ARMADA_POSITION_LEADER = 1
    ARMADA_POSITION_VICELEADER = 2
    ARMADA_POSITION_MEMBER = 3


class ArmadaStageScoreActivityRewardType(betterproto.Enum):
    ARMADA_STAGE_SCORE_ACTIVITY_REWARD_TYPE_NONE = 0
    ARMADA_STAGE_SCORE_ACTIVITY_REWARD_TYPE_SELF = 1
    ARMADA_STAGE_SCORE_ACTIVITY_REWARD_TYPE_ARMADA = 2


class ArmadaSystemChatMsgType(betterproto.Enum):
    ARMADA_CHAT_MSG_GACHA = 1
    ARMADA_CHAT_MSG_AVATAR_STAR_UP = 2
    ARMADA_CHAT_MSG_AVATAR_UNLOCK = 3
    ARMADA_CHAT_MSG_JOIN_ARMADA = 4
    ARMADA_CHAT_MSG_MISSION_FINISH = 5
    ARMADA_CHAT_MSG_LEVEL_UP = 6
    ARMADA_CHAT_MSG_CABIN_BUILD_FINISH = 7
    ARMADA_CHAT_MSG_CABIN_LEVEL_UP = 8
    ARMADA_CHAT_MSG_POSITION = 9
    ARMADA_CHAT_MSG_KICK = 10
    ARMADA_CHAT_MSG_KEEPUP = 11
    ARMADA_CHAT_MSG_CANCEL_DISSOLVE = 12
    ARMADA_CHAT_MSG_CHANGE_NAME = 13
    ARMADA_CHAT_MSG_TEXT_MAP = 14


class AuditOpType(betterproto.Enum):
    AUDIT_OP_NONE = 0
    AUDIT_OP_CHANGE_NICKNAME = 1
    AUDIT_OP_CHANGE_DESC = 2
    AUDIT_OP_CHANGE_ARMADA_NAME = 3
    AUDIT_OP_CHANGE_ARMADA_BULLETIN = 4
    AUDIT_OP_CREATE_CHATGROUP = 5
    AUDIT_OP_CHANGE_CHATGROUP = 6
    AUDIT_OP_CHANGE_DORM = 7
    AUDIT_OP_CHANGE_MASTER_PUPIL_CARD = 8


class AuthkeySignType(betterproto.Enum):
    AUTHKEY_SIGN_TYPE_DEFAULT = 1
    AUTHKEY_SIGN_TYPE_RSA = 2


class AutoDeleteType(betterproto.Enum):
    AUTO_DELETE_BINGO = 2
    AUTO_DELETE_BULLETIN_SCORE = 3
    AUTO_DELETE_CONTINUOUS_RECHARGE = 4
    AUTO_DELETE_FARM = 5
    AUTO_DELETE_FLOP = 6
    AUTO_DELETE_KINGDOM = 7
    AUTO_DELETE_LOTTERY = 8
    AUTO_DELETE_ELF_EQUIP_TALENT_FREE = 9
    AUTO_DELETE_THEME = 10
    AUTO_DELETE_RELATION = 11
    AUTO_DELETE_BBQ = 12
    AUTO_DELETE_CITY = 13
    AUTO_DELETE_GRATUITY = 14
    AUTO_DELETE_MONOPOLY = 15
    AUTO_DELETE_OVERLAP = 16
    AUTO_DELETE_RECLAIM = 17
    AUTO_DELETE_SCRATCH = 18
    AUTO_DELETE_SEASON = 19
    AUTO_DELETE_TOWER_RAID = 20
    AUTO_DELETE_VERSION = 21
    AUTO_DELETE_GLOBAL_WAR = 22
    AUTO_DELETE_LOGIN = 23
    AUTO_DELETE_GENERAL = 24
    AUTO_DELETE_NINJA = 25
    AUTO_DELETE_QUESTION = 26
    AUTO_DELETE_TRADING_CARD = 27
    AUTO_DELETE_ARMADA_STAGE_SCORE = 28
    AUTO_DELETE_PICTURE = 29
    AUTO_DELETE_JIGSAW = 30
    AUTO_DELETE_ARMADA_REUNION = 31
    AUTO_DELETE_GARDEN = 32
    AUTO_DELETE_DROP_LIMIT = 33
    AUTO_DELETE_RPG_TALE = 34
    AUTO_DELETE_SANCTUARY = 35
    AUTO_DELETE_ACTIVITY_REWARD = 36
    AUTO_DELETE_SLOT_MACHINE = 37
    AUTO_DELETE_EXAMINATION = 38
    AUTO_DELETE_SUPPORT = 39
    AUTO_DELETE_MOSAIC = 40
    AUTO_DELETE_LOGIN_WISH = 41
    AUTO_DELETE_TVT = 43
    AUTO_DELETE_BURDEN_ALLEVIATION = 44
    AUTO_DELETE_CHATWORLD_BEAST = 45
    AUTO_DELETE_CHATWORLD_BOX = 46
    AUTO_DELETE_DREAM = 47
    AUTO_DELETE_OPENWORLD_AVATAR = 48
    AUTO_DELETE_GRANT_TICKET = 49
    AUTO_DELETE_SLG = 50
    AUTO_DELETE_GLOBAL_POLLING = 51
    AUTO_DELETE_REWARD_LINE_SCHEDULE = 52
    AUTO_DELETE_GOD_WAR_TALE = 53
    AUTO_DELETE_OPENWORLD_HUNT = 54
    AUTO_DELETE_BUFF_ASSIST = 55


class AvatarAttrType(betterproto.Enum):
    AVATAR_HP = 1
    AVATAR_SP = 2
    AVATAR_ATTACK = 3
    AVATAR_DEFENSE = 4
    AVATAR_CRITICAL = 5


class AvatarBindEquipMode(betterproto.Enum):
    AVATAR_BIND_EQUIP_COMMON = 0
    AVATAR_BIND_EQUIP_EXTRA_STORY = 1


class AvatarClassType(betterproto.Enum):
    AVATAR_KIANA = 1
    AVATAR_MEI = 2
    AVATAR_BRONYA = 3
    AVATAR_HIMEKO = 4
    AVATAR_THERESA = 5
    AVATAR_FUKA = 6
    AVATAR_RITA = 7
    AVATAR_DURANDAL = 8
    AVATAR_FISCHL = 9
    AVATAR_PARDOFELIS = 10


class AvatarId(betterproto.Enum):
    AVATAR_KIANA_PT = 101
    AVATAR_KIANA_FX = 102
    AVATAR_KIANA_YN = 103
    AVATAR_KIANA_QN = 104
    AVATAR_MEI_CK = 201
    AVATAR_MEI_WS = 202
    AVATAR_MEI_DH = 203
    AVATAR_MEI_LD = 204
    AVATAR_SAKURA_YS = 211
    AVATAR_SAKURA_ZF = 212
    AVATAR_BRONYA_ZP = 301
    AVATAR_BRONYA_BQ = 302
    AVATAR_BRONYA_JJ = 303
    AVATAR_BRONYA_BX = 304
    AVATAR_HIMEKO_VV = 401
    AVATAR_HIMEKO_NX = 402
    AVATAR_HIMEKO_KZ = 403
    AVATAR_HIMEKO_BZ = 404
    AVATAR_THERESA_YD = 501
    AVATAR_THERESA_TP = 502
    AVATAR_THERESA_FY = 503
    AVATAR_THERESA_JX = 504
    AVATAR_RITA_NP = 701


class AvatarRecommendSource(betterproto.Enum):
    AVATAR_RECOMMEND_SOURCE_NONE = 0
    AVATAR_RECOMMEND_SOURCE_DB = 1
    AVATAR_RECOMMEND_SOURCE_DESIGN_DATA = 2


class AvatarRecommendStyle(betterproto.Enum):
    AVATAR_RECOMMEND_STYLE_NONE = 0
    AVATAR_RECOMMEND_STYLE_HOT = 1
    AVATAR_RECOMMEND_STYLE_CHOICE = 2
    AVATAR_RECOMMEND_STYLE_SINGLE_AVATAR = 3


class AvatarRecommendType(betterproto.Enum):
    AVATAR_RECOMMEND_NONE = 0
    AVATAR_RECOMMEND_STAGE = 1
    AVATAR_RECOMMEND_EXBOSS = 2
    AVATAR_RECOMMEND_WEEKLY_REPORT_ENDLESS = 3
    AVATAR_RECOMMEND_WEEKLY_REPORT_EX_BOSS = 4
    AVATAR_RECOMMEND_WEEKLY_REPORT_ULTRA_ENDLESS = 5
    AVATAR_RECOMMEND_ULTRA_ENDLESS = 6
    AVATAR_RECOMMEND_GREEDY = 7
    AVATAR_RECOMMEND_WEEKLY_REPORT_GREEDY = 8


class AvatarReviveEnum(betterproto.Enum):
    AVATAR_REVIVE_TIMES_UN_LIMIT = 65535


class AvatarRoleType(betterproto.Enum):
    AVATAR_ROLE_KIANA = 1
    AVATAR_ROLE_MEI = 2
    AVATAR_ROLE_BRONYA = 3
    AVATAR_ROLE_HIMEKO = 4
    AVATAR_ROLE_THERESA = 5
    AVATAR_ROLE_FUKA = 6
    AVATAR_ROLE_RITA = 7
    AVATAR_ROLE_TWINS = 8
    AVATAR_ROLE_SEELE = 9
    AVATAR_ROLE_DURANDAL = 10
    AVATAR_ROLE_ASUKA = 11
    AVATAR_ROLE_FISCHL = 12
    AVATAR_ROLE_KEQING = 13
    AVATAR_ROLE_ELYSIA = 14
    AVATAR_ROLE_MOBIUS = 15
    AVATAR_ROLE_RAVEN = 16
    AVATAR_ROLE_PARDOFELIS = 17
    AVATAR_ROLE_APONIA = 18
    AVATAR_ROLE_EDEN = 19
    AVATAR_ROLE_GRISEO = 20
    AVATAR_ROLE_VILL_V = 21
    AVATAR_ROLE_LISUSHANG = 22
    AVATAR_ROLE_SAKURA = 101
    AVATAR_ROLE_KALLEN = 102
    AVATAR_ROLE_DLC_MEI = 103
    AVATAR_ROLE_DLC_ADAM = 104
    AVATAR_ROLE_DLC_CAROL = 105
    AVATAR_ROLE_DLC_BRONYA = 106
    AVATAR_ROLE_DLC_KONG = 107


class AvatarRollType(betterproto.Enum):
    AVATAR_ROLL_AVATAR = 1
    AVATAR_ROLL_STIGMATA = 2
    AVATAR_ROLL_ERROR = 100


class AvatarSuiteSelectionStatus(betterproto.Enum):
    SELECTION_NONE = 0
    SELECTION_ING = 1
    SELECTION_FINSH = 2


class AvatarSuiteSelectionStep(betterproto.Enum):
    STEP_NONE = 0
    STEP_AVATAR = 1
    STEP_WEAPON = 2
    STEP_STIGMATA_UP = 3
    STEP_STIGMATA_MID = 4
    STEP_STIGMATA_DOWN = 5
    STEP_SKILL = 6


class AvatarSuiteSelectionSystem(betterproto.Enum):
    SYSTEM_SEALED_MODE = 1


class AvatarTeamType(betterproto.Enum):
    AVATAR_TEAM_NORMAL = 1
    AVATAR_TEAM_VIRTUAL = 2
    AVATAR_TEAM_DLC = 3
    AVATAR_TEAM_SC_DLC = 4


class AvatarType(betterproto.Enum):
    AVATAR_TRIAL_TYPE = 1
    AVATAR_LIMIT_TYPE = 2
    AVATAR_FORMAL_TYPE = 3


class BattleMode(betterproto.Enum):
    BATTLE_MODE_NONE = 0
    BATTLE_MODE_QAVATAR_BATTLE = 1


class BattlePassTicketType(betterproto.Enum):
    BATTLE_PASS_TICKET_NONE = 0
    BATTLE_PASS_TICKET_NORMAL = 1
    BATTLE_PASS_TICKET_ADVANCED = 2
    BATTLE_PASS_TICKET_LUXURY = 3


class BingoCardType(betterproto.Enum):
    BINGO_CARD_WRONG = 0
    BINGO_CARD_CORRECT = 1


class BonusThemeType(betterproto.Enum):
    BONUS_THEME_TYPE_NONE = 0
    BONUS_THEME_TYPE_BONUS_SCORE_RATIO = 1
    BONUS_THEME_TYPE_BONUS_SCORE_FIXED = 2
    BONUS_THEME_TYPE_BONUS_DROP_PROB = 3
    BONUS_THEME_TYPE_BONUS_DROP_FIXED = 4


class BuffAcquireType(betterproto.Enum):
    BUFF_ACQUIRE_GOBACK = 1
    BUFF_ACQUIRE_ITEMUSE = 3


class BuffAssistBuffProducerType(betterproto.Enum):
    BUFF_ASSIST_BUFF_PRODUCER_PLAYER = 1
    BUFF_ASSIST_BUFF_PRODUCER_NPC = 2
    BUFF_ASSIST_BUFF_PRODUCER_ROBOT = 3


class BuffAssistType(betterproto.Enum):
    BUFF_ASSIST_PRODUCER = 1
    BUFF_ASSIST_CONSUMER = 2


class BuffEffectType(betterproto.Enum):
    BUFF_EFFECT_COMMANDER_EXP = 1
    BUFF_EFFECT_AVATAR_EXP = 2
    BUFF_EFFECT_SCOIN = 3
    BUFF_EFFECT_NEWBIE = 4
    BUFF_EFFECT_GOBACK = 5


class BuffEffectUseType(betterproto.Enum):
    BUFF_EFFECT_USE_STAGE = 1
    BUFF_EFFECT_USE_MISSION = 2
    BUFF_EFFECT_USE_VIRTUAL_EQUIPMENT = 3


class BulletinActivityType(betterproto.Enum):
    BULLETIN_ACTIVITY_TYPE_NONE = 0
    BULLETIN_ACTIVITY_TYPE_MOSAIC = 1
    BULLETIN_ACTIVITY_TYPE_GACHA = 2
    BULLETIN_ACTIVITY_TYPE_SHOP = 3
    BULLETIN_ACTIVITY_TYPE_MISSION = 4
    BULLETIN_ACTIVITY_TYPE_BULLETIN = 5
    BULLETIN_ACTIVITY_TYPE_CITYACTIVITY = 6
    BULLETIN_ACTIVITY_TYPE_NEWROLE = 7
    BULLETIN_ACTIVITY_TYPE_GACHA_TIMELINE = 8
    BULLETIN_ACTIVITY_TYPE_ACTIVITY_TIMELINE = 9
    BULLETIN_ACTIVITY_TYPE_FLOP_CARD = 10
    BULLETIN_ACTIVITY_TYPE_BINGO = 11
    BULLETIN_ACTIVITY_TYPE_SCORE = 12
    BULLETIN_ACTIVITY_TYPE_RELATION = 13
    BULLETIN_ACTIVITY_TYPE_WEB = 14
    BULLETIN_ACTIVITY_TYPE_LOTTERY_DRAW_NUMBER = 15
    BULLETIN_ACTIVITY_TYPE_LOTTERY_TAKE_REWARD = 16
    BULLETIN_ACTIVITY_TYPE_CONTINUOUS_RECHARGE = 17
    BULLETIN_ACTIVITY_TYPE_SUPER_SIGN_IN = 18
    BULLETIN_ACTIVITY_TYPE_OVERLAP = 19
    BULLETIN_ACTIVITY_TYPE_REWARD_OVERVIEW = 20
    BULLETIN_ACTIVITY_TYPE_SCRATCH_TICKET = 21
    BULLETIN_ACTIVITY_TYPE_BBQ = 22
    BULLETIN_ACTIVITY_TYPE_PICTURE = 23
    BULLETIN_ACTIVITY_TYPE_JIGSAW = 24
    BULLETIN_ACTIVITY_TYPE_REUNION = 25
    BULLETIN_ACTIVITY_TYPE_GIFT = 26
    BULLETIN_ACTIVITY_TYPE_SLOT_MACHINE = 27
    BULLETIN_ACTIVITY_TYPE_RAFFLE = 28
    BULLETIN_ACTIVITY_TYPE_LOGIN_REWARD = 29
    BULLETIN_ACTIVITY_TYPE_LOGIN_WISH = 30
    BULLETIN_ACTIVITY_TYPE_WEBVIEW = 31
    BULLETIN_ACTIVITY_TYPE_ALLEVIATION = 32
    BULLETIN_ACTIVITY_TYPE_SHOW_PICTURE = 33
    BULLETIN_ACTIVITY_TYPE_SHOW_MAIN_EVENT_INFO = 34
    BULLETIN_ACTIVITY_TYPE_REUNION_COOK = 35
    BULLETIN_ACTIVITY_TYPE_REUNION_TIMELINE = 36
    BULLETIN_ACTIVITY_TYPE_DREAM = 37
    BULLETIN_ACTIVITY_TYPE_SPACESHIP_GIFT = 38
    BULLETIN_ACTIVITY_TYPE_MISSION_THEME = 39
    BULLETIN_ACTIVITY_TYPE_RECHARGE_ADD_UP = 41
    BULLETIN_ACTIVITY_TYPE_NEW_GIFT = 42
    BULLETIN_ACTIVITY_TYPE_ANNIVERSARY_GIFT = 43
    BULLETIN_ACTIVITY_TYPE_DATA_REFACTOR = 44
    BULLETIN_ACTIVITY_TYPE_OW_CHAPTER = 45
    BULLETIN_ACTIVITY_TYPE_PLAYER_LEVEL_LOCK = 46
    BULLETIN_ACTIVITY_TYPE_PV_LOGIN = 47


class BurdenAlleviationType(betterproto.Enum):
    BURDEN_ALLEVIATION_NONE = 0
    BURDEN_ALLEVIATION_EX_BOSS = 1
    BURDEN_ALLEVIATION_WEEKDAY = 2
    BURDEN_ALLEVIATION_RPG_TALE = 3
    BURDEN_ALLEVIATION_RAID = 4
    BURDEN_ALLEVIATION_DAILY_MP = 5
    BURDEN_ALLEVIATION_GRANT_REWARD = 6
    BURDEN_ALLEVIATION_MISSION = 7


class CabinTechEffectType(betterproto.Enum):
    CABIN_TECH_ADD_AVATAR_ATTR = 1
    CABIN_TECH_ADD_VENTURE_MAX_NUM = 2
    CABIN_TECH_ADD_PROCESS_VENTURE_MAX_NUM = 3
    CABIN_TECH_ADD_REFRESH_VENTURE_ATTR = 4
    CABIN_TECH_ADD_FRIEND_NUM = 5
    CABIN_TECH_DISJOIN_EQUIPMENT = 6
    CABIN_TECH_ADD_COLLECT_SPEED = 7
    CABIN_TECH_ADD_COLLECT_STORAGE = 8
    CABIN_TECH_ADD_COLLECT_EXTRA_PERCENT = 9
    CABIN_TECH_ADD_COLLECT_EXTRA_RATE = 10
    CABIN_TECH_ADD_SKILL_POINT_LIMIT = 11
    CABIN_TECH_ADD_COLLECT_EQUIPMENT_DROP = 12
    CABIN_TECH_ADD_COLLECT_EQUIPMENT_PACKAGE_NUM = 13
    CABIN_TECH_SUB_COLLECT_EQUIPMENT_TIME = 14


class CabinType(betterproto.Enum):
    CABIN_POWER = 1
    CABIN_ENHANCE_KIANA = 2
    CABIN_COLLECT = 3
    CABIN_MISC = 4
    CABIN_VENTURE = 5
    CABIN_ENHANCE_MEI = 6
    CABIN_ENHANCE_BRONYA = 7
    CABIN_ENHANCE_HIMEKO = 8
    CABIN_ENHANCE_THERESA = 9
    CABIN_ENHANCE_FUKA = 10


class CgType(betterproto.Enum):
    CG_NONE = 0
    CG_START = 1
    CG_SEVEN_CHAPTER = 2


class ChapterGroupSiteFinishWay(betterproto.Enum):
    CHAPTER_GROUP_SITE_FINISH_WAY_INVALID = 0
    CHAPTER_GROUP_SITE_FINISH_WAY_PASS_STAGE_AND = 1
    CHAPTER_GROUP_SITE_FINISH_WAY_PASS_STAGE_OR = 2
    CHAPTER_GROUP_SITE_FINISH_WAY_FINISH_MISSION_AND = 3
    CHAPTER_GROUP_SITE_FINISH_WAY_FINISH_MISSION_OR = 4
    CHAPTER_GROUP_SITE_FINISH_WAY_TIME_ARRIVED = 5


class ChapterGroupSiteStatus(betterproto.Enum):
    CHAPTER_GROUP_SITE_STATUS_INVALID = 0
    CHAPTER_GROUP_SITE_STATUS_LOCKED = 1
    CHAPTER_GROUP_SITE_STATUS_UNLOCKED = 2
    CHAPTER_GROUP_SITE_STATUS_FINISHED = 3


class ChapterGroupSiteType(betterproto.Enum):
    CHAPTER_GROUP_SITE_TYPE_INVALID = 0
    CHAPTER_GROUP_SITE_TYPE_CHAPTER = 1
    CHAPTER_GROUP_SITE_TYPE_VIDEO = 2
    CHAPTER_GROUP_SITE_TYPE_OPENWORLD = 3


class ChapterType(betterproto.Enum):
    CHAPTER_TYPE_MAIN_STORY = 1
    CHAPTER_TYPE_EVENT = 2
    CHAPTER_TYPE_SPECIAL_STORY = 3
    CHAPTER_MP = 4
    CHAPTER_TYPE_CHAPTER_ACTIVITY = 5
    CHAPTER_TYPE_HYBRID_SITE_ACTIVITY = 6
    CHAPTER_TYPE_OPENWORLD = 7


class ChatgroupPosition(betterproto.Enum):
    CHATGROUP_POSITION_NONE = 0
    CHATGROUP_POSITION_CREATER = 1
    CHATGROUP_POSITION_MEMBER = 2


class ChatgroupSystemNotifyType(betterproto.Enum):
    CHATGROUP_NOTIFY_NONE = 0
    CHATGROUP_NOTIFY_NEW = 1
    CHATGROUP_NOTIFY_JOIN = 2
    CHATGROUP_NOTIFY_LEAVE = 3
    CHATGROUP_NOTIFY_DISSOLVE = 4
    CHATGROUP_NOTIFY_SETTING = 5
    CHATGROUP_NOTIFY_INVITE = 6


class ChatRelationType(betterproto.Enum):
    CHAT_RELATION_TYPE_NONE = 0
    CHAT_RELATION_TYPE_FRIEND = 1
    CHAT_RELATION_TYPE_MASTER_PUPIL = 2


class ChatSwitchChannelType(betterproto.Enum):
    CHAT_SWITCH_CHANNEL_TYPE_NONE = 0
    CHAT_SWITCH_CHANNEL_TYPE_WORLD = 1
    CHAT_SWITCH_CHANNEL_TYPE_PRIVATE = 2
    CHAT_SWITCH_CHANNEL_TYPE_ARMADA = 3
    CHAT_SWITCH_CHANNEL_TYPE_TEAM = 4
    CHAT_SWITCH_CHANNEL_TYPE_GROUP = 5
    CHAT_SWITCH_CHANNEL_TYPE_COMMON_CHATWORLD = 6
    CHAT_SWITCH_CHANNEL_TYPE_OTHERS = 7


class ChatwoldBeastLevel(betterproto.Enum):
    CHATWORLD_BEAST_SENIOR = 1
    CHATWORLD_BEAST_JUNIOR = 2


class ChatworldActivityType(betterproto.Enum):
    CHATWORLD_ACTIVITY_TYPE_MAIN_PAGE_NOTICE = 1
    CHATWORLD_ACTIVITY_TYPE_ACTIVITY_NOTICE = 2
    CHATWORLD_ACTIVITY_TYPE_FIRE_WORKS = 3
    CHATWORLD_ACTIVITY_TYPE_FISH = 4
    CHATWORLD_ACTIVITY_TYPE_PRAY = 5
    CHATWORLD_ACTIVITY_TYPE_QUESTION = 6
    CHATWORLD_ACTIVITY_TYPE_PREPARE = 7
    CHATWORLD_ACTIVITY_TYPE_ARMADA_REUNION = 8
    CHATWORLD_ACTIVITY_TYPE_DISH = 9
    CHATWORLD_ACTIVITY_TYPE_BEAST = 10
    CHATWORLD_ACTIVITY_TYPE_BOX = 11
    CHATWORLD_ACTIVITY_TYPE_PRAY_WITH_ORDER = 12


class ChatworldBattleCampTag(betterproto.Enum):
    CHATWORLD_BATTLE_CAMP_TAG_NONE = 0
    CHATWORLD_BATTLE_CAMP_TAG_1 = 1
    CHATWORLD_BATTLE_CAMP_TAG_2 = 2


class ChatworldBattleItemEffectTarget(betterproto.Enum):
    CHATWORLD_BATTLE_ITEM_EFFECT_ALL = 0
    CHATWORLD_BATTLE_ITEM_EFFECT_ENEMY_CAMP = 1
    CHATWORLD_BATTLE_ITEM_EFFECT_SELF_CAMP = 2


class ChatworldBeastAwardType(betterproto.Enum):
    CHATWORLD_BEAST_AWARD_HP_RATIO = 1
    CHATWORLD_BEAST_AWARD_SCORE = 2


class ChatworldBoxType(betterproto.Enum):
    CHATWORLD_BOX_TYPE_NONE = 0
    CHATWORLD_BOX_TYPE_REWARD = 1
    CHATWORLD_BOX_TYPE_BATTLE = 2


class ChatworldBuffType(betterproto.Enum):
    CHATWORLD_BUFF_TYPE_NONE = 0
    CHATWORLD_BUFF_TYPE_DAMAGE_FREE = 1
    CHATWORLD_BUFF_TYPE_SPEED = 2


class ChatworldComponentType(betterproto.Enum):
    CHATWORLD_COMPONENT_TYPE_NONE = 0
    CHATWORLD_COMPONENT_TYPE_MOVE = 1
    CHATWORLD_COMPONENT_TYPE_BUFF = 2
    CHATWORLD_COMPONENT_TYPE_SKILL = 3
    CHATWORLD_COMPONENT_TYPE_HEALTH = 4
    CHATWORLD_COMPONENT_TYPE_COLLISION = 5


class ChatworldEnterType(betterproto.Enum):
    CHATWORLD_ENTER_TYPE_NONE = 0
    CHATWORLD_ENTER_TYPE_WORLD = 1
    CHATWORLD_ENTER_TYPE_ARMADA = 2


class ChatworldEntityType(betterproto.Enum):
    CHATWORLD_ENTITY_TYPE_NONE = 0
    CHATWORLD_ENTITY_TYPE_PLAYER = 1
    CHATWORLD_ENTITY_TYPE_SKILL = 2
    CHATWORLD_ENTITY_TYPE_ITEM = 3
    CHATWORLD_ENTITY_TYPE_STANCE = 4
    CHATWORLD_ENTITY_TYPE_FISH = 5
    CHATWORLD_ENTITY_TYPE_QUESTION = 6
    CHATWORLD_ENTITY_TYPE_BEAST = 7
    CHATWORLD_ENTITY_TYPE_BOX = 8


class ChatworldFisherStatus(betterproto.Enum):
    CHATWORLD_FISHER_STATUS_NONE = 0
    CHATWORLD_FISHER_STATUS_PREPARE = 1
    CHATWORLD_FISHER_STATUS_START = 2
    CHATWORLD_FISHER_STATUS_END = 3
    CHATWORLD_FISHER_STATUS_WAIT_ASSIST = 4


class ChatworldFishHardLevel(betterproto.Enum):
    CHATWORLD_FISH_HARD_LEVEL_NONE = 0
    CHATWORLD_FISH_HARD_LEVEL_EASY = 1
    CHATWORLD_FISH_HARD_LEVEL_NORMAL = 2
    CHATWORLD_FISH_HARD_LEVEL_HARD = 3


class ChatworldInteractType(betterproto.Enum):
    CHATWORLD_INTERACT_TYPE_NONE = 0
    CHATWORLD_INTERACT_TYPE_HOLD = 1
    CHATWORLD_INTERACT_TYPE_UNHOLD = 2


class ChatworldQuestionStatus(betterproto.Enum):
    CHATWORLD_QUESTION_NONE = 0
    CHATWORLD_QUESTION_PREPARE = 1
    CHATWORLD_QUESTION_ANSWER = 2
    CHATWORLD_QUESTION_RESULT = 3
    CHATWORLD_QUESTION_CD = 4


class ChatworldType(betterproto.Enum):
    CHATWORLD_TYPE_NONE = 0
    CHATWORLD_TYPE_PLAIN = 1
    CHATWORLD_TYPE_KINGDOM_WAR = 2
    CHATWORLD_TYPE_BRAWL = 3
    CHATWORLD_TYPE_STANCE = 4


class CheckConditionEnum(betterproto.Enum):
    CHECK_CONDITION_WEAPON = 13
    CHECK_CONDITION_STIGMATA_SLOT_1 = 14
    CHECK_CONDITION_STIGMATA_SLOT_2 = 15
    CHECK_CONDITION_STIGMATA_SLOT_3 = 16


class CityActivityDataType(betterproto.Enum):
    CITY_ACTIVITY_DATA_ALL = 0
    CITY_ACTIVITY_DATA_EVENT = 1
    CITY_ACTIVITY_DATA_PHONE_EVENT = 2
    CITY_ACTIVITY_DATA_PHOTO = 3


class ClientDataType(betterproto.Enum):
    CLIENT_DATA_NONE = 0
    CLIENT_DATA_ALL = 1
    CLIENT_DATA_RPG_TALE = 2
    CLIENT_DATA_WORLDMAP = 3
    CLIENT_DATA_KINGDOM_WAR = 4
    CLIENT_DATA_AUGMENT_PERFORMANCE = 5
    CLIENT_DATA_AVATAR = 6
    CLIENT_DATA_OPENWORLD_CHAPTER = 7
    CLIENT_DATA_OPENWORLD = 8
    CLIENT_DATA_NINJA = 9
    CLIENT_DATA_AVATAR_TUTORIAL = 10
    CLIENT_DATA_PHONE_NOTICE = 11
    CLIENT_DATA_NEWBIE_ACTIVITY = 12


class ClientMailFilterType(betterproto.Enum):
    CLIENT_MAIL_FILTER_TYPE_ALL = 0
    CLIENT_MAIL_FILTER_TYPE_IMPORTANT = 1


class ClientMailType(betterproto.Enum):
    CLIENT_MAIL_NONE = 0
    CLIENT_MAIL_MAIL = 1
    CLIENT_MAIL_NOTICE = 2


class ClientReportBinType(betterproto.Enum):
    CLIENT_REPORT_BIN_INVALID = 0
    CLIENT_REPORT_BIN_AVATAR_DETAIL = 1
    CLIENT_REPORT_BIN_ATTACK_SNAPSHOT = 2


class ClientSettingType(betterproto.Enum):
    CLIENT_SETTING_NONE = 0
    CLIENT_SETTING_ALL = 1
    CLIENT_SETTING_WEEKLY_GUIDE_SWITCH = 2
    CLIENT_SETTING_SNS_SHOW = 3
    CLIENT_SETTING_AVATAR_ARTIFACT = 4
    CLIENT_SETTING_MASTER_PUPIL_TAG_SWITCH = 5


class CmdTypeActivity(betterproto.Enum):
    CMD_GET_SCRATCH_TICKET_REQ = 4150
    CMD_GET_SCRATCH_TICKET_RSP = 4151
    CMD_SCRATCH_REQ = 4152
    CMD_SCRATCH_RSP = 4153
    CMD_RESET_SCRATCH_TICKET_PLATE_REQ = 4154
    CMD_RESET_SCRATCH_TICKET_PLATE_RSP = 4155
    CMD_ADD_ON_ACTIVITY_REWARD_NOTIFY = 4156
    CMD_GET_BINGO_ACTIVITY_DATA_REQ = 4157
    CMD_GET_BINGO_ACTIVITY_DATA_RSP = 4158
    CMD_BINGO_ACTIVITY_FLOP_CARD_REQ = 4159
    CMD_BINGO_ACTIVITY_FLOP_CARD_RSP = 4160
    CMD_BINGO_ACTIVITY_RESET_BINGO_REQ = 4161
    CMD_BINGO_ACTIVITY_RESET_BINGO_RSP = 4162
    CMD_GET_BULLETIN_SCORE_ACTIVITY_REQ = 4163
    CMD_GET_BULLETIN_SCORE_ACTIVITY_RSP = 4164
    CMD_TAKE_BULLETIN_SCORE_ACTIVITY_REWARD_REQ = 4165
    CMD_TAKE_BULLETIN_SCORE_ACTIVITY_REWARD_RSP = 4166
    CMD_GET_CONTINUOUS_RECHARGE_ACTIVITY_REQ = 4167
    CMD_GET_CONTINUOUS_RECHARGE_ACTIVITY_RSP = 4168
    CMD_TAKE_CONTINUOUS_RECHARGE_REWARD_REQ = 4169
    CMD_TAKE_CONTINUOUS_RECHARGE_REWARD_RSP = 4170
    CMD_TAKE_FLOP_ACTIVITY_REWARD_REQ = 4171
    CMD_TAKE_FLOP_ACTIVITY_REWARD_RSP = 4172
    CMD_GET_FLOP_ACTIVITY_DATA_REQ = 4173
    CMD_GET_FLOP_ACTIVITY_DATA_RSP = 4174
    CMD_FLOP_ACTIVITY_FLOP_CARD_REQ = 4175
    CMD_FLOP_ACTIVITY_FLOP_CARD_RSP = 4176
    CMD_GET_LOTTERY_ACTIVITY_REQ = 4177
    CMD_GET_LOTTERY_ACTIVITY_RSP = 4178
    CMD_LOTTERY_USE_BOX_REQ = 4179
    CMD_LOTTERY_USE_BOX_RSP = 4180
    CMD_LOTTERY_DRAW_NUMBER_REQ = 4181
    CMD_LOTTERY_DRAW_NUMBER_RSP = 4182
    CMD_LOTTERY_TAKE_REWARD_REQ = 4183
    CMD_LOTTERY_TAKE_REWARD_RSP = 4184
    CMD_GET_TOWER_RAID_ACTIVITY_REQ = 4185
    CMD_GET_TOWER_RAID_ACTIVITY_RSP = 4186
    CMD_TAKE_TOWER_RAID_REWARD_REQ = 4187
    CMD_TAKE_TOWER_RAID_REWARD_RSP = 4188
    CMD_UPDATE_TOWER_RAID_BOSS_REQ = 4189
    CMD_UPDATE_TOWER_RAID_BOSS_RSP = 4190
    CMD_TOWER_RAID_LOCK_AVATAR_NOTIFY = 4191
    CMD_GET_LOGIN_ACTIVITY_REQ = 4192
    CMD_GET_LOGIN_ACTIVITY_RSP = 4193
    CMD_TAKE_LOGIN_ACTIVITY_REWARD_REQ = 4194
    CMD_TAKE_LOGIN_ACTIVITY_REWARD_RSP = 4195
    CMD_GET_ONLINE_REWARD_ACTIVITY_REQ = 4196
    CMD_GET_ONLINE_REWARD_ACTIVITY_RSP = 4197
    CMD_TAKE_ONLINE_REWARD_REQ = 4198
    CMD_TAKE_ONLINE_REWARD_RSP = 4199
    CMD_GET_CHAPTER_ACTIVITY_DATA_REQ = 4200
    CMD_GET_CHAPTER_ACTIVITY_DATA_RSP = 4201
    CMD_TAKE_CHAPTER_ACTIVITY_LEVEL_REWARD_REQ = 4202
    CMD_TAKE_CHAPTER_ACTIVITY_LEVEL_REWARD_RSP = 4203
    CMD_SYNC_CHAPTER_ACTIVITY_DATA_NOTIFY = 4204
    CMD_GET_MISSION_THEME_DATA_REQ = 4205
    CMD_GET_MISSION_THEME_DATA_RSP = 4206
    CMD_UPGRADE_MISSION_THEME_REQ = 4207
    CMD_UPGRADE_MISSION_THEME_RSP = 4208
    CMD_TAKE_MISSION_THEME_REWARD_REQ = 4209
    CMD_TAKE_MISSION_THEME_REWARD_RSP = 4210
    CMD_GET_OFFLINE_RESOURCE_DATA_REQ = 4211
    CMD_GET_OFFLINE_RESOURCE_DATA_RSP = 4212
    CMD_TAKE_OFFLINE_RESOURCE_BOX_REQ = 4213
    CMD_TAKE_OFFLINE_RESOURCE_BOX_RSP = 4214
    CMD_GET_OVERLAP_ACTIVITY_DATA_REQ = 4215
    CMD_GET_OVERLAP_ACTIVITY_DATA_RSP = 4216
    CMD_TAKE_OVERLAP_ACTIVITY_REWARD_REQ = 4217
    CMD_TAKE_OVERLAP_ACTIVITY_REWARD_RSP = 4218
    CMD_OVERLAP_ACTIVITY_SUMMON_REQ = 4219
    CMD_OVERLAP_ACTIVITY_SUMMON_RSP = 4220
    CMD_OVERLAP_ACTIVITY_MOVE_REQ = 4221
    CMD_OVERLAP_ACTIVITY_MOVE_RSP = 4222
    CMD_GET_VERSION_ACTIVITY_REQ = 4223
    CMD_GET_VERSION_ACTIVITY_RSP = 4224
    CMD_TAKE_VERSION_ACTIVITY_REWARD_REQ = 4225
    CMD_TAKE_VERSION_ACTIVITY_REWARD_RSP = 4226
    CMD_TAKE_VERSION_ACTIVITY_MISSION_REWARD_REQ = 4227
    CMD_TAKE_VERSION_ACTIVITY_MISSION_REWARD_RSP = 4228
    CMD_GET_WEEKLY_ROUTINE_ACTIVITY_REQ = 4229
    CMD_GET_WEEKLY_ROUTINE_ACTIVITY_RSP = 4230
    CMD_TAKE_WEEKLY_ROUTINE_REWARD_REQ = 4231
    CMD_TAKE_WEEKLY_ROUTINE_REWARD_RSP = 4232
    CMD_GET_RANK_SCHEDULE_DATA_REQ = 4233
    CMD_GET_RANK_SCHEDULE_DATA_RSP = 4234
    CMD_GET_RANK_SCHEDULE_RANK_REQ = 4235
    CMD_GET_RANK_SCHEDULE_RANK_RSP = 4236
    CMD_TAKE_SHARE_REWARD_REQ = 4237
    CMD_TAKE_SHARE_REWARD_RSP = 4238
    CMD_GET_HAVE_TAKEN_SHARE_REWARD_REQ = 4239
    CMD_GET_HAVE_TAKEN_SHARE_REWARD_RSP = 4240
    CMD_GET_SURVEY_DATA_REQ = 4241
    CMD_GET_SURVEY_DATA_RSP = 4242
    CMD_FINISH_SURVEY_NOTIFY = 4243
    CMD_GET_THEME_DATA_REQ = 4244
    CMD_GET_THEME_DATA_RSP = 4245
    CMD_SYNC_THEME_DATA_NOTIFY = 4246
    CMD_GRANT_OUTER_REWARD_NOTIFY = 4247
    CMD_GET_NEWBIE_ACTIVITY_REQ = 4248
    CMD_GET_NEWBIE_ACTIVITY_RSP = 4249
    CMD_GET_BBQ_ACTIVITY_DATA_REQ = 4250
    CMD_GET_BBQ_ACTIVITY_DATA_RSP = 4251
    CMD_BBQ_ACTIVITY_COOK_REQ = 4252
    CMD_BBQ_ACTIVITY_COOK_RSP = 4253
    CMD_BBQ_ACTIVITY_TAKE_LEVEL_UP_REWARD_REQ = 4254
    CMD_BBQ_ACTIVITY_TAKE_LEVEL_UP_REWARD_RSP = 4255
    CMD_TAKE_NEWBIE_ACTIVITY_LEVEL_REWARD_REQ = 4256
    CMD_TAKE_NEWBIE_ACTIVITY_LEVEL_REWARD_RSP = 4257
    CMD_GET_QUESTION_ACTIVITY_REQ = 4258
    CMD_GET_QUESTION_ACTIVITY_RSP = 4259
    CMD_ANSWER_QUESTION_REQ = 4260
    CMD_ANSWER_QUESTION_RSP = 4261
    CMD_GET_TRADING_CARD_ACTIVITY_REQ = 4262
    CMD_GET_TRADING_CARD_ACTIVITY_RSP = 4263
    CMD_TAKE_TRADING_CARD_REWARD_REQ = 4264
    CMD_TAKE_TRADING_CARD_REWARD_RSP = 4265
    CMD_GET_PICTURE_ACTIVITY_REQ = 4266
    CMD_GET_PICTURE_ACTIVITY_RSP = 4267
    CMD_PICTURE_ACTIVITY_CHOOSE_REQ = 4268
    CMD_PICTURE_ACTIVITY_CHOOSE_RSP = 4269
    CMD_PICTURE_ACTIVITY_SHARE_REQ = 4270
    CMD_PICTURE_ACTIVITY_SHARE_RSP = 4271
    CMD_SYNC_PICTURE_ACTIVITY_SCORE_NOTIFY = 4272
    CMD_GET_JIGSAW_ACTIVITY_REQ = 4273
    CMD_GET_JIGSAW_ACTIVITY_RSP = 4274
    CMD_JIGSAW_EXCHANGE_PIECE_REQ = 4275
    CMD_JIGSAW_EXCHANGE_PIECE_RSP = 4276
    CMD_JIGSAW_MOVE_WAITING_PIECE_REQ = 4277
    CMD_JIGSAW_MOVE_WAITING_PIECE_RSP = 4278
    CMD_JIGSAW_MOVE_PIECE_IN_JIGSAW_AREA_REQ = 4279
    CMD_JIGSAW_MOVE_PIECE_IN_JIGSAW_AREA_RSP = 4280
    CMD_JIGSAW_TAKE_GROUP_REWARD_REQ = 4281
    CMD_JIGSAW_TAKE_GROUP_REWARD_RSP = 4282
    CMD_JIGSAW_TAKE_FINISH_REWARD_REQ = 4283
    CMD_JIGSAW_TAKE_FINISH_REWARD_RSP = 4284
    CMD_TAKE_NEWBIE_CHALLENGE_REWARD_REQ = 4285
    CMD_TAKE_NEWBIE_CHALLENGE_REWARD_RSP = 4286
    CMD_GET_GARDEN_ACTIVITY_REQ = 4287
    CMD_GET_GARDEN_ACTIVITY_RSP = 4288
    CMD_GARDEN_HARVEST_REQ = 4289
    CMD_GARDEN_HARVEST_RSP = 4290
    CMD_GARDEN_SPEED_UP_WITH_MATERIAL_REQ = 4291
    CMD_GARDEN_SPEED_UP_WITH_MATERIAL_RSP = 4292
    CMD_GARDEN_REFRESH_SITE_REQ = 4293
    CMD_GARDEN_REFRESH_SITE_RSP = 4294
    CMD_GET_GARDEN_SCHEDULE_REQ = 4295
    CMD_GET_GARDEN_SCHEDULE_RSP = 4296
    CMD_GET_DROP_LIMIT_ACTIVITY_REQ = 4297
    CMD_GET_DROP_LIMIT_ACTIVITY_RSP = 4298
    CMD_GET_LOGIN_MISSION_ACTIVITY_REQ = 4299
    CMD_GET_LOGIN_MISSION_ACTIVITY_RSP = 4300
    CMD_TAKE_LOGIN_MISSION_REWARD_REQ = 4301
    CMD_TAKE_LOGIN_MISSION_REWARD_RSP = 4302
    CMD_SANCTUARY_GET_MAIN_INFO_REQ = 4305
    CMD_SANCTUARY_GET_MAIN_INFO_RSP = 4306
    CMD_SANCTUARY_TAKE_LEVEL_REWARD_REQ = 4307
    CMD_SANCTUARY_TAKE_LEVEL_REWARD_RSP = 4308
    CMD_SANCTUARY_TAKE_PRODUCT_REQ = 4309
    CMD_SANCTUARY_TAKE_PRODUCT_RSP = 4310
    CMD_SANCTUARY_START_NOTIFY = 4311
    CMD_GET_ACTIVITY_REWARD_STATISTIC_DATA_REQ = 4312
    CMD_GET_ACTIVITY_REWARD_STATISTIC_DATA_RSP = 4313
    CMD_SANCTUARY_STAGE_END_NOTIFY = 4314
    CMD_GET_SLOT_MACHINE_MAIN_INFO_REQ = 4315
    CMD_GET_SLOT_MACHINE_MAIN_INFO_RSP = 4316
    CMD_START_SLOT_MACHINE_REQ = 4317
    CMD_START_SLOT_MACHINE_RSP = 4318
    CMD_TAKE_SLOT_MACHINE_PROGRESS_REWARD_REQ = 4319
    CMD_TAKE_SLOT_MACHINE_PROGRESS_REWARD_RSP = 4320
    CMD_GET_BULLETIN_ACTIVITY_MISSION_REQ = 4321
    CMD_GET_BULLETIN_ACTIVITY_MISSION_RSP = 4322
    CMD_GET_EXAMINATION_ACTIVITY_REQ = 4323
    CMD_GET_EXAMINATION_ACTIVITY_RSP = 4324
    CMD_FINISH_EXAMINATION_REQ = 4325
    CMD_FINISH_EXAMINATION_RSP = 4326
    CMD_START_NEXT_ROUND_EXAMINATION_REQ = 4327
    CMD_START_NEXT_ROUND_EXAMINATION_RSP = 4328
    CMD_EVALUATE_EXAMINATION_REQ = 4329
    CMD_EVALUATE_EXAMINATION_RSP = 4330
    CMD_CHAPTER_ACTIVITY_DAILY_REWARD_NOTIFY = 4331
    CMD_GET_SUPPORT_ACTIVITY_REQ = 4332
    CMD_GET_SUPPORT_ACTIVITY_RSP = 4333
    CMD_SUPPORT_ACTIVITY_SUPPORT_REQ = 4334
    CMD_SUPPORT_ACTIVITY_SUPPORT_RSP = 4335
    CMD_SUPPORT_ACTIVITY_TAKE_SHARE_REWARD_REQ = 4336
    CMD_SUPPORT_ACTIVITY_TAKE_SHARE_REWARD_RSP = 4337
    CMD_SUPPORT_ACTIVITY_TAKE_GLOBAL_REWARD_REQ = 4338
    CMD_SUPPORT_ACTIVITY_TAKE_GLOBAL_REWARD_RSP = 4339
    CMD_GET_MOSAIC_ACTIVITY_REQ = 4340
    CMD_GET_MOSAIC_ACTIVITY_RSP = 4341
    CMD_TAKE_MOSAIC_ACTIVITY_REWARD_REQ = 4342
    CMD_TAKE_MOSAIC_ACTIVITY_REWARD_RSP = 4343
    CMD_GET_BLOCK_ZONE_ACTIVITY_REQ = 4344
    CMD_GET_BLOCK_ZONE_ACTIVITY_RSP = 4345
    CMD_GET_MISSION_GROUP_MAIN_INFO_REQ = 4346
    CMD_GET_MISSION_GROUP_MAIN_INFO_RSP = 4347
    CMD_TAKE_MISSION_GROUP_REWARD_REQ = 4348
    CMD_TAKE_MISSION_GROUP_REWARD_RSP = 4349
    CMD_CHAPTER_ACTIVITY_TAKE_DAILY_REWARD_REQ = 4350
    CMD_CHAPTER_ACTIVITY_TAKE_DAILY_REWARD_RSP = 4351
    CMD_GET_BURDEN_ALLEVIATION_REQ = 4352
    CMD_GET_BURDEN_ALLEVIATION_RSP = 4353
    CMD_TRIGGER_BURDEN_ALLEVIATION_REQ = 4354
    CMD_TRIGGER_BURDEN_ALLEVIATION_RSP = 4355
    CMD_ROGUE_TOWER_GET_ACTIVITY_REQ = 4360
    CMD_ROGUE_TOWER_GET_ACTIVITY_RSP = 4361
    CMD_ROGUE_TOWER_GET_CANDIDATE_BUFF_REQ = 4362
    CMD_ROGUE_TOWER_GET_CANDIDATE_BUFF_RSP = 4363
    CMD_ROGUE_TOWER_SELECT_BUFF_REQ = 4364
    CMD_ROGUE_TOWER_SELECT_BUFF_RSP = 4365
    CMD_ROGUE_TOWER_SELECT_CHALLENGE_AVATAR_REQ = 4366
    CMD_ROGUE_TOWER_SELECT_CHALLENGE_AVATAR_RSP = 4367
    CMD_ROGUE_TOWER_REFRESH_BUFF_REQ = 4368
    CMD_ROGUE_TOWER_REFRESH_BUFF_RSP = 4369
    CMD_ROGUE_TOWER_LEVELUP_BUFF_REQ = 4370
    CMD_ROGUE_TOWER_LEVELUP_BUFF_RSP = 4371
    CMD_ROGUE_TOWER_SAVE_REQ = 4372
    CMD_ROGUE_TOWER_SAVE_RSP = 4373
    CMD_ROGUE_TOWER_LEVELUP_SUPPORT_AVATAR_REQ = 4374
    CMD_ROGUE_TOWER_LEVELUP_SUPPORT_AVATAR_RSP = 4375
    CMD_ROGUE_TOWER_GET_RANK_REQ = 4376
    CMD_ROGUE_TOWER_GET_RANK_RSP = 4377
    CMD_REUNION_COOK_GET_ACTIVITY_REQ = 4380
    CMD_REUNION_COOK_GET_ACTIVITY_RSP = 4381
    CMD_REUNION_COOK_MAKE_DINNER_REQ = 4382
    CMD_REUNION_COOK_MAKE_DINNER_RSP = 4383
    CMD_REUNION_COOK_TAKE_SCORE_REWARD_REQ = 4384
    CMD_REUNION_COOK_TAKE_SCORE_REWARD_RSP = 4385
    CMD_RESET_CHAPTER_ACTIVITY_EXCLUSIVE_STAGE_REQ = 4386
    CMD_RESET_CHAPTER_ACTIVITY_EXCLUSIVE_STAGE_RSP = 4387
    CMD_RESET_CHAPTER_ACTIVITY_TALENT_REQ = 4388
    CMD_RESET_CHAPTER_ACTIVITY_TALENT_RSP = 4389
    CMD_REPORT_CHAPTER_ACTIVITY_STAGE_REQ = 4390
    CMD_REPORT_CHAPTER_ACTIVITY_STAGE_RSP = 4391


class CmdTypeActivity2(betterproto.Enum):
    CMD_DREAM_GET_ACTIVITY_REQ = 5750
    CMD_DREAM_GET_ACTIVITY_RSP = 5751
    CMD_DREAM_OPEN_DREAM_REQ = 5752
    CMD_DREAM_OPEN_DREAM_RSP = 5753
    CMD_DREAM_GIVE_UP_DREAM_REQ = 5754
    CMD_DREAM_GIVE_UP_DREAM_RSP = 5755
    CMD_DREAM_EXCHANGE_SCORE_REQ = 5756
    CMD_DREAM_EXCHANGE_SCORE_RSP = 5757
    CMD_DREAM_TAKE_REWARD_REQ = 5758
    CMD_DREAM_TAKE_REWARD_RSP = 5759
    CMD_GET_THEME_WANTED_REQ = 5790
    CMD_GET_THEME_WANTED_RSP = 5791
    CMD_THEME_WANTED_BUY_EXTRA_DROP_REQ = 5792
    CMD_THEME_WANTED_BUY_EXTRA_DROP_RSP = 5793
    CMD_THEME_WANTED_REFRESH_TICKET_REQ = 5794
    CMD_THEME_WANTED_REFRESH_TICKET_RSP = 5795
    CMD_GLOBAL_POLLING_GET_DATA_REQ = 5811
    CMD_GLOBAL_POLLING_GET_DATA_RSP = 5812
    CMD_GLOBAL_POLLING_SUPPORT_REQ = 5813
    CMD_GLOBAL_POLLING_SUPPORT_RSP = 5814
    CMD_GLOBAL_POLLING_VOTE_REQ = 5815
    CMD_GLOBAL_POLLING_VOTE_RSP = 5816
    CMD_GET_COLLABORATION_SCHEDULE_REQ = 5831
    CMD_GET_COLLABORATION_SCHEDULE_RSP = 5832
    CMD_RANCH_GET_ACTIVITY_REQ = 5833
    CMD_RANCH_GET_ACTIVITY_RSP = 5834
    CMD_RANCH_SYNTHESIS_MONSTER_REQ = 5835
    CMD_RANCH_SYNTHESIS_MONSTER_RSP = 5836
    CMD_RANCH_FREE_MONSTER_REQ = 5837
    CMD_RANCH_FREE_MONSTER_RSP = 5838
    CMD_RANCH_ASSIGN_MONSTER_REQ = 5839
    CMD_RANCH_ASSIGN_MONSTER_RSP = 5840
    CMD_RANCH_FIRE_MONSTER_REQ = 5841
    CMD_RANCH_FIRE_MONSTER_RSP = 5842
    CMD_RANCH_TAKE_PRODUCT_REQ = 5843
    CMD_RANCH_TAKE_PRODUCT_RSP = 5844
    CMD_RANCH_GET_MONSTER_WIKI_REQ = 5845
    CMD_RANCH_GET_MONSTER_WIKI_RSP = 5846
    CMD_RANCH_SYNC_MONSTER_NOTIFY = 5847
    CMD_RANCH_DEL_MONSTER_NOTIFY = 5848
    CMD_RANCH_LOCK_MONSTER_SKILL_REQ = 5849
    CMD_RANCH_LOCK_MONSTER_SKILL_RSP = 5850
    CMD_RANCH_SET_BATTLE_MONSTER_REQ = 5851
    CMD_RANCH_SET_BATTLE_MONSTER_RSP = 5852
    CMD_GET_RESTAURANT_ACTIVITY_REQ = 5860
    CMD_GET_RESTAURANT_ACTIVITY_RSP = 5861
    CMD_LEVELUP_RESTAURANT_FACILITY_REQ = 5862
    CMD_LEVELUP_RESTAURANT_FACILITY_RSP = 5863
    CMD_ASSIGN_RESTAURANT_WORK_REQ = 5864
    CMD_ASSIGN_RESTAURANT_WORK_RSP = 5865
    CMD_CANCEL_RESTAURANT_WORK_REQ = 5866
    CMD_CANCEL_RESTAURANT_WORK_RSP = 5867
    CMD_TAKE_RESTAURANT_ORDER_REQ = 5868
    CMD_TAKE_RESTAURANT_ORDER_RSP = 5869
    CMD_DELIVER_RESTAURANT_QUEST_REQ = 5870
    CMD_DELIVER_RESTAURANT_QUEST_RSP = 5871
    CMD_ACCELERATE_RESTAURANT_WORK_REQ = 5872
    CMD_ACCELERATE_RESTAURANT_WORK_RSP = 5873
    CMD_NEWBIE_LEVEL_RUSH_PURCHASE_REQ = 5881
    CMD_NEWBIE_LEVEL_RUSH_PURCHASE_RSP = 5882
    CMD_NEWBIE_LEVEL_RUSH_TAKE_REWARD_REQ = 5883
    CMD_NEWBIE_LEVEL_RUSH_TAKE_REWARD_RSP = 5884
    CMD_GET_REWARD_LINE_ACTIVITY_REQ = 5890
    CMD_GET_REWARD_LINE_ACTIVITY_RSP = 5891
    CMD_TAKE_REWARD_LINE_ACTIVITY_REWARD_REQ = 5892
    CMD_TAKE_REWARD_LINE_ACTIVITY_REWARD_RSP = 5893
    CMD_MONSTER_CARD_GET_ACTIVITY_REQ = 5920
    CMD_MONSTER_CARD_GET_ACTIVITY_RSP = 5921
    CMD_MONSTER_CARD_LEVEL_UP_REQ = 5922
    CMD_MONSTER_CARD_LEVEL_UP_RSP = 5923
    CMD_MONSTER_CARD_STAR_UP_REQ = 5924
    CMD_MONSTER_CARD_STAR_UP_RSP = 5925
    CMD_MONSTER_CARD_LEARN_RANDOM_TALENT_REQ = 5926
    CMD_MONSTER_CARD_LEARN_RANDOM_TALENT_RSP = 5927
    CMD_MONSTER_CARD_SYNC_CARD_NOTIFY = 5928
    CMD_MONSTER_CARD_GET_TOWER_RANK_REQ = 5929
    CMD_MONSTER_CARD_GET_TOWER_RANK_RSP = 5930
    CMD_MONSTER_CARD_GET_BOSS_RANK_REQ = 5931
    CMD_MONSTER_CARD_GET_BOSS_RANK_RSP = 5932
    CMD_MONSTER_CARD_CONFIRM_RANDOM_TALENT_REQ = 5933
    CMD_MONSTER_CARD_CONFIRM_RANDOM_TALENT_RSP = 5934
    CMD_MONSTER_CARD_FRAGMENT_OVERFLOW_NOTIFY = 5935
    CMD_BUFF_ASSIST_GET_ACTIVITY_REQ = 5941
    CMD_BUFF_ASSIST_GET_ACTIVITY_RSP = 5942
    CMD_BUFF_ASSIST_REFRESH_WAIT_SELECT_BUFF_POOL_REQ = 5943
    CMD_BUFF_ASSIST_REFRESH_WAIT_SELECT_BUFF_POOL_RSP = 5944
    CMD_BUFF_ASSIST_SELECT_BUFF_REQ = 5945
    CMD_BUFF_ASSIST_SELECT_BUFF_RSP = 5946
    CMD_BUFF_ASSIST_PUBLISH_BUFF_POOL_REQ = 5947
    CMD_BUFF_ASSIST_PUBLISH_BUFF_POOL_RSP = 5948
    CMD_BUFF_ASSIST_STAGE_END_NOTIFY = 5949
    CMD_BUFF_ASSIST_RECV_STAGE_ASSIST_INFO_NOTIFY = 5950


class CmdTypeAdventure(betterproto.Enum):
    GET_ADVENTURE_GROUP_REQ = 3900
    GET_ADVENTURE_GROUP_RSP = 3901
    SELECT_ADVENTURE_QUEST_REQ = 3902
    SELECT_ADVENTURE_QUEST_RSP = 3903
    TAKE_ADVENTURE_QUEST_REWARD_REQ = 3904
    TAKE_ADVENTURE_QUEST_REWARD_RSP = 3905
    TAKE_ADVENTURE_LEVEL_REWARD_REQ = 3908
    TAKE_ADVENTURE_LEVEL_REWARD_RSP = 3909
    CMD_CLAIM_SCOIN_REQ = 3910
    CMD_CLAIM_SCOIN_RSP = 3911
    CMD_ADVENTURE_STORY_SWEEP_REQ = 3912
    CMD_ADVENTURE_STORY_SWEEP_RSP = 3913
    CMD_GET_ADVENTURE_STORY_SWEEP_INFO_REQ = 3914
    CMD_GET_ADVENTURE_STORY_SWEEP_INFO_RSP = 3915
    CMD_TAKE_ADVENTURE_STORY_SWEEP_REWARD_REQ = 3916
    CMD_TAKE_ADVENTURE_STORY_SWEEP_REWARD_RSP = 3917
    CMD_TAKE_ADVENTURE_COMPENSATION_REQ = 3918
    CMD_TAKE_ADVENTURE_COMPENSATION_RSP = 3919
    CMD_EDIT_ADVENTURE_ROOM_REQ = 3920
    CMD_EDIT_ADVENTURE_ROOM_RSP = 3921
    CANCEL_ADVENTURE_QUEST_REQ = 3922
    CANCEL_ADVENTURE_QUEST_RSP = 3923
    RESET_ADVENTURE_QUEST_REQ = 3924
    RESET_ADVENTURE_QUEST_RSP = 3925


class CmdTypeArmada(betterproto.Enum):
    CMD_GET_ARMADA_DATA_REQ = 2601
    CMD_GET_ARMADA_DATA_RSP = 2602
    CMD_CREATE_ARMADA_REQ = 2603
    CMD_CREATE_ARMADA_RSP = 2604
    CMD_SEARCH_ARMADA_REQ = 2605
    CMD_SEARCH_ARMADA_RSP = 2606
    CMD_APPLY_JOIN_ARMADA_REQ = 2607
    CMD_APPLY_JOIN_ARMADA_RSP = 2608
    CMD_DEAL_ARMADA_APPLY_REQ = 2609
    CMD_DEAL_ARMADA_APPLY_RSP = 2610
    CMD_GET_ARMADA_MANAGE_DATA_REQ = 2611
    CMD_GET_ARMADA_MANAGE_DATA_RSP = 2612
    CMD_SET_ARMADA_APPLY_REQ = 2613
    CMD_SET_ARMADA_APPLY_RSP = 2614
    CMD_SET_ARMADA_BULLETIN_REQ = 2615
    CMD_SET_ARMADA_BULLETIN_RSP = 2616
    CMD_GET_RECOMMEND_ARMADA_REQ = 2617
    CMD_GET_RECOMMEND_ARMADA_RSP = 2618
    CMD_TRANSFER_ARMADA_LEADER_REQ = 2619
    CMD_TRANSFER_ARMADA_LEADER_RSP = 2620
    CMD_SET_ARMADA_POSITION_REQ = 2621
    CMD_SET_ARMADA_POSITION_RSP = 2622
    CMD_KICK_ARMADA_MEMBER_REQ = 2623
    CMD_KICK_ARMADA_MEMBER_RSP = 2624
    CMD_DISSOLVE_ARMADA_REQ = 2625
    CMD_DISSOLVE_ARMADA_RSP = 2626
    CMD_QUIT_ARMADA_REQ = 2627
    CMD_QUIT_ARMADA_RSP = 2628
    CMD_CANCEL_APPLY_ARMADA_REQ = 2629
    CMD_CANCEL_APPLY_ARMADA_RSP = 2630
    CMD_LEVEL_UP_ARMADA_CABIN_REQ = 2631
    CMD_LEVEL_UP_ARMADA_CABIN_RSP = 2632
    CMD_CANCEL_LEVEL_UP_ARMADA_CABIN_REQ = 2633
    CMD_CANCEL_LEVEL_UP_ARMADA_CABIN_RSP = 2634
    CMD_MOVE_ARMADA_CABIN_REQ = 2635
    CMD_MOVE_ARMADA_CABIN_RSP = 2636
    CMD_GET_CONSIGNED_ORDER_DATA_REQ = 2639
    CMD_GET_CONSIGNED_ORDER_DATA_RSP = 2640
    CMD_CHOOSE_CONSIGNED_ORDER_REQ = 2641
    CMD_CHOOSE_CONSIGNED_ORDER_RSP = 2642
    CMD_FINISH_CONSIGNED_ORDER_REQ = 2643
    CMD_FINISH_CONSIGNED_ORDER_RSP = 2644
    CMD_RESET_CONSIGNED_ORDER_REQ = 2645
    CMD_RESET_CONSIGNED_ORDER_RSP = 2646
    CMD_GET_WAREHOUSE_DATA_REQ = 2647
    CMD_GET_WAREHOUSE_DATA_RSP = 2648
    CMD_POST_WAREHOUSE_DEMAND_REQ = 2649
    CMD_POST_WAREHOUSE_DEMAND_RSP = 2650
    CMD_CANCEL_WAREHOUSE_DEMAND_REQ = 2651
    CMD_CANCEL_WAREHOUSE_DEMAND_RSP = 2652
    CMD_DONATE_WAREHOUSE_ITEM_REQ = 2653
    CMD_DONATE_WAREHOUSE_ITEM_RSP = 2654
    CMD_GET_WAREHOUSE_ITEM_REQ = 2655
    CMD_GET_WAREHOUSE_ITEM_RSP = 2656
    CMD_ENTER_ARMADA_CHATROOM_REQ = 2657
    CMD_ENTER_ARMADA_CHATROOM_RSP = 2658
    CMD_SEND_ARMADA_SYSTEM_CHAT_MSG_NOTIFY = 2661
    CMD_RECV_ARMADA_SYSTEM_CHAT_MSG_NOTIFY = 2662
    CMD_GET_ARMADA_DISCOVERY_REQ = 2663
    CMD_GET_ARMADA_DISCOVERY_RSP = 2664
    CMD_GET_ARMADA_MEMBER_DISCOVERY_LIST_REQ = 2665
    CMD_GET_ARMADA_MEMBER_DISCOVERY_LIST_RSP = 2666
    CMD_GET_ARMADA_STAGE_REQ = 2667
    CMD_GET_ARMADA_STAGE_RSP = 2668
    CMD_ARMADA_STAGE_BEGIN_REQ = 2669
    CMD_ARMADA_STAGE_BEGIN_RSP = 2670
    CMD_ARMADA_STAGE_END_REQ = 2671
    CMD_ARMADA_STAGE_END_RSP = 2672
    CMD_GET_ARMADA_STAGE_REWARD_REQ = 2673
    CMD_GET_ARMADA_STAGE_REWARD_RSP = 2674
    CMD_TAKE_ARMADA_STAGE_REWARD_REQ = 2675
    CMD_TAKE_ARMADA_STAGE_REWARD_RSP = 2676
    CMD_DONATE_WAREHOSUE_NOTIFY = 2677
    CMD_ARMADA_BUILD_NOTIFY = 2678
    CMD_ARMADA_BULLETIN_NOTIFY = 2679
    CMD_ARMADA_MANAGE_NOTIFY = 2680
    CMD_ARMADA_PLAYER_NOTIFY = 2681
    CMD_ARMADA_APPLY_NOTIFY = 2682
    CMD_CANCEL_DISSOLVE_ARMADA_REQ = 2683
    CMD_CANCEL_DISSOLVE_ARMADA_RSP = 2684
    CMD_GET_ARMADA_BUILD_OWNERSHIP_REQ = 2685
    CMD_GET_ARMADA_BUILD_OWNERSHIP_RSP = 2686
    CMD_RELEASE_ARMADA_BUILD_OWNERSHIP_REQ = 2687
    CMD_RELEASE_ARMADA_BUILD_OWNERSHIP_RSP = 2688
    CMD_ARMADA_SEND_MAIL_REQ = 2689
    CMD_ARMADA_SEND_MAIL_RSP = 2690
    CMD_CHANGE_ARMADA_NAME_REQ = 2691
    CMD_CHANGE_ARMADA_NAME_RSP = 2692
    CMD_JOIN_ARMADA_ELECTION_REQ = 2693
    CMD_JOIN_ARMADA_ELECTION_RSP = 2694
    CMD_ARMADA_LOGOUT_NOTIFY = 2731
    CMD_QUICK_APPLY_JOIN_ARMADA_REQ = 2732
    CMD_QUICK_APPLY_JOIN_ARMADA_RSP = 2733
    CMD_ARMADA_MATRIX_GET_SCHEDULE_REQ = 2734
    CMD_ARMADA_MATRIX_GET_SCHEDULE_RSP = 2735
    CMD_ARMADA_MATRIX_GET_MAIN_INFO_REQ = 2736
    CMD_ARMADA_MATRIX_GET_MAIN_INFO_RSP = 2737
    CMD_ARMADA_MATRIX_ADVANCE_REQ = 2738
    CMD_ARMADA_MATRIX_ADVANCE_RSP = 2739
    CMD_ARMADA_MATRIX_STAGE_BEGIN_REQ = 2740
    CMD_ARMADA_MATRIX_STAGE_BEGIN_RSP = 2741
    CMD_ARMADA_MATRIX_STAGE_END_REQ = 2742
    CMD_ARMADA_MATRIX_STAGE_END_RSP = 2743
    CMD_ARMADA_MATRIX_SYNC_NOTIFY = 2744
    CMD_ARMADA_MATRIX_STAGE_BATTLE_NOTIFY = 2745
    CMD_ARMADA_MATRIX_SET_AVATAR_TEAM_REQ = 2746
    CMD_ARMADA_MATRIX_SET_AVATAR_TEAM_RSP = 2747
    CMD_ARMADA_MATRIX_GET_AVATAR_TEAM_REQ = 2748
    CMD_ARMADA_MATRIX_GET_AVATAR_TEAM_RSP = 2749
    CMD_ARMADA_MATRIX_PLAYER_AVATAR_SYNC_NOTIFY = 2750
    CMD_ARMADA_MATRIX_SET_CUR_AVATAR_TEAM_REQ = 2751
    CMD_ARMADA_MATRIX_SET_CUR_AVATAR_TEAM_RSP = 2752
    CMD_ARMADA_MATRIX_ACTIVATE_BUFF_REQ = 2753
    CMD_ARMADA_MATRIX_ACTIVATE_BUFF_RSP = 2754
    CMD_ARMADA_MATRIX_GET_GENERIC_ITEM_REQ = 2755
    CMD_ARMADA_MATRIX_GET_GENERIC_ITEM_RSP = 2756
    CMD_ARMADA_MATRIX_PLAYER_MAIN_INFO_SYNC_NOTIFY = 2757
    CMD_ARMADA_MATRIX_EXCHANGE_EXPLORE_POWER_REQ = 2758
    CMD_ARMADA_MATRIX_EXCHANGE_EXPLORE_POWER_RSP = 2759
    CMD_ARMADA_MATRIX_GET_EXCHANGE_EXPLORE_POWER_INFO_REQ = 2760
    CMD_ARMADA_MATRIX_GET_EXCHANGE_EXPLORE_POWER_INFO_RSP = 2761
    CMD_ARMADA_MATRIX_USE_ITEM_REQ = 2762
    CMD_ARMADA_MATRIX_USE_ITEM_RSP = 2763
    CMD_ARMADA_MATRIX_USE_ITEM_NOTIFY = 2764
    CMD_ARMADA_MATRIX_LEAVE_MSG_SYNC_NOTIFY = 2765
    CMD_ARMADA_MATRIX_TEMPORARY_BUFF_SYNC_NOTIFY = 2766
    CMD_ARMADA_MATRIX_SHOP_SYNC_NOTIFY = 2767
    CMD_ARMADA_MATRIX_SHOP_BUY_REQ = 2768
    CMD_ARMADA_MATRIX_SHOP_BUY_RSP = 2769
    CMD_ARMADA_MATRIX_RANDOM_EVENT_NOTIFY = 2770
    CMD_ARMADA_MATRIX_TREASURE_NOTIFY = 2771
    CMD_ARMADA_MATRIX_CHANGE_LEVEL_REQ = 2772
    CMD_ARMADA_MATRIX_CHANGE_LEVEL_RSP = 2773
    CMD_ARMADA_MATRIX_GET_LEVEL_BRIEF_DATA_REQ = 2774
    CMD_ARMADA_MATRIX_GET_LEVEL_BRIEF_DATA_RSP = 2775
    CMD_ARMADA_MATRIX_LEVEL_BRIEF_DATA_NOTIFY = 2776
    CMD_ARMADA_MATRIX_GRANT_SCORE_REWARD_NOTIFY = 2777
    CMD_ARMADA_MATRIX_GET_SCORE_REWARD_INFO_REQ = 2778
    CMD_ARMADA_MATRIX_GET_SCORE_REWARD_INFO_RSP = 2779
    CMD_ARMADA_MATRIX_GET_RANK_LIST_REQ = 2780
    CMD_ARMADA_MATRIX_GET_RANK_LIST_RSP = 2781
    CMD_ARMADA_MATRIX_GET_OVERVIEW_REQ = 2782
    CMD_ARMADA_MATRIX_GET_OVERVIEW_RSP = 2783
    CMD_ARMADA_MATRIX_GET_LOCKED_GRID_INFO_REQ = 2784
    CMD_ARMADA_MATRIX_GET_LOCKED_GRID_INFO_RSP = 2785
    CMD_ARMADA_MATRIX_GET_TEMPORARY_DEPOSIT_REQ = 2786
    CMD_ARMADA_MATRIX_GET_TEMPORARY_DEPOSIT_RSP = 2787
    CMD_ARMADA_MATRIX_CHOOSE_TEMPORARY_DEPOSIT_REQ = 2788
    CMD_ARMADA_MATRIX_CHOOSE_TEMPORARY_DEPOSIT_RSP = 2789
    CMD_ARMADA_MATRIX_EXIT_CONDITION_SYNC_NOTIFY = 2790
    CMD_ARMADA_MATRIX_USE_TEMP_BUFF_REQ = 2791
    CMD_ARMADA_MATRIX_USE_TEMP_BUFF_RSP = 2792
    CMD_ARMADA_MATRIX_TAKE_FATIGUE_REWARD_REQ = 2793
    CMD_ARMADA_MATRIX_TAKE_FATIGUE_REWARD_RSP = 2794
    CMD_ARMADA_MATRIX_DIALOG_EVENT_NOTIFY = 2795
    CMD_ARMADA_MATRIX_TRANSPORT_NOTIFY = 2796
    CMD_ARMADA_MATRIX_DIALOG_CHOOSE_EVENT_REQ = 2797
    CMD_ARMADA_MATRIX_DIALOG_CHOOSE_EVENT_RSP = 2798
    CMD_OPEN_ARMADA_STAGE_REQ = 2799
    CMD_OPEN_ARMADA_STAGE_RSP = 2800
    CMD_TAKE_ARMADA_ACHIEVEMENT_REQ = 2801
    CMD_TAKE_ARMADA_ACHIEVEMENT_RSP = 2802
    CMD_GET_RECOMMEND_ARMADA_MEMBER_LIST_REQ = 2803
    CMD_GET_RECOMMEND_ARMADA_MEMBER_LIST_RSP = 2804
    CMD_JOIN_QUIT_ARMADA_NOTIFY = 2805
    CMD_ARMADA_PLAYER_CONTRIBUTION_SYNC_NOTIFY = 2806
    CMD_ARMADA_MATRIX_ACTIVE_REQ = 2808
    CMD_ARMADA_MATRIX_ACTIVE_RSP = 2809
    CMD_ARMADA_MATRIX_ASK_SUPPLY_REQ = 2810
    CMD_ARMADA_MATRIX_ASK_SUPPLY_RSP = 2811
    CMD_ARMADA_MATRIX_SYNC_MEMBER_NOTIFY = 2812
    CMD_ARMADA_MATRIX_INTERACT_NOTIFY = 2813
    CMD_ARMADA_MATRIX_FIRE_BOSS_ITEM_REQ = 2814
    CMD_ARMADA_MATRIX_FIRE_BOSS_ITEM_RSP = 2815
    CMD_ARMADA_MATRIX_SYNC_ARMADA_INFO_NOTIFY = 2816
    CMD_ARMADA_MATRIX_GET_RANDOM_INFO_REQ = 2817
    CMD_ARMADA_MATRIX_GET_RANDOM_INFO_RSP = 2818
    CMD_ARMADA_MATRIX_GET_LOCATION_REQ = 2819
    CMD_ARMADA_MATRIX_GET_LOCATION_RSP = 2820
    CMD_GET_ARMADA_STAGE_SCORE_ACTIVITY_REQ = 2821
    CMD_GET_ARMADA_STAGE_SCORE_ACTIVITY_RSP = 2822
    CMD_TAKE_ARMADA_STAGE_SCORE_ACTIVITY_REWARD_REQ = 2823
    CMD_TAKE_ARMADA_STAGE_SCORE_ACTIVITY_REWARD_RSP = 2824
    CMD_GET_ARMADA_ACTIVITY_LIST_REQ = 2825
    CMD_GET_ARMADA_ACTIVITY_LIST_RSP = 2826
    CMD_ARMADA_MATRIX_CHOOSE_PATH_REQ = 2827
    CMD_ARMADA_MATRIX_CHOOSE_PATH_RSP = 2828
    CMD_ARMADA_MATRIX_CONFIRM_POS_REQ = 2829
    CMD_ARMADA_MATRIX_CONFIRM_POS_RSP = 2830
    CMD_ARMADA_MATRIX_QUESTION_NOTIFY = 2831
    CMD_ARMADA_MATRIX_ANSWER_QUESTION_REQ = 2832
    CMD_ARMADA_MATRIX_ANSWER_QUESTION_RSP = 2833
    CMD_GET_ARMADA_REUNION_ACTIVITY_REQ = 2834
    CMD_GET_ARMADA_REUNION_ACTIVITY_RSP = 2835
    CMD_ARMADA_REUNION_REWARD_NOTIFY = 2836
    CMD_TAKE_ARMADA_REUNION_REWARD_REQ = 2837
    CMD_TAKE_ARMADA_REUNION_REWARD_RSP = 2838
    CMD_SET_ARMADA_LABEL_REQ = 2840
    CMD_SET_ARMADA_LABEL_RSP = 2841
    CMD_GET_ARMADA_STAGE_SCORE_RANK_REQ = 2842
    CMD_GET_ARMADA_STAGE_SCORE_RANK_RSP = 2843


class CmdTypeAvatarmission(betterproto.Enum):
    CMD_GET_AVATAR_MISSION_ACTIVITY_REQ = 3000
    CMD_GET_AVATAR_MISSION_ACTIVITY_RSP = 3001
    CMD_CHOOSE_AVATAR_MISSION_AVATAR_REQ = 3002
    CMD_CHOOSE_AVATAR_MISSION_AVATAR_RSP = 3003
    CMD_TAKE_AVATAR_MISSION_DAILY_REWARD_REQ = 3004
    CMD_TAKE_AVATAR_MISSION_DAILY_REWARD_RSP = 3005
    CMD_TAKE_AVATAR_MISSION_PHASE_REWARD_REQ = 3006
    CMD_TAKE_AVATAR_MISSION_PHASE_REWARD_RSP = 3007
    CMD_RESET_AVATAR_MISSION_AVATAR_REQ = 3008
    CMD_RESET_AVATAR_MISSION_AVATAR_RSP = 3009


class CmdTypeBattlepass(betterproto.Enum):
    CMD_GET_BATTLE_PASS_REQ = 3750
    CMD_GET_BATTLE_PASS_RSP = 3751
    CMD_BUY_BATTLE_PASS_TICKET_REQ = 3752
    CMD_BUY_BATTLE_PASS_TICKET_RSP = 3753
    CMD_TAKE_BATTLE_PASS_LEVEL_REWARD_REQ = 3754
    CMD_TAKE_BATTLE_PASS_LEVEL_REWARD_RSP = 3755
    CMD_BUY_BATTLE_PASS_LEVEL_REQ = 3756
    CMD_BUY_BATTLE_PASS_LEVEL_RSP = 3757
    CMD_TAKE_BATTLE_PASS_PHASE_EXP_REQ = 3758
    CMD_TAKE_BATTLE_PASS_PHASE_EXP_RSP = 3759
    CMD_GET_BATTLE_PASS_THEME_REQ = 3760
    CMD_GET_BATTLE_PASS_THEME_RSP = 3761
    CMD_TAKE_BATTLE_PASS_THEME_LEVEL_REWARD_REQ = 3762
    CMD_TAKE_BATTLE_PASS_THEME_LEVEL_REWARD_RSP = 3763
    CMD_BUY_BATTLE_PASS_THEME_LEVEL_REQ = 3764
    CMD_BUY_BATTLE_PASS_THEME_LEVEL_RSP = 3765
    CMD_BATTLE_PASS_THEME_EXP_TRANSFORM_NOTIFY = 3766


class CmdTypeChat(betterproto.Enum):
    CMD_CREATE_CHATGROUP_REQ = 2200
    CMD_CREATE_CHATGROUP_RSP = 2201
    CMD_INVITE_CHATGROUP_REQ = 2202
    CMD_INVITE_CHATGROUP_RSP = 2203
    CMD_GET_CHATGROUP_LIST_REQ = 2204
    CMD_GET_CHATGROUP_LIST_RSP = 2205
    CMD_SET_CHATGROUP_REQ = 2206
    CMD_SET_CHATGROUP_RSP = 2207
    CMD_LEAVE_CHATGROUP_REQ = 2208
    CMD_LEAVE_CHATGROUP_RSP = 2209
    CMD_CHATGROUP_SYSTEM_NOTIFY = 2211
    CMD_KICK_CHATGROUP_MEMBER_REQ = 2212
    CMD_KICK_CHATGROUP_MEMBER_RSP = 2213
    CMD_DEAL_CHATGROUP_INVITE_REQ = 2214
    CMD_DEAL_CHATGROUP_INVITE_RSP = 2215
    CMD_INVITE_TO_MULTI_CHATGROUP_REQ = 2216
    CMD_INVITE_TO_MULTI_CHATGROUP_RSP = 2217
    CMD_GET_CHATGROUP_HISTORY_CHAT_MSG_REQ = 2218
    CMD_GET_CHATGROUP_HISTORY_CHAT_MSG_RSP = 2219
    CMD_ENTER_WORLD_CHATROOM_REQ = 2231
    CMD_ENTER_WORLD_CHATROOM_RSP = 2232
    CMD_LEAVE_CHATROOM_NOTIFY = 2233
    CMD_SEND_CHAT_MSG_NOTIFY = 2234
    CMD_RECV_CHAT_MSG_NOTIFY = 2235
    CMD_RECV_OFFLINE_PRIVATE_CHAT_MSG_NOTIFY = 2236
    CMD_GET_HISTORY_PRIVATE_CHAT_MSG_REQ = 2237
    CMD_GET_HISTORY_PRIVATE_CHAT_MSG_RSP = 2238
    CMD_CHAT_CLOSED_NOTIFY = 2239


class CmdTypeChatworld(betterproto.Enum):
    CMD_ENTER_COMMON_CHATWORLD_REQ = 2400
    CMD_ENTER_COMMON_CHATWORLD_RSP = 2401
    CMD_LEAVE_COMMON_CHATWORLD_REQ = 2402
    CMD_LEAVE_COMMON_CHATWORLD_RSP = 2403
    CMD_SEND_COMMON_CHATWORLD_MSG_NOTIFY = 2404
    CMD_RECV_COMMON_CHATWORLD_MSG_NOTIFY = 2405
    CMD_CHATWORLD_USE_ITEM_REQ = 2407
    CMD_CHATWORLD_USE_ITEM_RSP = 2408
    CMD_CHATWORLD_CHANGE_AVATAR_REQ = 2409
    CMD_CHATWORLD_CHANGE_AVATAR_RSP = 2410
    CMD_GET_CHATWORLD_LIST_REQ = 2411
    CMD_GET_CHATWORLD_LIST_RSP = 2412
    CMD_CHATWORLD_INTERACT_REQ = 2413
    CMD_CHATWORLD_INTERACT_RSP = 2414
    CMD_GET_CHATWORLD_TREASURE_DATA_REQ = 2415
    CMD_GET_CHATWORLD_TREASURE_DATA_RSP = 2416
    CMD_OPEN_CHATWORLD_TREASURE_REQ = 2417
    CMD_OPEN_CHATWORLD_TREASURE_RSP = 2418
    CMD_CHATWORLD_TREASURE_REWARD_NOTIFY = 2419
    CMD_CHATWORLD_SKILL_DAMAGE_JUDGE_REQ = 2420
    CMD_CHATWORLD_SKILL_DAMAGE_JUDGE_RSP = 2421
    CMD_CHATWORLD_BATTLE_USE_ITEM_REQ = 2422
    CMD_CHATWORLD_BATTLE_USE_ITEM_RSP = 2423
    CMD_CHATWORLD_POS_RESET_NOTIFY = 2424
    CMD_CHATWORLD_BATTLE_COLLECT_ITEM_REQ = 2425
    CMD_CHATWORLD_BATTLE_COLLECT_ITEM_RSP = 2426
    CMD_CHATWORLD_GET_ACTIVITY_SCHEDULE_REQ = 2427
    CMD_CHATWORLD_GET_ACTIVITY_SCHEDULE_RSP = 2428
    CMD_CHATWORLD_FISH_JOIN_SPOT_REQ = 2429
    CMD_CHATWORLD_FISH_JOIN_SPOT_RSP = 2430
    CMD_CHATWORLD_FISH_LEAVE_SPOT_REQ = 2431
    CMD_CHATWORLD_FISH_LEAVE_SPOT_RSP = 2432
    CMD_CHATWORLD_FISH_START_REQ = 2433
    CMD_CHATWORLD_FISH_START_RSP = 2434
    CMD_CHATWORLD_FISH_END_REQ = 2435
    CMD_CHATWORLD_FISH_END_RSP = 2436
    CMD_CHATWORLD_FISH_ASSIST_REQ = 2437
    CMD_CHATWORLD_FISH_ASSIST_RSP = 2438
    CMD_CHATWORLD_FISH_LIKE_REQ = 2439
    CMD_CHATWORLD_FISH_LIKE_RSP = 2440
    CMD_CHATWORLD_FISH_REWARD_NOTIFY = 2441
    CMD_CHATWORLD_FISH_CANCEL_WAIT_ASSIST_REQ = 2442
    CMD_CHATWORLD_FISH_CANCEL_WAIT_ASSIST_RSP = 2443
    CMD_CHATWORLD_FISH_KICK_PLAYER_NOTIFY = 2444
    CMD_CHATWORLD_FISH_GET_ACTIVITY_INFO_REQ = 2445
    CMD_CHATWORLD_FISH_GET_ACTIVITY_INFO_RSP = 2446
    CMD_CHATWORLD_GET_PRAY_INFO_REQ = 2451
    CMD_CHATWORLD_GET_PRAY_INFO_RSP = 2452
    CMD_CHATWORLD_PRAY_REQ = 2453
    CMD_CHATWORLD_PRAY_RSP = 2454
    CMD_CHATWORLD_GRANT_REWARD_NOTIFY = 2455
    CMD_CHATWORLD_GET_DISH_INFO_REQ = 2456
    CMD_CHATWORLD_GET_DISH_INFO_RSP = 2457
    CMD_CHATWORLD_TAKE_DISH_REWARD_REQ = 2458
    CMD_CHATWORLD_TAKE_DISH_REWARD_RSP = 2459
    CMD_CHATWORLD_BEAST_ADD_RESULT_NOTIFY = 2460
    CMD_CHATWORLD_BEAST_CHALLENGE_REQ = 2461
    CMD_CHATWORLD_BEAST_CHALLENGE_RSP = 2462
    CMD_CHATWORLD_BEAST_SYNC_REQ = 2463
    CMD_CHATWORLD_BEAST_SYNC_RSP = 2464
    CMD_CHATWORLD_BEAST_GET_ACTIVITY_REQ = 2465
    CMD_CHATWORLD_BEAST_GET_ACTIVITY_RSP = 2466
    CMD_CHATWORLD_BOX_GET_DATA_REQ = 2467
    CMD_CHATWORLD_BOX_GET_DATA_RSP = 2468
    CMD_CHATWORLD_BOX_TAKE_REWARD_REQ = 2469
    CMD_CHATWORLD_BOX_TAKE_REWARD_RSP = 2470
    CMD_CHATWORLD_BEAST_TAKE_TREASURE_REQ = 2471
    CMD_CHATWORLD_BEAST_TAKE_TREASURE_RSP = 2472
    CMD_CHATWORLD_BEAST_ABANDON_CHALLENGE_REQ = 2473
    CMD_CHATWORLD_BEAST_ABANDON_CHALLENGE_RSP = 2474
    CMD_CHATWORLD_DUMMY = 2599


class CmdTypeCredit(betterproto.Enum):
    CMD_CREDIT_REPORT_DATA_REQ = 6000
    CMD_CREDIT_REPORT_DATA_RSP = 6001
    CMD_CREDIT_ACCOUNT_GET_REQ = 6002
    CMD_CREDIT_ACCOUNT_GET_RSP = 6003


class CmdTypeDiceydungeon(betterproto.Enum):
    CMD_DICEY_DUNGEON_ACTIVITY_GET_DATA_REQ = 6500
    CMD_DICEY_DUNGEON_ACTIVITY_GET_DATA_RSP = 6501
    CMD_DICEY_DUNGEON_ACTIVITY_ROLE_LEVEL_UP_REQ = 6502
    CMD_DICEY_DUNGEON_ACTIVITY_ROLE_LEVEL_UP_RSP = 6503
    CMD_DICEY_DUNGEON_ACTIVITY_DUNGEON_BEGIN_REQ = 6504
    CMD_DICEY_DUNGEON_ACTIVITY_DUNGEON_BEGIN_RSP = 6505
    CMD_DICEY_DUNGEON_ACTIVITY_DUNGEON_END_REQ = 6506
    CMD_DICEY_DUNGEON_ACTIVITY_DUNGEON_END_RSP = 6507
    CMD_DICEY_DUNGEON_ACTIVITY_ROOM_BEGIN_REQ = 6508
    CMD_DICEY_DUNGEON_ACTIVITY_ROOM_BEGIN_RSP = 6509
    CMD_DICEY_DUNGEON_ACTIVITY_ROOM_END_REQ = 6510
    CMD_DICEY_DUNGEON_ACTIVITY_ROOM_END_RSP = 6511
    CMD_DICEY_DUNGEON_ACTIVITY_GET_WEAPON_GACHA_DISPLAY_REQ = 6512
    CMD_DICEY_DUNGEON_ACTIVITY_GET_WEAPON_GACHA_DISPLAY_RSP = 6513
    CMD_DICEY_DUNGEON_ACTIVITY_WEAPON_GACHA_REQ = 6514
    CMD_DICEY_DUNGEON_ACTIVITY_WEAPON_GACHA_RSP = 6515
    CMD_DICEY_DUNGEON_ACTIVITY_SELECT_ORNAMENT_REQ = 6516
    CMD_DICEY_DUNGEON_ACTIVITY_SELECT_ORNAMENT_RSP = 6517
    CMD_DICEY_DUNGEON_ACTIVITY_REFRESH_ORNAMENT_REQ = 6518
    CMD_DICEY_DUNGEON_ACTIVITY_REFRESH_ORNAMENT_RSP = 6519
    CMD_DICEY_DUNGEON_ACTIVITY_GET_DAILY_SCORE_RANK_REQ = 6520
    CMD_DICEY_DUNGEON_ACTIVITY_GET_DAILY_SCORE_RANK_RSP = 6521


class CmdTypeDlc(betterproto.Enum):
    CMD_GET_DLC_REQ = 3550
    CMD_GET_DLC_RSP = 3551
    CMD_LEVEL_UP_DLC_AVATAR_TALENT_REQ = 3552
    CMD_LEVEL_UP_DLC_AVATAR_TALENT_RSP = 3553
    CMD_EQUIP_DLC_AVATAR_TALENT_REQ = 3554
    CMD_EQUIP_DLC_AVATAR_TALENT_RSP = 3555
    CMD_SYNC_DLC_AVATAR_NOTIFY = 3556
    CMD_MODIFY_DLC_NAME_REQ = 3557
    CMD_MODIFY_DLC_NAME_RSP = 3558
    CMD_GET_DLC_AVATAR_REQ = 3559
    CMD_GET_DLC_AVATAR_RSP = 3560
    CMD_TAKE_DLC_LEVEL_REWARD_REQ = 3561
    CMD_TAKE_DLC_LEVEL_REWARD_RSP = 3562
    CMD_DLC_TOWER_STAGE_BEGIN_REQ = 3563
    CMD_DLC_TOWER_STAGE_BEGIN_RSP = 3564
    CMD_DLC_TOWER_STAGE_END_REQ = 3565
    CMD_DLC_TOWER_STAGE_END_RSP = 3566
    CMD_DLC_AVATAR_REVIVE_REQ = 3569
    CMD_DLC_AVATAR_REVIVE_RSP = 3570
    CMD_GET_DLC_TOWER_RANK_REQ = 3571
    CMD_GET_DLC_TOWER_RANK_RSP = 3572
    CMD_TAKE_DLC_RANK_REWARD_NOTIFY = 3573
    CMD_GET_DLC_TOWER_REQ = 3574
    CMD_GET_DLC_TOWER_RSP = 3575
    CMD_RESET_DLC_TOWER_PROGRESS_REQ = 3576
    CMD_RESET_DLC_TOWER_PROGRESS_RSP = 3577
    CMD_FINISH_DLC_DIALOG_REQ = 3578
    CMD_FINISH_DLC_DIALOG_RSP = 3579
    CMD_REFRESH_DLC_TALENT_AFFIX_REQ = 3580
    CMD_REFRESH_DLC_TALENT_AFFIX_RSP = 3581
    CMD_SELECT_DLC_TALENT_AFFIX_REQ = 3584
    CMD_SELECT_DLC_TALENT_AFFIX_RSP = 3585
    CMD_UNLOCK_DLC_PHOTO_REQ = 3586
    CMD_UNLOCK_DLC_PHOTO_RSP = 3587
    CMD_SWITCH_DLC_AVATAR_TALENT_REQ = 3588
    CMD_SWITCH_DLC_AVATAR_TALENT_RSP = 3589
    CMD_REPORT_DLC_DROP_ITEM_REQ = 3590
    CMD_REPORT_DLC_DROP_ITEM_RSP = 3591


class CmdTypeElf(betterproto.Enum):
    CMD_GET_ELF_DATA_REQ = 2100
    CMD_GET_ELF_DATA_RSP = 2101
    CMD_SYNC_ELF_DATA_NOTIFY = 2102
    CMD_SYNC_ELF_FRAGMENT_NOTIFY = 2103
    CMD_SYNC_ELF_TALENT_NOTIFY = 2104
    CMD_ELF_STAR_UP_REQ = 2105
    CMD_ELF_STAR_UP_RSP = 2106
    CMD_ADD_ELF_EXP_BY_MATERIAL_REQ = 2107
    CMD_ADD_ELF_EXP_BY_MATERIAL_RSP = 2108
    CMD_ELF_UPGRADE_LEVEL_PERIOD_REQ = 2109
    CMD_ELF_UPGRADE_LEVEL_PERIOD_RSP = 2110
    CMD_ELF_FRAGMENT_TRANSFORM_REQ = 2121
    CMD_ELF_FRAGMENT_TRANSFORM_RSP = 2122
    CMD_ELF_SKILL_LEVEL_UP_REQ = 2123
    CMD_ELF_SKILL_LEVEL_UP_RSP = 2124
    CMD_ELF_TAKE_COMPENSATION_REQ = 2125
    CMD_ELF_TAKE_COMPENSATION_RSP = 2126


class CmdTypeEndless(betterproto.Enum):
    CMD_GET_LAST_ENDLESS_REWARD_DATA_REQ = 3406
    CMD_GET_LAST_ENDLESS_REWARD_DATA_RSP = 3407
    CMD_TAKE_ENDLESS_BASE_REWARD_REQ = 3417
    CMD_TAKE_ENDLESS_BASE_REWARD_RSP = 3418
    CMD_GET_OPENWORLD_ENDLESS_DATA_REQ = 3419
    CMD_GET_OPENWORLD_ENDLESS_DATA_RSP = 3420
    CMD_OPENWORLD_ENDLESS_ITEM_UPDATE_NOTIFY = 3421
    CMD_USE_OPENWORLD_ENDLESS_ITEM_REQ = 3422
    CMD_USE_OPENWORLD_ENDLESS_ITEM_RSP = 3423
    CMD_FINISH_OPENWORLD_ENDLESS_MONSTER_GROUP_REQ = 3424
    CMD_FINISH_OPENWORLD_ENDLESS_MONSTER_GROUP_RSP = 3425
    CMD_GET_OPENWORLD_ENDLESS_STAGE_INNER_DATA_REQ = 3426
    CMD_GET_OPENWORLD_ENDLESS_STAGE_INNER_DATA_RSP = 3427
    CMD_TRIGGER_OPENWORLD_ENDLESS_TRAP_REQ = 3428
    CMD_TRIGGER_OPENWORLD_ENDLESS_TRAP_RSP = 3429
    CMD_FINISH_OPENWORLD_ENDLESS_INVASION_MONSTER_REQ = 3430
    CMD_FINISH_OPENWORLD_ENDLESS_INVASION_MONSTER_RSP = 3431
    CMD_GET_ENDLESS_STATUS_REQ = 3432
    CMD_GET_ENDLESS_STATUS_RSP = 3433
    CMD_REPORT_OPENWORLD_ENDLESS_DATA_REQ = 3434
    CMD_REPORT_OPENWORLD_ENDLESS_DATA_RSP = 3435
    CMD_OPENWORLD_ENDLESS_BATTLE_BEGIN_REQ = 3438
    CMD_OPENWORLD_ENDLESS_BATTLE_BEGIN_RSP = 3439
    CMD_OPENWORLD_ENDLESS_BATTLE_END_REQ = 3440
    CMD_OPENWORLD_ENDLESS_BATTLE_END_RSP = 3441
    CMD_OPENWORLD_ENDLESS_WAR_INFO_NOTIFY = 3442
    CMD_GET_OPENWORLD_ENDLESS_PLAYER_WAR_INFO_REQ = 3443
    CMD_GET_OPENWORLD_ENDLESS_PLAYER_WAR_INFO_RSP = 3444
    CMD_OPENWORLD_ENDLESS_PLAYER_UPDATE_NOTIFY = 3445
    CMD_GET_OPENWORLD_ENDLESS_TOP_GROUP_REQ = 3446
    CMD_GET_OPENWORLD_ENDLESS_TOP_GROUP_RSP = 3447
    CMD_SET_OPENWORLD_ENDLESS_MONSTER_GROUP_PROGRESS_REQ = 3448
    CMD_SET_OPENWORLD_ENDLESS_MONSTER_GROUP_PROGRESS_RSP = 3449
    CMD_OPENWORLD_ENDLESS_CHANGE_AVATAR_REQ = 3450
    CMD_OPENWORLD_ENDLESS_CHANGE_AVATAR_RSP = 3451
    CMD_ENDLESS_IN_SETTLE_NOTIFY = 3452
    CMD_GREEDY_ENDLESS_ENROLL_REQ = 3453
    CMD_GREEDY_ENDLESS_ENROLL_RSP = 3454
    CMD_GREEDY_ENDLESS_REPORT_FLOOR_END_REQ = 3455
    CMD_GREEDY_ENDLESS_REPORT_FLOOR_END_RSP = 3456
    CMD_GREEDY_ENDLESS_FLOOR_REWARD_NOTIFY = 3457
    CMD_GREEDY_ENDLESS_GET_RANK_REQ = 3458
    CMD_GREEDY_ENDLESS_GET_RANK_RSP = 3459
    CMD_GREEDY_ENDLESS_TAKE_RANK_REWARD_REQ = 3460
    CMD_GREEDY_ENDLESS_TAKE_RANK_REWARD_RSP = 3461
    CMD_ENDLESS_SELECT_TYPE_REQ = 3462
    CMD_ENDLESS_SELECT_TYPE_RSP = 3463
    CMD_GREEDY_ENDLESS_REPORT_FLOOR_BEGIN_REQ = 3464
    CMD_GREEDY_ENDLESS_REPORT_FLOOR_BEGIN_RSP = 3465


class CmdTypeEquipforge(betterproto.Enum):
    CMD_GET_EQUIPMENT_FORGE_DATA_REQ = 3650
    CMD_GET_EQUIPMENT_FORGE_DATA_RSP = 3651
    CMD_FORGE_EQUIPMENT_REQ = 3652
    CMD_FORGE_EQUIPMENT_RSP = 3653
    CMD_EXTRACT_EQUIPMENT_REQ = 3654
    CMD_EXTRACT_EQUIPMENT_RSP = 3655
    CMD_REFORGE_EQUIPMENT_REQ = 3657
    CMD_REFORGE_EQUIPMENT_RSP = 3658
    CMD_GET_EXTRACT_REFORGE_ACTIVITY_REQ = 3659
    CMD_GET_EXTRACT_REFORGE_ACTIVITY_RSP = 3660
    CMD_GET_EQUIPMENT_BACK_REQ = 3661
    CMD_GET_EQUIPMENT_BACK_RSP = 3662
    CMD_BACK_EQUIPMENT_REQ = 3663
    CMD_BACK_EQUIPMENT_RSP = 3664


class CmdTypeGeneralactivity(betterproto.Enum):
    CMD_GENERAL_ACTIVITY_SCORE_REWARD_NOTIFY = 4000
    CMD_GENERAL_ACTIVITY_GET_SCORE_REWARD_INFO_REQ = 4001
    CMD_GENERAL_ACTIVITY_GET_SCORE_REWARD_INFO_RSP = 4002
    CMD_GENERAL_ACTIVITY_GET_SCHEDULE_REQ = 4003
    CMD_GENERAL_ACTIVITY_GET_SCHEDULE_RSP = 4004
    CMD_GENERAL_ACTIVITY_GET_MAIN_INFO_REQ = 4005
    CMD_GENERAL_ACTIVITY_GET_MAIN_INFO_RSP = 4006
    CMD_GENERAL_ACTIVITY_GET_RANK_REQ = 4007
    CMD_GENERAL_ACTIVITY_GET_RANK_RSP = 4008
    CMD_PUSH_TOWER_ACTIVTIY_TAKE_STAGE_REWARD_REQ = 4009
    CMD_PUSH_TOWER_ACTIVTIY_TAKE_STAGE_REWARD_RSP = 4010
    CMD_PUSH_TOWER_ACTIVTIY_TAKE_CLEAR_REWARD_REQ = 4011
    CMD_PUSH_TOWER_ACTIVTIY_TAKE_CLEAR_REWARD_RSP = 4012
    CMD_TEAM_ASSAULT_ACTIVITY_BEGIN_REQ = 4020
    CMD_TEAM_ASSAULT_ACTIVITY_BEGIN_RSP = 4021
    CMD_TEAM_ASSAULT_ACTIVITY_END_REQ = 4022
    CMD_TEAM_ASSAULT_ACTIVITY_END_RSP = 4023
    CMD_TEAM_ASSAULT_ACTIVITY_BOSS_BEGIN_REQ = 4024
    CMD_TEAM_ASSAULT_ACTIVITY_BOSS_BEGIN_RSP = 4025
    CMD_TEAM_ASSAULT_ACTIVITY_BOSS_END_REQ = 4026
    CMD_TEAM_ASSAULT_ACTIVITY_BOSS_END_RSP = 4027
    CMD_TEAM_ASSAULT_ACTIVITY_RESET_REQ = 4028
    CMD_TEAM_ASSAULT_ACTIVITY_RESET_RSP = 4029
    CMD_GENERAL_ACTIVITY_STAGE_EXCHANGE_ENTER_TIMES_REQ = 4030
    CMD_GENERAL_ACTIVITY_STAGE_EXCHANGE_ENTER_TIMES_RSP = 4031
    CMD_GENERAL_ACTIVITY_STAGE_TAKE_STAGE_REWARD_REQ = 4032
    CMD_GENERAL_ACTIVITY_STAGE_TAKE_STAGE_REWARD_RSP = 4033
    CMD_TAKE_GENERAL_ACTIVITY_SCORE_REWARD_REQ = 4034
    CMD_TAKE_GENERAL_ACTIVITY_SCORE_REWARD_RSP = 4035
    CMD_GENERAL_ACTIVITY_STAGE_TAKE_STAGE_GROUP_REWARD_REQ = 4036
    CMD_GENERAL_ACTIVITY_STAGE_TAKE_STAGE_GROUP_REWARD_RSP = 4037
    CMD_ENDLESS_SINGLE_MODE_ACTIVITY_FINISH_FLOOR_REQ = 4038
    CMD_ENDLESS_SINGLE_MODE_ACTIVITY_FINISH_FLOOR_RSP = 4039
    CMD_ENDLESS_SINGLE_MODE_ACTIVITY_RESET_REQ = 4040
    CMD_ENDLESS_SINGLE_MODE_ACTIVITY_RESET_RSP = 4041
    CMD_ENDLESS_SINGLE_MODE_ACTIVITY_BATTLE_BEGIN_REQ = 4042
    CMD_ENDLESS_SINGLE_MODE_ACTIVITY_BATTLE_BEGIN_RSP = 4043
    CMD_ENDLESS_SINGLE_MODE_ACTIVITY_BATTLE_END_REQ = 4044
    CMD_ENDLESS_SINGLE_MODE_ACTIVITY_BATTLE_END_RSP = 4045
    CMD_ENDLESS_SINGLE_MODE_ACTIVITY_TAKE_ITEM_REQ = 4046
    CMD_ENDLESS_SINGLE_MODE_ACTIVITY_TAKE_ITEM_RSP = 4047
    CMD_ENDLESS_SINGLE_MODE_ACTIVITY_USE_ITEM_REQ = 4048
    CMD_ENDLESS_SINGLE_MODE_ACTIVITY_USE_ITEM_RSP = 4049
    CMD_OPTIONAL_BUFF_ACTIVITY_CHOOSE_BUFF_REQ = 4050
    CMD_OPTIONAL_BUFF_ACTIVITY_CHOOSE_BUFF_RSP = 4051
    CMD_GENERAL_ACTIVITY_GET_STAGE_RANK_REQ = 4052
    CMD_GENERAL_ACTIVITY_GET_STAGE_RANK_RSP = 4053
    CMD_CHALLENGE_WAR_UPDATE_TEAM_REQ = 4054
    CMD_CHALLENGE_WAR_UPDATE_TEAM_RSP = 4055
    CMD_CRISIS_MODE_ACTIVITY_TAKE_STAGE_REWARD_REQ = 4056
    CMD_CRISIS_MODE_ACTIVITY_TAKE_STAGE_REWARD_RSP = 4057
    CMD_CHALLENGE_WAR_ACTIVITY_FINISH_FLOOR_REQ = 4058
    CMD_CHALLENGE_WAR_ACTIVITY_FINISH_FLOOR_RSP = 4059
    CMD_GENERAL_ACTIVITY_TAKE_TICKET_REQ = 4060
    CMD_GENERAL_ACTIVITY_TAKE_TICKET_RSP = 4061
    CMD_BOSS_CHALLENGE_ACTIVITY_GET_STAGE_RANK_REQ = 4062
    CMD_BOSS_CHALLENGE_ACTIVITY_GET_STAGE_RANK_RSP = 4063
    CMD_FRONT_ENDLESS_ACTIVITY_BATTLE_BEGIN_REQ = 4064
    CMD_FRONT_ENDLESS_ACTIVITY_BATTLE_BEGIN_RSP = 4065
    CMD_FRONT_ENDLESS_ACTIVITY_BATTLE_END_REQ = 4066
    CMD_FRONT_ENDLESS_ACTIVITY_BATTLE_END_RSP = 4067
    CMD_GENERAL_ACTIVITY_DUMMY = 4099


class CmdTypeGlobalwar(betterproto.Enum):
    CMD_GET_GLOBAL_WAR_ACTIVITY_REQ = 3950
    CMD_GET_GLOBAL_WAR_ACTIVITY_RSP = 3951
    CMD_GLOBAL_WAR_TAKE_POINT_REWARD_REQ = 3952
    CMD_GLOBAL_WAR_TAKE_POINT_REWARD_RSP = 3953
    CMD_GLOBAL_WAR_ADD_CURRENCY_NOTIFY = 3954
    CMD_GLOBAL_WAR_EXCHANGE_CURRENCY_REQ = 3955
    CMD_GLOBAL_WAR_EXCHANGE_CURRENCY_RSP = 3956
    CMD_GLOBAL_WAR_GET_RANK_REQ = 3957
    CMD_GLOBAL_WAR_GET_RANK_RSP = 3958
    CMD_GLOBAL_WAR_TAKE_SWEEP_REWARD_REQ = 3959
    CMD_GLOBAL_WAR_TAKE_SWEEP_REWARD_RSP = 3960
    CMD_GLOBAL_WAR_DUMMY = 3999


class CmdTypeGratuity(betterproto.Enum):
    CMD_GET_GRATUITY_ACTIVITY_REQ = 4100
    CMD_GET_GRATUITY_ACTIVITY_RSP = 4101
    CMD_ACCEPT_GRATUITY_STAGE_REQ = 4102
    CMD_ACCEPT_GRATUITY_STAGE_RSP = 4103
    CMD_ASSIST_GRATUITY_STAGE_REQ = 4104
    CMD_ASSIST_GRATUITY_STAGE_RSP = 4105
    CMD_CANCEL_GRATUITY_STAGE_REQ = 4106
    CMD_CANCEL_GRATUITY_STAGE_RSP = 4107
    CMD_GET_GRATUITY_BATTLE_HISTORY_REQ = 4108
    CMD_GET_GRATUITY_BATTLE_HISTORY_RSP = 4109
    CMD_SYNC_GRATUITY_STAGE_REQ = 4112
    CMD_SYNC_GRATUITY_STAGE_RSP = 4113
    CMD_PUBLISH_GRATUITY_STAGE_REQ = 4114
    CMD_PUBLISH_GRATUITY_STAGE_RSP = 4115
    CMD_GET_GRATUITY_STAGE_LIST_REQ = 4116
    CMD_GET_GRATUITY_STAGE_LIST_RSP = 4117
    CMD_REJECT_GRATUITY_STAGE_REQ = 4118
    CMD_REJECT_GRATUITY_STAGE_RSP = 4119
    CMD_GRATUITY_STAGE_INVITE_NOTIFY = 4120
    CMD_GRATUITY_STAGE_FINISH_NOTIFY = 4121


class CmdTypeKingdom(betterproto.Enum):
    CMD_GET_KINGDOM_WAR_REQ = 3050
    CMD_GET_KINGDOM_WAR_RSP = 3051
    CMD_KINGDOM_WAR_MOVE_REQ = 3052
    CMD_KINGDOM_WAR_MOVE_RSP = 3053
    CMD_KINGDOM_WAR_VOTE_REQ = 3054
    CMD_KINGDOM_WAR_VOTE_RSP = 3055
    CMD_KINGDOM_WAR_GET_RANK_REQ = 3058
    CMD_KINGDOM_WAR_GET_RANK_RSP = 3059
    CMD_KINGDOM_WAR_TAKE_DAILY_REWARD_REQ = 3060
    CMD_KINGDOM_WAR_TAKE_DAILY_REWARD_RSP = 3061
    CMD_KINGDOM_WAR_EXCHANGE_CURRENCY_REQ = 3062
    CMD_KIGNDOM_WAR_EXCHANGE_CURRENCY_RSP = 3063
    CMD_KINGDOM_WAR_GET_POINT_RANK_REQ = 3064
    CMD_KINGDOM_WAR_GET_POINT_RANK_RSP = 3065


class CmdTypeMail(betterproto.Enum):
    CMD_GET_CLIENT_MAIL_DATA_REQ = 3800
    CMD_GET_CLIENT_MAIL_DATA_RSP = 3801
    CMD_TAKE_CLIENT_MAIL_ATTACHMENT_REQ = 3802
    CMD_TAKE_CLIENT_MAIL_ATTACHMENT_RSP = 3803
    CMD_MARK_CLIENT_MAIL_READ_REQ = 3804
    CMD_MARK_CLIENT_MAIL_READ_RSP = 3805
    CMD_DEL_CLIENT_MAIL_REQ = 3806
    CMD_DEL_CLIENT_MAIL_RSP = 3807
    CMD_NEW_CLIENT_MAIL_NOTIFY = 3808


class CmdTypeMassivewar(betterproto.Enum):
    CMD_MASSIVE_WAR_GET_ACTIVITY_REQ = 4800
    CMD_MASSIVE_WAR_GET_ACTIVITY_RSP = 4801
    CMD_MASSIVE_WAR_GET_BATTLE_INFO_REQ = 4802
    CMD_MASSIVE_WAR_GET_BATTLE_INFO_RSP = 4803
    CMD_MASSIVE_WAR_GET_RANK_REQ = 4804
    CMD_MASSIVE_WAR_GET_RANK_RSP = 4805
    CMD_MASSIVE_WAR_BATTLE_BEGIN_NOTIFY = 4806
    CMD_MASSIVE_WAR_REPORT_BATTLE_MESSAGE_NOTIFY = 4807
    CMD_MASSIVE_WAR_EXIT_BATTLE_REQ = 4808
    CMD_MASSIVE_WAR_EXIT_BATTLE_RSP = 4809
    CMD_MASSIVE_WAR_BATTLE_END_NOTIFY = 4810
    CMD_MASSIVE_WAR_LINEUP_INFO_NOTIFY = 4811
    CMD_MASSIVE_WAR_TAKE_SCORE_REWARD_REQ = 4812
    CMD_MASSIVE_WAR_TAKE_SCORE_REWARD_RSP = 4813
    CMD_MASSIVE_WAR_DUMMY = 4899


class CmdTypeMonopoly(betterproto.Enum):
    CMD_GET_MONOPOLY_ACTIVITY_REQ = 3850
    CMD_GET_MONOPOLY_ACTIVITY_RSP = 3851
    CMD_MONOPOLY_THROW_DICE_REQ = 3852
    CMD_MONOPOLY_THROW_DICE_RSP = 3853
    CMD_MONOPOLY_BUILDING_CONSTRUCT_REQ = 3854
    CMD_MONOPOLY_BUILDING_CONSTRUCT_RSP = 3855
    CMD_MONOPOLY_END_ROUND_REQ = 3856
    CMD_MONOPOLY_END_ROUND_RSP = 3857
    CMD_MONOPOLY_USE_ITEM_REQ = 3858
    CMD_MONOPOLY_USE_ITEM_RSP = 3859
    CMD_MONOPOLY_REWARD_NOTIFY = 3860
    CMD_MONOPOLY_BUY_GOODS_REQ = 3861
    CMD_MONOPOLY_BUY_GOODS_RSP = 3862
    CMD_MONOPOLY_SKIP_BATTLE_REQ = 3863
    CMD_MONOPOLY_SKIP_BATTLE_RSP = 3864
    CMD_MONOPOLY_RESET_FLOOR_REQ = 3865
    CMD_MONOPOLY_RESET_FLOOR_RSP = 3866
    CMD_MONOPOLY_ADD_MONSTER_REQ = 3867
    CMD_MONOPOLY_ADD_MONSTER_RSP = 3868
    CMD_EXCHANGE_RAFFLE_MATERIAL_REQ = 3890
    CMD_EXCHANGE_RAFFLE_MATERIAL_RSP = 3891
    CMD_TAKE_RAFFLE_REWARD_REQ = 3894
    CMD_TAKE_RAFFLE_REWARD_RSP = 3895
    CMD_DRAW_RAFFLE_TICKET_REQ = 3896
    CMD_DRAW_RAFFLE_TICKET_RSP = 3897
    CMD_GET_RAFFLE_ACTIVITY_REQ = 3898
    CMD_GET_RAFFLE_ACTIVITY_RSP = 3899


class CmdTypeNinja(betterproto.Enum):
    CMD_GET_NINJA_ACTIVITY_REQ = 4400
    CMD_GET_NINJA_ACTIVITY_RSP = 4401
    CMD_NINJA_SLOT_STRENGTHEN_REQ = 4402
    CMD_NINJA_SLOT_STRENGTHEN_RSP = 4403
    CMD_NINJA_ACTIVITY_NOTIFY = 4404
    CMD_NINJA_SLOT_CHOOSE_EFFECT_REQ = 4405
    CMD_NINJA_SLOT_CHOOSE_EFFECT_RSP = 4406
    CMD_NINJA_DUMMY = 4449


class CmdTypeOne(betterproto.Enum):
    CMD_KEEP_ALIVE_NOTIFY = 1
    CMD_GET_GAMESERVER_REQ = 2
    CMD_GET_GAMESERVER_RSP = 3
    CMD_GET_PLAYER_TOKEN_REQ = 4
    CMD_GET_PLAYER_TOKEN_RSP = 5
    CMD_PLAYER_LOGIN_REQ = 6
    CMD_PLAYER_LOGIN_RSP = 7
    CMD_PLAYER_LOGOUT_REQ = 8
    CMD_PLAYER_LOGOUT_RSP = 9
    CMD_GET_MAIN_DATA_REQ = 10
    CMD_GET_MAIN_DATA_RSP = 11
    CMD_GET_SCOIN_EXCHANGE_INFO_REQ = 12
    CMD_GET_SCOIN_EXCHANGE_INFO_RSP = 13
    CMD_SCOIN_EXCHANGE_REQ = 14
    CMD_SCOIN_EXCHANGE_RSP = 15
    CMD_GET_STAMINA_EXCHANGE_INFO_REQ = 16
    CMD_GET_STAMINA_EXCHANGE_INFO_RSP = 17
    CMD_STAMINA_EXCHANGE_REQ = 18
    CMD_STAMINA_EXCHANGE_RSP = 19
    CMD_NICKNAME_MODIFY_REQ = 20
    CMD_NICKNAME_MODIFY_RSP = 21
    CMD_GM_TALK_REQ = 22
    CMD_GM_TALK_RSP = 23
    CMD_GET_AVATAR_DATA_REQ = 24
    CMD_GET_AVATAR_DATA_RSP = 25
    CMD_GET_EQUIPMENT_DATA_REQ = 26
    CMD_GET_EQUIPMENT_DATA_RSP = 27
    CMD_DEL_EQUIPMENT_NOTIFY = 28
    CMD_AVATAR_STAR_UP_REQ = 29
    CMD_AVATAR_STAR_UP_RSP = 30
    CMD_EQUIPMENT_POWER_UP_REQ = 31
    CMD_EQUIPMENT_POWER_UP_RSP = 32
    CMD_EQUIPMENT_SELL_REQ = 33
    CMD_EQUIPMENT_SELL_RSP = 34
    CMD_ADD_AVATAR_EXP_BY_MATERIAL_REQ = 35
    CMD_ADD_AVATAR_EXP_BY_MATERIAL_RSP = 36
    CMD_EQUIPMENT_EVO_REQ = 37
    CMD_EQUIPMENT_EVO_RSP = 38
    CMD_DRESS_EQUIPMENT_REQ = 39
    CMD_DRESS_EQUIPMENT_RSP = 40
    CMD_GET_STAGE_DATA_REQ = 41
    CMD_GET_STAGE_DATA_RSP = 42
    CMD_STAGE_BEGIN_REQ = 43
    CMD_STAGE_BEGIN_RSP = 44
    CMD_STAGE_END_REQ = 45
    CMD_STAGE_END_RSP = 46
    CMD_GET_AVATAR_TEAM_DATA_REQ = 47
    CMD_GET_AVATAR_TEAM_DATA_RSP = 48
    CMD_UPDATE_AVATAR_TEAM_NOTIFY = 49
    CMD_AVATAR_SUB_SKILL_LEVEL_UP_REQ = 50
    CMD_AVATAR_SUB_SKILL_LEVEL_UP_RSP = 51
    CMD_MATERIAL_EVO_REQ = 56
    CMD_MATERIAL_EVO_RSP = 57
    CMD_GET_STAGE_DROP_DISPLAY_REQ = 60
    CMD_GET_STAGE_DROP_DISPLAY_RSP = 61
    CMD_GET_FRIEND_LIST_REQ = 64
    CMD_GET_FRIEND_LIST_RSP = 65
    CMD_ADD_FRIEND_REQ = 66
    CMD_ADD_FRIEND_RSP = 67
    CMD_DEL_FRIEND_REQ = 68
    CMD_DEL_FRIEND_RSP = 69
    CMD_GET_ASK_ADD_FRIEND_LIST_REQ = 70
    CMD_GET_ASK_ADD_FRIEND_LIST_RSP = 71
    CMD_GET_PLAYER_DETAIL_DATA_REQ = 72
    CMD_GET_PLAYER_DETAIL_DATA_RSP = 73
    CMD_UPDATE_EQUIPMENT_PROTECTED_STATUS_REQ = 74
    CMD_UPDATE_EQUIPMENT_PROTECTED_STATUS_RSP = 75
    CMD_GET_RECOMMEND_FRIEND_LIST_REQ = 76
    CMD_GET_RECOMMEND_FRIEND_LIST_RSP = 77
    CMD_SET_SELF_DESC_REQ = 78
    CMD_SET_SELF_DESC_RSP = 79
    CMD_DEL_FRIEND_NOTIFY = 80
    CMD_GET_OFFLINE_FRIENDS_POINT_NOTIFY = 81
    CMD_VERIFY_ITUNES_ORDER_NOTIFY = 82
    CMD_RECHARGE_FINISH_NOTIFY = 83
    CMD_GET_MAIL_DATA_REQ = 84
    CMD_GET_MAIL_DATA_RSP = 85
    CMD_GET_MAIL_ATTACHMENT_REQ = 86
    CMD_GET_MAIL_ATTACHMENT_RSP = 87
    CMD_UNLOCK_AVATAR_SKILL_REQ = 88
    CMD_UNLOCK_AVATAR_SKILL_RSP = 89
    CMD_GET_PRODUCT_LIST_REQ = 98
    CMD_GET_PRODUCT_LIST_RSP = 99
    CMD_GET_ASSISTANT_FROZEN_LIST_REQ = 100
    CMD_GET_ASSISTANT_FROZEN_LIST_RSP = 101
    CMD_SELL_AVATAR_FRAGMENT_REQ = 102
    CMD_SELL_AVATAR_FRAGMENT_RSP = 103
    CMD_GET_HAS_GOT_ITEM_ID_LIST_REQ = 104
    CMD_GET_HAS_GOT_ITEM_ID_LIST_RSP = 105
    CMD_AVATAR_REVIVE_REQ = 106
    CMD_AVATAR_REVIVE_RSP = 107
    CMD_RESET_STAGE_ENTER_TIMES_REQ = 108
    CMD_RESET_STAGE_ENTER_TIMES_RSP = 109
    CMD_GET_CONFIG_REQ = 110
    CMD_GET_CONFIG_RSP = 111
    CMD_GET_MISSION_DATA_REQ = 112
    CMD_GET_MISSION_DATA_RSP = 113
    CMD_GET_MISSION_REWARD_REQ = 114
    CMD_GET_MISSION_REWARD_RSP = 115
    CMD_DEL_MISSION_NOTIFY = 116
    CMD_UPDATE_MISSION_PROGRESS_REQ = 117
    CMD_UPDATE_MISSION_PROGRESS_RSP = 118
    CMD_BIND_ACCOUNT_REQ = 119
    CMD_BIND_ACCOUNT_RSP = 120
    CMD_GET_SIGN_IN_REWARD_STATUS_REQ = 121
    CMD_GET_SIGN_IN_REWARD_STATUS_RSP = 122
    CMD_GET_SIGN_IN_REWARD_REQ = 123
    CMD_GET_SIGN_IN_REWARD_RSP = 124
    CMD_GET_WEEK_DAY_ACTIVITY_DATA_REQ = 125
    CMD_GET_WEEK_DAY_ACTIVITY_DATA_RSP = 126
    CMD_GET_FINISH_GUIDE_DATA_REQ = 127
    CMD_GET_FINISH_GUIDE_DATA_RSP = 128
    CMD_FINISH_GUIDE_REPORT_REQ = 129
    CMD_FINISH_GUIDE_REPORT_RSP = 130
    CMD_STAGE_INNER_DATA_REPORT_REQ = 131
    CMD_STAGE_INNER_DATA_REPORT_RSP = 132
    CMD_GET_DISPATCH_REQ = 133
    CMD_GET_DISPATCH_RSP = 134
    CMD_EXCHANGE_AVATAR_WEAPON_REQ = 135
    CMD_EXCHANGE_AVATAR_WEAPON_RSP = 136
    CMD_GET_BULLETIN_REQ = 137
    CMD_GET_BULLETIN_RSP = 138
    CMD_ADD_GOODFEEL_REQ = 154
    CMD_ADD_GOODFEEL_RSP = 155
    CMD_ISLAND_DISJOIN_EQUIPMENT_REQ = 179
    CMD_ISLAND_DISJOIN_EQUIPMENT_RSP = 180
    CMD_GET_GUIDE_REWARD_REQ = 185
    CMD_GET_GUIDE_REWARD_RSP = 186
    CMD_URGENCY_MSG_NOTIFY = 187
    CMD_REFINE_STIGMATA_RUNE_REQ = 193
    CMD_REFINE_STIGMATA_RUNE_RSP = 194
    CMD_SELECT_NEW_STIGMATA_RUNE_REQ = 195
    CMD_SELECT_NEW_STIGMATA_RUNE_RSP = 196
    CMD_GET_VIP_REWARD_DATA_REQ = 197
    CMD_GET_VIP_REWARD_DATA_RSP = 198
    CMD_GET_VIP_REWARD_REQ = 199
    CMD_GET_VIP_REWARD_RSP = 200
    CMD_GET_SHOP_LIST_REQ = 201
    CMD_GET_SHOP_LIST_RSP = 202
    CMD_BUY_GOODS_REQ = 203
    CMD_BUY_GOODS_RSP = 204
    CMD_MANUAL_REFRESH_SHOP_REQ = 205
    CMD_MANUAL_REFRESH_SHOP_RSP = 206
    CMD_CREATE_WEIXIN_ORDER_REQ = 207
    CMD_CREATE_WEIXIN_ORDER_RSP = 208
    CMD_GET_REDEEM_CODE_INFO_REQ = 211
    CMD_GET_REDEEM_CODE_INFO_RSP = 212
    CMD_EXCHANGE_REDEEM_CODE_REQ = 213
    CMD_EXCHANGE_REDEEM_CODE_RSP = 214
    CMD_ANTI_CHEAT_REPORT_REQ = 217
    CMD_ANTI_CHEAT_REPORT_RSP = 218
    CMD_GET_INVITE_FRIEND_REQ = 223
    CMD_GET_INVITE_FRIEND_RSP = 224
    CMD_GET_INVITEE_FRIEND_REQ = 225
    CMD_GET_INVITEE_FRIEND_RSP = 226
    CMD_ACCEPT_FRIEND_INVITE_REQ = 227
    CMD_ACCEPT_FRIEND_INVITE_RSP = 228
    CMD_COMMENT_REPORT_REQ = 229
    CMD_COMMENT_REPORT_RSP = 230
    CMD_GET_EXTRA_STORY_DATA_REQ = 231
    CMD_GET_EXTRA_STORY_DATA_RSP = 232
    CMD_GET_EXTRA_STORY_ACTIVITY_ACT_REQ = 233
    CMD_GET_EXTRA_STORY_ACTIVITY_ACT_RSP = 234
    CMD_GET_EXTRA_STORY_ACHIEVE_DATA_REQ = 235
    CMD_GET_EXTRA_STORY_ACHIEVE_DATA_RSP = 236
    CMD_GET_EXTRA_STORY_ACHIEVE_REWARD_REQ = 237
    CMD_GET_EXTRA_STORY_ACHIEVE_REWARD_RSP = 238
    CMD_SWITCH_DYNAMIC_HARD_LV_REQ = 239
    CMD_SWITCH_DYNAMIC_HARD_LV_RSP = 240
    CMD_GET_ISLAND_EVENT_REQ = 241
    CMD_GET_ISLAND_EVENT_RSP = 242
    CMD_FINISH_ISLAND_EVENT_REQ = 243
    CMD_FINISH_ISLAND_EVENT_RSP = 244
    CMD_SET_TRANSFER_PWD_REQ = 245
    CMD_SET_TRANSFER_PWD_RSP = 246
    CMD_VERIFY_GOOGLE_ORDER_NOTIFY = 247
    CMD_SET_DRESS_REQ = 248
    CMD_SET_DRESS_RSP = 249
    CMD_DRESS_TO_RETURN_MATERIAL_NOTIFY = 250
    CMD_USE_MATERIAL_REQ = 251
    CMD_USE_MATERIAL_RSP = 252
    CMD_SWITCH_AVATAR_SUB_SKILL_REQ = 253
    CMD_SWITCH_AVATAR_SUB_SKILL_RSP = 254
    CMD_GET_TIME_LIMIT_ADD_UP_DATA_REQ = 255
    CMD_GET_TIME_LIMIT_ADD_UP_DATA_RSP = 256
    CMD_TIME_LIMIT_ADD_UP_REWARD_GRANT_NOTIFY = 257
    CMD_TIME_LIMIT_ADD_UP_UPDATE_NOTIFY = 258
    CMD_EXCHANGE_WEEK_DAY_ACTIVITY_TIMES_REQ = 259
    CMD_EXCHANGE_WEEK_DAY_ACTIVITY_TIMES_RSP = 260
    CMD_UPDATE_CUSTOM_AVATAR_TEAM_REQ = 269
    CMD_UPDATE_CUSTOM_AVATAR_TEAM_RSP = 270
    CMD_UPDATE_ASSISTANT_AVATAR_ID_REQ = 271
    CMD_UPDATE_ASSISTANT_AVATAR_ID_RSP = 272
    CMD_GET_ROGUE_STAGE_DATA_REQ = 275
    CMD_GET_ROGUE_STAGE_DATA_RSP = 276
    CMD_INIT_ROGUE_STAGE_REQ = 277
    CMD_INIT_ROGUE_STAGE_RSP = 278
    CMD_RESET_ROGUE_STAGE_REQ = 279
    CMD_RESET_ROGUE_STAGE_RSP = 280
    CMD_ROGUE_STAGE_BEGIN_REQ = 281
    CMD_ROGUE_STAGE_BEGIN_RSP = 282
    CMD_ROGUE_STAGE_END_REQ = 283
    CMD_ROGUE_STAGE_END_RSP = 284
    CMD_UPDATE_ROGUE_STAGE_AVATAR_POSITION_REQ = 286
    CMD_UPDATE_ROGUE_STAGE_AVATAR_POSITION_RSP = 287
    CMD_TAKE_DUTY_REWARD_REQ = 288
    CMD_TAKE_DUTY_REWARD_RSP = 289
    CMD_REPORT_BIRTHDAY_REQ = 299
    CMD_REPORT_BIRTHDAY_RSP = 300
    CMD_CREATE_LOBBY_REQ = 301
    CMD_CREATE_LOBBY_RSP = 302
    CMD_ENTER_LOBBY_REQ = 303
    CMD_ENTER_LOBBY_RSP = 304
    CMD_LEAVE_TEAM_REQ = 305
    CMD_LEAVE_TEAM_RSP = 306
    CMD_UPDATE_LOBBY_LINEUP_REQ = 307
    CMD_UPDATE_LOBBY_LINEUP_RSP = 308
    CMD_SWITCH_MEMBER_STATUS_REQ = 309
    CMD_SWITCH_MEMBER_STATUS_RSP = 310
    CMD_LOBBY_STAGE_BEGIN_REQ = 311
    CMD_LOBBY_STAGE_BEGIN_RSP = 312
    CMD_LOBBY_STAGE_END_REQ = 313
    CMD_LOBBY_STAGE_END_RSP = 314
    CMD_KICK_LOBBY_MEMBER_REQ = 317
    CMD_KICK_LOBBY_MEMBER_RSP = 318
    CMD_SET_LOBBY_FAST_ENTRANCE_REQ = 319
    CMD_SET_LOBBY_FAST_ENTRANCE_RSP = 320
    CMD_LOBBY_ENTER_FIGHT_ERROR_NOTIFY = 321
    CMD_LEVEL_UP_STIGMATA_TITLE_REQ = 324
    CMD_LEVEL_UP_STIGMATA_TITLE_RSP = 325
    CMD_EVO_STIGMATA_TITLE_REQ = 326
    CMD_EVO_STIGMATA_TITLE_RSP = 327
    CMD_INHERIT_STIGMATA_TITLE_REQ = 328
    CMD_INHERIT_STIGMATA_TITLE_RSP = 329
    CMD_RESET_STIGMATA_TITLE_REQ = 330
    CMD_RESET_STIGMATA_TITLE_RSP = 331
    CMD_PROMOTE_STIGMATA_RUNE_REQ = 332
    CMD_PROMOTE_STIGMATA_RUNE_RSP = 333
    CMD_GET_MP_DATA_REQ = 340
    CMD_GET_MP_DATA_RSP = 341
    CMD_MP_UPGRADE_SKILL_REQ = 342
    CMD_MP_UPGRADE_SKILL_RSP = 343
    CMD_MP_RESET_SKILL_POINT_REQ = 344
    CMD_MP_RESET_SKILL_POINT_RSP = 345
    CMD_MP_GET_TEAM_REQ = 346
    CMD_MP_GET_TEAM_RSP = 347
    CMD_MP_CREATE_TEAM_REQ = 348
    CMD_MP_CREATE_TEAM_RSP = 349
    CMD_MP_ENTER_TEAM_REQ = 350
    CMD_MP_ENTER_TEAM_RSP = 351
    CMD_GET_TEAM_BRIEF_INFO_REQ = 352
    CMD_GET_TEAM_BRIEF_INFO_RSP = 353
    CMD_MP_KICK_FROM_TEAM_REQ = 354
    CMD_MP_KICK_FROM_TEAM_RSP = 355
    CMD_MP_TEAM_ENTER_LOBBY_REQ = 356
    CMD_MP_TEAM_ENTER_LOBBY_RSP = 357
    CMD_MP_RAID_RESET_CYCLE_REQ = 360
    CMD_MP_RAID_RESET_CYCLE_RSP = 361
    CMD_MP_TEAM_CHANGE_LEADER_REQ = 362
    CMD_MP_TEAM_CHANGE_LEADER_RSP = 363
    CMD_GET_GOBACK_REQ = 364
    CMD_GET_GOBACK_RSP = 365
    CMD_TAKE_GOBACK_LOGIN_REWARD_REQ = 366
    CMD_TAKE_GOBACK_LOGIN_REWARD_RSP = 367
    CMD_GET_MYCARD_AUTH_CODE_REQ = 368
    CMD_GET_MYCARD_AUTH_CODE_RSP = 369
    CMD_VERIFY_MYCARD_ORDER_NOTIFY = 370
    CMD_TEAM_LEADER_CHANGE_NOTIFY = 371
    CMD_MP_TEAM_LEAVE_LOBBY_REQ = 373
    CMD_MP_TEAM_LEAVE_LOBBY_RSP = 374
    CMD_MP_MEMBER_SET_CLIENT_STATUS_REQ = 375
    CMD_MP_MEMBER_SET_CLIENT_STATUS_RSP = 376
    CMD_MP_STAGE_END_REQ = 379
    CMD_MP_STAGE_END_RSP = 380
    CMD_MP_REPORT_PLAYER_REQ = 381
    CMD_MP_REPORT_PLAYER_RSP = 382
    CMD_MP_STAGE_SETTLE_NOTIFY = 391
    CMD_MP_LIKE_PLAYER_REQ = 392
    CMD_MP_LIKE_PLAYER_RSP = 393
    CMD_FRIEND_BOND_NOTIFY = 394
    CMD_MP_TEAM_SYNC_NOTIFY = 395
    CMD_MP_TEAM_MEMBER_SET_VOICE_ID_REQ = 396
    CMD_MP_TEAM_MEMBER_SET_VOICE_ID_RSP = 397
    CMD_REPORT_CLIENT_DATA_VERSION_REQ = 398
    CMD_REPORT_CLIENT_DATA_VERSION_RSP = 399


class CmdTypePvz(betterproto.Enum):
    CMD_PVZ_GET_ACTIVITY_REQ = 6550
    CMD_PVZ_GET_ACTIVITY_RSP = 6551
    CMD_PVZ_BATTLE_BEGIN_REQ = 6552
    CMD_PVZ_BATTLE_BEGIN_RSP = 6553
    CMD_PVZ_BATTLE_END_REQ = 6554
    CMD_PVZ_BATTLE_END_RSP = 6555
    CMD_PVZ_QAVATAR_LEVEL_UP_REQ = 6556
    CMD_PVZ_QAVATAR_LEVEL_UP_RSP = 6557


class CmdTypeQavatarbattle(betterproto.Enum):
    CMD_QAVATAR_BATTLE_BEGIN_NOTIFY = 5550
    CMD_QAVATAR_BATTLE_SETTLE_NOTIFY = 5551
    CMD_QAVATAR_BATTLE_GET_LOBBY_INFO_REQ = 5552
    CMD_QAVATAR_BATTLE_GET_LOBBY_INFO_RSP = 5553
    CMD_QAVATAR_BATTLE_DATA_NOTIFY = 5600
    CMD_QAVATAR_BATTLE_ENTER_BATTLE_REQ = 5601
    CMD_QAVATAR_BATTLE_ENTER_BATTLE_RSP = 5602
    CMD_QAVATAR_BATTLE_MOVE_NOTIFY = 5603
    CMD_QAVATAR_BATTLE_START_SKILL_REQ = 5604
    CMD_QAVATAR_BATTLE_START_SKILL_RSP = 5605
    CMD_QAVATAR_BATTLE_START_SKILL_NOTIFY = 5606
    CMD_QAVATAR_BATTLE_END_SKILL_REQ = 5607
    CMD_QAVATAR_BATTLE_END_SKILL_RSP = 5608
    CMD_QAVATAR_BATTLE_END_SKILL_NOTIFY = 5609
    CMD_QAVATAR_BATTLE_SKILL_TRIGGER_NOTIFY = 5610
    CMD_QAVATAR_BATTLE_COMPONENT_OP_NOTIFY = 5611
    CMD_QAVATAR_BATTLE_DISCARD_STIGMATA_REQ = 5612
    CMD_QAVATAR_BATTLE_DISCARD_STIGMATA_RSP = 5613
    CMD_QAVATAR_BATTLE_GET_DATA_NOTIFY = 5614
    CMD_QAVATAR_BATTLE_KILL_NOTIFY = 5621
    CMD_QAVATAR_BATTLE_REFRESH_GADGET_FORECAST_NOTIFY = 5622
    CMD_QAVATAR_BATTLE_REFRESH_GADGET_GENERATE_NOTIFY = 5623
    CMD_QAVATAR_BATTLE_END_BATTLE_NOTIFY = 5630
    CMD_QAVATAR_BATTLE_DUMMY = 5649


class CmdTypeQcandybattle(betterproto.Enum):
    CMD_QCANDY_BATTLE_ENTER_BATTLE_REQ = 6570
    CMD_QCANDY_BATTLE_ENTER_BATTLE_RSP = 6571
    CMD_QCANDY_BATTLE_DATA_NOTIFY = 6572
    CMD_QCANDY_BATTLE_END_NOTIFY = 6573
    CMD_QCANDY_BATTLE_MOVE_NOTIFY = 6574
    CMD_QCANDY_BATTLE_CREATE_ENTITY_REQ = 6576
    CMD_QCANDY_BATTLE_CREATE_ENTITY_RSP = 6577
    CMD_QCANDY_BATTLE_DELETE_ENTITY_REQ = 6578
    CMD_QCANDY_BATTLE_DELETE_ENTITY_RSP = 6579
    CMD_QCANDY_BATTLE_TRIGGER_ENTITY_REQ = 6580
    CMD_QCANDY_BATTLE_TRIGGER_ENTITY_RSP = 6581
    CMD_QCANDY_BATTLE_LIFE_TIMES_CHANGE_NOTIFY = 6582
    CMD_QCANDY_BATTLE_ARRIVE_REQ = 6583
    CMD_QCANDY_BATTLE_ARRIVE_RSP = 6584
    CMD_QCANDY_BATTLE_USE_SKILL_REQ = 6585
    CMD_QCANDY_BATTLE_USE_SKILL_RSP = 6586
    CMD_QCANDY_BATTLE_PLAYER_USE_SKILL_NOTIFY = 6587
    CMD_QCANDY_BATTLE_AVATAR_STATE_CLIENT_NOTIFY = 6588
    CMD_QCANDY_BATTLE_AVATAR_STATE_SERVER_NOTIFY = 6589
    CMD_QCANDY_BATTLE_SKILL_EFFECT_NOTIFY = 6590
    CMD_QCANDY_BATTLE_FINISH_BATTLE_NOTIFY = 6591
    CMD_QCANDY_BATTLE_LEAVE_BATTLE_REQ = 6592
    CMD_QCANDY_BATTLE_LEAVE_BATTLE_RSP = 6593
    CMD_QCANDY_BATTLE_LEAVE_BATTLE_NOTIFY = 6594
    CMD_QCANDY_BATTLE_GET_ACTIVITY_REQ = 6601
    CMD_QCANDY_BATTLE_GET_ACTIVITY_RSP = 6602
    CMD_QCANDY_BATTLE_BEGIN_NOTIFY = 6603
    CMD_QCANDY_BATTLE_CHOOSE_AVATAR_REQ = 6604
    CMD_QCANDY_BATTLE_CHOOSE_AVATAR_RSP = 6605
    CMD_QCANDY_BATTLE_UNLOCK_AVATAR_REQ = 6606
    CMD_QCANDY_BATTLE_UNLOCK_AVATAR_RSP = 6607
    CMD_QCANDY_BATTLE_SETTLE_BATTLE_NOTIFY = 6608
    CMD_QCANDY_BATTLE_DUMMY = 6649


class CmdTypeReplay(betterproto.Enum):
    CMD_REPLAY_BEGIN_REQ = 5400
    CMD_REPLAY_BEGIN_RSP = 5401
    CMD_REPLAY_END_REQ = 5402
    CMD_REPLAY_END_RSP = 5403
    CMD_REPORT_REPLAY_FRAME_REQ = 5404
    CMD_REPORT_REPLAY_FRAME_RSP = 5405
    CMD_WATCH_REPLAY_REQ = 5406
    CMD_WATCH_REPLAY_RSP = 5407
    CMD_REPLAY_FRAME_NOTIFY = 5408
    CMD_REPLAY_FRAME_END_NOTIFY = 5409
    CMD_REPLAY_GET_FILE_TOKEN_REQ = 5410
    CMD_REPLAY_GET_FILE_TOKEN_RSP = 5411
    CMD_REPLAY_REPORT_FILE_RESULT_REQ = 5412
    CMD_REPLAY_REPORT_FILE_RESULT_RSP = 5413
    CMD_REPLAY_GET_UPLOAD_LIST_REQ = 5414
    CMD_REPLAY_GET_UPLOAD_LIST_RSP = 5415
    CMD_REPLAY_GET_RECOMMEND_LIST_REQ = 5416
    CMD_REPLAY_GET_RECOMMEND_LIST_RSP = 5417
    CMD_REPLAY_GET_RECOMMEND_BRIEF_REQ = 5418
    CMD_REPLAY_GET_RECOMMEND_BRIEF_RSP = 5419


class CmdTypeReport(betterproto.Enum):
    CMD_DUMMY = 0


class CmdTypeRoom(betterproto.Enum):
    CMD_GET_ROOM_DATA_REQ = 3150
    CMD_GET_ROOM_DATA_RSP = 3151
    CMD_SYNC_ROOM_DATA_NOTIFY = 3152
    CMD_CREATE_ROOM_REQ = 3153
    CMD_CREATE_ROOM_RSP = 3154
    CMD_ENTER_ROOM_REQ = 3155
    CMD_ENTER_ROOM_RSP = 3156
    CMD_EXIT_ROOM_REQ = 3157
    CMD_EXIT_ROOM_RSP = 3158
    CMD_EXIT_ROOM_NOTIFY = 3159
    CMD_INVITE_ROOM_REQ = 3160
    CMD_INVITE_ROOM_RSP = 3161
    CMD_ROOM_INVITATION_NOTIFY = 3162
    CMD_SEND_ROOM_CHAT_MSG_NOTIFY = 3163
    CMD_RECV_ROOM_CHAT_MSG_NOTIFY = 3164
    CMD_START_ROOM_MATCH_REQ = 3165
    CMD_START_ROOM_MATCH_RSP = 3166
    CMD_CANCEL_ROOM_MATCH_REQ = 3167
    CMD_CANCEL_ROOM_MATCH_RSP = 3168
    CMD_SYNC_ROOM_MATCH_DATA_NOTIFY = 3169
    CMD_ROOM_MATCH_TIMEOUT_NOTIFY = 3170
    CMD_UPDATE_ROOM_INFO_REQ = 3171
    CMD_UPDATE_ROOM_INFO_RSP = 3172
    CMD_ROOM_SWITCH_MEMBER_STATUS_REQ = 3173
    CMD_ROOM_SWITCH_MEMBER_STATUS_RSP = 3174
    CMD_ROOM_KICK_MEMBER_REQ = 3175
    CMD_ROOM_KICK_MEMBER_RSP = 3176
    CMD_ROOM_TRANSFER_LEADER_REQ = 3177
    CMD_ROOM_TRANSFER_LEADER_RSP = 3178
    CMD_ROOM_MEMBER_SET_VOICE_ID_REQ = 3179
    CMD_ROOM_MEMBER_SET_VOICE_ID_RSP = 3180
    CMD_ROOM_GET_STATUS_REQ = 3181
    CMD_ROOM_GET_STATUS_RSP = 3182


class CmdTypeRpgdungeon(betterproto.Enum):
    CMD_RPG_DUNGEON_GET_ACTIVITY_REQ = 5500
    CMD_RPG_DUNGEON_GET_ACTIVITY_RSP = 5501
    CMD_RPG_DUNGEON_SELECT_QUEST_REQ = 5502
    CMD_RPG_DUNGEON_SELECT_QUEST_RSP = 5503
    CMD_RPG_DUNGEON_GET_CANDIDATE_BUFF_REQ = 5504
    CMD_RPG_DUNGEON_GET_CANDIDATE_BUFF_RSP = 5505
    CMD_RPG_DUNGEON_SELECT_BUFF_REQ = 5506
    CMD_RPG_DUNGEON_SELECT_BUFF_RSP = 5507


class CmdTypeRpgtale(betterproto.Enum):
    CMD_GET_RPG_TALE_REQ = 2300
    CMD_GET_RPG_TALE_RSP = 2301
    CMD_SYNC_RPG_TALE_SITE_NOTIFY = 2302
    CMD_ENTER_RPG_TALE_SITE_REQ = 2303
    CMD_ENTER_RPG_TALE_SITE_RSP = 2304
    CMD_FINISH_RPG_TALE_PLOT_REQ = 2305
    CMD_FINISH_RPG_TALE_PLOT_RSP = 2306
    CMD_UNLOCK_RPG_TALE_SITE_REQ = 2307
    CMD_UNLOCK_RPG_TALE_SITE_RSP = 2308
    CMD_TAKE_RPG_TALE_COLLECTION_REWARD_REQ = 2309
    CMD_TAKE_RPG_TALE_COLLECTION_REWARD_RSP = 2310
    CMD_RPG_TALE_EVENT_NOTIFY = 2312
    CMD_TRIGGER_RPG_TALE_EVENT_REQ = 2313
    CMD_TRIGGER_RPG_TALE_EVENT_RSP = 2314
    CMD_CHECK_RPG_TALE_STAGE_TRIGGER_REQ = 2315
    CMD_CHECK_RPG_TALE_STAGE_TRIGGER_RSP = 2316
    CMD_TRIGGER_RPG_TALE_STAGE_EVENT_REQ = 2317
    CMD_TRIGGER_RPG_TALE_STAGE_EVENT_RSP = 2318
    CMD_GET_MATRIX_REQ = 2320
    CMD_GET_MATRIX_RSP = 2321
    CMD_GET_MATRIX_FLOOR_REQ = 2322
    CMD_GET_MATRIX_FLOOR_RSP = 2323
    CMD_MATRIX_ENTER_REQ = 2324
    CMD_MATRIX_ENTER_RSP = 2325
    CMD_MATRIX_ADVANCE_REQ = 2326
    CMD_MATRIX_ADVANCE_RSP = 2327
    CMD_SYNC_MATRIX_FLOOR_NOTIFY = 2328
    CMD_SYNC_MATRIX_NOTIFY = 2329
    CMD_MATRIX_TRIGGER_EVENT_REQ = 2330
    CMD_MATRIX_TRIGGER_EVENT_RSP = 2331
    CMD_MATRIX_CANCEL_EVENT_REQ = 2332
    CMD_MATRIX_CANCEL_EVENT_RSP = 2333
    CMD_SYNC_MATRIX_CUR_EVENT_NOTIFY = 2334
    CMD_MATRIX_EVENT_FINISH_NOTIFY = 2335
    CMD_FINISH_MATRIX_EVENT_PLOT_REQ = 2336
    CMD_FINISH_MATRIX_EVENT_PLOT_RSP = 2337
    CMD_MATRIX_TELEPORT_NOTIFY = 2338
    CMD_MATRIX_MOVE_OBJECT_REQ = 2339
    CMD_MATRIX_MOVE_OBJECT_RSP = 2340
    CMD_MATRIX_RESET_FLOOR_REQ = 2341
    CMD_MATRIX_RESET_FLOOR_RSP = 2342
    CMD_MATRIX_SETTLE_FLOOR_EVENT_REQ = 2343
    CMD_MATRIX_SETTLE_FLOOR_EVENT_RSP = 2344
    CMD_MATRIX_THROW_DICE_REQ = 2345
    CMD_MATRIX_THROW_DICE_RSP = 2346
    CMD_MATRIX_SET_DICE_DESTINATION_REQ = 2347
    CMD_MATRIX_SET_DICE_DESTINATION_RSP = 2348
    CMD_MATRIX_GUESS_FINGER_REQ = 2349
    CMD_MATRIX_GUESS_FINGER_RSP = 2350
    CMD_MATRIX_SET_LOTTERY_NUM_REQ = 2351
    CMD_MATRIX_SET_LOTTERY_NUM_RSP = 2352
    CMD_MATRIX_LOTTERY_DRAW_NOTIFY = 2353
    CMD_FINISH_RPG_TALE_STAGE_PLOT_REQ = 2370
    CMD_FINISH_RPG_TALE_STAGE_PLOT_RSP = 2371
    CMD_REPORT_RPG_TALE_STAGE_REQ = 2374
    CMD_REPORT_RPG_TALE_STAGE_RSP = 2375
    CMD_RPG_TALE_SWEEP_REQ = 2376
    CMD_RPG_TALE_SWEEP_RSP = 2377
    CMD_GET_RPG_TALE_FILE_REQ = 2378
    CMD_GET_RPG_TALE_FILE_RSP = 2379
    CMD_RPG_TALE_REFRESH_TICKET_REQ = 2380
    CMD_RPG_TALE_REFRESH_TICKET_RSP = 2381
    CMD_RPG_TALE_LEVEL_UP_ABILITY_REQ = 2382
    CMD_RPG_TALE_LEVEL_UP_ABILITY_RSP = 2383
    CMD_RPG_TALE_RESET_TOWER_REQ = 2384
    CMD_RPG_TALE_RESET_TOWER_RSP = 2385
    CMD_RPG_TALE_SET_OVERALL_REQ = 2386
    CMD_RPG_TALE_SET_OVERALL_RSP = 2387
    CMD_RPG_TALE_REFRESH_SITE_REQ = 2388
    CMD_RPG_TALE_REFRESH_SITE_RSP = 2389
    CMD_RPG_TALE_SET_PVP_VIRTUAL_AVATAR_REQ = 2390
    CMD_RPG_TALE_SET_PVP_VIRTUAL_AVATAR_RSP = 2391
    CMD_RPG_TALE_GET_PVP_DIVISION_REWARD_REQ = 2392
    CMD_RPG_TALE_GET_PVP_DIVISION_REWARD_RSP = 2393


class CmdTypeScdlc(betterproto.Enum):
    CMD_GET_SC_DLC_REQ = 6300
    CMD_GET_SC_DLC_RSP = 6301
    CMD_UPDATE_SC_DLC_FEVER_SUITE_REQ = 6304
    CMD_UPDATE_SC_DLC_FEVER_SUITE_RSP = 6305
    CMD_ACTIVE_SC_DLC_FEVER_SUITE_REQ = 6306
    CMD_ACTIVE_SC_DLC_FEVER_SUITE_RSP = 6307
    CMD_ADD_SC_DLC_SUUPORT_NPC_EXP_REQ = 6308
    CMD_ADD_SC_DLC_SUUPORT_NPC_EXP_RSP = 6309
    CMD_LEVEL_UP_SC_DLC_AVATAR_REQ = 6310
    CMD_LEVEL_UP_SC_DLC_AVATAR_RSP = 6311
    CMD_LEVEL_UP_SC_DLC_TALENT_REQ = 6312
    CMD_LEVEL_UP_SC_DLC_TALENT_RSP = 6313
    CMD_EQUIP_SC_DLC_AVATAR_TALENT_REQ = 6314
    CMD_EQUIP_SC_DLC_AVATAR_TALENT_RSP = 6315
    CMD_GET_SC_DLC_SELECT_DAILY_QUEST_REQ = 6316
    CMD_GET_SC_DLC_SELECT_DAILY_QUEST_RSP = 6317
    CMD_REFRESH_SC_DLC_DAILY_QUEST_REQ = 6318
    CMD_REFRESH_SC_DLC_DAILY_QUEST_RSP = 6319
    CMD_ACCEPT_SC_DLC_DAILY_QUEST_REQ = 6320
    CMD_ACCEPT_SC_DLC_DAILY_QUEST_RSP = 6321
    CMD_FINISH_SC_DLC_DAILY_QUEST_REQ = 6322
    CMD_FINISH_SC_DLC_DAILY_QUEST_RSP = 6323
    CMD_TAKE_SC_DLC_DAILY_QUEST_REWARD_REQ = 6324
    CMD_TAKE_SC_DLC_DAILY_QUEST_REWARD_RSP = 6325
    CMD_MODIFY_SC_DLC_NAME_REQ = 6326
    CMD_MODIFY_SC_DLC_NAME_RSP = 6327
    CMD_TAKE_SC_DLC_CHALLENGE_REWARD_REQ = 6328
    CMD_TAKE_SC_DLC_CHALLENGE_REWARD_RSP = 6329
    CMD_FINISH_SC_DLC_PLOT_REQ = 6330
    CMD_FINISH_SC_DLC_PLOT_RSP = 6331
    CMD_GET_SC_DLC_TOWER_REQ = 6332
    CMD_GET_SC_DLC_TOWER_RSP = 6333
    CMD_SC_DLC_TOWER_STAGE_BEGIN_REQ = 6334
    CMD_SC_DLC_TOWER_STAGE_BEGIN_RSP = 6335
    CMD_SC_DLC_TOWER_STAGE_END_REQ = 6336
    CMD_SC_DLC_TOWER_STAGE_END_RSP = 6337
    CMD_GET_SC_DLC_TOWER_RANK_REQ = 6338
    CMD_GET_SC_DLC_TOWER_RANK_RSP = 6339
    CMD_SC_DLC_TOWER_SCHEDULE_REWARD_NOTIFY = 6340
    CMD_SC_DLC_REVIVE_AVATAR_REQ = 6341
    CMD_SC_DLC_REVIVE_AVATAR_RSP = 6342
    CMD_SC_DLC_TOWER_REVIVE_AVATAR_REQ = 6343
    CMD_SC_DLC_TOWER_REVIVE_AVATAR_RSP = 6344
    CMD_SC_DLC_ACTIVE_FEVER_ABILITY_REQ = 6345
    CMD_SC_DLC_ACTIVE_FEVER_ABILITY_RSP = 6346
    CMD_SC_DLC_SWEEP_TOWER_REQ = 6347
    CMD_SC_DLC_SWEEP_TOWER_RSP = 6348
    CMD_SCDLC_DUMMY = 6449


class CmdTypeSecurity(betterproto.Enum):
    CMD_UPDATE_CLIENT_SETTING_NOTIFY = 5002
    CMD_COMMON_CD_CHECK_NOTIFY = 5003
    CMD_ANTI_ADDICT_NOTIFY = 5004
    CMD_SENSITIVE_WORD_CHECK_REQ = 5005
    CMD_SENSITIVE_WORD_CHECK_RSP = 5006
    CMD_KICK_OUT_PLAYER_NOTIFY = 5007
    CMD_CLIENT_REPORT_REQ = 5008
    CMD_CLIENT_REPORT_RSP = 5009
    CMD_GET_AUTHKEY_REQ = 5010
    CMD_GET_AUTHKEY_RSP = 5011
    CMD_CLIENT_REPORT_BIN_REQ = 5012
    CMD_CLIENT_REPORT_BIN_RSP = 5013
    CMD_GET_SECURITY_PASSWORD_REQ = 5021
    CMD_GET_SECURITY_PASSWORD_RSP = 5022
    CMD_SET_SECURITY_PASSWORD_REQ = 5023
    CMD_SET_SECURITY_PASSWORD_RSP = 5024
    CMD_CHANGE_SECURITY_PASSWORD_REQ = 5025
    CMD_CHANGE_SECURITY_PASSWORD_RSP = 5026
    CMD_UNLOCK_DEVICE_SECURITY_PASSWORD_REQ = 5027
    CMD_UNLOCK_DEVICE_SECURITY_PASSWORD_RSP = 5028
    CMD_SECURITY_PASSWORD_OP_REQ = 5029
    CMD_SECURITY_PASSWORD_OP_RSP = 5030
    CMD_RESET_SECURITY_PASSWORD_REQ = 5031
    CMD_RESET_SECURITY_PASSWORD_RSP = 5032
    CMD_SECURITY_PASSWORD_REJECTION_NOTIFY = 5033


class CmdTypeSlg(betterproto.Enum):
    CMD_SLG_GET_DATA_REQ = 6050
    CMD_SLG_GET_DATA_RSP = 6051
    CMD_SLG_POINT_SWEEP_REQ = 6052
    CMD_SLG_POINT_SWEEP_RSP = 6053
    CMD_SLG_BATTLE_MATCH_RSP = 6054
    CMD_SLG_ENROLL_REQ = 6055
    CMD_SLG_ENROLL_RSP = 6056
    CMD_SLG_GET_ACTIVITY_STAMINA_REQ = 6057
    CMD_SLG_GET_ACTIVITY_STAMINA_RSP = 6058
    CMD_SLG_TAKE_SCORE_REWARD_REQ = 6059
    CMD_SLG_TAKE_SCORE_REWARD_RSP = 6060
    CMD_SLG_BATTLE_ADD_SCORE_FAIL_NOTIFY = 6061
    CMD_SLG_GET_BATTLE_RANK_REQ = 6062
    CMD_SLG_GET_BATTLE_RANK_RSP = 6063
    CMD_SLG_GET_POINT_RANK_REQ = 6064
    CMD_SLG_GET_POINT_RANK_RSP = 6065
    CMD_SLG_BATTLE_SETTLE_NOTIFY = 6066
    CMD_SLG_BROADCAST_NOTIFY = 6068
    CMD_SLG_MAIN_PAGE_REQ = 6069
    CMD_SLG_BATTLE_IN_SETTLE_NOTIFY = 6070
    CMD_SLG_GET_BRIEF_RANK_REQ = 6071
    CMD_SLG_GET_BRIEF_RANK_RSP = 6072
    CMD_SLG_DUMMY = 6149


class CmdTypeSwitch(betterproto.Enum):
    CMD_SWITCH_DATA_NOTIFY = 3700
    CMD_SWITCH_CHANGE_DATA_NOTIFY = 3701


class CmdTypeThree(betterproto.Enum):
    CMD_CHECK_EXTRA_STORY_LOCKED_AVATAR_BIND_EQUIP_REQ = 1000
    CMD_CHECK_EXTRA_STORY_LOCKED_AVATAR_BIND_EQUIP_RSP = 1001
    CMD_SWITCH_EXTRA_STORY_LOCKED_AVATAR_BIND_EQUIP_REQ = 1002
    CMD_SWITCH_EXTRA_STORY_LOCKED_AVATAR_BIND_EQUIP_RSP = 1003
    CMD_TAKE_DORM_LIKES_DROP_REQ = 1008
    CMD_TAKE_DORM_LIKES_DROP_RSP = 1009
    CMD_CHECK_DORM_LIKES_DROP_REQ = 1010
    CMD_CHECK_DORM_LIKES_DROP_RSP = 1011
    CMD_GET_WORLD_MAP_DATA_REQ = 1012
    CMD_GET_WORLD_MAP_DATA_RSP = 1013
    CMD_GET_MP_STAGE_RECORD_REQ = 1018
    CMD_GET_MP_STAGE_RECORD_RSP = 1019
    CMD_LOBBY_SET_CLIENT_STATUS_REQ = 1026
    CMD_LOBBY_SET_CLIENT_STATUS_RSP = 1027
    CMD_LOBBY_PREPARE_COUNT_DOWN_NOTIFY = 1028
    CMD_MP_STAGE_VOTE_COUNT_DOWN_NOTIFY = 1029
    CMD_MP_STAGE_VOTE_REQ = 1030
    CMD_MP_STAGE_VOTE_RSP = 1031
    CMD_MP_STAGE_VOTE_RESULT_NOTIFY = 1032
    CMD_LOBBY_TIMEOUT_NO_LEADER_NOTIFY = 1033
    CMD_TAKE_WEEK_DAY_ACTIVITY_RETURN_COIN_REQ = 1034
    CMD_TAKE_WEEK_DAY_ACTIVITY_RETURN_COIN_RSP = 1035
    CMD_MP_STAGE_GET_VOTE_INFO_REQ = 1036
    CMD_MP_STAGE_GET_VOTE_INFO_RSP = 1037
    CMD_MP_STAGE_MEMBER_VOTE_NOTIFY = 1038
    CMD_SWITCH_EXTRA_STORY_LINE_ENHANCE_REQ = 1039
    CMD_SWITCH_EXTRA_STORY_LINE_ENHANCE_RSP = 1040
    CMD_GET_CHALLENGE_STEP_BONUS_REQ = 1043
    CMD_GET_CHALLENGE_STEP_BONUS_RSP = 1044
    CMD_LEAVE_TEAM_NOTIFY = 1101
    CMD_GET_LOBBY_STAT_REQ = 1102
    CMD_GET_LOBBY_STAT_RSP = 1103
    CMD_DISJOIN_FURNITURE_REQ = 1134
    CMD_DISJOIN_FURNITURE_RSP = 1135
    CMD_GET_DORM_VOTE_DATA_REQ = 1138
    CMD_GET_DORM_VOTE_DATA_RSP = 1139
    CMD_GET_CARD_PRODUCT_INFO_REQ = 1142
    CMD_GET_CARD_PRODUCT_INFO_RSP = 1143
    CMD_TAKE_CARD_PRODUCT_DAILY_REWARD_REQ = 1144
    CMD_TAKE_CARD_PRODUCT_DAILY_REWARD_RSP = 1145
    CMD_TAKE_CARD_PRODUCT_BONUS_REWARD_REQ = 1146
    CMD_TAKE_CARD_PRODUCT_BONUS_REWARD_RSP = 1147
    CMD_CHAT_REPORT_REQ = 1150
    CMD_CHAT_REPORT_RSP = 1151
    CMD_CHAT_REPORT_NOTIFY = 1152
    CMD_CHAT_UNFORBID_NOTIFY = 1153
    CMD_CHAT_FORBID_NOTIFY = 1154
    CMD_GET_SHOPPING_MALL_LIST_REQ = 1157
    CMD_GET_SHOPPING_MALL_LIST_RSP = 1158
    CMD_GET_CHAT_REPORT_INFO_REQ = 1159
    CMD_GET_CHAT_REPORT_INFO_RSP = 1160
    CMD_CHAT_FORBID_SNS_NOTIFY = 1161
    CMD_RECOVER_CHAT_CREDIT_NOTIFY = 1162
    CMD_SEND_CHAT_RED_ENVELOPE_REQ = 1163
    CMD_SEND_CHAT_RED_ENVELOPE_RSP = 1164
    CMD_TAKE_CHAT_RED_ENVELOPE_REQ = 1165
    CMD_TAKE_CHAT_RED_ENVELOPE_RSP = 1166
    CMD_GET_RECLAIM_ACTIVITY_DATA_REQ = 1167
    CMD_GET_RECLAIM_ACTIVITY_DATA_RSP = 1168
    CMD_TAKE_RECLAIM_LEVEL_REWARD_REQ = 1169
    CMD_TAKE_RECLAIM_LEVEL_REWARD_RSP = 1170
    CMD_SET_RECLAIM_AVATAR_TEAM_REQ = 1171
    CMD_SET_RECLAIM_AVATAR_TEAM_RSP = 1172
    CMD_DRESS_RECLAIM_EQUIPMENT_REQ = 1173
    CMD_DRESS_RECLAIM_EQUIPMENT_RSP = 1174
    CMD_GET_RECLAIM_RANK_REQ = 1175
    CMD_GET_RECLAIM_RANK_RSP = 1176
    CMD_RECLAIM_GACHA_REQ = 1177
    CMD_RECLAIM_GACHA_RSP = 1178
    CMD_CHOOSE_RECLAIM_GACHA_REQ = 1179
    CMD_CHOOSE_RECLAIM_GACHA_RSP = 1180
    CMD_USE_RECLAIM_ITEM_REQ = 1181
    CMD_USE_RECLAIM_ITEM_RSP = 1182
    CMD_GET_PHOTO_DATA_REQ = 1191
    CMD_GET_PHOTO_DATA_RSP = 1192
    CMD_GET_WIKI_DATA_REQ = 1193
    CMD_GET_WIKI_DATA_RSP = 1194
    CMD_TAKE_WIKI_RATING_REWARD_REQ = 1195
    CMD_TAKE_WIKI_RATING_REWARD_RSP = 1196
    CMD_GET_PHONE_PENDANT_DATA_REQ = 1197
    CMD_GET_PHONE_PENDANT_DATA_RSP = 1198
    CMD_PHONE_PENDANT_OP_REQ = 1199
    CMD_PHONE_PENDANT_OP_RSP = 1200
    CMD_GET_TEAM_LIST_REQ = 1215
    CMD_GET_TEAM_LIST_RSP = 1216
    CMD_GET_EMOJI_DATA_REQ = 1245
    CMD_GET_EMOJI_DATA_RSP = 1246
    CMD_MP_FAST_MATCH_REQ = 1247
    CMD_MP_FAST_MATCH_RSP = 1248
    CMD_GET_SNS_SHOW_DATA_REQ = 1266
    CMD_GET_SNS_SHOW_DATA_RSP = 1267
    CMD_GET_CLIENT_SETTING_REQ = 1270
    CMD_UPDATE_CLIENT_SETTING_REQ = 1271
    CMD_GET_CLIENT_SETTING_RSP = 1272
    CMD_GET_OTHER_PLAYER_CLIENT_SETTING_REQ = 1273
    CMD_GET_OTHER_PLAYER_CLIENT_SETTING_RSP = 1274
    CMD_GET_RECOMMEND_GOODS_REQ = 1275
    CMD_GET_RECOMMEND_GOODS_RSP = 1276
    CMD_GET_SPECIFIC_RECOMMEND_GOODS_REQ = 1277
    CMD_GET_SPECIFIC_RECOMMEND_GOODS_RSP = 1278
    CMD_UPDATE_LOBBY_SETTING_REQ = 1365
    CMD_UPDATE_LOBBY_SETTING_RSP = 1366
    CMD_EXCHANGE_PURPLE_JADE_REQ = 1367
    CMD_EXCHANGE_PURPLE_JADE_RSP = 1368
    CMD_COUPLE_TOWER_ACTIVITY_FINISH_FLOOR_REQ = 1371
    CMD_COUPLE_TOWER_ACTIVITY_FINISH_FLOOR_RSP = 1372
    CMD_RELATION_ACTIVITY_DATA_NOTIFY = 1373
    CMD_GET_BRIEF_DATA_LIST_REQ = 1374
    CMD_GET_BRIEF_DATA_LIST_RSP = 1375
    CMD_FINISH_PLOT_REQ = 1378
    CMD_FINISH_PLOT_RSP = 1379
    CMD_GET_REGION_UID_RANGE_REQ = 1380
    CMD_GET_REGION_UID_RANGE_RSP = 1381
    CMD_GET_PLOT_LIST_REQ = 1382
    CMD_GET_PLOT_LIST_RSP = 1383
    CMD_GET_FARM_ACTIVITY_DATA_REQ = 1385
    CMD_GET_FARM_ACTIVITY_DATA_RSP = 1386
    CMD_UNLOCK_FARM_SLOT_REQ = 1387
    CMD_UNLOCK_FARM_SLOT_RSP = 1388
    CMD_START_FARM_PRODUCE_REQ = 1389
    CMD_START_FARM_PRODUCE_RSP = 1390
    CMD_FINISH_FARM_PRODUCE_REQ = 1391
    CMD_FINISH_FARM_PRODUCE_RSP = 1392
    CMD_SPEED_UP_FARM_PRODUCE_REQ = 1393
    CMD_SPEED_UP_FARM_PRODUCE_RSP = 1394
    CMD_SYNC_FARM_ACTIVITY_DATA_NOTIFY = 1395
    CMD_AVATAR_ARTIFACT_UNLOCK_REQ = 1444
    CMD_AVATAR_ARTIFACT_UNLOCK_RSP = 1445
    CMD_AVATAR_ARTIFACT_LEVEL_UP_REQ = 1446
    CMD_AVATAR_ARTIFACT_LEVEL_UP_RSP = 1447
    CMD_TAKE_GOBACK_SCORE_REWARD_REQ = 1448
    CMD_TAKE_GOBACK_SCORE_REWARD_RSP = 1449
    CMD_GET_AVATAR_EQUIP_SUITE_REQ = 1454
    CMD_GET_AVATAR_EQUIP_SUITE_RSP = 1455
    CMD_SET_AVATAR_EQUIP_SUITE_REQ = 1456
    CMD_SET_AVATAR_EQUIP_SUITE_RSP = 1457
    CMD_SELECT_AVATAR_EQUIP_SUITE_REQ = 1458
    CMD_SELECT_AVATAR_EQUIP_SUITE_RSP = 1459
    CMD_REFRESH_AND_SYNC_MISSION_NOTIFY = 1473
    CMD_GET_PRODUCT_RECOMMEND_LIST_REQ = 1478
    CMD_GET_PRODUCT_RECOMMEND_LIST_RSP = 1479
    CMD_GET_CURRENCY_EXCHANGE_INFO_REQ = 1480
    CMD_GET_CURRENCY_EXCHANGE_INFO_RSP = 1481
    CMD_SET_LEVEL_LOCK_REQ = 1488
    CMD_SET_LEVEL_LOCK_RSP = 1489
    CMD_FINISH_FAST_PASS_REQ = 1490
    CMD_FINISH_FAST_PASS_RSP = 1491
    CMD_SET_WARSHIP_AVATAR_REQ = 1492
    CMD_SET_WARSHIP_AVATAR_RSP = 1493
    CMD_CREATE_ALIPAY_ORDER_REQ = 1494
    CMD_CREATE_ALIPAY_ORDER_RSP = 1495
    CMD_SUBSCRIPTION_STATUS_NOTIFY = 1496
    CMD_GET_CHAT_RED_ENVELOPE_INFO_REQ = 1502
    CMD_GET_CHAT_RED_ENVELOPE_INFO_RSP = 1503
    CMD_WANTED_MIRROR_RECOVERY_REQ = 1517
    CMD_WANTED_MIRROR_RECOVERY_RSP = 1518
    CMD_GET_RECOMMEND_MISSION_PANEL_LIST_REQ = 1519
    CMD_GET_RECOMMEND_MISSION_PANEL_LIST_RSP = 1520
    CMD_GET_CUSTOM_HEAD_DATA_REQ = 1523
    CMD_GET_CUSTOM_HEAD_DATA_RSP = 1524
    CMD_SET_CUSTOM_HEAD_REQ = 1525
    CMD_SET_CUSTOM_HEAD_RSP = 1526
    CMD_GET_STAGE_BUFF_REQ = 1528
    CMD_GET_STAGE_BUFF_RSP = 1529
    CMD_CHOOSE_STAGE_BUFF_REQ = 1530
    CMD_CHOOSE_STAGE_BUFF_RSP = 1531
    CMD_TRIGGER_RECOMMEND_GOODS_NOTIFY = 1538
    CMD_CONFIRM_RECOMMEND_GOODS_REQ = 1539
    CMD_CONFIRM_RECOMMEND_GOODS_RSP = 1540
    CMD_GET_STAGE_RECOMMEND_AVATAR_REQ = 1541
    CMD_GET_STAGE_RECOMMEND_AVATAR_RSP = 1542
    CMD_SEND_DANMAKU_REQ = 1543
    CMD_SEND_DANMAKU_RSP = 1544
    CMD_GET_DANMAKU_LIST_REQ = 1545
    CMD_GET_DANMAKU_LIST_RSP = 1546
    CMD_GET_DANMAKU_BRIEF_INFO_REQ = 1547
    CMD_GET_DANMAKU_BRIEF_INFO_RSP = 1548
    CMD_IMPEACH_DANMAKU_REQ = 1549
    CMD_IMPEACH_DANMAKU_RSP = 1550
    CMD_DANMAKU_BLACKLIST_NOTIFY = 1551
    CMD_GET_TEAM_STATUS_REQ = 1553
    CMD_GET_TEAM_STATUS_RSP = 1554
    CMD_GET_FAST_PASS_DATA_REQ = 1555
    CMD_GET_FAST_PASS_DATA_RSP = 1556
    CMD_GET_PLAYER_ONLINE_STATUS_REQ = 1576
    CMD_GET_PLAYER_ONLINE_STATUS_RSP = 1577
    CMD_MP_SYNC_ACTION_FROM_PLAYER_NOTIFY = 1579
    CMD_MP_SYNC_ACTION_FROM_SERVER_NOTIFY = 1580
    CMD_VERIFY_SAMSUNG_ORDER_NOTIFY = 1581
    CMD_GLOBAL_SHOP_GOODS_INFO_NOTIFY = 1583
    CMD_GET_CLIENT_DATA_REQ = 1586
    CMD_GET_CLIENT_DATA_RSP = 1587
    CMD_SET_CLIENT_DATA_REQ = 1588
    CMD_SET_CLIENT_DATA_RSP = 1589
    CMD_JIGUANG_UPDATE_TAG_REQ = 1590
    CMD_JIGUANG_UPDATE_TAG_RSP = 1591
    CMD_WIKI_TAKE_ACTIVITY_SUIT_REWARD_REQ = 1592
    CMD_WIKI_TAKE_ACTIVITY_SUIT_REWARD_RSP = 1593
    CMD_GET_BLACK_LIST_REQ = 1594
    CMD_GET_BLACK_LIST_RSP = 1595
    CMD_ADD_TO_BLACK_LIST_REQ = 1596
    CMD_ADD_TO_BLACK_LIST_RSP = 1597
    CMD_DEL_FROM_BLACK_LIST_REQ = 1598
    CMD_DEL_FROM_BLACK_LIST_RSP = 1599
    CMD_DEBUG_HOT_PATCH_FILE_NOTIFY = 1600
    CMD_GET_WEB_ACTIVITY_INFO_REQ = 1601
    CMD_GET_WEB_ACTIVITY_INFO_RSP = 1602
    CMD_GET_MINI_RANK_REQ = 1603
    CMD_GET_MINI_RANK_RSP = 1604
    CMD_CHARGE_ACTIVITY_BUFF_REQ = 1605
    CMD_CHARGE_ACTIVITY_BUFF_RSP = 1606
    CMD_LOGIN_WISH_GET_MAIN_DATA_REQ = 1607
    CMD_LOGIN_WISH_GET_MAIN_DATA_RSP = 1608
    CMD_LOGIN_WISH_TAKE_LOGIN_REWARD_REQ = 1609
    CMD_LOGIN_WISH_TAKE_LOGIN_REWARD_RSP = 1610
    CMD_LOGIN_WISH_TAKE_SPECIAL_REWARD_REQ = 1611
    CMD_LOGIN_WISH_TAKE_SPECIAL_REWARD_RSP = 1612
    CMD_LOGIN_WISH_MAKE_WISH_REQ = 1613
    CMD_LOGIN_WISH_MAKE_WISH_RSP = 1614
    CMD_LOGIN_WISH_TAKE_WISH_REWARD_REQ = 1615
    CMD_LOGIN_WISH_TAKE_WISH_REWARD_RSP = 1616
    CMD_GET_SINGLE_SHOP_WITHOUT_REFRESH_REQ = 1617
    CMD_GET_SINGLE_SHOP_WITHOUT_REFRESH_RSP = 1618
    CMD_DEV_LEVEL_CHANGE_NOTIFY = 1619
    CMD_DEL_AVATAR_EQUIP_SUITE_REQ = 1620
    CMD_DEL_AVATAR_EQUIP_SUITE_RSP = 1621
    CMD_GET_RAID_ACTIVE_INFO_REQ = 1622
    CMD_GET_RAID_ACTIVE_INFO_RSP = 1623
    CMD_ACTIVE_RAID_REQ = 1624
    CMD_ACTIVE_RAID_RSP = 1625
    CMD_CLIENT_CHECK_NETWORK_ENV_REQ = 1626
    CMD_CLIENT_CHECK_NETWORK_ENV_RSP = 1627
    CMD_GET_STAGE_RECOMMEND_AVATAR_COURSE_INFO_REQ = 1630
    CMD_GET_STAGE_RECOMMEND_AVATAR_COURSE_INFO_RSP = 1631
    CMD_GET_MISSION_STEP_COMPENSATION_INFO_REQ = 1632
    CMD_GET_MISSION_STEP_COMPENSATION_INFO_RSP = 1633
    CMD_TAKE_MISSION_STEP_COMPENSATION_REQ = 1634
    CMD_TAKE_MISSION_STEP_COMPENSATION_RSP = 1635
    CMD_GET_ELITE_CHAPTER_COMPENSATION_INFO_REQ = 1636
    CMD_GET_ELITE_CHAPTER_COMPENSATION_INFO_RSP = 1637
    CMD_TAKE_ELITE_CHAPTER_COMPENSATION_REQ = 1638
    CMD_TAKE_ELITE_CHAPTER_COMPENSATION_RSP = 1639
    CMD_TAKE_NEWBIE_PRIVILEGE_REWARD_REQ = 1640
    CMD_TAKE_NEWBIE_PRIVILEGE_REWARD_RSP = 1641
    CMD_UNLOCK_PRIVILEGE_REQ = 1642
    CMD_UNLOCK_PRIVILEGE_RSP = 1643
    CMD_MP_SET_EXTRA_SKILL_REQ = 1644
    CMD_MP_SET_EXTRA_SKILL_RSP = 1645
    CMD_GET_PRIVILEGE_INFO_REQ = 1646
    CMD_GET_PRIVILEGE_INFO_RSP = 1647
    CMD_CREATE_STEAM_ORDER_REQ = 1648
    CMD_CREATE_STEAM_ORDER_RSP = 1649
    CMD_VERIFY_STEAM_ORDER_NOTIFY = 1650
    CMD_UNLOCK_GOBACK_FUND_REQ = 1651
    CMD_UNLOCK_GOBACK_FUND_RSP = 1652
    CMD_TAKE_GOBACK_FUND_REWARD_REQ = 1653
    CMD_TAKE_GOBACK_FUND_REWARD_RSP = 1654
    CMD_EX_BOSS_SWEEP_REQ = 1655
    CMD_EX_BOSS_SWEEP_RSP = 1656
    CMD_EX_BOSS_TAKE_BOSS_SCORE_REWARD_NOTIFY = 1657
    CMD_BIND_HOYOLAB_ACCOUNT_REQ = 1658
    CMD_BIND_HOYOLAB_ACCOUNT_RSP = 1659
    CMD_CHAPTER_GROUP_GET_DATA_REQ = 1660
    CMD_CHAPTER_GROUP_GET_DATA_RSP = 1661
    CMD_WEEK_DAY_ACTIVITY_SWEEP_REQ = 1664
    CMD_WEEK_DAY_ACTIVITY_SWEEP_RSP = 1665
    CMD_GET_WEEK_DAY_ACTIVITY_COMPENSATION_INFO_REQ = 1666
    CMD_GET_WEEK_DAY_ACTIVITY_COMPENSATION_INFO_RSP = 1667
    CMD_TAKE_WEEK_DAY_ACTIVITY_COMPENSATION_REQ = 1668
    CMD_TAKE_WEEK_DAY_ACTIVITY_COMPENSATION_RSP = 1669
    CMD_REQUEST_LOGOFF_REQ = 1670
    CMD_REQUEST_LOGOFF_RSP = 1671
    CMD_GET_CHAPTER_COMPENSATION_INFO_REQ = 1672
    CMD_GET_CHAPTER_COMPENSATION_INFO_RSP = 1673
    CMD_TAKE_CHAPTER_COMPENSATION_REQ = 1674
    CMD_TAKE_CHAPTER_COMPENSATION_RSP = 1675
    CMD_GET_CHALLENGE_STEP_COMPENSATION_INFO_REQ = 1676
    CMD_GET_CHALLENGE_STEP_COMPENSATION_INFO_RSP = 1677
    CMD_TAKE_CHALLENGE_STEP_COMPENSATION_REQ = 1678
    CMD_TAKE_CHALLENGE_STEP_COMPENSATION_RSP = 1679
    CMD_GET_SPECIFIC_RANK_REQ = 1684
    CMD_GET_SPECIFIC_RANK_RSP = 1685
    CMD_GET_INVITE_ACTIVITY_INVITER_DATA_REQ = 1690
    CMD_GET_INVITE_ACTIVITY_INVITER_DATA_RSP = 1691
    CMD_TAKE_INVITE_ACTIVITY_INVITER_PROGRESS_REWARD_REQ = 1692
    CMD_TAKE_INVITE_ACTIVITY_INVITER_PROGRESS_REWARD_RSP = 1693
    CMD_GET_INVITE_ACTIVITY_INVITEE_DATA_REQ = 1694
    CMD_GET_INVITE_ACTIVITY_INVITEE_DATA_RSP = 1695
    CMD_INVITE_ACTIVITY_ACCEPT_INVITE_REQ = 1696
    CMD_INVITE_ACTIVITY_ACCEPT_INVITE_RSP = 1697
    CMD_THREE_DEAD_LINE = 1999


class CmdTypeTile(betterproto.Enum):
    CMD_GET_TILE_MAP_REQ = 4900
    CMD_GET_TILE_MAP_RSP = 4901
    CMD_TILE_UPDATE_MAP_REQ = 4902
    CMD_TILE_UPDATE_MAP_RSP = 4903
    CMD_TILE_GET_TOWER_REQ = 4904
    CMD_TILE_GET_TOWER_RSP = 4905
    CMD_TILE_ENTER_REQ = 4906
    CMD_TILE_ENTER_RSP = 4907
    CMD_TILE_SAVE_PROGRESS_REQ = 4908
    CMD_TILE_SAVE_PROGRESS_RSP = 4909
    CMD_TILE_SETTLE_EVENT_REQ = 4910
    CMD_TILE_SETTLE_EVENT_RSP = 4911
    CMD_TILE_RESET_FLOOR_REQ = 4912
    CMD_TILE_RESET_FLOOR_RSP = 4913
    CMD_TILE_ENTITY_OP_NOTIFY = 4914
    CMD_TILE_SELECT_PATH_REQ = 4915
    CMD_TILE_SELECT_PATH_RSP = 4916
    CMD_TILE_RESET_REGION_REQ = 4917
    CMD_TILE_RESET_REGION_RSP = 4918
    CMD_TILE_REPORT_SAVED_POSITION_REQ = 4919
    CMD_TILE_REPORT_SAVED_POSITION_RSP = 4920
    CMD_TILE_LOAD_SAVED_POSITION_REQ = 4921
    CMD_TILE_LOAD_SAVED_POSITION_RSP = 4922
    CMD_TILE_MAP_UPDATE_NOTIFY = 4923


class CmdTypeTown(betterproto.Enum):
    CMD_TOWN_ACTIVITY_GET_DATA_REQ = 6450
    CMD_TOWN_ACTIVITY_GET_DATA_RSP = 6451
    CMD_TOWN_ACTIVITY_SAVE_REQ = 6452
    CMD_TOWN_ACTIVITY_SAVE_RSP = 6453
    CMD_TOWN_ACTIVITY_BUILD_REQ = 6454
    CMD_TOWN_ACTIVITY_BUILD_RSP = 6455
    CMD_TOWN_ACTIVITY_BATTLE_REQ = 6456
    CMD_TOWN_ACTIVITY_BATTLE_RSP = 6457
    CMD_TOWN_ACTIVITY_SELL_BUILDING_REQ = 6458
    CMD_TOWN_ACTIVITY_SELL_BUILDING_RSP = 6459
    CMD_TOWN_ACTIVITY_HEAL_AVATAR_REQ = 6460
    CMD_TOWN_ACTIVITY_HEAL_AVATAR_RSP = 6461
    CMD_TOWN_ACTIVITY_SELL_BRICK_REQ = 6462
    CMD_TOWN_ACTIVITY_SELL_BRICK_RSP = 6463
    CMD_TOWN_ACTIVITY_END_NOTIFY = 6464
    CMD_TOWN_ACTIVITY_BOSS_ATTACK_NOTIFY = 6465
    CMD_TOWN_ACTIVITY_GET_SHOP_REQ = 6466
    CMD_TOWN_ACTIVITY_GET_SHOP_RSP = 6467
    CMD_TOWN_ACTIVITY_SHOP_BUY_REQ = 6468
    CMD_TOWN_ACTIVITY_SHOP_BUY_RSP = 6469
    CMD_TOWN_ACTIVITY_MATERIAL_USE_REQ = 6470
    CMD_TOWN_ACTIVITY_MATERIAL_USE_RSP = 6471
    CMD_TOWN_ACTIVITY_SPEED_UP_HEAL_REQ = 6472
    CMD_TOWN_ACTIVITY_SPEED_UP_HEAL_RSP = 6473
    CMD_TOWN_ACTIVITY_CHECK_IN_OPTIONAL_REQ = 6474
    CMD_TOWN_ACTIVITY_CHECK_IN_OPTIONAL_RSP = 6475
    CMD_TOWN_ACTIVITY_RESET_REQ = 6476
    CMD_TOWN_ACTIVITY_RESET_RSP = 6477
    CMD_TOWN_ACTIVITY_ALTER_PATH_REQ = 6478
    CMD_TOWN_ACTIVITY_ALTER_PATH_RSP = 6479
    CMD_TOWN_ACTIVITY_ATTACK_ENEMY_BUFF_NOTIFY = 6480
    CMD_TOWN_ACTIVITY_REFRESH_BRICK_REQ = 6481
    CMD_TOWN_ACTIVITY_REFRESH_BRICK_RSP = 6482


class CmdTypeTvt(betterproto.Enum):
    CMD_GET_TVT_ACTIVITY_REQ = 3300
    CMD_GET_TVT_ACTIVITY_RSP = 3301
    CMD_GET_TVT_BATTLE_HISTORY_REQ = 3302
    CMD_GET_TVT_BATTLE_HISTORY_RSP = 3303
    CMD_SYNC_TVT_MEMBER_IN_ROOM_NOTIFY = 3304
    CMD_TVT_TAKE_MISSION_GROUP_REWARD_REQ = 3305
    CMD_TVT_TAKE_MISSION_GROUP_REWARD_RSP = 3306
    CMD_TVT_GET_STAGE_SCHEDULE_REQ = 3307
    CMD_TVT_GET_STAGE_SCHEDULE_RSP = 3308
    CMD_TVT_CARD_GET_DATA_REQ = 3309
    CMD_TVT_CARD_GET_DATA_RSP = 3310
    CMD_TVT_CARD_LEVELUP_REQ = 3311
    CMD_TVT_CARD_LEVELUP_RSP = 3312
    CMD_TVT_CARD_UPDATE_SUITE_REQ = 3313
    CMD_TVT_CARD_UPDATE_SUITE_RSP = 3314
    CMD_TVT_CARD_TAKE_SEASON_RETURN_REQ = 3315
    CMD_TVT_CARD_TAKE_SEASON_RETURN_RSP = 3316
    CMD_TVT_CARD_TRANSFORM_MATERIAL_REQ = 3317
    CMD_TVT_CARD_TRANSFORM_MATERIAL_RSP = 3318
    CMD_SYNC_TVT_BATTLE_INFO_NOTIFY = 3350
    CMD_TVT_BATTLE_MEMBER_PREPARE_NOTIFY = 3351
    CMD_TVT_BATTLE_BEGIN_NOTIFY = 3352
    CMD_TVT_BATTLE_END_NOTIFY = 3353
    CMD_TVT_BATTLE_SETTLE_NOTIFY = 3354
    CMD_REPORT_TVT_BATTLE_STAGE_MESSAGE_NOTIFY = 3355
    CMD_SYNC_TVT_BATTLE_STAGE_MESSAGE_NOTIFY = 3356
    CMD_EXIT_TVT_BATTLE_NOTIFY = 3357
    CMD_TVT_BATTLE_CLIENT_REPORT_NOTIFY = 3358
    CMD_TVT_ENTER_SHOP_REQ = 3359
    CMD_TVT_ENTER_SHOP_RSP = 3360
    CMD_TVT_BATTLE_CONFIRM_NOTIFY = 3361
    CMD_TVT_UPDATE_LINEUP_INFO_NOTIFY = 3362
    CMD_TVT_BATTLE_ROBOT_SETTLE_NOTIFY = 3363
    CMD_TVT_DUMMY = 3399


class CmdTypeTwo(betterproto.Enum):
    CMD_GET_MEDAL_DATA_REQ = 449
    CMD_GET_MEDAL_DATA_RSP = 450
    CMD_MEDAL_OP_REQ = 451
    CMD_MEDAL_OP_RSP = 452
    CMD_GET_CLEAR_STAGE_ACTIVITY_REQ = 453
    CMD_GET_CLEAR_STAGE_ACTIVITY_RSP = 454
    CMD_FINISH_CLEAR_STAGE_ACTIVITY_NOTIFY = 455
    CMD_GET_STAGE_ACT_DIFFICULTY_REQ = 456
    CMD_GET_STAGE_ACT_DIFFICULTY_RSP = 457
    CMD_TAKE_STAGE_ACT_CHALLENGE_REWARD_REQ = 458
    CMD_TAKE_STAGE_ACT_CHALLENGE_REWARD_RSP = 459
    CMD_TAKE_ACTIVITY_CHALLENGE_REWARD_REQ = 460
    CMD_TAKE_ACTIVITY_CHALLENGE_REWARD_RSP = 461
    CMD_GET_PEDIA_REQ = 464
    CMD_GET_PEDIA_RSP = 465
    CMD_MP_GET_MATCH_INFO_REQ = 466
    CMD_MP_GET_MATCH_INFO_RSP = 467
    CMD_MP_CANCEL_MATCH_REQ = 468
    CMD_MP_CANCEL_MATCH_RSP = 469
    CMD_MP_GET_LOBBY_RECOMMEND_REQ = 470
    CMD_MP_GET_LOBBY_RECOMMEND_RSP = 471
    CMD_GET_BUFF_EFFECT_REQ = 476
    CMD_GET_BUFF_EFFECT_RSP = 477
    CMD_EQUIP_SYNTHESIS_REQ = 478
    CMD_EQUIP_SYNTHESIS_RSP = 479
    CMD_GET_PLAYER_CARD_REQ = 480
    CMD_GET_PLAYER_CARD_RSP = 481
    CMD_CHANGE_PLAYER_CARD_REQ = 482
    CMD_CHANGE_PLAYER_CARD_RSP = 483
    CMD_GET_SIMULATE_ACTIVITY_REQ = 484
    CMD_GET_SIMULATE_ACTIVITY_RSP = 485
    CMD_SEND_PLAYER_CARD_MSG = 486
    CMD_RECV_PLAYER_CARD_MSG = 487
    CMD_DEL_PLAYER_CARD_MSG_REQ = 489
    CMD_GET_OTHER_PLAYER_CARD_DATA_REQ = 490
    CMD_GET_OTHER_PLAYER_CARD_DATA_RSP = 491
    CMD_CHANGE_PLAYER_CARD_DATA_NOTIFY = 492
    CMD_SEND_PLAYER_CARD_MSG_RSP = 493
    CMD_GET_BOSS_RUSH_ACTIVITY_REQ = 496
    CMD_GET_BOSS_RUSH_ACTIVITY_RSP = 497
    CMD_CHOOSE_BOSS_RUSH_BUFF_REQ = 498
    CMD_CHOOSE_BOSS_RUSH_BUFF_RSP = 499
    CMD_GET_DELETE_MATERIAL_REQ = 500
    CMD_GET_DELETE_MATERIAL_RSP = 501
    CMD_GET_EXTRA_STORY_CHALLENGE_MODE_DATA_REQ = 502
    CMD_GET_EXTRA_STORY_CHALLENGE_MODE_DATA_RSP = 503
    CMD_RESET_EXTRA_STORY_CHALLENGE_MODE_REQ = 504
    CMD_RESET_EXTRA_STORY_CHALLENGE_MODE_RSP = 505
    CMD_GET_GRAND_KEY_REQ = 506
    CMD_GET_GRAND_KEY_RSP = 507
    CMD_GET_EX_BOSS_SCHEDULE_REQ = 508
    CMD_GET_EX_BOSS_SCHEDULE_RSP = 509
    CMD_GET_EX_BOSS_INFO_REQ = 510
    CMD_GET_EX_BOSS_INFO_RSP = 511
    CMD_TAKE_EX_BOSS_RANK_REWARD_NOTIFY = 516
    CMD_GET_NEW_CONSIGNED_ORDER_DATA_REQ = 517
    CMD_GET_NEW_CONSIGNED_ORDER_DATA_RSP = 518
    CMD_GET_CONSIGNED_REWARD_REQ = 519
    CMD_GET_CONSIGNED_REWARD_RSP = 520
    CMD_CHOOSE_CONSIGNED_REWARD_REQ = 521
    CMD_CHOOSE_CONSIGNED_REWARD_RSP = 522
    CMD_TAKE_CONSIGNED_REWARD_REQ = 523
    CMD_TAKE_CONSIGNED_REWARD_RSP = 524
    CMD_GET_CONSIGNED_REWARD_LOG_REQ = 525
    CMD_GET_CONSIGNED_REWARD_LOG_RSP = 526
    CMD_GET_EX_BOSS_RANK_REQ = 527
    CMD_GET_EX_BOSS_RANK_RSP = 528
    CMD_EX_BOSS_STAGE_BEGIN_REQ = 529
    CMD_EX_BOSS_STAGE_BEGIN_RSP = 530
    CMD_EX_BOSS_STAGE_END_REQ = 531
    CMD_EX_BOSS_STAGE_END_RSP = 532
    CMD_TAKE_EX_BOSS_SCORE_REWARD_NOTIFY = 533
    CMD_OPEN_WEEK_DAY_ACTIVITY_REQ = 534
    CMD_OPEN_WEEK_DAY_ACTIVITY_RSP = 535
    CMD_GET_CHALLENGE_STEP_REWARD_REQ = 536
    CMD_GET_CHALLENGE_STEP_REWARD_RSP = 537
    CMD_ADD_TECH_EXP_REQ = 538
    CMD_ADD_TECH_EXP_RSP = 539
    CMD_TAKE_TECH_COLLECT_REWARD_REQ = 540
    CMD_TAKE_TECH_COLLECT_REWARD_RSP = 541
    CMD_GET_MINUTE_STAGE_REQ = 542
    CMD_GET_MINUTE_STAGE_RSP = 543
    CMD_GET_MINUTE_TIMES_REQ = 544
    CMD_GET_MINUTE_TIMES_RSP = 545
    CMD_GET_RAID_RANK_REQ = 549
    CMD_GET_RAID_RANK_RSP = 550
    CMD_GET_RAID_SPECIAL_REWARD_REQ = 551
    CMD_GET_RAID_SPECIAL_REWARD_RSP = 552
    CMD_MATERIAL_DELETE_RETURN_REQ = 553
    CMD_ARMADA_BOSS_GET_MP_STATUS_REQ = 554
    CMD_ARMADA_BOSS_GET_MP_STATUS_RSP = 555
    CMD_TAKE_DAILY_COMPENSATION_REWARD_REQ = 564
    CMD_TAKE_DAILY_COMPENSATION_REWARD_RSP = 565
    CMD_AS_MASTER_PUPIL_CARD_REQ = 566
    CMD_AS_MASTER_PUPIL_CARD_RSP = 567
    CMD_GET_MASTER_PUPIL_DATA_REQ = 568
    CMD_GET_MASTER_PUPIL_DATA_RSP = 569
    CMD_ASK_FOR_MASTER_PUPIL_REQ = 570
    CMD_ASK_FOR_MASTER_PUPIL_RSP = 571
    CMD_DEAL_MASTER_PUPIL_REQ = 572
    CMD_DEAL_MASTER_PUPIL_RSP = 573
    CMD_MASTER_PUPIL_EVA_REQ = 574
    CMD_MASTER_PUPIL_EVA_RSP = 575
    CMD_GET_MASTER_FAME_REWARD_REQ = 576
    CMD_GET_MASTER_FAME_REWARD_RSP = 577
    CMD_MASTER_PUPIL_CARD_REPORT_REQ = 578
    CMD_SELECT_AVATAR_SUITE_REQ = 580
    CMD_SELECT_AVATAR_SUITE_RSP = 581
    CMD_AVATAR_SUITE_SELECTION_NOTIFY = 582
    CMD_ACTIVATE_TRIAL_AVATAR_REQ = 583
    CMD_ACTIVATE_TRIAL_AVATAR_RSP = 584
    CMD_GET_TRIAL_AVATAR_REQ = 585
    CMD_GET_TRIAL_AVATAR_RSP = 586
    CMD_GET_MASTER_PUPIL_CARD_REQ = 587
    CMD_GET_MASTER_PUPIL_CARD_RSP = 588
    CMD_MASTER_PUPIL_NOTIFY = 589
    CMD_GET_FRAME_DATA_REQ = 590
    CMD_GET_FRAME_DATA_RSP = 591
    CMD_SET_USE_FRAME_REQ = 592
    CMD_SET_USE_FRAME_RSP = 593
    CMD_GET_SEALED_MODE_SCHEDULE_REQ = 594
    CMD_GET_SEALED_MODE_SCHEDULE_RSP = 595
    CMD_GET_SEALED_MODE_INFO_REQ = 596
    CMD_GET_SEALED_MODE_INFO_RSP = 597
    CMD_SEALED_MODE_START_SELECTION_REQ = 598
    CMD_SEALED_MODE_START_SELECTION_RSP = 599
    CMD_GET_DORM_DATA_REQ = 601
    CMD_GET_DORM_DATA_RSP = 602
    CMD_GET_DORM_HOUSE_REQ = 603
    CMD_GET_DORM_HOUSE_RSP = 604
    CMD_EDIT_DORM_ROOM_REQ = 605
    CMD_EDIT_DORM_ROOM_RSP = 606
    CMD_GET_DEPOT_FURNITURE_REQ = 607
    CMD_GET_DEPOT_FURNITURE_RSP = 608
    CMD_UNLOCK_DORM_HOUSE_REQ = 609
    CMD_UNLOCK_DORM_HOUSE_RSP = 610
    CMD_SET_DORM_AVATAR_REQ = 611
    CMD_SET_DORM_AVATAR_RSP = 612
    CMD_LEVEL_UP_DORM_REQ = 613
    CMD_LEVEL_UP_DORM_RSP = 614
    CMD_SET_DORM_NAME_REQ = 615
    CMD_SET_DORM_NAME_RSP = 616
    CMD_FINISH_DORM_EVENT_REQ = 617
    CMD_FINISH_DORM_EVENT_RSP = 618
    CMD_GET_HAS_GOT_FURNITURE_ID_LIST_REQ = 619
    CMD_GET_HAS_GOT_FURNITURE_ID_LIST_RSP = 620
    CMD_BUY_FURNITURE_REQ = 621
    CMD_BUY_FURNITURE_RSP = 622
    CMD_GET_OTHER_DORM_DATA_REQ = 633
    CMD_GET_OTHER_DORM_DATA_RSP = 634
    CMD_SET_DORM_SNS_INFO_REQ = 635
    CMD_SET_DORM_SNS_INFO_RSP = 636
    CMD_GET_DORM_SNS_DATA_REQ = 637
    CMD_GET_DORM_SNS_DATA_RSP = 638
    CMD_LIKE_DORM_REQ = 639
    CMD_LIKE_DORM_RSP = 640
    CMD_FINISH_DORM_TALK_REQ = 641
    CMD_FINISH_DORM_TALK_RSP = 642
    CMD_GET_AVATAR_ROLL_DATA_REQ = 643
    CMD_GET_AVATAR_ROLL_DATA_RSP = 644
    CMD_TAKE_ROLL_REWARD_REQ = 645
    CMD_TAKE_ROLL_REWARD_RSP = 646
    CMD_CLAIM_STAMINA_REQ = 649
    CMD_CLAIM_STAMINA_RSP = 650
    CMD_GET_PUPIL_MISSION_REQ = 651
    CMD_GET_PUPIL_MISSION_RSP = 652
    CMD_GET_MASTER_PUPIL_APPLY_REQ = 653
    CMD_GET_MASTER_PUPIL_APPLY_RSP = 654
    CMD_GET_RECOMMEND_MASTER_PUPIL_REQ = 655
    CMD_GET_RECOMMEND_MASTER_PUPIL_RSP = 656
    CMD_GET_MASTER_PUPIL_MAIN_DATA_REQ = 657
    CMD_GET_MASTER_PUPIL_MAIN_DATA_RSP = 658
    CMD_GET_PUPIL_EVAL_DATA_REQ = 659
    CMD_GET_PUPIL_EVAL_DATA_RSP = 660
    CMD_REPORT_CLICK_RECHARGE_BUTTON_NOTIFY = 661
    CMD_GET_MASTER_RANK_REQ = 662
    CMD_GET_MASTER_RANK_RSP = 663
    CMD_GET_OTHER_MASTER_PUPIL_REQ = 664
    CMD_GET_OTHER_MASTER_PUPIL_RSP = 665
    CMD_UNLOCK_FURNITURE_REQ = 680
    CMD_UNLOCK_FURNITURE_RSP = 681
    CMD_SEALED_MODE_START_MATCH_REQ = 701
    CMD_SEALED_MODE_START_MATCH_RSP = 702
    CMD_SEALED_MODE_GET_MATCH_INFO_REQ = 703
    CMD_SEALED_MODE_GET_MATCH_INFO_RSP = 704
    CMD_SEALED_MODE_CANCEL_MATCH_REQ = 705
    CMD_SEALED_MODE_CANCEL_MATCH_RSP = 706
    CMD_SEALED_MODE_EXCHANGE_AVATAR_REQ = 707
    CMD_SEALED_MODE_EXCHANGE_AVATAR_RSP = 708
    CMD_SEALED_MODE_UPDATE_SCORE_REQ = 709
    CMD_SEALED_MODE_UPDATE_SCORE_RSP = 710
    CMD_SEALED_MODE_PLAYER_SCORE_NOTIFY = 711
    CMD_SEALED_MODE_RECEIVE_ITEM_NOTIFY = 712
    CMD_SEALED_MODE_USE_ITEM_REQ = 713
    CMD_SEALED_MODE_USE_ITEM_RSP = 714
    CMD_SEALED_MODE_SYNC_LEVEL_INFO_REQ = 715
    CMD_SEALED_MODE_SYNC_LEVEL_INFO_RSP = 716
    CMD_SEALED_MODE_SETTLE_NOTIFY = 717
    CMD_SEALED_MODE_WINNER_NOTIFY = 718
    CMD_SEALED_MODE_BATTLE_BEGIN_NOTIFY = 719
    CMD_SEALED_MODE_GET_PLAYER_STATUS_REQ = 720
    CMD_SEALED_MODE_GET_PLAYER_STATUS_RSP = 721
    CMD_SEALED_MODE_USE_TICKET_REQ = 722
    CMD_SEALED_MODE_USE_TICKET_RSP = 723
    CMD_SEALED_MODE_GET_RANK_INFO_REQ = 724
    CMD_SEALED_MODE_GET_RANK_INFO_RSP = 725
    CMD_SEALED_MODE_RANK_LEVEL_REWARD_NOTIFY = 726
    CMD_SEALED_MODE_START_NEW_SELECTION_REQ = 727
    CMD_SEALED_MODE_START_NEW_SELECTION_RSP = 728
    CMD_SEALED_MODE_SELECTION_NOTIFY = 729
    CMD_SEALED_MODE_SELECT_REQ = 730
    CMD_SEALED_MODE_SELECT_RSP = 731
    CMD_SEALED_MODE_EXCHANGE_EQUIP_REQ = 732
    CMD_SEALED_MODE_EXCHANGE_EQUIP_RSP = 733
    CMD_SEALED_MODE_UPDATE_CHEAT_DATA_REQ = 734
    CMD_SEALED_MODE_UPDATE_CHEAT_DATA_RSP = 735
    CMD_SEALED_MODE_WIN_BATTLE_REQ = 736
    CMD_SEALED_MODE_WIN_BATTLE_RSP = 737
    CMD_SEALED_MODE_GET_TOTAL_REWARD_SCORE_INFO_REQ = 738
    CMD_SEALED_MODE_GET_TOTAL_REWARD_SCORE_INFO_RSP = 739
    CMD_SEALED_MODE_TAKE_TOTAL_SCORE_REWARD_REQ = 740
    CMD_SEALED_MODE_TAKE_TOTAL_SCORE_REWARD_RSP = 741
    CMD_SEALED_MODE_ABANDON_TICKET_REQ = 742
    CMD_SEALED_MODE_ABANDON_TICKET_RSP = 743
    CMD_GRAND_KEY_LEVEL_UP_REQ = 753
    CMD_GRAND_KEY_LEVEL_UP_RSP = 754
    CMD_GRAND_KEY_RESET_REQ = 755
    CMD_GRAND_KEY_RESET_RSP = 756
    CMD_GRAND_KEY_BREACH_REQ = 757
    CMD_GRAND_KEY_BREACH_RSP = 758
    CMD_GRAND_KEY_ACTIVATE_SKILL_REQ = 759
    CMD_GRAND_KEY_ACTIVATE_SKILL_RSP = 760
    CMD_GRAND_KEY_CONTRAST_REQ = 761
    CMD_GRAND_KEY_CONTRAST_RSP = 762
    CMD_GRAND_KEY_SET_SKILL_REQ = 763
    CMD_GRAND_KEY_SET_SKILL_RSP = 764
    CMD_GET_STAGE_DROP_LIMIT_ACTIVITY_REQ = 776
    CMD_GET_STAGE_DROP_LIMIT_ACTIVITY_RSP = 777
    CMD_PUSH_CLIENT_MSG_NOTIFY = 801
    CMD_SET_PLAYER_TAG_NOTIFY = 802
    CMD_SYNC_TIME_REQ = 803
    CMD_SYNC_TIME_RSP = 804
    CMD_BUY_PRODUCT_REQ = 805
    CMD_BUY_PRODUCT_RSP = 806
    CMD_TAKE_EXTRA_STORY_CHALLENGE_MODE_CHAPTER_REWARD_REQ = 807
    CMD_TAKE_EXTRA_STORY_CHALLENGE_MODE_CHAPTER_REWARD_RSP = 808
    CMD_GET_AVATAR_BIND_EQUIP_IN_CHALLENGE_MODE_REQ = 809
    CMD_GET_AVATAR_BIND_EQUIP_IN_CHALLENGE_MODE_RSP = 810
    CMD_GET_GALINTERACT_TRIGGER_EVENT_REQ = 813
    CMD_GET_GALINTERACT_TRIGGER_EVENT_RSP = 814
    CMD_TAKE_GALINTERACT_TRIGGER_EVENT_REQ = 815
    CMD_TAKE_GALINTERACT_TRIGGER_EVENT_RSP = 816
    CMD_AVATAE_FRAGMENT_TRANSFORM_REQ = 827
    CMD_AVATAE_FRAGMENT_TRANSFORM_RSP = 828
    CMD_STAGE_BATTLE_SAVE_CLIENT_DATA_REQ = 829
    CMD_STAGE_BATTLE_SAVE_CLIENT_DATA_RSP = 830
    CMD_EXCHANGE_HCOIN_BY_MCOIN_REQ = 834
    CMD_EXCHANGE_HCOIN_BY_MCOIN_RSP = 835
    CMD_TAKE_EXTRA_STORY_LINE_STORY_FINISH_REWARD_REQ = 836
    CMD_TAKE_EXTRA_STORY_LINE_STORY_FINISH_REWARD_RSP = 837
    CMD_UNBIND_ACCOUNT_REQ = 961
    CMD_UNBIND_ACCOUNT_RSP = 962
    CMD_TAKE_FOUNDATION_REWARD_REQ = 963
    CMD_TAKE_FOUNDATION_REWARD_RSP = 964
    CMD_GET_STAGE_CHAPTER_REQ = 965
    CMD_GET_STAGE_CHAPTER_RSP = 966
    CMD_TAKE_CHAPTER_CHALLENGE_REWARD_REQ = 967
    CMD_TAKE_CHAPTER_CHALLENGE_REWARD_RSP = 968
    CMD_SYNC_DUTY_NOTIFY = 969
    CMD_RECALL_MASTER_PUPIL_APPLICATION_REQ = 970
    CMD_RECALL_MASTER_PUPIL_APPLICATION_RSP = 971
    CMD_SET_FRIEND_REMARK_REQ = 972
    CMD_SET_FRIEND_REMARK_RSP = 973
    CMD_GET_FRIEND_REMARK_LIST_REQ = 974
    CMD_GET_FRIEND_REMARK_LIST_RSP = 975
    CMD_PLAYER_LEVEL_UP_NOTIFY = 976


class CmdTypeUltraendless(betterproto.Enum):
    CMD_ULTRA_ENDLESS_GET_TOP_RANK_REQ = 5200
    CMD_ULTRA_ENDLESS_GET_TOP_RANK_RSP = 5201
    CMD_ULTRA_ENDLESS_GET_MAIN_DATA_REQ = 5202
    CMD_ULTRA_ENDLESS_GET_MAIN_DATA_RSP = 5203
    CMD_ULTRA_ENDLESS_LAST_SETTLE_REWARD_NOTIFY = 5205
    CMD_ULTRA_ENDLESS_REPORT_SITE_FLOOR_REQ = 5206
    CMD_ULTRA_ENDLESS_REPORT_SITE_FLOOR_RSP = 5207
    CMD_ULTRA_ENDLESS_BRIEF_DATA_NOTIFY = 5210
    CMD_ULTRA_ENDLESS_ENTER_SITE_REQ = 5211
    CMD_ULTRA_ENDLESS_ENTER_SITE_RSP = 5212
    CMD_ULTRA_ENDLESS_GROUP_LEVEL_REWARD_REQ = 5213
    CMD_ULTRA_ENDLESS_GROUP_LEVEL_REWARD_RSP = 5214
    CMD_ULTRA_ENDLESS_TOP_RANK_REWARD_REQ = 5215
    CMD_ULTRA_ENDLESS_TOP_RANK_REWARD_RSP = 5216
    CMD_ULTRA_ENDLESS_CLIENT_REPORT_NOTIFY = 5219
    CMD_ULTRA_ENDLESS_FIRST_JOIN_REWARD_NOTIFY = 5220
    CMD_ULTRA_ENDLESS_COMMON_NOTIFY = 5298
    CMD_ULTRA_ENDLESS_DUMMY = 5299


class CmdTypeVirtualtrain(betterproto.Enum):
    CMD_GET_VIRTUAL_AVATAR_GROUP_DETAIL_REQ = 3502
    CMD_GET_VIRTUAL_AVATAR_GROUP_DETAIL_RSP = 3503
    CMD_SET_VIRTUAL_AVATAR_TEAM_REQ = 3504
    CMD_SET_VIRTUAL_AVATAR_TEAM_RSP = 3505
    CMD_DRESS_VIRTUAL_EQUIPMENT_REQ = 3506
    CMD_DRESS_VIRTUAL_EQUIPMENT_RSP = 3507
    CMD_VIRTUAL_GACHA_REQ = 3508
    CMD_VIRTUAL_GACHA_RSP = 3509
    CMD_GET_VIRTUAL_GACHA_STATUS_REQ = 3510
    CMD_GET_VIRTUAL_GACHA_STATUS_RSP = 3511
    CMD_VIRTUAL_AVATAR_GROUP_CHANGE_NOTIFY = 3512
    CMD_VIRTUAL_TRAIN_DIRECT_GACHA_NOTIFY = 3513
    CMD_CHOOSE_VIRTUAL_GACHA_ITEM_REQ = 3514
    CMD_CHOOSE_VIRTUAL_GACHA_ITEM_RSP = 3515
    CMD_CHOOSE_VIRTUAL_DEFAULT_AVATAR_NOTIFY = 3516
    CMD_SYNC_VIRTUAL_GACHA_STATUS_NOTIFY = 3517
    CMD_VIRTUAL_TRAIN_ROLE_CUSTOM_LEVEL_UP_REQ = 3518
    CMD_VIRTUAL_TRAIN_ROLE_CUSTOM_LEVEL_UP_RSP = 3519
    CMD_VIRTUAL_TRAIN_ROLE_CUSTOM_CHOOSE_REQ = 3520
    CMD_VIRTUAL_TRAIN_ROLE_CUSTOM_CHOOSE_RSP = 3521
    CMD_VIRTUAL_TRAIN_EVO_REQ = 3522
    CMD_VIRTUAL_TRAIN_EVO_RSP = 3523
    CMD_VIRTUAL_TRAIN_ITEM_DROP_NOTIFY = 3524
    CMD_VIRTUAL_TRAIN_DUMMY = 3549


class CmdTypeWarship(betterproto.Enum):
    CMD_GET_WARSHIP_ITEM_DATA_REQ = 5450
    CMD_GET_WARSHIP_ITEM_DATA_RSP = 5451
    CMD_GET_WARSHIP_TRIAL_DATA_REQ = 5452
    CMD_GET_WARSHIP_TRIAL_DATA_RSP = 5453
    CMD_GET_WARSHIP_DATA_REQ = 5454
    CMD_GET_WARSHIP_DATA_RSP = 5455
    CMD_SET_WARSHIP_REQ = 5456
    CMD_SET_WARSHIP_RSP = 5457
    CMD_SET_WARSHIP_COMPONENT_REQ = 5458
    CMD_SET_WARSHIP_COMPONENT_RSP = 5459
    CMD_SET_WARSHIP_SETTING_REQ = 5460
    CMD_SET_WARSHIP_SETTING_RSP = 5461
    CMD_WARSHIP_ITEM_RETURN_MATERIAL_NOTIFY = 5462


class CmdTypeWeeklyreport(betterproto.Enum):
    CMD_GET_WEEKLY_REPORT_REQ = 5100
    CMD_GET_WEEKLY_REPORT_RSP = 5101
    CMD_GET_WEEKLY_REPORT_ENDLESS_RECOMMEND_PLAYER_REQ = 5102
    CMD_GET_WEEKLY_REPORT_ENDLESS_RECOMMEND_PLAYER_RSP = 5103
    CMD_GET_WEEKLY_REPORT_EX_BOSS_RECOMMEND_PLAYER_REQ = 5104
    CMD_GET_WEEKLY_REPORT_EX_BOSS_RECOMMEND_PLAYER_RSP = 5105
    CMD_GET_WEEKLY_REPORT_ULTRA_ENDLESS_RECOMMEND_PLAYER_REQ = 5106
    CMD_GET_WEEKLY_REPORT_ULTRA_ENDLESS_RECOMMEND_PLAYER_RSP = 5107


class CommentType(betterproto.Enum):
    COMMENT_OK = 1
    COMMENT_CANCEL = 2
    COMMENT_IGNORE = 3


class CommonChatMsgType(betterproto.Enum):
    COMMON_CHAT_MSG_NONE = 0
    COMMON_CHAT_MSG_TEAM = 1
    COMMON_CHAT_MSG_CAMPAIGN = 2
    COMMON_CHAT_MSG_ROOM = 3
    COMMON_CHAT_MSG_PRIVATE = 4
    COMMON_CHAT_MSG_CAHT_GROUP = 5
    COMMON_CHAT_MSG_WORLD_CHAT = 6
    COMMON_CHAT_MSG_ARMADA_CHAT = 7


class CompensationType(betterproto.Enum):
    COMPENSATION_NONE = 0
    COMPENSATION_ISLAND = 1
    COMPENSATION_DORM = 2


class ConstantEnum(betterproto.Enum):
    UN_LIMIT_TIMES = 65535
    FRAME_DEFAULT_ID = 200001


class CreditBehavior(betterproto.Enum):
    CREDIT_UNCONFIRM = 1
    CREDIT_ON_HOOK = 2
    CREDIT_TEAM_MATCH = 3
    CREDIT_WIN = 4
    CREDIT_LOSE = 5
    CREDIT_DAILY_REFRESH = 99


class CreditType(betterproto.Enum):
    CREDIT_NONE = 0
    CREDIT_TVT = 1


class CustomHeadTimeType(betterproto.Enum):
    CUSTOM_HEAD_TIME_FOREVER = 1
    CUSTOM_HEAD_TIME_DURATION = 2
    CUSTOM_HEAD_TIME_UNTIL = 3


class CustomHeadType(betterproto.Enum):
    CUSTOM_HEAD_TYPE_NONE = 0
    CUSTOM_HEAD_TYPE_AVATAR = 1
    CUSTOM_HEAD_TYPE_DRESS = 2
    CUSTOM_HEAD_TYPE_NORMAL = 3


class CycleMissionProgressType(betterproto.Enum):
    CYCLE_MISSION_PROGRESS_ALL = 1
    CYCLE_MISSION_PROGRESS_ONE_BY_ONE = 2


class CycleMissionSolveType(betterproto.Enum):
    CYCLE_MISSION_SOLVE_CLOSE = 0
    CYCLE_MISSION_SOLVE_RESERVE = 1


class DanmakuChannelType(betterproto.Enum):
    DANMAKU_CHANNEL_NONE = 0
    DANMAKU_CHANNEL_NORMAL = 1
    DANMAKU_CHANNEL_KINGDOM = 2


class DanmakuSlotStatus(betterproto.Enum):
    DANMAKU_SLOT_STATUS_NONE = 0
    DANMAKU_SLOT_STATUS_CLOSE = 1
    DANMAKU_SLOT_STATUS_FAKE = 2


class DecorationEffectType(betterproto.Enum):
    DECORATION_EFFECT_FURNITURE_LIMIT = 1
    DECORATION_EFFECT_AVATAR_LIMIT = 2
    DECORATION_EFFECT_UNLOCK_ROOM = 3
    DECORATION_EFFECT_POWER_LIMIT = 4


class DeviceType(betterproto.Enum):
    DEVICE_TYPE_NONE = 0
    DEVICE_TYPE_ANDROID = 1
    DEVICE_TYPE_IOS = 2
    DEVICE_TYPE_PC = 3


class DialogType(betterproto.Enum):
    DIALOG_TYPE_NONE = 0
    DIALOG_TYPE_CONTENT = 1
    DIALOG_TYPE_SELECT = 2
    DIALOG_TYPE_HIDE = 3


class DiceType(betterproto.Enum):
    DICE_TYPE_NONE = 0
    DICE_TYPE_RANDOM = 1
    DICE_TYPE_FIXED = 2
    DICE_TYPE_FORWARD = 3


class DiceyDungeonGachaType(betterproto.Enum):
    DICEY_DUNGEON_GACHA_WEAPON = 1
    DICEY_DUNGEON_GACHA_ORNAMENT_INITIATIVE = 2
    DICEY_DUNGEON_GACHA_ORNAMENT_PASSIVE = 3


class DiceyDungeonRoleAttributeType(betterproto.Enum):
    DICEY_DUNGEON_ROLE_ATTR_STRENGTH = 1
    DICEY_DUNGEON_ROLE_ATTR_AGILITY = 2
    DICEY_DUNGEON_ROLE_ATTR_INTELLIGENCE = 3


class DiceyDungeonRoomType(betterproto.Enum):
    DICEY_DUNGEON_ROOM_DICEY_BATTLE = 1
    DICEY_DUNGEON_ROOM_AVATAR_BATTLE = 2
    DICEY_DUNGEON_ROOM_ORNAMENT_REWARD = 3
    DICEY_DUNGEON_ROOM_HP_RECOVER = 4
    DICEY_DUNGEON_ROOM_PLOT = 5
    DICEY_DUNGEON_ROOM_BOSS = 6


class DiceyDungeonSkillType(betterproto.Enum):
    DICEY_DUNGEON_SKILL_NONE = 0
    DICEY_DUNGEON_SKILL_INITIATIVE = 1
    DICEY_DUNGEON_SKILL_PASSIVE = 2


class DiceyDungeonType(betterproto.Enum):
    DICEY_DUNGEON_NONE = 0
    DICEY_DUNGEON_STORY = 1
    DICEY_DUNGEON_SCHEDULE = 2
    DICEY_DUNGEON_ENDLESS = 3


class DiscountType(betterproto.Enum):
    DISCOUNT_EQUIP_POWER_UP_SCOIN = 1
    DISCOUNT_AVATAR_SKILL_UP_SCOIN = 2
    DISCOUNT_EQUIP_POWER_UP_BOOST_RATE = 3
    DISCOUNT_EQUIP_POWER_UP_BOOST_PROB = 4


class DishRewardType(betterproto.Enum):
    DISH_REWARD_TYPE_NONE = 0
    DISH_REWARD_TYPE_PREPARE = 1
    DISH_REWARD_TYPE_DAILY = 2
    DISH_REWARD_TYPE_LIMITED = 3


class DisjoinType(betterproto.Enum):
    DISJOIN_TOTAL = 1
    DISJOIN_TITLE = 2
    DISJOIN_EX = 3


class DisplayCurrencyType(betterproto.Enum):
    DISPLAY_CURRENCY_TYPE_NONE = 0
    DISPLAY_CURRENCY_TYPE_SCOIN = 1
    DISPLAY_CURRENCY_TYPE_STAMINA = 2
    DISPLAY_CURRENCY_TYPE_HCOIN = 3
    DISPLAY_CURRENCY_TYPE_PURPLE_JADE = 5
    DISPLAY_CURRENCY_TYPE_MCOIN = 6
    DISPLAY_CURRENCY_TYPE_PLAIN_DRESS_TICKET = 7
    DISPLAY_CURRENCY_TYPE_LUXURY_DRESS_TICKET = 8
    DISPLAY_CURRENCY_TYPE_VITALITY = 12
    DISPLAY_CURRENCY_TYPE_ETHER_PHLOGISTON = 13
    DISPLAY_CURRENCY_TYPE_BRILLIANT_PURE_CRYSTAL = 14
    DISPLAY_CURRENCY_TYPE_HONOR_MEDAL = 15


class DlcAvatarReviveCostType(betterproto.Enum):
    DLC_AVATAR_REVIVE_COST_TYPE_NONE = 0
    DLC_AVATAR_REVIVE_COST_TYPE_REVIVE_COIN = 1
    DLC_AVATAR_REVIVE_COST_TYPE_COIN = 2


class DlcAvatarReviveType(betterproto.Enum):
    DLC_AVATAR_REVIVE_TYPE_NONE = 0
    DLC_AVATAR_REVIVE_TYPE_DLC_TOWER = 1
    DLC_AVATAR_REVIVE_TYPE_DLC_STAGE = 2
    DLC_AVATAR_REVIVE_TYPE_OUTER_STAGE = 3
    DLC_AVATAR_REVIVE_TYPE_DLC_OW = 4


class DlcSupportType(betterproto.Enum):
    DLC_SUPPORT_TYPE_COLLECTION = 1
    DLC_SUPPORT_TYPE_STAGE_BEGIN = 2
    DLC_SUPPORT_TYPE_STORY = 3
    DLC_SUPPORT_TYPE_DIALOG = 4
    DLC_SUPPORT_TYPE_QUEST = 5


class DlcTalentType(betterproto.Enum):
    DLC_TALENT_TYPE_NONE = 0
    DLC_TALENT_TYPE_AUTO = 1
    DLC_TALENT_TYPE_ACTIVE = 2
    DLC_TALENT_TYPE_PASSIVE = 3
    DLC_TALENT_TYPE_REFRESHABLE = 4


class DormDataType(betterproto.Enum):
    DORM_DATA_ALL = 0
    DORM_DATA_DECORATION = 1
    DORM_DATA_EVENT = 3
    DORM_DATA_SNS = 4


class DormEventConditionWay(betterproto.Enum):
    DORM_EVENT_CONDITION_WAY_PASS_STAGE = 1
    DORM_EVENT_CONDITION_WAY_ISLAND_ADVANTURE = 2
    DORM_EVENT_CONDITION_WAY_AVATAR_STAR_UP = 3
    DORM_EVENT_CONDITION_WAY_MP_STAGE = 4
    DORM_EVENT_CONDITION_WAY_OPEN_WORLD_QUEST = 5
    DORM_EVENT_CONDITION_WAY_MVP = 6
    DORM_EVENT_CONDITION_WAY_NO_FIGHT = 7
    DORM_EVENT_CONDITION_WAY_LEVEL_UP = 8
    DORM_EVENT_CONDITION_WAY_PASS_STAGE_WITH_ROLE = 9
    DORM_EVENT_CONDITION_WAY_FINISH_MISSION = 11
    DORM_EVENT_CONDITION_WAY_ENDLESS_STAGE_PASS = 12
    DORM_EVENT_CONDITION_WAY_OFFLINE = 13
    DORM_EVENT_CONDITION_WAY_BIRTHDAY = 14
    DORM_EVENT_CONDITION_WAY_GACHA = 15
    DORM_EVENT_CONDITION_WAY_NEW_ROLE = 16
    DORM_EVENT_CONDITION_WAY_ACTIVE_DEGREE = 17


class DreamUnlockType(betterproto.Enum):
    DREAM_UNLOCK_TYPE_NO_NEWBIE_SCHEDULE = 1
    DREAM_UNLOCK_TYPE_HAS_NOT_FINISHED_DREAM = 2
    DREAM_UNLOCK_TYPE_GOBACK_LEVEL = 3
    DREAM_UNLOCK_TYPE_AVATAR_LOCKED = 4
    DREAM_UNLOCK_TYPE_HAS_NOT_GOT_ITEM = 5


class DressType(betterproto.Enum):
    DRESS_BATTLE = 1
    DRESS_SUIT = 2
    DRESS_ARTIFACT = 4


class DropLimitRefreshType(betterproto.Enum):
    DROP_LIMIT_REFRESH_WEEK_DAY = 1
    DROP_LIMIT_REFRESH_MONTH = 2


class DropLimitType(betterproto.Enum):
    DROP_LIMIT_STAGE = 1
    DROP_LIMIT_DLC = 2
    DROP_LIMIT_GOD_WAR = 3
    DROP_LIMIT_SC_DLC = 4
    DROP_LIMIT_CHAPTER_OW = 5


class DutyType(betterproto.Enum):
    DUTY_DAILY = 1
    DUTY_WEEKLY = 2


class EmojiUnlockType(betterproto.Enum):
    EMOJI_UNLOCK_TYPE_DEFAULT = 1
    EMOJI_UNLOCK_TYPE_ITEM_DROP = 2


class EndlessItemType(betterproto.Enum):
    ENDLESS_EMPTY = 0
    ENDLESS_MEDICINE_SELF = 1
    ENDLESS_MEDICINE_TO_OTHER = 2
    ENDLESS_TRAP = 3
    ENDLESS_BOMB = 4
    ENDLESS_HIDDEN = 5


class EndlessRewardType(betterproto.Enum):
    ENDLESS_PROMOTE = 1
    ENDLESS_NORMAL = 2
    ENDLESS_DEMOTE = 3


class EndlessSingleModeActivityType(betterproto.Enum):
    ENDLESS_SINGLE_MODE_ACTIVITY_TYPE_NONE = 0
    ENDLESS_SINGLE_MODE_ACTIVITY_TYPE_NORMAL = 1
    ENDLESS_SINGLE_MODE_ACTIVITY_TYPE_OW = 2


class EndlessSinType(betterproto.Enum):
    ENDLESS_SIN_NORMAL = 1
    ENDLESS_SIN_ANGRY = 2
    ENDLESS_SIN_NTR = 3
    ENDLESS_SIN_GREED = 4
    ENDLESS_SIN_SLOTH = 5
    ENDLESS_SIN_PRIDE = 6
    ENDLESS_SIN_GLUTTONY = 7
    ENDLESS_SIN_ENVY = 8


class EndlessType(betterproto.Enum):
    ENDLESS_TYPE_NONE = 0
    ENDLESS_TYPE_NORMAL = 1
    ENDLESS_TYPE_OPENWORLD = 2
    ENDLESS_TYPE_QUANTUM = 3
    ENDLESS_TYPE_ULTRA = 4
    ENDLESS_TYPE_GREEDY = 5
    ENDLESS_TYPE_FRONT = 6


class EnterTimesType(betterproto.Enum):
    ACITIVYT_TIMES_REF = 1
    STAGE_TIMES_REF = 2


class EquipmentForgeRefreshType(betterproto.Enum):
    EQUIPMENT_FORGE_REFRESH_NONE = 0
    EQUIPMENT_FORGE_REFRESH_SCHEDULE = 1
    EQUIPMENT_FORGE_REFRESH_DAILY = 2


class EquipmentForgeType(betterproto.Enum):
    EQUIPMENT_FORGE_TIMES = 1
    EQUIPMENT_FORGE_PACKAGE_NUM = 2


class EquipmentSlot(betterproto.Enum):
    EQUIPMENT_SLOT_WEAPON_1 = 1
    EQUIPMENT_SLOT_STIGMATA_1 = 2
    EQUIPMENT_SLOT_STIGMATA_2 = 3
    EQUIPMENT_SLOT_STIGMATA_3 = 4


class EquipmentType(betterproto.Enum):
    EQUIPMENT_MATERIAL = 1
    EQUIPMENT_AVATAR_FRAGMENT = 2
    EQUIPMENT_WEAPON = 3
    EQUIPMENT_STIGMATA = 4
    EQUIPMENT_AVATAR_CARD = 5
    EQUIPMENT_ENDLESS_ITEM = 6
    EQUIPMENT_DRESS = 7
    EQUIPMENT_VIRTUAL = 8
    EQUIPMENT_MEDAL = 10
    EQUIPMENT_FURNITURE = 14
    EQUIPMENT_OPENWORLD_ENDLESS_ITEM = 15
    EQUIPMENT_CUSTOM_HEAD = 16
    EQUIPMENT_FRAME = 20
    EQUIPMENT_SHOPPING_MALL_GIFT = 30
    EQUIPMENT_MECHA = 34
    EQUIPMENT_PHONE_PENDANT = 35
    EQUIPMENT_EMOJI = 36
    EQUIPMENT_ELF_FRAGMENT = 37
    EQUIPMENT_ELF_CARD = 38
    EQUIPMENT_DLC_AVATAR_CARD = 39
    EQUIPMENT_WARSHIP = 40
    EQUIPMENT_TRIAL_WARSHIP = 41
    EQUIPMENT_ERROR = 100


class EquipmentVirtualType(betterproto.Enum):
    EQUIPMENT_VIRTUAL_ARMADA_FUND = 80001
    EQUIPMENT_VIRTUAL_MP_EXP = 80002
    EQUIPMENT_VIRTUAL_SCOIN = 80006
    EQUIPMENT_MASTER_FAME_EXP = 80007
    EQUIPMENT_VIRTUAL_SEASON_EXP = 80008
    EQUIPMENT_VIRTUAL_PLAYER_EXP = 80009
    EQUIPMENT_VIRTUAL_ARMADA_CONTRIBUTION = 80011
    EQUIPMENT_VIRTUAL_VITALITY = 80012
    EQUIPMENT_VIRTUAL_CARD_PRODUCT = 80013
    EQUIPMENT_VIRTUAL_CONTRACT_POINT = 80014
    EQUIPMENT_VIRTUAL_DLC_EXP = 80015
    EQUIPMENT_VIRTUAL_BATTLE_PASS_EXP_ACTIVITY = 80016
    EQUIPMENT_VIRTUAL_ADVENTURE_BADGE = 80017
    EQUIPMENT_VIRTUAL_ADVENTURE_GRAIN = 80018
    EQUIPMENT_VIRTUAL_CHAPTER_ACTIVITY_EXP = 80019
    EQUIPMENT_VIRTUAL_PICTURE_SCORE = 80020
    EQUIPMENT_VIRTUAL_OW_FOX_EXP = 80021
    EQUIPMENT_VIRTUAL_OW_AI_EXP = 80022
    EQUIPMENT_VIRTUAL_SANCTUARY_EXP = 80023
    EQUIPMENT_VIRTUAL_CUSTOM_GACHA_ENERGY = 80024
    EQUIPMENT_VIRTUAL_BATTLE_PASS_THEME_EXP = 80025
    EQUIPMENT_VIRTUAL_OPTIONAL_GACHA_ENERGY = 80026
    EQUIPMENT_VIRTUAL_NEWBIE_PRIVILEGE = 80027
    EQUIPMENT_VIRTUAL_SC_DLC_EXP = 80028
    EQUIPMENT_VIRTUAL_BATTLE_PASS_EXP_DUTY = 80029
    EQUIPMENT_VIRTUAL_CUSTOM_GOBACK_GACHA_ENERGY = 80030
    EQUIPMENT_VIRTUAL_OW_TERMINAL_EXP = 80031


class EventType(betterproto.Enum):
    EVENT_TYPE_ISLAND = 1
    EVENT_TYPE_CITY_ACTIVITY = 2


class ExaminationTagType(betterproto.Enum):
    EXAMINATION_TYPE_NONE = 0
    EXAMINATION_TYPE_AVATAR = 1
    EXAMINATION_TYPE_ELF = 2
    EXAMINATION_TYPE_MONSTER = 3
    EXAMINATION_TYPE_COMMON = 4


class ExtraStoryActType(betterproto.Enum):
    EXTRA_STORY_ACT_MAIN = 1
    EXTRA_STORY_ACT_HIDDEN = 2
    EXTRA_STORY_ACT_ENTROPY = 3
    EXTRA_STORY_ACT_ACTIVITY = 4
    EXTRA_STORY_ACT_FANTASY = 5
    EXTRA_STORY_ACT_ROGUE = 6


class ExtraStoryChapterType(betterproto.Enum):
    EXTRA_STORY_CHAPTER_INVALID = 0
    EXTRA_STORY_CHAPTER_NORMAL = 1
    EXTRA_STORY_CHAPTER_LINE = 2


class FacilityType(betterproto.Enum):
    FACILITY_TYPE_AVATAR_EXP = 1
    FACILITY_TYPE_AVATAR_SKILL_POINT = 2
    FACILITY_TYPE_WEAPON_EXP = 3
    FACILITY_TYPE_STIGMATA_EXP = 4
    FACILITY_TYPE_BAR = 5
    FACILITY_TYPE_AUDIO_PLAYER = 6
    FACILITY_TYPE_ENERGY = 7
    FACILITY_TYPE_HOMELAND = 8
    FACILITY_TYPE_REFRIGERATOR = 9
    FACILITY_TYPE_DOOR = 10


class FarmSlotStatus(betterproto.Enum):
    FARM_SLOT_NONE = 0
    FARM_SLOT_LOCKED = 1
    FARM_SLOT_FREE = 2
    FARM_SLOT_IN_PRODUCE = 3
    FARM_SLOT_FINISH_PRODUCE = 4


class FastPassLimitType(betterproto.Enum):
    FAST_PASS_LIMIT_NONE = 0
    FAST_PASS_LIMIT_DAILY = 1
    FAST_PASS_LIMIT_WEEKLY = 2


class FastPassType(betterproto.Enum):
    FAST_PASS_TYPE_NONE = 0
    FAST_PASS_TYPE_OW = 1
    FAST_PASS_TYPE_WEEKDAY = 2


class FeatureLimitLevel(betterproto.Enum):
    LIMIT_LEVEL_ALL = 0
    LIMIT_LEVEL_MAIN = 100
    LIMIT_LEVEL_CHAT = 200


class FeatureSwitchActivityType(betterproto.Enum):
    FEATURE_SWITCH_ACTIVITY_TYPE_NONE = 0
    FEATURE_SWITCH_ACTIVITY_TYPE_SLG_GAME = 1
    FEATURE_SWITCH_ACTIVITY_TYPE_SLG_BATTLE = 2
    FEATURE_SWITCH_ACTIVITY_TYPE_SLG_MATCH = 3
    FEATURE_SWITCH_ACTIVITY_TYPE_GLOBAL_POLLING = 4
    FEATURE_SWITCH_ACTIVITY_TYPE_SLG_CHAT = 5
    FEATURE_SWITCH_ACTIVITY_TYPE_SLG_BROADCAST = 6


class FeatureSwitchOpType(betterproto.Enum):
    FEATURE_SWITCH_OP_NONE = 0
    FEATURE_SWITCH_OP_ADD = 1
    FEATURE_SWITCH_OP_DEL = 2


class FeatureSwitchType(betterproto.Enum):
    FEATURE_SWITCH_NONE = 0
    FEATURE_SWITCH_STAGE = 1
    FEATURE_SWITCH_SHOP = 2
    FEATURE_SWITCH_SHOP_GOODS_POOL = 3
    FEATURE_SWITCH_ACTIVITY_PANEL = 4
    FEATURE_SWITCH_MISSION_HIDE = 5
    FEATURE_SWITCH_ITEM_USE = 6
    FEATURE_SWITCH_MATERIAL_HIDE = 7
    FEATURE_SWITCH_MISSION_REWARD = 8
    FEATURE_SWITCH_MAIL_ATTACHMENT_TAKE = 9
    FEATURE_SWITCH_DANMAKU = 10
    FEATURE_SWITCH_EX_BOSS = 11
    FEATURE_SWITCH_SHOP_GOODS_POOL_HIDE = 12
    FEATURE_SWITCH_CHAT = 13
    FEATURE_SWITCH_HEXIE = 14
    FEATURE_SWITCH_MCOIN_BUY = 15
    FEATURE_SWITCH_SHOP_GOODS = 16
    FEATURE_SWITCH_CMD_CD = 17
    FEATURE_SWITCH_ENDLESS = 18
    FEATURE_SWITCH_EX_BOSS_ENTER = 19
    FEATURE_SWITCH_GACHA = 20
    FEATURE_SWITCH_AVATAR_FRAGMENT = 22
    FEATURE_SWITCH_ELF_FRAGMENT = 23
    FEATURE_SWITCH_EQUIP_FORGE = 24
    FEATURE_SWITCH_BATTLE_PASS = 25
    FEATURE_SWITCH_GACHA_COIN_TRANSFER = 26
    FEATURE_SWITCH_RPG_TALE_SITE = 27
    FEATURE_SWITCH_ACTIVITY = 28
    FEATURE_SWITCH_THEME_WANTED = 29
    FEATURE_SWITCH_SNS_REQUEST = 30
    FEATURE_SWITCH_GOD_WAR = 31
    FEATURE_SWITCH_SERVER_STOP_GACHA_MSG = 32
    FEATURE_SWITCH_KINGDOM_WAR = 33
    FEATURE_SWITCH_REFINE_RUNE = 34
    FEATURE_SWITCH_CHANGE_FRIEND_REMARK = 35
    FEATURE_SWITCH_GACHA_DAILY_TIMES_LIMIT = 36
    FEATURE_SWITCH_INVITE_ACTIVITY = 37


class FishRewardSrc(betterproto.Enum):
    FISH_REWARD_SRC_NONE = 0
    FISH_REWARD_SRC_NORMAL = 1
    FISH_REWARD_SRC_GET_MISSED = 2
    FISH_REWARD_SRC_ASSIST = 3
    FISH_REWARD_SRC_LIKE = 4


class FlopActivityCardState(betterproto.Enum):
    FLOP_ACTIVITY_CARD_STATE_NOT_FLOP = 0
    FLOP_ACTIVITY_CARD_STATE_FLOP = 1
    FLOP_ACTIVITY_CARD_STATE_REWARD_UNLOCK = 2


class FlopActivityRewardState(betterproto.Enum):
    FLOP_ACTIVITY_REWARD_STATE_LOCK = 0
    FLOP_ACTIVITY_REWARD_STATE_UNLOCK = 1
    FLOP_ACTIVITY_REWARD_STATE_HAS_GOT = 2


class FrameTimeType(betterproto.Enum):
    FRAME_TIME_FOREVER = 0
    FRAME_TIME_LIMIT = 1


class FurnitureDirection(betterproto.Enum):
    FURNITURE_DIRECTION_DOWN = 0
    FURNITURE_DIRECTION_LEFT = 1
    FURNITURE_DIRECTION_UP = 2
    FURNITURE_DIRECTION_RIGHT = 3


class FurnitureLocation(betterproto.Enum):
    FURNITURE_LOCATION_FLOOR = 0
    FURNITURE_LOCATION_WALL1 = 1
    FURNITURE_LOCATION_WALL2 = 2
    FURNITURE_LOCATION_WALL3 = 3
    FURNITURE_LOCATION_WALL4 = 4


class GachaType(betterproto.Enum):
    GACHA_HCOIN = 2
    GACHA_SPECIAL_HCOIN = 3
    GACHA_ACTIVITY_1 = 4
    GACHA_CUSTOM_AVATAR = 5
    GACHA_ACTIVITY_2 = 6
    GACHA_CUSTOM_EQUIP = 7
    GACHA_BOX_1 = 8
    GACHA_UNIQUE = 9
    GACHA_EQUIP_HCOIN = 10
    GACHA_PRAY = 11
    GACHA_SPECIAL_2 = 12
    GACHA_CONTROLLABLE_BOX = 14
    GACHA_ACTIVITY_3 = 15
    GACHA_BOX_2 = 16
    GACHA_BOX_3 = 17
    GACHA_OPTIONAL_AVATAR = 18
    GACHA_OPTIONAL_EQUIP = 19
    GACHA_ADVENTURE = 20
    GACHA_BOX_4 = 21
    GACHA_BOX_5 = 22
    GACHA_ADVENTURE_EQUIP = 23
    GACHA_BOX_6 = 24
    GACHA_SP_EQUIP = 25
    GACHA_ELF_1 = 26
    GACHA_ACTIVITY_4 = 27
    GACHA_ACTIVITY_5 = 28
    GACHA_ACTIVITY_6 = 29
    GACHA_SPECIAL_3 = 30
    GACHA_ADVENTURE_NEWBIE_1 = 31
    GACHA_ADVENTURE_NEWBIE_2 = 32
    GACHA_SPECIAL_NEWBIE_1 = 33
    GACHA_SPECIAL_NEWBIE_2 = 34
    GACHA_BOX_7 = 35
    GACHA_SPECIAL_NEWBIE_3 = 36
    GACHA_SPECIAL_NEWBIE_4 = 37
    GACHA_CUSTOM_AVATAR_GOBACK = 38
    GACHA_EQUIP_GOBACK = 39
    GACHA_SPECIAL_NEWBIE_5 = 40
    GACHA_SPECIAL_NEWBIE_6 = 41
    GACHA_SPECIAL_NEWBIE_7 = 42
    GACHA_SPECIAL_NEWBIE_8 = 43
    GACHA_TYPE_ERROR = 100


class GalInteractBubbleType(betterproto.Enum):
    GALINTERACT_BUBBLE_NO = 0
    GALINTERACT_BUBBLE_YES = 1
    GALINTERACT_BUBBLE_PLACEHOLD = 2


class GalInteractTriggerCondition(betterproto.Enum):
    GALINTERACT_CONDITION_DRESS = 1
    GALINTERACT_CONDITION_SHAKE = 2
    GALINTERACT_CONDITION_MAIN_SCREEN = 3
    GALINTERACT_CONDITION_INTERVAL = 4
    GALINTERACT_CONDITION_DATETIME_YMD = 5
    GALINTERACT_CONDITION_DATETIME_MD = 6
    GALINTERACT_CONDITION_WEEKDAY = 7
    GALINTERACT_CONDITION_DAILY_DUTY_POINT = 8
    GALINTERACT_CONDITION_WEEKLY_DUTY_POINT = 9
    GALINTERACT_CONDITION_WEATHER = 10
    GALINTERACT_CONDITION_GACHA = 11
    GALINTERACT_CONDITION_ONLINE_TIME = 12
    GALINTERACT_CONDITION_LOGIN_ITERVAL = 13
    GALINTERACT_CONDITION_MONTH_DAY_INTERVAL = 14
    GALINTERACT_CONDITION_USER_BIRTHDAY = 15
    GALINTERACT_CONDITION_GOODFEEL_LEVEL = 16
    GALINTERACT_CONDITION_AFFINITY_GET_GIFT_LEVEL = 17


class GeneralActivityPreCondType(betterproto.Enum):
    GENERAL_ACTIVITY_PRE_COND_TYPE_NONE = 0
    GENERAL_ACTIVITY_PRE_COND_TYPE_SCORE = 1


class GeneralActivityRankSettleType(betterproto.Enum):
    GENERAL_ACTIVITY_RANK_SETTLE_TYPE_DEFAULT = 0
    GENERAL_ACTIVITY_RANK_SETTLE_TYPE_ACTIVITY = 1


class GeneralActivityRankType(betterproto.Enum):
    GENERAL_ACTIVITY_RANK_TYPE_NONE = 0
    GENERAL_ACTIVITY_RANK_TYPE_ABS = 1
    GENERAL_ACTIVITY_RANK_TYPE_PERCENT = 2


class GeneralActivityScheduledMapSiteType(betterproto.Enum):
    GENERAL_ACTIVITY_SCHEDULED_MAP_SITE_DAILY_RAID = 1
    GENERAL_ACTIVITY_SCHEDULED_MAP_SITE_MINI_SKY_FIRE = 2
    GENERAL_ACTIVITY_SCHEDULED_MAP_SITE_TWO_PLUS_TWO_PVE = 3
    GENERAL_ACTIVITY_SCHEDULED_MAP_SITE_BOSS_RUSH = 4
    GENERAL_ACTIVITY_SCHEDULED_MAP_SITE_CHAPTER_OW = 6


class GeneralActivityScoreRewardType(betterproto.Enum):
    GENERAL_ACTIVITY_SCORE_REWARD_AUTO = 1
    GENERAL_ACTIVITY_SCORE_REWARD_MANUAL = 2


class GeneralActivityStageAvatarBonusType(betterproto.Enum):
    GENERAL_ACTIVITY_STAGE_AVATAR_BONUS_NONE = 0
    GENERAL_ACTIVITY_STAGE_AVATAR_BONUS_ONCE = 1
    GENERAL_ACTIVITY_STAGE_AVATAR_BONUS_ALL = 2


class GeneralActivityStageExchangeType(betterproto.Enum):
    GENERAL_ACTIVITY_EXCHANGE_TYPE_NONE = 0
    GENERAL_ACTIVITY_EXCHANGE_TYPE_TIMES = 1
    GENERAL_ACTIVITY_EXCHANGE_TYPE_RESET = 2


class GeneralActivityTicketRefreshType(betterproto.Enum):
    GENERAL_ACTIVITY_TICKET_REFRESH_NONE = 0
    GENERAL_ACTIVITY_TICKET_REFRESH_DAILY = 1
    GENERAL_ACTIVITY_TICKET_REFRESH_WEEKLY = 2


class GeneralActivityType(betterproto.Enum):
    GENERAL_ACTIVITY_INVALID = 0
    GENERAL_ACTIVITY_MAIN_STORY = 1
    GENERAL_ACTIVITY_EXTRA_STORY = 2
    GENERAL_ACTIVITY_ENDLESS = 3
    GENERAL_ACTIVITY_SEALED = 4
    GENERAL_ACTIVITY_SIN_DEMON_EX = 5
    GENERAL_ACTIVITY_WORLD_BOSS = 6
    GENERAL_ACTIVITY_OPENWORLD_NORMAL = 7
    GENERAL_ACTIVITY_RAID = 8
    GENERAL_ACTIVITY_NORMAL_ACTIVITY = 9
    GENERAL_ACTIVITY_MINUTE_CHALLENGE = 11
    GENERAL_ACTIVITY_SELAED_MODE = 12
    GENERAL_ACTIVITY_ARMADA_MATRIX = 13
    GENERAL_ACTIVITY_DUNGEONS = 15
    GENERAL_ACTIVITY_RECLAIM = 16
    GENERAL_ACTIVITY_OPENWORLD_ACTIVITY_BOSS = 17
    GENERAL_ACTIVITY_OPENWORLD_ACTIVITY_ENDLESS = 18
    GENERAL_ACTIVITY_CAMPAIGN = 19
    GENERAL_ACTIVITY_RPG_TALE = 20
    GENERAL_ACTIVITY_MONOPOLY = 21
    GENERAL_ACTIVITY_GARDEN = 22
    GENERAL_ACTIVITY_SANCTUARY = 23
    GENERAL_ACTIVITY_ELITE_STAGE = 24
    GENERAL_ACTIVITY_OPENWORLD_AVATAR = 26
    GENERAL_ACTIVITY_GOD_WAR = 27
    GENERAL_ACTIVITY_OPENWORLD_CHAPTER = 28
    GENERAL_ACTIVITY_TUTORIAL_ENTRY = 29
    GENERAL_ACTIVITY_OPENWORLD_HUNT_ACTIVITY = 30
    GENERAL_ACTIVITY_UNIVERAL = 99
    GENERAL_ACTIVITY_PUSH_TOWER = 100
    GENERAL_ACTIVITY_TEAM_ASSAULT = 101
    GENERAL_ACTIVITY_STAGE = 102
    GENERAL_ACTIVITY_COUPLE_TOWER = 103
    GENERAL_ACTIVITY_MASTER_PUPIL = 104
    GENERAL_ACTIVITY_TOWER_RAID = 105
    GENERAL_ACTIVITY_TVT = 106
    GENERAL_ACTIVITY_KINGDOM_WAR = 107
    GENERAL_ACTIVITY_QUANTUM_ENDLESS = 108
    GENERAL_ACTIVITY_THEME_WANTED = 109
    GENERAL_ACTIVITY_ENDLESS_SINGLE = 110
    GENERAL_ACTIVITY_SINGLE_RAID = 111
    GENERAL_ACTIVITY_GLOBAL_WAR = 112
    GENERAL_ACTIVITY_GRATUITY = 113
    GENERAL_ACTIVITY_NEWBIE = 114
    GENERAL_ACTIVITY_NINJA = 115
    GENERAL_ACTIVITY_ARMADA_BOSS = 116
    GENERAL_ACTIVITY_OPTIONAL_BUFF = 117
    GENERAL_ACTIVITY_MASSIVE_WAR = 118
    GENERAL_ACTIVITY_CHALLENGE_WAR = 119
    GENERAL_ACTIVITY_CRISIS_MODE = 120
    GENERAL_ACTIVITY_SCHEDULED_MAP_SITE = 121
    GENERAL_ACTIVITY_SLG = 122
    GENERAL_ACTIVITY_BOSS_CHALLENGE = 123
    GENERAL_ACTIVITY_FRONT_ENDLESS = 124


class GeneralStageActivityScoreType(betterproto.Enum):
    GENERAL_ACTIVITY_SCORE_ACCUM = 1
    GENERAL_ACTIVITY_SCORE_TOP = 2
    GENERAL_ACTIVITY_SCORE_SINGLE_TOP = 3
    GENERAL_ACTIVITY_SCORE_MATERIAL_NUM = 4


class GlobalWarIsolatePointStatus(betterproto.Enum):
    GLOBAL_WAR_ISOLATE_POINT_STATUS_NONE = 0
    GLOBAL_WAR_ISOLATE_POINT_STATUS_LOCKED = 1
    GLOBAL_WAR_ISOLATE_POINT_STATUS_ACTIVE = 2
    GLOBAL_WAR_ISOLATE_POINT_STATUS_CLOSE = 3


class GlobalWarPointRankType(betterproto.Enum):
    GLOBAL_WAR_POINT_RANK_NONE = 0
    GLOBAL_WAR_POINT_RANK_CURRENCY = 1
    GLOBAL_WAR_POINT_RANK_SCORE = 2


class GlobalWarPointStatus(betterproto.Enum):
    GLOBAL_WAR_POINT_STATUS_NONE = 0
    GLOBAL_WAR_POINT_STATUS_LOCKED = 1
    GLOBAL_WAR_POINT_STATUS_ACTIVE = 2
    GLOBAL_WAR_POINT_STATUS_CLOSE = 3


class GlobalWarPointType(betterproto.Enum):
    GLOBAL_WAR_POINT_TYPE_NONE = 0
    GLOBAL_WAR_POINT_TYPE_NORMAL = 1
    GLOBAL_WAR_POINT_TYPE_CRITICAL = 2
    GLOBAL_WAR_POINT_TYPE_BOSS = 3


class GlobalWarStageType(betterproto.Enum):
    GLOBAL_WAR_STAGE_FOR_NONE = 0
    GLOBAL_WAR_STAGE_FOR_POINT = 1
    GLOBAL_WAR_STAGE_FOR_ISOLATE_POINT = 2


class GobackLoginRewardType(betterproto.Enum):
    GOBACK_LOGIN_REWARD_COMMON = 1
    GOBACK_LOGIN_REWARD_BONUS = 2


class GobackNewbieLevelSourceType(betterproto.Enum):
    GOBACK_NEWBIE_LEVEL_SOURCE_GOBACK_NEWBIE_LEVEL = 0
    GOBACK_NEWBIE_LEVEL_SOURCE_GOBACK_LEVEL = 1


class GodWarSiteStatus(betterproto.Enum):
    GOD_WAR_SITE_STATUS_INVALID = 0
    GOD_WAR_SITE_STATUS_HIDE = 1
    GOD_WAR_SITE_STATUS_SHOW = 2
    GOD_WAR_SITE_STATUS_UNLOCKED = 3
    GOD_WAR_SITE_STATUS_CLOSED = 4


class GratuityAcceptType(betterproto.Enum):
    GRATUITY_ACCEPT_NONE = 0
    GRATUITY_ACCEPT_FREE = 1
    GRATUITY_ACCEPT_ACTIVITY = 2


class GreedyEndlessFloorType(betterproto.Enum):
    GREEDY_ENDLESS_FLOOR_DEMOTE = 1
    GREEDY_ENDLESS_FLOOR_NORMAL = 2
    GREEDY_ENDLESS_FLOOR_PROMOTE = 3


class HybridSiteType(betterproto.Enum):
    HYBRID_SITE_TYPE_STORE = 0
    HYBRID_SITE_TYPE_CYCLE = 1
    HYBRID_SITE_TYPE_EX = 2
    HYBRID_SITE_TYPE_BOSS = 3
    HYBRID_SITE_TYPE_COLLECTION = 4
    HYBRID_SITE_TYPE_MP = 5
    HYBRID_SITE_TYPE_CHALLENGE = 6
    HYBRID_SITE_TYPE_ZONE_CYCLE = 7
    HYBRID_SITE_TYPE_ZONE_CHALLENGE = 8
    HYBRID_SITE_TYPE_EX_BOSS = 9
    HYBRID_SITE_TYPE_TOWER = 10
    HYBRID_SITE_TYPE_CG = 11


class InviteeActivityType(betterproto.Enum):
    INVITEE_ACTIVITY_TYPE_NONE = 0
    INVITEE_ACTIVITY_TYPE_NEWBIE = 1
    INVITEE_ACTIVITY_TYPE_GOBACK = 2


class InviterActivityType(betterproto.Enum):
    INVITER_ACTIVITY_TYPE_NONE = 0
    INVITER_ACTIVITY_TYPE_NORMAL = 1
    INVITER_ACTIVITY_TYPE_LIMIT_TIME = 2


class IslandEventCondType(betterproto.Enum):
    ISLAND_EVENT_COND_ONE_WEATHER = 1
    ISLAND_EVENT_COND_AVATAR_GOODFEEL = 2
    ISLAND_EVENT_COND_HAS_AVATAR = 3
    ISLAND_EVENT_COND_ROLE_AFFINITY = 4
    ISLAND_EVENT_COND_ALL_AFFINITY = 5
    ISLAND_EVENT_COND_HAS_ONE_EQUIPMENT = 201
    ISLAND_EVENT_COND_AVATAR = 202
    ISLAND_EVENT_COND_FINISH_ONE_EVENT = 203
    ISLAND_EVENT_COND_POS = 204
    ISLAND_EVENT_COND_SITE = 205


class IslandPositionType(betterproto.Enum):
    ISLAND_POSITION_CABIN_POWER = 1
    ISLAND_POSITION_CABIN_ENHANCE_KIANA = 2
    ISLAND_POSITION_CABIN_COLLECT = 3
    ISLAND_POSITION_CABIN_MISC = 4
    ISLAND_POSITION_CABIN_VENTURE = 5
    ISLAND_POSITION_CABIN_ENHANCE_MEI = 6
    ISLAND_POSITION_CABIN_ENHANCE_BRONYA = 7
    ISLAND_POSITION_CABIN_ENHANCE_HIMEKO = 8
    ISLAND_POSITION_CABIN_ENHANCE_THERESA = 9
    ISLAND_POSITION_CABIN_ENHANCE_FUKA = 10
    ISLAND_POSITION_NULL = 21
    ISLAND_POSITION_MAIN = 22


class IslandVentureDispatchCond(betterproto.Enum):
    ISLAND_VENTURE_AVATAR_ID = 1
    ISLAND_VENTURE_AVATAR_EACH_LEVEL = 2
    ISLAND_VENTURE_AVATAR_ONE_LEVEL = 3
    ISLAND_VENTURE_AVATAR_TOTAL_LEVEL = 4
    ISLAND_VENTURE_AVATAR_EACH_STAR = 5
    ISLAND_VENTURE_AVATAR_ONE_STAR = 6
    ISLAND_VENTURE_AVATAR_NUM = 7
    ISLAND_VENTURE_AVATAR_ATTR_NUM = 8
    ISLAND_VENTURE_AVATAR_CLASS_NUM = 9
    ISLAND_VENTURE_AVATAR_ATTR_NOT_SAME = 10
    ISLAND_VENTURE_AVATAR_CLASS_NOT_SAME = 11


class IslandVisitRecordType(betterproto.Enum):
    ISLAND_RECORD_HELP_FRIEND = 1
    ISLAND_RECORD_BE_HELPED = 2
    ISLAND_RECORD_LIKE = 3
    ISLAND_RECORD_BE_LIKED = 4


class JiguangTagType(betterproto.Enum):
    TAG_NONE = 0
    TAG_PLAYER_LEVEL = 1
    TAG_VIP_LEVEL = 2
    TAG_BATTLE_PASS = 3
    TAG_GACHA = 4


class KingdomWarCombatType(betterproto.Enum):
    KINGDOM_WAR_COMBAT_TYPE_NONE = 0
    KINGDOM_WAR_COMBAT_TYPE_VIP_POINT = 1
    KINGDOM_WAR_COMBAT_TYPE_LEVEL = 2
    KINGDOM_WAR_COMBAT_TYPE_AVATAR_STAR = 3


class KingdomWarKingdomStatus(betterproto.Enum):
    KINGDOM_WAR_KINGDOM_NONE = 0
    KINGDOM_WAR_KINGDOM_DEFENSE = 1
    KINGDOM_WAR_KINGDOM_ATTACK = 2


class KingdomWarPhaseSettleType(betterproto.Enum):
    KINGDOM_WAR_PHASE_SETTLE_TYPE_NONE = 0
    KINGDOM_WAR_PHASE_SETTLE_TYPE_FAME = 1
    KINGDOM_WAR_PHASE_SETTLE_TYPE_BELIEF = 2


class KingdomWarPhaseType(betterproto.Enum):
    KINGDOM_WAR_PHASE_NONE = 0
    KINGDOM_WAR_PHASE_OCCUPY_POINT = 1
    KINGDOM_WAR_PHASE_ATTACK_AND_DEFENSE = 2
    KINGDOM_WAR_PHASE_BATTLE_LINE = 3


class KingdomWarPointType(betterproto.Enum):
    KINGDOM_WAR_POINT_NONE = 0
    KINGDOM_WAR_POINT_NORMAL = 1
    KINGDOM_WAR_POINT_CHATWORLD = 2
    KINGDOM_WAR_POINT_MAIN_CITY = 3
    KINGDOM_WAR_POINT_BOSS = 4


class LinearMissionSolveType(betterproto.Enum):
    LINEAR_MISSION_SOLVE_CLOSE = 0
    LINEAR_MISSION_SOLVE_RESERVE = 1
    LINEAR_MISSION_SOLVE_AUTO = 2


class LobbyClientStatus(betterproto.Enum):
    LOBBY_CLIENT_NONE = 0
    LOBBY_CLIENT_CHOOSING_AVATAR = 1
    LOBBY_CLIENT_CHOOSING_WEAPON = 2
    LOBBY_CLIENT_CHOOSING_STIGMATA = 3


class LobbyEnterType(betterproto.Enum):
    LOBBY_ENTER_TYPE_NONE = 0
    LOBBY_ENTER_TYPE_PRIVATE = 1
    LOBBY_ENTER_TYPE_ENTER = 2
    LOBBY_ENTER_TYPE_FAST = 3


class LobbyMemberStatus(betterproto.Enum):
    LOBBY_MEMBER_UNREADY = 1
    LOBBY_MEMBER_READY = 2
    LOBBY_MEMBER_FIGHTING = 3


class LobbyStatus(betterproto.Enum):
    LOBBY_NONE = 0
    LOBBY_PREPARING = 1
    LOBBY_CONNECTING = 2
    LOBBY_FIGHTING = 3
    LOBBY_FINISHING = 4
    LOBBY_WAIT_DESTROY = 5


class LoginActivityRewardType(betterproto.Enum):
    LOGIN_ACTIVITY_REWARD_NORMAL = 0
    LOGIN_ACTIVITY_REWARD_BONUS = 1


class LoginRewardActivityType(betterproto.Enum):
    LOGIN_REWARD_ACTIVITY_NONE = 0
    LOGIN_REWARD_ACTIVITY_NORMAL = 1
    LOGIN_REWARD_ACTIVITY_NEWBIE = 2


class LoginRewardTriggerType(betterproto.Enum):
    LOGIN_REWARD_TRIGGER_TYPE_NONE = 0
    LOGIN_REWARD_TRIGGER_TYPE_ONCE = 1
    LOGIN_REWARD_TRIGGER_TYPE_ALWAYS = 2


class LotteryRewardType(betterproto.Enum):
    LOTTERY_REWARD_TYPE_INVALID = 0
    LOTTERY_REWARD_TYPE_FIRST_REWARD = 1
    LOTTERY_REWARD_TYPE_SECOND_REWARD = 2
    LOTTERY_REWARD_TYPE_THIRD_REWARD = 3


class MailType(betterproto.Enum):
    MAIL_INNER = 1
    MAIL_OUTER = 2
    MAIL_NOTICE = 3


class MassiveWarBattleStatus(betterproto.Enum):
    MASSIVE_WAR_BATTLE_STATUS_NONE = 0
    MASSIVE_WAR_BATTLE_STATUS_PREPARE = 1
    MASSIVE_WAR_BATTLE_STATUS_FIGHTING = 2
    MASSIVE_WAR_BATTLE_STATUS_WAIT_SETTLE = 3
    MASSIVE_WAR_BATTLE_STATUS_CLOSE = 4
    MASSIVE_WAR_BATTLE_STATUS_DELETE = 5


class MassiveWarFieldActionType(betterproto.Enum):
    MASSIVE_WAR_FIELD_ACTION_NONE = 0
    MASSIVE_WAR_FIELD_ACTION_JOIN = 1
    MASSIVE_WAR_FIELD_ACTION_LEAVE = 2


class MasterPupilEventType(betterproto.Enum):
    MASTER_PUPIL_EVENT_GET_PUPIL = 1
    MASTER_PUPIL_EVENT_GET_MASTER = 2
    MASTER_PUPIL_EVENT_PUPIL_ONLINE = 3
    MASTER_PUPIL_EVENT_MASTER_ONLINE = 4
    MASTER_PUPIL_EVENT_PUPIL_OFFLINE = 5
    MASTER_PUPIL_EVENT_MASTER_OFFLINE = 6
    MASTER_PUPIL_EVENT_FINISH_MISSION = 7
    MASTER_PUPIL_EVENT_STEP_EVAL = 8
    MASTER_PUPIL_EVENT_PUPIL_GRADUATED = 9
    MASTER_PUPIL_EVENT_SELF_MISSION = 10
    MASTER_PUPIL_EVENT_APPLY_PUPIL = 11
    MASTER_PUPIL_EVENT_APPLY_MASTER = 12
    MASTER_PUPIL_EVENT_REJECT_MASTER = 13
    MASTER_PUPIL_EVENT_REJECT_PUPIL = 14
    MASTER_PUPIL_EVENT_AGREE_MASTER = 15
    MASTER_PUPIL_EVENT_AGREE_PUPIL = 16
    MASTER_PUPIL_EVENT_DISMISS_MASTER = 17
    MASTER_PUPIL_EVENT_DISMISS_PUPIL = 18
    MASTER_PUPIL_EVENT_COMPANY_MISSION = 19
    MASTER_PUPIL_EVNET_RECALL_APPLICATION = 20


class MasterPupilOpType(betterproto.Enum):
    MASTER_PUPIL_OP_NONE = 0
    MASTER_PUPIL_OP_AGREE = 1
    MASTER_PUPIL_OP_REJECT = 2
    MASTER_PUPIL_OP_DISMISS = 3


class MasterPupilStatus(betterproto.Enum):
    MASTER_PUPIL_STATUS_NONE = 0
    MASTER_PUPIL_STATUS_DURING = 1
    MASTER_PUPIL_STATUS_FINISH = 2
    MASTER_PUPIL_STATUS_DISMISS = 3


class MasterPupilType(betterproto.Enum):
    MASTER_PUPIL_NONE_TYPE = 0
    MASTER_PUPIL_MASTER_TYPE = 1
    MASTER_PUPIL_PUPIL_TYPE = 2
    MASTER_PUPIL_NEITHER_ALL = 4


class MaterialUseType(betterproto.Enum):
    MATERIAL_USE_GIFT = 1
    MATERIAL_USE_TREASURE = 2
    MATERIAL_USE_RAND_GIFT = 3
    MATERIAL_USE_BUFF = 4
    MATERIAL_USE_EXTRA_STORY = 5
    MATERIAL_USE_TRIAL_AVATAR = 6
    MATERIAL_USE_MATRIX_EXPLORE_POWER = 7
    MATERIAL_USE_AUTO_GIFT = 10
    MATERIAL_USE_OPTIONAL_REWARD = 11
    MATERIAL_USE_RAND_REWARD = 12
    MATERIAL_USE_RAND_AVATAR = 13
    MATERIAL_USE_ARMADA_WAR_ENERGE_ITEM = 14
    MATERIAL_USE_RAND_GIFT_RESTRICT = 15
    MATERIAL_USE_ARMADA_REUNION = 17
    MATERIAL_USE_ULTRA_ENDLESS_BUFFER_CUP = 20
    MATERIAL_USE_BATTLE_PASS_TICKET = 24
    MATERIAL_USE_AVATAR_FRAGMENT_TRANSFORM = 25
    MATERIAL_USE_BAODI_TREASURE = 27
    MATERIAL_USE_PRIVILEGE = 28
    MATERIAL_USE_OPENWORLD_AVATAR_ACTIVITY_EXP = 29
    MATERIAL_USE_CONVERT_EQUIPMENT = 30
    MATERIAL_USE_AUTO_NEW_GIFT = 31
    MATERIAL_USE_GOD_WAR_AVATAR = 32
    MATERIAL_USE_GOD_WAR_SUPPORT_AVATAR = 33
    MATERIAL_USE_RANCH_MONSTER = 34
    MATERIAL_USE_OPENWORLD_CHAPTER_EQUIP_COST = 36
    MATERIAL_USE_OPENWORLD_CHAPTER_EQUIP_BUFF = 37
    MATERIAL_USE_SC_DLC_FEVER_SLOT = 38
    MATERIAL_USE_SC_DLC_AVATAR = 39
    MATERIAL_USE_OPENWORLD_CHAPTER_FAME = 40
    MATERIAL_USE_REWARD_LINE_SCORE = 41
    MATERIAL_USE_GOD_WAR_GAIN_COIN = 42
    MATERIAL_USE_OPENWORLD_CHAPTER_HERO = 43
    MATERIAL_USE_OPENWORLD_CHAPTER_HERO_CARD = 44
    MATERIAL_USE_MONSTER_CARD = 45
    MATERIAL_USE_MONSTER_CARD_NO_OVERFLOW = 46
    MATERIAL_USE_MONSTER_CARD_DROP_NUM_LIMITED = 47
    MATERIAL_USE_PVZ_ADD_SPECIAL_MATERIAL = 48


class MatrixEventPlotRequirementType(betterproto.Enum):
    MATRIX_EVENT_PLOT_REQUIREMENT_INVALID = 0
    MATRIX_EVENT_PLOT_REQUIREMENT_MATERIAL = 1
    MATRIX_EVENT_PLOT_REQUIREMENT_MISSION = 2
    MATRIX_EVENT_PLOT_REQUIREMENT_DIALOG = 3
    MATRIX_EVENT_PLOT_REQUIREMENT_FLOOR_EVENT = 4


class MatrixEventType(betterproto.Enum):
    MATRIX_EVENT_INVALID = 0
    MATRIX_EVENT_FINISH = 1
    MATRIX_EVENT_CANCEL = 2
    MATRIX_EVENT_LINK = 3
    MATRIX_EVENT_COMPLEX = 4
    MATRIX_EVENT_MOVE = 5
    MATRIX_EVENT_LOTTERY = 6
    MATRIX_EVENT_BUFF = 7
    MATRIX_EVENT_GUESS = 8
    MATRIX_EVENT_FORWARD = 9
    MATRIX_EVENT_RESET_FLOOR = 10
    MATRIX_EVENT_PLOT = 11
    MATRIX_EVENT_STAGE = 12
    MATRIX_EVENT_ITEM_DROP = 13
    MATRIX_EVENT_ITEM_REWARD = 14
    MATRIX_EVENT_TIPS = 15
    MATRIX_EVENT_SUB_RPG_MATERIAL = 16
    MATRIX_EVENT_RANDOM_PLOT_ONCE = 17
    MATRIX_EVENT_RANDOM_STAGE_ONCE = 18
    MATRIX_EVENT_RANDOM_AREA_ONCE = 19
    MATRIX_EVENT_TRIGGER_EVENT_GROUP = 21
    MATRIX_EVENT_PASS_RPG_TALE_SITE = 101
    MATRIX_EVENT_UNLOCK_RPG_TALE_ROLE = 102
    MATRIX_EVENT_AWAY_RPG_TALE_ROLE = 103
    MATRIX_EVENT_ADD_RPG_TALE_MISSION = 104
    MATRIX_EVENT_ADD_RPG_TALE_PHOTO = 105
    MATRIX_EVENT_ADD_RPG_OVERALL = 106
    MATRIX_EVENT_DEL_RPG_OVERALL = 107
    MATRIX_EVENT_SET_RPG_OVERALL = 108
    MATRIX_EVENT_DISCARD_RPG_TALE_SITE = 109
    MATRIX_EVENT_NOTIFY = 110
    MATRIX_EVENT_MATRIX_FLOOR = 111
    MATRIX_EVENT_MONOPOLY = 112
    MATRIX_EVENT_RPG_DUNGEON = 113
    MATRIX_EVENT_RPG_DUNGEON_BUFF = 114
    MATRIX_EVENT_ROGUE_TOWER_HP_HEAL = 115
    MATRIX_EVENT_ROGUE_TOWER_HP_HEAL_NO_EXTRA = 116
    MATRIX_EVENT_ROGUE_TOWER_ADD_COIN = 117
    MATRIX_EVENT_ROGUE_TOWER_SUB_COIN = 118
    MATRIX_EVENT_ROGUE_TOWER_GET_RANDOM_BUFF = 119
    MATRIX_EVENT_ROGUE_TOWER_LEVEL_UP_RANDOM_BUFF = 120
    MATRIX_EVENT_ROGUE_TOWER_HP_COST = 121
    MATRIX_EVENT_ROGUE_TOWER_SUPPORT_LEVELUP_TIMES = 122
    MATRIX_EVENT_RANCH_UNLOCK_AREA = 123
    MATRIX_EVENT_RANCH_STAGE = 124
    MATRIX_EVENT_TOWN = 125
    MATRIX_EVENT_DICEY_DUNGEON = 126
    MATRIX_EVENT_PVZ_ADD_QAVATAR = 127
    MATRIX_EVENT_CLIENT = 200
    MATRIX_EVENT_TILE_MARK = 201
    MATRIX_EVENT_SET_STAGE_SCORE = 302


class MatrixFingerType(betterproto.Enum):
    MATRIX_FINGER_NONE = 0
    MATRIX_FINGER_SCISSORS = 1
    MATRIX_FINGER_STONE = 2
    MATRIX_FINGER_CLOTH = 3


class MatrixFloorStatus(betterproto.Enum):
    MATRIX_FLOOR_STATUS_INVALID = 0
    MATRIX_FLOOR_STATUS_LOCKED = 1
    MATRIX_FLOOR_STATUS_UNLOCKED = 2
    MATRIX_FLOOR_STATUS_FREE = 3
    MATRIX_FLOOR_STATUS_IN_STAGE = 11
    MATRIX_FLOOR_STATUS_IN_PLOT = 12


class MatrixFloorType(betterproto.Enum):
    MATRIX_FLOOR_INVALID = 0
    MATRIX_FLOOR_NORMAL = 1
    MATRIX_FLOOR_EXPLORE = 2
    MATRIX_FLOOR_MONOPOLY = 3


class MatrixGridType(betterproto.Enum):
    MATRIX_GRID_NONE = 0
    MATRIX_GRID_EMPTY = 1
    MATRIX_GRID_BARRIER = 2
    MATRIX_GRID_START = 3
    MATRIX_GRID_ITEM = 4
    MATRIX_GRID_MONSTER = 5
    MATRIX_GRID_RANDOM = 6
    MATRIX_GRID_TRAP = 7
    MATRIX_GRID_SHOP = 8
    MATRIX_GRID_EXIT = 9
    MATRIX_GRID_DIALOG = 10
    MATRIX_GRID_TELEPORT = 11
    MATRIX_GRID_ICE = 12
    MATRIX_GRID_INVALID = -1


class MatrixMonopolyBuffType(betterproto.Enum):
    MATRIX_MONOPOLY_BUFF_NONE = 0
    MATRIX_MONOPOLY_BUFF_DICE = 1
    MATRIX_MONOPOLY_BUFF_STAGE = 2
    MATRIX_MONOPOLY_BUFF_DROP = 3


class MatrixTriggerType(betterproto.Enum):
    MATRIX_TRIGGER_NONE = 0
    MATRIX_TRIGGER_STEP_NUM_GE = 1
    MATRIX_TRIGGER_POSITION = 2
    MATRIX_TRIGGER_STEP_NUM_LE = 3


class MechaSlot(betterproto.Enum):
    MECHA_SLOT_NONE = 0
    MECHA_SLOT_LEFT_1 = 1
    MECHA_SLOT_LEFT_2 = 2
    MECHA_SLOT_CENTER = 3
    MECHA_SLOT_RIGHT_2 = 4
    MECHA_SLOT_RIGHT_1 = 5


class MedalOpType(betterproto.Enum):
    MEDAL_WEAR = 1
    MEDAL_OFF = 2


class MedalTimeType(betterproto.Enum):
    MEDAL_TIME_FOREVER = 1
    MEDAL_TIME_DURATION = 2
    MEDAL_TIME_UNTIL = 3


class MiniRankType(betterproto.Enum):
    MINI_RANK_NONE = 0
    MINI_RANK_RPG_STAGE = 1
    MINI_RANK_GENERAL_ACTIVITY_STAGE = 2
    MINI_RANK_CHAPTER_ACTIVITY_STAGE = 3
    MINI_RANK_RPG_SCHEDULE = 4
    MINI_RANK_RANCH_ACTIVITY_STAGE = 5
    MINI_RANK_OPENWORLD_CHAPTER_CHALLENGE = 6


class MissionFinishWay(betterproto.Enum):
    MISSION_FINISH_NONE = 0
    MISSION_AUTO = 1
    MISSION_ANY_STORY_STAGE_NORMAL = 2
    MISSION_ANY_STORY_STAGE_HARD = 3
    MISSION_ANY_STORY_STAGE_HELL = 4
    MISSION_SPECIFIC_STAGE_ID = 5
    MISSION_SPECIFIC_MONSTER_ID = 6
    MISSION_SPECIFIC_UNIQUE_MONSTER_ID = 7
    MISSION_KILL_ANY_ENEMY = 8
    MISSION_KILL_SPECIFIC_MONSTER_CATEGORY = 9
    MISSION_TRIGGER_ABILITY_ACTION = 10
    MISSION_KILL_WITH_ANIM_EVENT_ID = 11
    MISSION_AVATAR_LEVEL_UP_BY_MATERIAL = 12
    MISSION_AVATAR_SUB_SKILL_LEVEL_UP = 13
    MISSION_GACHA = 14
    MISSION_EQUIPMENT_POWER_UP = 15
    MISSION_STAGE_SUCC_WITH_FRIEND = 16
    MISSION_COST_STAMINA = 17
    MISSION_STAGE_NORMAL_WITH_SPECIFIC_AVATAR_CLASS = 18
    MISSION_STAGE_HARD_WITH_SPECIFIC_AVATAR_CLASS = 19
    MISSION_ANY_WEEK_DAY_STAGE = 20
    MISSION_ANY_BEFALL_STAGE = 21
    MISSION_ANY_NOT_STORY_STAGE = 22
    MISSION_KILL_BY_ATTACK_CATEGORY_TAG = 23
    MISSION_AVATAR_STAR = 24
    MISSION_AVATAR_SUB_SKILL_LEVEL = 25
    MISSION_AVATAR_LEVEL = 26
    MISSION_STAGE_HELL_WITH_SPECIFIC_AVATAR_CLASS = 27
    MISSION_STAGE_NORMAL_WITH_SPECIFIC_AVATAR = 28
    MISSION_STAGE_HARD_WITH_SPECIFIC_AVATAR = 29
    MISSION_STAGE_HELL_WITH_SPECIFIC_AVATAR = 30
    MISSION_STORY_STAGE_FAIL_NUM = 31
    MISSION_STAGE_MAX_COMBO_NUM = 32
    MISSION_STORY_STAGE_NORMAL_NUM = 33
    MISSION_STORY_STAGE_HARD_NUM = 34
    MISSION_STORY_STAGE_HELL_NUM = 35
    MISSION_FINISH_NO_ACHIEVEMENT_NUM = 36
    MISSION_TOTAL_AVATAR_SKILL_POINT_NUM = 37
    MISSION_AVATAR_STAR_NUM = 38
    MISSION_AVATAR_GOODFEEL_LEVEL_NUM = 39
    MISSION_WEAPON_PICTORIAL_NUM = 40
    MISSION_STIGMATA_PICTORIAL_NUM = 41
    MISSION_STIGMATA_PICTORIAL_SUIT_NUM = 42
    MISSION_TEN_HCOIN_GACHA_STAR_NUM = 43
    MISSION_FRIEND_POINT_NUM = 44
    MISSION_STAGE_MIN_TIME_TEN_SECOND = 45
    MISSION_STAGE_ASSISTANT_NUM = 46
    MISSION_STAGE_SUCC_NUM = 47
    MISSION_STAGE_WITH_ASSISTANT_SUCC_NUM = 48
    MISSION_WEAPON_POWER_UP = 49
    MISSION_STIGMATA_POWER_UP = 50
    MISSION_STAGE_TAG_NUM = 51
    MISSION_ISLAND_COLLECT = 52
    MISSION_ISLAND_GET_VENTURE_REWARD = 53
    MISSION_AVATAR_TOUCH_NUM = 54
    MISSION_EQUIPMENT_POWER_UP_TWO_RATE = 55
    MISSION_SCOIN_EXCHANGE_TEN_RATE = 56
    MISSION_ISLAND_MAX_COST_POWER = 57
    MISSION_ISLAND_VENTURE_TOTAL_COST_HOUR = 58
    MISSION_TOTAL_COST_STAMINA = 59
    MISSION_STAGE_MAX_SCORE_WITH_STAGE_ID = 60
    MISSION_STAGE_TOTAL_SCORE_WITH_STAGE_ID = 61
    MISSION_STAGE_MAX_SCORE_WITH_STAGE_TAG = 62
    MISSION_STAGE_TOTAL_SCORE_WITH_STAGE_TAG = 63
    MISSION_AVATAR_ADD_SUB_SKILL = 64
    MISSION_MULTI_WEAPON_POWER_UP_LEVEL = 65
    MISSION_MULTI_STIGMATA_POWER_UP_LEVEL = 66
    MISSION_ISLAND_CABIN_LEVEL_UP = 67
    MISSION_ISLAND_CABIN_EXTEND_GRADE = 68
    MISSION_ISLAND_ADD_TECH = 69
    MISSION_GACHA_WITH_TYPE = 70
    MISSION_EXTRASTORY_CHALLENGE_NUM = 71
    MISSION_EXTRASTORY_STAGE_MAX_SCORE = 72
    MISSION_REAL_NAME = 73
    MISSION_ENDLESS_GROUP_LEVEL = 75
    MISSION_SHARE_GAME_IN_SNS = 80
    MISSION_COLLECT = 81
    MISSION_ACTIVITY_PROGRESS = 82
    MISSION_BUY_GOODS_WITH_SCOIN_OR_HCOIN = 83
    MISSION_SCOIN_EXCHANGE = 84
    MISSION_STAMINA_EXCHANGE = 85
    MISSION_CONSIGNED_ORDER = 86
    MISSION_ROGUE_STAGE = 87
    MISSION_STAGE_MAX_COMBO_PASS = 88
    MISSION_OPENWORLD_FINISH_EVENT_TYPE = 90
    MISSION_OPENWORLD_FIGHT_BOSS = 91
    MISSION_OPENWORLD_KILL_BOSS = 92
    MISSION_OPENWORLD_BOSS_DAMAGE = 93
    MISSION_OPENWORLD_QUEST_LEVEL = 94
    MISSION_OPENWORLD_FINISH_QUEST_NUM = 95
    MISSION_OPENWORLD_FINISH_SIDE_QUEST_NUM = 96
    MISSION_OPENWORLD_PERFECT_REWARD_NUM = 97
    MISSION_EQUIPMENT_POWER_UP_NO_BACKTRACK = 98
    MISSION_JOIN_ARMADA = 99
    MISSION_FIGHT_ARMADA_STAGE = 100
    MISSION_OPENWORLD_FINISH_QUEST_NO_BACKTRACK = 101
    MISSION_OPENWORLD_REWARD_NUM = 102
    MISSION_WAREHOUSE_DONATE = 103
    MISSION_OPENWORLD_FINISH_STORY = 104
    MISSION_STORY_STAGE_WITH_AVATAR_NUM = 105
    MISSION_EQUIPMENT_EVO = 107
    MISSION_USE_AVATAR_KILL_MONSTER = 108
    MISSION_AVATAR_MAX_LEVEL = 109
    MISSION_AVATAR_MAX_SUB_SKILL_LEVEL = 110
    MISSION_WEAPON_TYPE_MAX_LEVEL = 111
    MISSION_HELP_FRIEND_ISLAND = 112
    MISSION_STAGE_MIN_BE_HIT_PASS = 113
    MISSION_STAGE_COSMOS_BREAK = 114
    MISSION_STAGE_COSMOS_BREAK_DAMAGE = 115
    MISSION_STAGE_USE_EX_SKILL = 116
    MISSION_REFINE_STIGMATA = 117
    MISSION_DISJOIN_EQUIPMENT = 118
    MISSION_FINISH_MP_STAGE_WITH_TYPE = 119
    MISSION_USE_MP_TEAM_SKILL = 120
    MISSION_USE_MP_QTE_SKILL = 121
    MISSION_OPENWORLD_FINISH_EVENT_TYPE_NO_BACKTRACK = 122
    MISSION_MIN_BE_HIT_PASS_WITH_STAGE_ID = 123
    MISSION_FINISH_MP_STAGE = 124
    MISSION_BIND_ACCOUNT = 125
    MISSION_STAGE_DEFEND_TARGET_MIN_HP_PASS = 126
    MISSION_STAGE_DEFEND_TARGET_MIN_HP_PERCENT_PASS = 127
    MISSION_EXTRASTORY_HAS_PASS_NUM_WITH_DIFFICULTY = 128
    MISSION_EXTRASTORY_HAS_PASS_NUM = 129
    MISSION_CLEAN_STAGE_NUM = 130
    MISSION_GET_CARD_REWARD_NUM = 131
    MISSION_TOTAL_COST_SCOIN_NUM = 132
    MISSION_TOTAL_COST_SCOIN_NUM_BACKTRACK = 133
    MISSION_TOTAL_COST_HCOIN_NUM = 134
    MISSION_TOTAL_COST_HCOIN_NUM_BACKTRACK = 135
    MISSION_MP_MVP_NUM = 136
    MISSION_MP_MVP_NUM_BACKTRACK = 137
    MISSION_GET_MP_LIKE_NUM = 138
    MISSION_GET_MP_LIKE_NUM_BACKTRACK = 139
    MISSION_FINISH_MP_STAGE_WITH_TYPE_BACKTRACK = 140
    MISSION_FINISH_MP_STAGE_BACKTRACK = 141
    MISSION_MP_LEVEL = 143
    MISSION_STAGE_TOTAL_MAX_SCORE_WITH_STAGE_TAG = 144
    MISSION_FACEBOOK_LIKE = 145
    MISSION_STAGE_MIN_TIME_WITH_STAGE_ID = 146
    MISSION_STAGE_TAG_COMBO_PASS = 147
    MISSION_STAGE_TAG_WITH_SPECIFIC_AVATAR = 148
    MISSION_AVATAR_DRESSED_EQUIPMENTS = 149
    MISSION_DRESSED_ANY_BEFALL_WEAPON = 150
    MISSION_POWERUP_MULTI_SPECIFIC_EQUIP_LEVEL = 151
    MISSION_EVO_MULTI_SPECIFIC_EQUIP_STAR = 152
    MISSION_EVO_ANY_BEFALL_WEAPON_STAR = 153
    MISSION_FRAGMENTS_EXCHANGE_STIGMATA = 154
    MISSION_GET_NEWBIE_TRAIN_REWARD = 155
    MISSION_STAGE_TAG_SUCCESS_EVADE_PASS = 156
    MISSION_CHALLENGE_SPECIFIC_STAGE_ID = 157
    MISSION_POWERUP_MULTI_SPECIFIC_EQUIP_BACKTRACK = 158
    MISSION_EVO_MULTI_SPECIFIC_EQUIP_BACKTRACK = 159
    MISSION_FINISH_EXBOSS_NUM = 160
    MISSION_FINISH_EXBOSS_NUM_BACKTRACK = 161
    MISSION_WIN_LEVEL_EXBOSS = 162
    MISSION_GET_EXBOSS_RANK = 163
    MISSION_OPENWORLD_TECH_LEVEL = 164
    MISSION_BIND_MOBILE = 165
    MISSION_BIND_EMAIL = 166
    MISSION_SET_ACCOUNT_USERNAME = 167
    MISSION_UNLOCK_AVATAR = 168
    MISSION_FINISH_SPECIFIC_MISSION = 169
    MISSION_FINISH_SPECIFIED_DIFFICULTY_RAID_WITH_MASTER = 170
    MISSION_FINISH_PLAYER_LEVEL = 171
    MISSION_GET_EXBOSS_SCORE_BACKTRACK = 172
    MISSION_PUPIL_GRADUATED_BACKTRACK = 173
    MISSION_MASTER_HAS_NUM_GRADUATED_PUPIL_BACKTRACK = 174
    MISSION_PUBLISH_MASTER_PUPIL_CARD = 175
    MISSION_FINISH_BE_MASTER_BACKTRACK = 176
    MISSION_RECRUIT_NUM_PUPIL_BACKTRACK = 177
    MISSION_FINISH_BE_PUPIL_BACKTRACK = 178
    MISSION_GET_EXBOSS_RANK_PERCENT = 179
    MISSION_SPECIFIC_STAGE_ID_BACKTRACK = 180
    MISSION_MP_LIKE_NUM = 181
    MISSION_CLICK_LINK = 182
    MISSION_COLLECT_FURNITURE_SUIT = 183
    MISSION_BUY_FURNITURE = 184
    MISSION_COLLECT_SPECIFIC_ITEM = 185
    MISSION_DORM_COMFORT_LEVEL = 186
    MISSION_DORM_COMFORT_VALUE = 187
    MISSION_DORM_FACILITY_LEVEL = 188
    MISSION_DORM_HOUSE_LEVEL = 189
    MISSION_OPENWORLD_QUEST_LEVEL_BACKTRACK = 190
    MISSION_DORM_HOUSE_LEVEL_IN_PARAM = 191
    MISSION_MATERIAL_RECYCLE = 192
    MISSION_OPENWORLD_FINISH_EVENT_SUBTYPE_LIST = 193
    MISSION_OPENWORLD_FINISH_QUEST_SPECIFIC_AVATAR = 194
    MISSION_EXBOSS_STAGE_SPECIFIC_AVATAR = 195
    MISSION_RAID_STAGE_SPECIFIC_AVATAR = 197
    MISSION_ISLAND_VENTURE_SPECIFIC_AVATAR = 198
    MISSION_DORM_EVENT_SPECIFIC_AVATAR = 199
    MISSION_ROGUE_STAGE_SPECIFIC_AVATAR = 200
    MISSION_PASS_STAGE_SPECIFIC_AVATAR = 201
    MISSION_PASS_SPECIFIC_STAGE_SPECIFIC_AVATAR = 202
    MISSION_PASS_STAGE_SPECIFIC_REQUIRE = 203
    MISSION_SEALED_FINISH_NUM_BACKTRACK = 204
    MISSION_SEALED_RANK_LEVEL = 205
    MISSION_DORM_USE_FACILITY_NUM = 206
    MISSION_POWERUP_MULTI_SPECIFIC_EQUIP_MAINID_BACKTRACK = 207
    MISSION_EVO_MULTI_SPECIFIC_EQUIP_MAINID_BACKTRACK = 208
    MISSION_SEALED_FINISH_NUM = 209
    MISSIONG_ROGUE_STAGE_HARD_LEVEL_PROGRESS = 210
    MISSIONG_ROGUE_STAGE_HARD_LEVEL_PROGRESS_BACKTRACK = 211
    MISSION_AVATAR_GOODFEEL_LEVEL_SPECIFIC_AVATAR = 212
    MISSION_COLLECT_SPECIFIC_AMOUNT_ITEMS = 213
    MISSION_USE_SPECIFIC_AVATARS_KILL_MONSTER = 214
    MISSION_WORLD_BOSS_PERSONAL_TECH_LEVEL_UP_NUM = 215
    MISSION_WORLD_BOSS_GLOBAL_TECH_DONATE_NUM = 216
    MISSION_WORLD_BOSS_USE_PERSONAL_TECH_NUM = 217
    MISSION_PASS_STAGE_WITH_EQUIPMENT_MAINID = 218
    MISSION_REACH_DAILY_DUTY_POINT = 219
    MISSION_REACH_DAILY_DUTY_POINT_BACKTRACK = 220
    MISSION_REACH_WEEKLY_DUTY_POINT = 221
    MISSION_REACH_WEEKLY_DUTY_POINT_BACKTRACK = 222
    MISSION_LEVEL_MULTI_EQUIP_MAINID_BACKTRACK = 223
    MISSION_STAR_MULTI_EQUIP_MAINID_BACKTRACK = 224
    MISSION_AVATAR_DRESSED_EQUIPMENTS_MAINID = 225
    MISSION_AVATAR_SUB_SKILL_LEVELUP_PROGRESS = 226
    MISSION_STAGE_TOTAL_BATTLE_SCORE_WITH_STAGE_TAG = 227
    MISSION_STAGE_RANK_WITH_STAGE_TAG = 228
    MISSION_ARMADA_MATRIX_FINISH_FLOOR = 229
    MISSION_ARMADA_MATRIX_FOUND_TREASURE = 230
    MISSION_TEAM_ASSAULT_PROGRESS = 231
    MISSION_TEAM_ASSAULT_ACTIVITY_TOTAL_SCORE = 232
    MISSION_GENERAL_ACTIVITY_FINISH_TIMES = 233
    MISSION_GENERAL_ACTIVITY_SCORE_BACKTRACK = 234
    MISSION_DORM_CLIENT_CUSTOM = 241
    MISSION_OPENWORLD_CHOOSE_QUEST = 242
    MISSION_SHOP_BUY_GOODS = 243
    MISSION_DORM_TAKE_DAILY_STAMINA = 244
    MISSION_OPENWORLD_MAKE_MECHA_TIMES = 253
    MISSION_OPENWORLD_MAKE_MECHA_TIMES_BACKTRACK = 254
    MISSION_OPENWORLD_TECH_ADD_EXP_TIMES = 255
    MISSION_OPENWORLD_QUEST_RATE = 256
    MISSION_OPENWORLD_QUEST_RATE_BACKTRACK = 257
    MISSION_OPENWORLD_QUEST_FINISHED_CHALLENGE_NUM = 258
    MISSION_OPENWORLD_QUEST_FINISHED_WITH_MECHA = 259
    MISSION_OPENWORLD_HACK_ITEM = 260
    MISSION_OPENWORLD_TD_STAGE_RATE = 261
    MISSION_OPENWORLD_TD_STAGE_RATE_BACKTRACK = 262
    MISSION_OPENWORLD_FINISH_EVENT_TYPE_WITH_MAP = 263
    MISSION_OPENWORLD_QUEST_LEVEL_WITH_MAP = 264
    MISSION_OPENWORLD_QUEST_LEVEL_BACKTRACK_WITH_MAP = 265
    MISSION_OPENWORLD_FINISH_QUEST_NUM_WITH_MAP = 266
    MISSION_OPENWORLD_FINISH_QUEST_NO_BACKTRACK_WITH_MAP = 267
    MISSION_OPENWORLD_FINISH_QUEST_NO_BACKTRACK_WITH_SUB_TYPE_AND_MAP = 268
    MISSION_OPENWORLD_FINISH_EVENT_TYPE_NO_BACKTRACK_WITH_MAP = 269
    MISSION_GOBACK_DUTY_POINT = 270
    MISSION_ONLINE_TIME = 272
    MISSION_TAKE_PHOTOS = 273
    MISSION_WIKI_EQUIPMENT_NUM_BY_RARITY = 274
    MISSION_WIKI_STIGMATA_SUIT_NUM_BY_RARITY = 275
    MISSION_WIKI_CG_NUM = 276
    MISSION_WIKI_ACHIEVEMENT_NUM_BY_TYPE = 277
    MISSION_RECLAIM_GACHA_BOX = 282
    MISSION_RECLAIM_LEVEL = 283
    MISSION_ARMADA_WAR_PLAYER_SEASON_STAGE_NUM = 291
    MISSION_ARMADA_WAR_PLAYER_SEASON_BATTLE_NUM = 292
    MISSION_ARMADA_WAR_ARMADA_SEASON_STAGE_NUM = 293
    MISSION_ARMADA_WAR_ARMADA_SEASON_WIN_STRONGHOLD_NUM = 294
    MISSION_ARMADA_WAR_ARMADA_SEASON_WIN_NUM = 295
    MISSION_ARMADA_WAR_ARMADA_GRADE = 296
    MISSION_BINGO_ACTIVITY_FLOP_CARD = 297
    MISSION_BINGO_ACTIVITY_BINGO_COMPLETE = 298
    MISSION_GOBACK_GAIN_EXP = 299
    MISSION_FINISH_MP_STAGE_WITH_GOBACK_PLAYER = 300
    MISSION_OPENWORLD_BOSS_GET_RATING_NUM = 301
    MISSION_OPENWORLD_BOSS_KILLED_NUM_WITHIN_TIME_LIMIT = 302
    MISSION_OPENWORLD_ACTIVITY_LEVEL = 303
    MISSION_OPENWORLD_BOSS_HUNT_FIND_CLUE_NUM = 304
    MISSION_OPENWORLD_BOSS_KILLED_NUM_SPECIFIC_AVATAR = 305
    MISSION_OPENWORLD_BOSS_MP_STAGE_NUM_AS_MP_LEADER = 306
    MISSION_OPENWORLD_BOSS_MP_STAGE_NUM_AS_MP_ASSISTANT = 307
    MISSION_RPG_TALE_ROLE_NUM = 308
    MISSION_RPG_TALE_PASS_SITE = 309
    MISSION_RPG_TALE_OVERALL_EQUAL = 310
    MISSION_RPG_TALE_TOTAL_STAGE_SCORE = 311
    MISSION_MATRIX_FINISH_EVENT = 315
    MISSION_MATRIX_COLLECT_ITEM = 316
    MISSION_VIRTUAL_TRAIN_AVATAR_NUM = 317
    MISSION_VIRTUAL_TRAIN_AVATAR_STAR_NUM = 318
    MISSION_VIRTUAL_TRAIN_GACHA_TIMES = 319
    MISSION_VIRTUAL_TRAIN_GACHA_AVATAR_STAR = 320
    MISSION_RPG_TALE_TAKE_PRODUCT_TIMES = 321
    MISSION_RPG_TALE_TAKE_PRODUCT_NUM = 322
    MISSION_RPG_TALE_TOWER_FLOOR = 323
    MISSION_RPG_TALE_TOWER_TIMES = 324
    MISSION_RPG_TALE_ABILITY_LEVEL_BACKTRACK = 325
    MISSION_FINISH_ANY_RAID_ACTIVITY = 330
    MISSION_FRIEND_INVITE = 331
    MISSION_MASTER_PUPIL_INVITE = 332
    MISSION_ARMADA_APPLY = 333
    MISSION_AVATAR_LEVEL_NUM = 334
    MISSION_ISLAND_CABIN_LEVEL = 335
    MISSION_DORM_ROOM_UNLOCK = 336
    MISSION_SHOPPING_TIMES = 337
    MISSION_COUPLE_TOWER_FINISH_FLOOR = 338
    MISSION_COUPLE_TOWER_ASSISTANT = 339
    MISSION_COUPLE_TOWER_ENTER_TIMES = 340
    MISSION_ADD_UP_VIP_POINT = 341
    MISSION_DORM_USE_FACILITY_NUM_NO_RESULT = 342
    MISSION_FINISH_SPECIFIC_PLOT_ID = 343
    MISSION_OPENWORLD_ENDLESS_SCORE = 344
    MISSION_OPENWORLD_ENDLESS_BOSS = 345
    MISSION_OPENWORLD_ENDLESS_ADD_GROUP_LEVEL = 346
    MISSION_OPENWORLD_ENDLESS_GROUP_LEVEL = 347
    MISSION_OPENWORLD_ENDLESS_FINISH_MONSTER_GROUP = 348
    MISSION_OPENWORLD_ENDLESS_USE_ITEM = 349
    MISSION_ENDLESS_FINISH_STAGE_OR_BOSS_WITH_ENDLESS_TYPE = 350
    MISSION_ENDLESS_FINISH_STAGE_OR_BOSS_SPECIFIC_AVATAR = 351
    MISSION_QUANTUM_ENDLESS_PASS_MONSTER_GROUP = 352
    MISSION_FRONT_ENDLESS_FINISH_FLOOR = 353
    MISSION_EQUIPMENT_POWER_UP_LEVEL_BACKTRACK = 365
    MISSION_FARM_ACTIVITY_SPEED_UP_PRODUCE_TIMES = 366
    MISSION_FARM_ACTIVITY_FINISH_PRODUCE_TIMES = 367
    MISSION_FARM_ACTIVITY_FARM_LEVEL = 368
    MISSION_FARM_ACTIVITY_UNLOCK_SLOT_NUM = 369
    MISSION_FARM_ACTIVITY_FINISH_PRODUCE_SPECIFIC_MATERIAL = 370
    MISSION_TAKE_SPECIFIC_NPC_RED_ENVELOPE_NUM = 372
    MISSION_GACHA_WITH_MULTI_TYPES = 373
    MISSION_TOWER_RAID_NUM = 374
    MISSION_TOWER_RAID_BOSS_NUM = 375
    MISSION_TOWER_RAID_FINISH_ALL_NUM = 376
    MISSION_CHATWORLD_ONLINE_TIME = 377
    MISSION_GOBACK_SCORE = 378
    MISSION_CHATWORLD_USE_ITEM = 379
    MISSION_CAMPAIGN_FINISH_PHASE = 380
    MISSION_CAMPAIGN_FINISH = 381
    MISSION_CAMPAIGN_FINISH_STAGE = 382
    MISSION_AVATAR_ARTIFACT_LEVEL = 383
    MISSION_LEVEL_LOCK_EXP = 384
    MISSION_SET_LEVEL_LOCK_ID = 385
    MISSION_ELF_STAR = 386
    MISSION_ELF_LEVEL = 387
    MISSION_ELF_STAR_NUM = 388
    MISSION_ELF_LEVEL_NUM = 389
    MISSION_STAGE_TAG_NUM_SPECIFIC_ELF = 390
    MISSION_STAGE_NUM_SPECIFIC_ELF = 391
    MISSION_ENDLESS_FINISH_STAGE_OR_BOSS_SPECIFIC_ELF = 392
    MISSION_EXBOSS_STAGE_SPECIFIC_ELF = 393
    MISSION_FINISH_MP_STAGE_SPECIFIC_ELF = 394
    MISSION_STORY_STAGE_SPECIFIC_ELF = 395
    MISSION_ELF_TALENT_LEVEL = 396
    MISSION_ELF_TALENT_GROUP_LEVEL = 397
    MISSION_ELF_TALENT_SLOT_UNLOCK_NUM = 398
    MISSION_ELF_TOTAL_PERIOD_UPGRADE_TIMES = 399
    MISSION_STAGE_NUM_WITH_ELF = 400
    MISSION_ELF_TOTAL_SKILL_LEVEL = 401
    MISSION_CAMPAIGN_SHORT_CHAT = 421
    MISSION_CAMPAIGN_FINISH_SCORE = 422
    MISSION_CAMPAIGN_MVP = 423
    MISSION_CAMPAIGN_TEAM_DRAW_RARITY = 424
    MISSION_CMAPAIGN_SELF_DRAW = 425
    MISSION_CAMPAIGN_LIKE_NUM = 426
    MISSION_CAMPAIGN_TEACH_MODE_FINISH_PHASE = 427
    MISSION_CAMPAIGN_TEACH_MODE_FINISH = 428
    MISSION_PASS_STAGE_WITH_ANY_SPECIFIC_AVATAR = 441
    MISSION_STAGE_TAG_NUM_AS_LEADER_OR_ASSISTANT = 442
    MISSION_KINGDOM_WAR_MOVE_STEP = 443
    MISSION_TVT_STAGE_SETTLE_NUM = 444
    MISSION_TVT_TOTAL_WIN_NUM = 445
    MISSION_TVT_MAX_WIN_STREAK = 446
    MISSION_TVT_MVP_NUM = 447
    MISSION_TVT_DIVISION = 448
    MISSION_TVT_STAGE_SCOIN = 449
    MISSION_CHATWORLD_KILL_NUM = 451
    MISSION_GOBACK_TOTAL_LOGIN_DAYS = 452
    MISSION_ARMADA_MATRIX_USE_ITEM = 453
    MISSION_ARMADA_MATRIX_FIRE_BOSS_ITEM = 454
    MISSION_ARMADA_MATRIX_KILL_MONSTER = 455
    MISSION_STAGE_ACTIVITY_NUM_AS_LEADER_OR_ASSISTANT = 456
    MISSION_CHATWORLD_BATTLE_SCORE = 457
    MISSION_COUPLE_TOWER_KILL_MONSTER = 458
    MISSION_COUPLE_TOWER_KILL_BOSS = 459
    MISSION_COUPLE_TOWER_BUFF_NUM = 460
    MISSION_COUPLE_TOWER_KILL_WAVE = 461
    MISSION_TOTAL_LOGIN_DAYS = 462
    MISSION_GACHA_TOTAL_SCORE = 463
    MISSION_MONOPOLY_THROW_DICE = 464
    MISSION_MONOPOLY_EXPLORE = 465
    MISSION_MONOPOLY_PASS_AREA = 466
    MISSION_MATRIX_FINISH_FLOOR = 467
    MISSION_MATRIX_TRIGGER_EVENT = 468
    MISSION_STAGE_TAG_CHALLENGE_NUM = 469
    MISSION_EQUIPMENT_FORGE_TIMES = 470
    MISSION_GLOBAL_WAR_TOTAL_CURRENCY = 471
    MISSION_GLOBAL_WAR_CURRENCY_BY_STAGE = 472
    MISSION_GLOBAL_WAR_CURRENCY_BY_EXCHANGE = 473
    MISSION_GLOBAL_WAR_EXCHANGE_TIMES = 474
    MISSION_GLOBAL_WAR_FINISH_POINT = 475
    MISSION_GLOBAL_WAR_CURRENCY_BY_SWEEP = 476
    MISSION_GLOBAL_WAR_FINISH_OR_EXCHANGE_TIMES_WITH_POINT_ID_LIST = 477
    MISSION_SHOP_COST_MCOIN_NUM = 480
    MISSION_VIRTUAL_TRAIN_CUSTOM_LEVEL = 481
    MISSION_VIRTUAL_TRAIN_GROUP_TOTAL_LEVEL_UP_TIMES = 482
    MISSION_GRATUITY_STAGE_FINISH_NUM = 483
    MISSION_GRATUITY_STAGE_END_NUM = 484
    MISSION_GRATUITY_STAGE_ASSIST_NUM = 485
    MISSION_GRATUITY_PUBLISH = 486
    MISSION_GRATUITY_INVITE = 487
    MISSION_GRATUITY_COLLECT = 488
    MISSION_SEND_RED_ENVELOPE_IN_SPECIFIC_TIME = 489
    MISSION_ADVENTURE_LEVEL = 490
    MISSION_ADVENTURE_ADD_BADGE = 491
    MISSION_ADVENTURE_ADD_BADGE_BACKTRACK = 492
    MISSION_ADVENTURE_FINISH_ADVENTURE_BY_RARITY = 493
    MISSION_ADVENTURE_FINISH_ADVENTURE = 494
    MISSION_ADVENTURE_TAKE_SCOIN = 495
    MISSION_SCRATCH_TICKET_SCRATCH_NUM = 501
    MISSION_SCRATCH_TICKET_ROUND_NUM = 502
    MISSION_BBQ_COOK_NUM = 503
    MISSION_NINJA_SLOT_LEVEL = 504
    MISSION_DLC_USE_ACTIVE_SKILL = 505
    MISSION_DLC_OUTER_AREA_KILL_NUM = 506
    MISSION_DLC_SHIELD_MONSTER_KILL_NUM = 507
    MISSION_DLC_IN_CIRCLE_KILL_NUM = 508
    MISSION_DLC_AIR_KILL_NUM = 509
    MISSION_DLC_THROW_SKILL_KILL_NUM = 510
    MISSION_DLC_ACTIVE_SKILL_KILL_NUM = 511
    MISSION_DLC_BREAK_FREQUENCY_SHIELD_NUM = 512
    MISSION_DLC_BREAK_HARD_SHIELD_NUM = 513
    MISSION_DLC_EX_JUMP = 514
    MISSION_DLC_USE_THROW_SKILL = 515
    MISSION_DLC_AVATAR_TALENT_TOTAL_LEVEL = 516
    MISSION_DLC_TOWER_MAX_PROGRESS = 517
    MISSION_DLC_TOWER_TOTAL_PROGRESS = 518
    MISSION_DLC_ENTER_STAGE_WITH_SPECIFIC_AVATAR = 519
    MISSION_DLC_SUPPORT_NPC_LEVEL = 520
    MISSION_DLC_TALENT_LEVEL = 521
    MISSION_DLC_LEVEL = 522
    MISSION_DLC_COLLECTION_TYPE_NUM = 523
    MISSION_OPENWORLD_KILL_ENEMY_WITH_MAP = 524
    MISSION_OPENWORLD_FINISH_ONCE_EVENT_BACKTRACK_WITH_MAP = 525
    MISSION_DLC_TOWER_MAX_PROGRESS_NO_BACKTRACK = 526
    MISSION_OPENWORLD_CHOOSE_ANY_QUEST = 527
    MISSION_OPENWORLD_FINISH_SPECIFIC_STORY_NUM_BACKTRACK = 528
    MISSION_CHATWORLD_MAKE_ACTION_NUM = 545
    MISSION_CHATWORLD_FISH_SUCC_OR_WAIT_ASSIST_NUM = 546
    MISSION_CHATWORLD_PRAY_NUM = 547
    MISSION_STAGE_TAG_FAIL_NUM = 548
    MISSION_LOGIN_WITH_SPECAIL_DEVICE_TYPE = 549
    MISSION_UNLOCK_MONTH_CARD_OR_BATTLE_PASS = 550
    MISSION_GACHA_COST_TICKET_TOTAL_SCORE = 551
    MISSION_GARDEN_HARVEST_NUM = 552
    MISSION_GARDEN_HARVEST_KIND = 553
    MISSION_GARDEN_HARVEST_NUM_BY_KIND = 554
    MISSION_JIGSAW_EXCHANGE_PIECE = 555
    MISSION_JIGSAW_FINISH_JIGSAW = 556
    MISSION_OVERLAP_SUMMON_NUM = 557
    MISSION_CHATWORLD_QUESTION = 558
    MISSION_CHATWORLD_DISH_NUM = 559
    MISSION_ARMADA_REUNION_REWARD = 560
    MISSION_ARMADA_REUNION_PREPARE = 561
    MISSION_GARDEN_SPEED_UP_TIMES = 562
    MISSION_MASSIVE_WAR_BATTLE_SETTLE_TIMES = 563
    MISSION_MASSIVE_WAR_RANK_RATIO = 564
    MISSION_MASSIVE_WAR_DAMAGE_LEVEL = 565
    MISSION_MASSIVE_WAR_TOTAL_DAMAGE = 566
    MISSION_MASSIVE_WAR_FINISH_STAGE = 567
    MISSION_KINGDOM_WAR_EXCHANGE = 571
    MISSION_KINGDOM_WAR_EXCHANGE_CURRENCY = 572
    MISSION_KINGDOM_WAR_FINISH_STAGE_CURRENCY = 573
    MISSION_KINGDOM_WAR_CURRENCY = 574
    MISSION_KINGDOM_WAR_ACTIVITY_STAMINA = 575
    MISSION_WEB_ACTIVITY_1 = 581
    MISSION_WEB_ACTIVITY_2 = 582
    MISSION_WEB_ACTIVITY_3 = 583
    MISSION_WEB_ACTIVITY_4 = 584
    MISSION_WEB_ACTIVITY_5 = 585
    MISSION_WEB_ACTIVITY_6 = 586
    MISSION_WEB_ACTIVITY_7 = 587
    MISSION_WEB_ACTIVITY_8 = 588
    MISSION_WEB_ACTIVITY_9 = 589
    MISSION_WEB_ACTIVITY_10 = 590
    MISSION_NORMAL_FINISH_SPECIFIC_STAGE_ID = 591
    MISSION_SHOP_BUY_GOODS_ID_COST_MCOIN = 592
    MISSION_SANCTUARY_ACTIVITY_LEVEL = 593
    MISSION_SANCTUARY_TAKE_PRODUCT_TIMES = 594
    MISSION_SLOT_MACHINE_START_TIMES = 595
    MISSION_EXAMINATION_FINISH_NUM = 596
    MISSION_RAFFLE_DRAW_TICKET_NUM = 597
    MISSION_FINISH_MOSAIC_NUM_BACKTRACK = 598
    MISSION_MONOPOLY_BUILDING_NUM = 599
    MISSION_MONOPOLY_BUILDING_LEVEL = 600
    MISSION_FINISH_MOSAIC_NUM = 601
    MISSION_MONOPOLY_USE_ITEM = 602
    MISSION_ULTRA_ENDLESS_FINISH_SITE = 603
    MISSION_ULTRA_ENDLESS_FINISH_SITE_WITH_TAG_AVATAR = 604
    MISSION_ULTRA_ENDLESS_TOTAL_SCORE = 605
    MISSION_ULTRA_ENDLESS_FINISH_SITE_NUM = 606
    MISSION_ULTRA_ENDLESS_TOTAL_ADD_SCORE = 607
    MISSION_ULTRA_ENDLESS_MAX_GROUP_LEVEL = 608
    MISSION_ULTRA_ENDLESS_SEASON_ADD_CUP_NUM = 609
    MISSION_ULTRA_ENDLESS_TOP_RANK_TIMES = 610
    MISSION_BATTLE_PASS_THEME_LEVEL = 611
    MISSION_BATTLE_PASS_UNLOCK_TICKET = 612
    MISSION_GET_EXBOSS_SCORE = 613
    MISSION_OPENWORLD_QUEST_ACTIVITY_TOTAL_SCORE_BACKTRACK = 614
    MISSION_TOTAL_DUTY_POINT_IN_PERIOD = 615
    MISSION_FINISH_MISSION_TIMES_WITH_MISSION_ID_LIST = 617
    MISSION_GACHA_CONSUME_TOTAL_SCORE = 618
    MISSION_REPLAY_UPLOAD = 619
    MISSION_REPLAY_PLAY = 620
    MISSION_REPLAY_RECORD = 621
    MISSION_FINISH_ELITE_STAGE_NUM = 622
    MISSION_PASS_STAGE_NUM = 623
    MISSION_STAGE_TAG_WITH_ALL_SPECIFIC_AVATAR = 624
    MISSION_SPECIFIC_MATERIAL_ADD_NUM = 625
    MISSION_SPECIFIC_MATERIAL_COST_NUM = 626
    MISSION_UNLOCK_AVATAR_IN_SPECIFIC_NEWBIE_ACTIVITY = 627
    MISSION_QAVATAR_BATTLE_PARTICIPATE_NUM = 630
    MISSION_QAVATAR_BATTLE_KILL_NUM = 631
    MISSION_QAVATAR_BATTLE_KILL_NUM_SINGLE_GAME = 632
    MISSION_QAVATAR_BATTLE_WIN_NUM = 633
    MISSION_QAVATAR_BATTLE_SCORE = 634
    MISSION_VIRTUAL_TRAIN_SPECIFIC_STIGMATA_NUM = 635
    MISSION_VIRTUAL_TRAIN_SPECIFIC_AVATAR_NUM = 636
    MISSION_ROGUE_TOWER_ENDLESS_MAX_SCORE_WITH_AVATAR_ID_LIST = 637
    MISSION_ROGUE_TOWER_ENDLESS_TOTAL_SCORE_WITH_AVATAR_ID_LIST = 638
    MISSION_REUNION_COOK_WITH_BOOK_ID_LIST = 639
    MISSION_CHATWORLD_BEAST_TREASURE_TAKE_TIMES = 640
    MISSION_CHATWORLD_BEAST_SINGLE_DAMAGE = 641
    MISSION_CHATWORLD_BEAST_TOTAL_DAMAGE = 642
    MISSION_CHATWORLD_NORMAL_BOX_TAKE_TIMES = 643
    MISSION_ADD_UP_VIP_POINT_BY_PRODUCT = 644
    MISSION_OPENWORLD_AVATAR_ACTIVITY_CULTIVATE = 645
    MISSION_OPENWORLD_AVATAR_ACTIVITY_TALENT = 646
    MISSION_OPENWORLD_FINISH_QUEST_NO_BACKTRACK_WITH_RARITY_AND_MAP = 647
    MISSION_OPENWORLD_AVATAR_ACTIVITY_LEVEL = 648
    MISSION_BOSSRUSH_ACTIVITY_STAGE_TAG_ID_USE_SPECIFIC_BUFF_ID_LIST = 649
    MISSION_STAGE_TAG_SCORE = 650
    MISSION_OPENWORLD_AVATAR_ACCEPT_QUEST = 651
    MISSION_THEME_WANTED_STAGE_PASS_NUM = 652
    MISSION_THEME_WANTED_SPECIFIC_PROGRESS_PASS_NUM = 653
    MISSION_THEME_WANTED_MP_SPECIFIC_PROGRESS_PASS_NUM = 654
    MISSION_AVATAR_STAR_SUBSTAR = 655
    MISSION_SLG_OCCUPIED_POINT_NUM = 656
    MISSION_SLG_OCCUPIED_BUFF_POINT_NUM = 657
    MISSION_SLG_PLAYER_SCORE = 658
    MISSION_RELAY_STAGE_PHASE_PASS_TIME = 659
    MISSION_EXBOSS_ACC_SCORE = 660
    MISSION_GOD_WAR_STAGE_WITH_ITEM = 661
    MISSION_GOD_WAR_STAGE_WITH_SUPPORT_AVATAR = 662
    MISSION_GOD_WAR_ROLE_RELATION_LEVEL_BACKTRACK = 663
    MISSION_GOD_WAR_TALENT_LEVEL_NUM_BACKTRACK = 664
    MISSION_GOD_WAR_AVATAR_PUNISH_LEVEL_NUM_BACKTRACK = 665
    MISSION_GOD_WAR_AVATAR_PUNISH_LEVEL_SUCC_NUM = 666
    MISSION_GOD_WAR_PUNISH_BUFF_SUCC_NUM = 667
    MISSION_GOD_WAR_STAGE_WITH_PUNISH_LEVEL = 668
    MISSION_GOD_WAR_COLLECTION = 669
    MISSION_GOD_WAR_COLLECTION_SUIT = 670
    MISSION_GOD_WAR_COLLECTION_TYPE_NUM_BACKTRACK = 671
    MISSION_GOD_WAR_ROLE_AVATAR_LEVEL_NUM_BACKTRACK = 672
    MISSION_GOD_WAR_SETTLE_EVENT_BACKTRACK = 673
    MISSION_GOD_WAR_FINISH_LOBBY_ACTION = 674
    MISSION_GOD_WAR_STAGE_TAG_SPECIFIC_CHAPTER_ON_SETTLE = 675
    MISSION_GOD_WAR_MAX_SCORE_ON_SETTLE = 676
    MISSION_GOD_WAR_AVATAR_SPECIFIC_PUNISH_LEVEL_SUCC_NUM = 677
    MISSION_RANCH_MONSTER_RARITY_NUM = 691
    MISSION_RANCH_MONSTER_WIKI_LIST = 692
    MISSION_RANCH_COLLCTION_POINT = 693
    MISSION_RANCH_TAKE_PRODUCT_TIMES = 694
    MISSION_RANCH_MONSTER_SYNTHESIS_WITH_FORMULA_TIMES = 695
    MISSION_RANCH_MONSTER_SYNTHESIS_WITHOUT_FORMULA_TIMES = 696
    MISSION_BIND_HOYOLAB_ACCOUNT = 701
    MISSION_OPENWORLD_FINISH_STORY_NUM = 702
    MISSION_OPENWORLD_CHAPTER_EQUIP_COST = 703
    MISSION_NINJA_SLOT_LIST_LEVEL = 704
    MISSION_RESTAURANT_DELIVER_QUEST_NUM = 705
    MISSION_RESTAURANT_FACILITY_LEVEL = 706
    MISSION_RESTAURANT_COOK_SPECIFIC_RECIPE = 707
    MISSION_RESTAURANT_COOK_SPECIFIC_RECIPE_WITH_AVATAR = 708
    MISSION_OPENWORLD_CHAPTER_FAME_LEVEL_BACKTRACK = 709
    MISSION_SPECIFIC_MATERIAL_NUM_BACKTRACK = 710
    MISSION_SC_DLC_FINISH_DAILY_QUEST_NUM = 711
    MISSION_SC_DLC_LEVEL_BACKTRACK = 712
    MISSION_SC_DLC_AVATAR_LEVEL_BACKTRACK = 713
    MISSION_SC_DLC_AVATAR_TALENT_NUM_BACKTRACK = 714
    MISSION_SC_DLC_NPC_SUPPORT_LEVEL_BACKTRACK = 715
    MISSION_SC_DLC_TOWER_MAX_PROGRESS = 716
    MISSION_SC_DLC_ANALYSIS_MONSTER = 717
    MISSION_SC_DLC_AVATAR_LEVEL_NUM_BACKTRACK = 718
    MISSION_SC_DLC_UNLOCK_TALENT_NUM_BACKTRACK = 719
    MISSION_SC_DLC_NPC_SUPPORT_LEVEL_NUM_BACKTRACK = 720
    MISSION_SC_DLC_LEVELUP_TALENT_NUM = 721
    MISSION_SC_DLC_ACHIEVE_EVENT_NUM = 722
    BingoMetaDataImpl = 723
    MISSION_SPECIFIC_STAGE_NUM_BACKTRACK = 741
    MISSION_UNLOCK_SPECIFIC_PHOTO_NUM_BACKTRACK = 742
    MISSION_TOWN_ACTIVITY_FINISH_GAMES = 751
    MISSION_TOWN_ACTIVITY_FINISH_BOSS = 752
    MISSION_TOWN_ACTIVITY_BUILD_NUM = 753
    MISSION_TOWN_ACTIVITY_BUILD_NUM_IN_ONE_GAME = 754
    MISSION_TOWN_ACTIVITY_CHALLNGE_NUM_BACKTRACK = 755
    MISSION_TUTORIAL_WATCH_SITE_VIDEO = 771
    MISSION_CHATWORLD_BATTLE_BOX_TAKE_TIMES = 776
    MISSION_FINISH_TUTORIAL_ID = 780
    MISSION_SPECIFIC_AVATAR_EQUIP_WEAPON_LEVEL_BACKTRACK = 781
    MISSION_SPECIFIC_AVATAR_EQUIP_STIGMATA_SUIT_BACKTRACK = 782
    MISSION_AVATAR_SPECIFIC_UNLOCK_STAR_NUM_BACKTRACK = 783
    MISSION_AVATAR_SPECIFIC_TYPE_NUM_BACKTRACK = 784
    MISSION_AVATAR_SPECIFIC_UNLOCK_STAR_SPECIFC_LEVEL_NUM_BACKTRACK = 785
    MISSION_BOSS_CHALLENGE_FINISH_STAGE = 786
    MISSION_AVATAR_SPECIFIC_TYPE_SPECIFIC_LEVEL_NUM_BACKTRACK = 790
    MISSION_GRAND_KEY_GET_ANY_BACKTRACK = 791
    MISSION_SELECT_ADVENTURE_QUEST = 792
    MISSION_BEGIN_ADVENTURE_STORY_SWEEP = 793
    MISSION_STAGE_TAG_CHALLENGE_NUM_BACKTRACK = 796
    MISSION_FINISH_MISSION_TIMES_WITH_MISSION_ID_LIST_BACKTRACK = 797
    MISSION_FINISH_EXBOSS_WITH_AVATAR_LIST = 800
    MISSION_OPENWORLD_CHAPTER_UNLOCK_HERO_BACKTRACK = 806
    MISSION_OPENWORLD_CHAPTER_ADD_HERO_CARD_NUM = 807
    MISSION_OPENWORLD_CHAPTER_HERO_CARD_LEVEL_BACKTRACK = 808
    MISSION_OPENWORLD_CHAPTER_HERO_LEVEL_BACKTRACK = 809
    MISSION_OPENWORLD_ACTIVE_CARD_GROUP_BATTLE_POINT_BACKTRACK = 810
    MISSION_OPENWORLD_CHAPTER_UNLOCK_HERO_CARD_BACKTRACK = 811
    MISSION_OPENWORLD_CHAPTER_FINISH_CHALLENGE_GROUP = 812
    MISSION_OPENWORLD_CHAPTER_FINISH_CHALLENGE_GROUP_INDEX = 813
    MISSION_OPENWORLD_CHAPTER_FINISH_ENDLESS_CHALLENGE = 814
    MISSION_OPENWORLD_HUNT_FINISH_QUEST_NUM_BACKTRACK = 820
    MISSION_OPENWORLD_HUNT_DESTROY_STRONGHOLD_NUM_BACKTRACK = 821
    MISSION_OPENWORLD_HUNT_HUNTER_KILLED_MAP_NUM_BACKTRACK = 822
    MISSION_OPENWORLD_HUNT_TALENT_TOTAL_LEVEL_BACKTRACK = 823
    MISSION_MONSTER_CARD_COLLECTION_NUM_BACKTRACK = 826
    MISSION_MONSTER_CARD_COLLECTION_LEVEL_BACKTRACK = 827
    MISSION_MONSTER_CARD_NUM_LEVEL_GREATER_EQUAL_BACKTRACK = 828
    MISSION_MONSTER_CARD_EXP_STAGE_PASS_TIMES = 829
    MISSION_GACHA_NUM_SPECIFIC_TICKET_ID_LIST = 831
    MISSION_GACHA_NUM_AFTER_DISCOUNT_SPECIFIC_TICKET_ID_LIST = 832
    MISSION_OPENWORLD_FINISH_STORY_NO_BACKTRACK = 833
    MISSION_EX_BOSS_FINISH_BOSS_NUM_WITH_LEVEL = 834
    MISSION_BATTLE_PASS_EXP_ACTIVITY_MISSION = 835
    MISSION_BUFF_ASSIST_SELECT_BUFF_TIMES = 836
    MISSION_BUFF_ASSIST_PUBLISH_BUFF_TIMES = 837
    MISSION_DICEY_DUNGEON_ENDLESS_PASSED_FLOOR = 838
    MISSION_DICEY_DUNGEON_DAILY_PASSED_TIMES = 839
    MISSION_DICEY_DUNGEON_WEAPON_UNLOCK = 840
    MISSION_DICEY_DUNGEON_WEAPON_GACHA_TIMES = 841
    MISSION_DICEY_DUNGEON_TOTAL_ROLE_LEVEL = 842
    MISSION_DICEY_DUNGEON_ROLE_LEVEL_GREATER_EQUAL_NUM = 843
    MISSION_DICEY_DUNGEON_ROLE_NUM_LEVEL_GREATER_EQUAL = 844
    MISSION_PVZ_DAILY_PASS_TIMES = 845
    MISSION_PVZ_QAVATAR_NUM_LEVEL_GREATER_EQUAL = 846
    MISSION_PVZ_SPECIAL_MATERIAL_NUM = 847


class MissionMpMemberType(betterproto.Enum):
    MISSION_MP_LEADER = 1
    MISSION_MP_ASSISTANT = 2


class MissionStatus(betterproto.Enum):
    MISSION_STATUS_NONE = 0
    MISSION_NOT_BEGIN = 1
    MISSION_DOING = 2
    MISSION_FINISH = 3
    MISSION_TIMEOUT = 4
    MISSION_CLOSE = 5
    MISSION_WAIT_DELETE = 6


class MissionSubType(betterproto.Enum):
    MISSION_SUB_BRANCH = 1
    MISSION_SUB_MP_RAID = 102
    MISSION_SUB_ARMADA = 301
    MISSION_SUB_SHOP_ADD_ON = 501
    MISSION_SUB_RAFFLE = 502
    MISSION_SUB_WEB_ACTIVITY = 503
    MISSION_SUB_COMPETITION_SEASON = 504
    MISSION_SUB_DREAM = 505
    MISSION_SUB_REFRESH_CYCLE_ON_FINISH = 506
    MISSION_SUB_GOD_WAR = 507
    MISSION_SUB_SC_DLC = 508
    MISSION_SUB_CHAPTER_OW = 509
    MISSION_SUB_OW_STORY = 510
    MISSION_SUB_RPG_TAKE_REWARD_DROP = 1301
    MISSION_SUB_GOBACK = 1501
    MISSION_SUB_GOBACK_ACTIVITY = 1502
    MISSION_SUB_GOBACK_LIMIT_TIME = 1503
    MISSION_SUB_NINJA = 2001
    MISSION_SUB_ARMADA_REUNION = 2002
    MISSION_SUB_LOGIN_MISSION = 2003
    MISSION_SUB_INVITEE = 2004


class MissionType(betterproto.Enum):
    MISSION_NONE = 0
    MISSION_LINEAR = 1
    MISSION_BOUNTY = 2
    MISSION_TIMED = 3
    MISSION_SIDE = 4
    MISSION_CYCLE = 5
    MISSION_DAILY = 6
    MISSION_PROGRESS = 7
    MISSION_CHALLENGE = 8
    MISSION_MINUTE = 9
    MISSION_MASTER_PUPIL_EXAM = 10
    MISSION_MASTER_PUPIL_DAILY = 11
    MISSION_AVATAR_TRAINING = 12
    MISSION_RPG_TALE = 13
    MISSION_MAINLINE_STEP = 14
    MISSION_GOBACK = 15
    MISSION_WEEKLY_ROUTINE = 16
    MISSION_BATTLE_PASS = 17
    MISSION_ADVENTURE_GROUP = 18
    MISSION_MASTER_PUPIL_COMPANY = 19
    MISSION_ACTIVITY = 20
    MISSION_COMPETITION_SEASON = 21


class MonopolyAreaStatus(betterproto.Enum):
    MONOPOLY_AREA_STATUS_NONE = 0
    MONOPOLY_AREA_STATUS_LOCKED = 1
    MONOPOLY_AREA_STATUS_UNLOCKED = 2


class MonopolyBehaviorType(betterproto.Enum):
    MONOPOLY_BEHAVIOR_WALK = 1
    MONOPOLY_BEHAVIOR_DEMOLISH_BUILDING = 2
    MONOPOLY_BEHAVIOR_FREEZE_BUILDING = 3
    MONOPOLY_BEHAVIOR_RANDOM_FREEZE = 4
    MONOPOLY_BEHAVIOR_SUMMON = 5
    MONOPOLY_BEHAVIOR_REPEL = 7
    MONOPOLY_BEHAVIOR_DELELTE_SELF = 8
    MONOPOLY_BEHAVIOR_TRIGGER_RPG_EVENT = 9


class MonopolyBuildingFuncType(betterproto.Enum):
    MONOPOLY_BUILDING_FUNC_PRODUCT = 1
    MONOPOLY_BUILDING_FUNC_BUFF = 2


class MonopolyDiceType(betterproto.Enum):
    MONOPOLY_DICE_NONE = 0
    MONOPOLY_DICE_NORMAL = 1
    MONOPOLY_DICE_BUILDING_PRIORITY = 2


class MonopolyItemType(betterproto.Enum):
    MONOPOLY_ITEM_CONTROLABLE_DICE = 1
    MONOPOLY_ITEM_ROADBLOCK = 2
    MONOPOLY_ITEM_EXCHANGE_POSITION = 4
    MONOPOLY_ITEM_LEVELUP_BUILDING = 7
    MONOPOLY_ITEM_CHANGE_DIRECTION = 8


class MonopolyRoundStatus(betterproto.Enum):
    MONOPOLY_ROUND_STATUS_NONE = 0
    MONOPOLY_ROUND_STATUS_START = 1
    MONOPOLY_ROUND_STATUS_AFTER_DICE = 2
    MONOPOLY_ROUND_STATUS_AFTER_CONSTRUCT = 3


class MonsterCardLevelLimitType(betterproto.Enum):
    MONSTER_CARD_LEVEL_LIMIT_TYPE_NONE = 0
    MONSTER_CARD_LEVEL_LIMIT_TYPE_PASS_RPG_SITE = 1


class MonsterCardRandomTalentConfirmType(betterproto.Enum):
    MONSTER_CARD_RANDOM_TALENT_CONFIRM_TYPE_NONE = 0
    MONSTER_CARD_RANDOM_TALENT_CONFIRM_TYPE_CONFIRM = 1
    MONSTER_CARD_RANDOM_TALENT_CONFIRM_TYPE_ABANDON = 2


class MonsterCardSelectCardCondition(betterproto.Enum):
    MONSTER_CARD_SELECT_CARD_CONDITION_NONE = 0
    MONSTER_CARD_SELECT_CARD_CONDITION_LEVEL_GREATER_EQUAL = 1


class MonsterCardSkillType(betterproto.Enum):
    MONSTER_CARD_SKILL_TYPE_NONE = 0
    MONSTER_CARD_SKILL_TYPE_ATK = 1
    MONSTER_CARD_SKILL_TYPE_LB = 2
    MONSTER_CARD_SKILL_TYPE_AUTO = 3
    MONSTER_CARD_SKILL_TYPE_PASSIVE = 4
    MONSTER_CARD_SKILL_TYPE_WEATHER = 5
    MONSTER_CARD_SKILL_TYPE_TALENT = 6
    MONSTER_CARD_SKILL_TYPE_UNLOCK = 99


class MonsterCardStageType(betterproto.Enum):
    MONSTER_CARD_STAGE_TYPE_NONE = 0
    MONSTER_CARD_STAGE_TYPE_NORMAL = 1
    MONSTER_CARD_STAGE_TYPE_BOSS = 2
    MONSTER_CARD_STAGE_TYPE_EXP = 3
    MONSTER_CARD_STAGE_TYPE_TOWER = 4


class MonsterCardSyncType(betterproto.Enum):
    MONSTER_CARD_SYNC_TYPE_NONE = 0
    MONSTER_CARD_SYNC_TYPE_LEVEL_UP = 1
    MONSTER_CARD_SYNC_TYPE_STAR_UP = 2
    MONSTER_CARD_SYNC_TYPE_LEARN_TALENT = 3
    MONSTER_CARD_SYNC_TYPE_NEW_CARD = 4
    MONSTER_CARD_SYNC_TYPE_REFRESH = 5
    MONSTER_CARD_SYNC_TYPE_ADD_FRAGMENT = 6


class MpAction(betterproto.Enum):
    MP_ACTION_ERROR = 0
    MP_ACTION_CLOSE_MVP_PAGE = 1
    MP_ACTION_CLOSE_LIKE_PAGE = 2


class MpDataType(betterproto.Enum):
    MP_DATA_ALL = 0
    MP_DATA_LEVEL = 1
    MP_DATA_EXP = 2
    MP_DATA_SKILL_POINT = 3
    MP_DATA_SKILL = 4
    MP_DATA_AVATAR = 5
    MP_DATA_PUNISH_TIME = 6


class MpLeaveTeamReason(betterproto.Enum):
    LEAVE_TEAM_REASON_NONE = 0
    LEAVE_TEAM_REASON_KICK = 1


class MpMemberClientStatus(betterproto.Enum):
    MP_MEMBER_CLIENT_NONE = 0
    MP_MEMBER_CLIENT_IN_TEAM = 1
    MP_MEMBER_CLIENT_IN_LOBBY = 2


class MpSkillType(betterproto.Enum):
    MP_SKILL_NONE = 0
    MP_SKILL_ATTACK = 1
    MP_SKILL_DEFENCE = 2
    MP_SKILL_OTHER = 3


class MpStageMatchType(betterproto.Enum):
    CREATE_ENTER = 1
    MATCH_ENTER = 2


class MpStageMemberLimitType(betterproto.Enum):
    MP_MEMBER_LIMIT_NONE = 0
    MP_MEMBER_LIMIT_MASTER_ONLY = 1
    MP_MEMBER_LIMIT_PUPIL_ONLY = 2
    MP_MEMBER_LIMIT_ARMADA_ONLY = 3
    MP_MEMBER_LIMIT_NEWBIE_ONLY = 4


class MpStageVoteOption(betterproto.Enum):
    MP_STAGE_VOTE_OPTION_STAY_IN_TEAM = 0
    MP_STAGE_VOTE_OPTION_STAGE_AGAIN = 1
    MP_STAGE_VOTE_OPTION_NEXT_STAGE = 2


class MpTeamStatus(betterproto.Enum):
    TEAM_STATUS_NONE = 0
    TEAM_STATUS_IN_TEAM = 1
    TEAM_STATUS_IN_LOBBY = 2


class NinjaSiteType(betterproto.Enum):
    NINJA_SITE_NORMAL = 1
    NINJA_SITE_BOSS = 2
    NINJA_SITE_CHALLENGE = 3


class OfflineResourceType(betterproto.Enum):
    OFFLINE_RESOURCE_TYPE_NONE = 0
    OFFLINE_RESOURCE_TYPE_OW_QUEST = 1
    OFFLINE_RESOURCE_TYPE_OW_MECHA = 2
    OFFLINE_RESOURCE_TYPE_WEEK_DAY = 3
    OFFLINE_RESOURCE_TYPE_ARMADA = 4
    OFFLINE_RESOURCE_TYPE_ENDLESS = 5
    OFFLINE_RESOURCE_TYPE_EX_BOSS = 6


class OffLineTagType(betterproto.Enum):
    OFFLINE_TAG_TYPE_NORMAL = 0
    OFFLINE_TAG_TYPE_SMURF = 1


class OnlineRewardActivityType(betterproto.Enum):
    ONLINE_REWARD_ACTIVITY_TYPE_DAILY = 1
    ONLINE_REWARD_ACTIVITY_TYPE_ACTIVITY = 2


class OpenworldEndlessDataType(betterproto.Enum):
    OPENWORLD_ENDLESS_DATA_TYPE_INVAISON = 1
    OPENWORLD_ENDLESS_DATA_TYPE_SCENE_GEAR = 2


class OpenworldEndlessInvasionBuffConditionType(betterproto.Enum):
    INVASION_BUFF_CONDITION_TOTAL_LEVEL = 1
    INVASION_BUFF_CONDITION_NUM_LEVEL = 2
    INVASION_BUFF_CONDITION_NUM_LEVEL_ATTRIBUTE = 3
    INVASION_BUFF_CONDITION_NUM_LEVEL_ALL_ATTRIBUTE = 4
    INVASION_BUFF_CONDITION_NUM_CLASS = 5
    INVASION_BUFF_CONDITION_ID_STAR_LEVEL = 6


class OpenworldEndlessItemType(betterproto.Enum):
    OPENWORLD_ENDLESS_ITEM_INVASION = 1
    OPENWORLD_ENDLESS_ITEM_BUFF = 2
    OPENWORLD_ENDLESS_ITEM_TRAP = 3
    OPENWORLD_ENDLESS_ITEM_COUNTER = 4
    OPENWORLD_ENDLESS_ITEM_CONSUME = 5
    OPENWORLD_ENDLESS_ITEM_TRAP_BUFF = 6


class OpenworldQuestStatus(betterproto.Enum):
    OPENWORLD_QUEST_NONE = 0
    OPENWORLD_QUEST_DOING = 1
    OPENWORLD_QUEST_FINISH = 2
    OPENWORLD_QUEST_CLOSE = 3


class OpenworldStageType(betterproto.Enum):
    OPENWORLD_STAGE_TYPE_NONE = 0
    OPENWORLD_STAGE_TYPE_MAINLINE = 1
    OPENWORLD_STAGE_TYPE_EXPORE = 2


class OptionalBuffType(betterproto.Enum):
    OPTIONAL_BUFF_NONE = 0
    OPTIONAL_BUFF_DEBUFF = 1
    OPTIONAL_BUFF_RESTRICT = 2


class OuterRewardType(betterproto.Enum):
    OUTER_REWARD_TYPE_NONE = 0
    OUTER_REWARD_TYPE_REDEEM = 1


class PanelActivityType(betterproto.Enum):
    PANEL_ACTIVITY_THEME = 2
    PANEL_ACTIVITY_RECLAIM = 4
    PANEL_ACTIVITY_KINGDOM_WAR = 5
    PANEL_ACTIVITY_BATTLE_PASS = 6
    PANEL_ACTIVITY_GLOBAL_WAR = 7
    PANEL_ACTIVITY_SLG = 8
    PANEL_ACTIVITY_GLOBAL_POLLING = 9
    PANEL_ACTIVITY_COLLABORATION = 10


class PhoneEventStatus(betterproto.Enum):
    PHONE_EVENT_NONE = 0
    PHONE_EVENT_FINISH = 1
    PHONE_EVENT_REFUSE = 2
    PHONE_EVENT_HOLD = 3
    PHONE_EVENT_OVER = 4


class PhonePendantOpType(betterproto.Enum):
    PHONE_PENDANT_WEAR = 1
    PHONE_PENDANT_OFF = 2


class PhonePendantTimeType(betterproto.Enum):
    PHONE_PENDANT_TIME_FOREVER = 1
    PHONE_PENDANT_TIME_LIMIT = 2


class PhotoType(betterproto.Enum):
    PHOTO_TYPE_ALL = 0
    PHOTO_TYPE_CITY_ACTIVITY = 1
    PHOTO_TYPE_ANNIVERSARY = 2
    PHOTO_TYPE_RPG_TALE = 3
    PHOTO_TYPE_FARM = 4
    PHOTO_TYPE_KINGDOM_WAR = 5
    PHOTO_TYPE_DLC = 6
    PHOTO_TYPE_GLOBAL_WAR = 7
    PHOTO_TYPE_NINJA = 8
    PHOTO_TYPE_CHAPTER_HIDDEN = 9
    PHOTO_TYPE_OW_AVATAR = 10
    PHOTO_TYPE_SLG = 11
    PHOTO_TYPE_GOD_WAR = 12
    PHOTO_TYPE_OPENWORLD_CHAPTER = 13
    PHOTO_TYPE_SC_DLC = 14
    PHOTO_TYPE_OW_HUNT = 15


class PhotoUnlockType(betterproto.Enum):
    PHOTO_UNLOCK_FINISH_OW_EVENT = 1
    PHOTO_UNLOCK_KILL_MONSTER = 2
    PHOTO_UNLOCK_FINISH_OW_STORY = 3
    PHOTO_UNLOCK_FINISH_DLC_DIALOG = 4
    PHOTO_UNLOCK_GOD_WAR = 5
    PHOTO_UNLOCK_VISUAL_NOVEL = 6
    PHOTO_UNLOCK_MATERIAL = 7


class PlatFormType(betterproto.Enum):
    PLATFORM_NONE = 0
    PLATFORM_ANDROID = 100001
    PLATFORM_IOS = 200002
    PLATFORM_PC = 300003


class PlayerAreaType(betterproto.Enum):
    AREA_NO_LIMIT = 0
    AREA_NORTH_CHINA = 1
    AREA_NORTH_EAST = 2
    AREA_EAST_CHINA = 3
    AREA_CENTRAL_CHINA = 4
    AREA_CENTRAL_SOUTH = 5
    AREA_NORTH_WEST = 6
    AREA_SOUTH_WEST = 7
    AREA_HK_MC_TW = 8


class PlayerCardMsgConfig(betterproto.Enum):
    CARD_MSG_ALL = 0
    CARD_MSG_FRIEND = 1
    CARD_MSG_FORBIDDEN = 2


class PlayerCardType(betterproto.Enum):
    CARD_ALL = 0
    CARD_AVATAR = 1
    CARD_MEDAL = 2
    CARD_MESSAGE = 3
    CARD_MSG_CONFIG = 4
    CARD_ELF = 5


class PlayerGenderType(betterproto.Enum):
    GENDER_NONE_TYPE = 0
    GENDER_MALE_TYPE = 1
    GENDER_FEMALE_TYPE = 2


class PlayerInterestType(betterproto.Enum):
    INTEREST_NONE = 0
    INTEREST_ANIMATION = 1
    INTEREST_COMIC = 2
    INTEREST_GAME = 3
    INTEREST_MUSIC = 4
    INTEREST_DANCING = 5
    INTEREST_KITIKU = 6
    INTEREST_MMD = 7
    INTEREST_TOKUSATSU = 8


class PlayerOnlineStatus(betterproto.Enum):
    PLAYER_ONLINE_STATUS_NONE = 0
    PLAYER_ONLINE_STATUS_ONLINE = 1
    PLAYER_ONLINE_STATUS_WAIT_SAVE = 2
    PLAYER_ONLINE_STATUS_OFFLINE = 3


class PlotType(betterproto.Enum):
    PLOT_TYPE_NORMAL = 0
    PLOT_TYPE_DORM = 1
    PLOT_TYPE_MATRIX = 2
    PLOT_TYPE_RPG = 3
    PLOT_TYPE_ISLAND = 4
    PLOT_TYPE_CITY_ACTIVITY = 5


class PrivilegeProductType(betterproto.Enum):
    PRIVILEGE_PRODUCT_ALL = 0
    PRIVILEGE_PRODUCT_NEWBIE = 1
    PRIVILEGE_PRODUCT_GOBACK = 2
    PRIVILEGE_PRODUCT_ADVENTURE = 3


class PrivilegeRightType(betterproto.Enum):
    PRIVILEGE_RIGHT_FREE_GACHA = 1
    PRIVILEGE_RIGHT_CARD_DAILY_REWARD = 2


class ProductType(betterproto.Enum):
    PRODUCT_NORMAL = 1
    PRODUCT_LIMIT = 2
    PRODUCT_CARD = 3
    PRODUCT_SUBSCRIPTION = 4
    PRODUCT_RANDOM_BOX = 5
    PRODUCT_FIXED_BOX = 6
    PRODUCT_MCOIN = 7
    PRODUCT_FOUNDATION = 8
    PRODUCT_SUBSCRIPTION_NON_RENEWING = 9
    PRODUCT_MAIL_REWARD = 10
    PRODUCT_PROMO_CODE = 11


class PvzBattleEndStatus(betterproto.Enum):
    PVZ_BATTLE_END_NONE = 0
    PVZ_BATTLE_END_SUCC = 1
    PVZ_BATTLE_END_FAIL = 2
    PVZ_BATTLE_END_QUIT = 3


class PvzQAvatarNextLevelConditionType(betterproto.Enum):
    PVZ_QAVATAR_NEXT_LEVEL_CONDITION_NONE = 0
    PVZ_QAVATAR_NEXT_LEVEL_CONDITION_PASS_SITE = 1


class PvzQAvatarType(betterproto.Enum):
    PVZ_QAVATAR_ATTACK = 1
    PVZ_QAVATAR_ASSIST = 2


class PvzSiteType(betterproto.Enum):
    PVZ_SITE_NORMAL = 1
    PVZ_SITE_DAILY = 2
    PVZ_SITE_CHALLENGE = 3


class QAvatarActionType(betterproto.Enum):
    QAVATAR_ACTION_NONE = 0
    QAVATAR_ACTION_ADD_BUFF = 1
    QAVATAR_ACTION_REMOVE_BUFF = 2
    QAVATAR_ACTION_EVADE = 3
    QAVATAR_ACTION_SHOOT_BULLET = 4
    QAVATAR_ACTION_MELEE_ATK = 5
    QAVATAR_ACTION_COMBO_ATK = 6
    QAVATAR_ACTION_CREATE_GADGET = 7
    QAVATAR_ACTION_MUTE_SKILL = 8
    QAVATAR_ACTION_BREAK_SKILL = 9
    QAVATAR_ACTION_CHANGE_PROP = 11
    QAVATAR_ACTION_HOLDUP_ACTION = 13
    QAVATAR_ACTION_SET_ANIM_PARA = 21
    QAVATAR_ACTION_APPLY_EFFECT = 22
    QAVATAR_ACTION_SET_CAMERA_PARA = 23
    QAVATAR_ACTION_LOCK_AIM_ROTATION = 24
    QAVATAR_ACTION_SIM_SKILL_BUTTON_OP = 25


class QAvatarBattleCollidePropertyType(betterproto.Enum):
    QAVATAR_BATTLE_COLLIDE_PROPERTY_TYPE_WALL = 0
    QAVATAR_BATTLE_COLLIDE_PROPERTY_TYPE_AVATAR_SENSOR = 1
    QAVATAR_BATTLE_COLLIDE_PROPERTY_TYPE_BULLET = 2
    QAVATAR_BATTLE_COLLIDE_PROPERTY_TYPE_AVATAR = 3


class QAvatarBattleComponentType(betterproto.Enum):
    QAVATAR_BATTLE_COMPONENT_TYPE_NONE = 0
    QAVATAR_BATTLE_COMPONENT_TYPE_POSITION = 1
    QAVATAR_BATTLE_COMPONENT_TYPE_SPEED = 2
    QAVATAR_BATTLE_COMPONENT_TYPE_RIGID_BODY = 3
    QAVATAR_BATTLE_COMPONENT_TYPE_SKILL = 4
    QAVATAR_BATTLE_COMPONENT_TYPE_BUFF = 5
    QAVATAR_BATTLE_COMPONENT_TYPE_EVADE = 6
    QAVATAR_BATTLE_COMPONENT_TYPE_STIGMATA = 7
    QAVATAR_BATTLE_COMPONENT_TYPE_CONTACT = 8
    QAVATAR_BATTLE_COMPONENT_TYPE_TICK = 9


class QAvatarBattleDropItemType(betterproto.Enum):
    QAVATAR_BATTLE_DROP_ITEM_TYPE_BUFF = 1
    QAVATAR_BATTLE_DROP_ITEM_TYPE_STIGMATA = 2
    QAVATAR_BATTLE_DROP_ITEM_TYPE_INSTANT_HEAL_HP = 3


class QAvatarBattleEndReason(betterproto.Enum):
    QAVATAR_BATTLE_END_REASON_NONE = 0
    QAVATAR_BATTLE_END_REASON_FAIL = 1
    QAVATAR_BATTLE_END_REASON_TIMEOUT = 2
    QAVATAR_BATTLE_END_REASON_TIMEOUT_INVALID = 3
    QAVATAR_BATTLE_END_REASON_KILL_NUM = 4
    QAVATAR_BATTLE_END_REASON_GM = 5


class QAvatarBattleEntityDeleteReasonType(betterproto.Enum):
    QAVATAR_BATTLE_ENTITY_DELETE_REASON_NONE = 0
    QAVATAR_BATTLE_ENTITY_DELETE_REASON_EXPIRE = 1
    QAVATAR_BATTLE_ENTITY_DELETE_REASON_HIT = 2
    QAVATAR_BATTLE_ENTITY_DELETE_REASON_PICK_UP = 3


class QAvatarBattleEntityType(betterproto.Enum):
    QAVATAR_BATTLE_ENTITY_TYPE_NONE = 0
    QAVATAR_BATTLE_ENTITY_TYPE_PLAYER = 1
    QAVATAR_BATTLE_ENTITY_TYPE_BULLET = 2
    QAVATAR_BATTLE_ENTITY_TYPE_GADGET = 3
    QAVATAR_BATTLE_ENTITY_TYPE_SCHEDULED_TASK = 4


class QAvatarBattleGadgetEffectCampType(betterproto.Enum):
    QAVATAR_BATTLE_GADGET_EFFECT_CAMP_TYPE_ALL = 0
    QAVATAR_BATTLE_GADGET_EFFECT_CAMP_TYPE_ALLIES = 1
    QAVATAR_BATTLE_GADGET_EFFECT_CAMP_TYPE_ENEMIES = 2


class QAvatarBattleGadgetType(betterproto.Enum):
    QAVATAR_BATTLE_GADGET_TYPE_BREAKABLE_BOX = 1
    QAVATAR_BATTLE_GADGET_TYPE_DROP_ITEM = 2
    QAVATAR_BATTLE_GADGET_TYPE_DAMAGE_AREA = 3
    QAVATAR_BATTLE_GADGET_TYPE_DELAYED_BOMB = 4
    QAVATAR_BATTLE_GADGET_TYPE_UNSTABLE_DELAYED_BOMB = 5
    QAVATAR_BATTLE_GADGET_TYPE_BREAKABLE_DELAYED_BOMB = 6


class QAvatarBattleTickComponentEventType(betterproto.Enum):
    QAVATAR_BATTLE_TICK_EVENT_TYPE_ENABLE = 1
    QAVATAR_BATTLE_TICK_EVENT_TYPE_INTERVAL = 2


class QAvatarBuffEffectType(betterproto.Enum):
    QAVATAR_BUFF_EFFECT_NONE = 0
    QAVATAR_BUFF_EFFECT_HP_GREATER = 1
    QAVATAR_BUFF_EFFECT_HP_LESS = 2
    QAVATAR_BUFF_EFFECT_OUT_OF_BATTLE = 3


class QAvatarBuffType(betterproto.Enum):
    QAVATAR_BUFF_NONE = 0
    QAVATAR_BUFF_MAXHP = 1
    QAVATAR_BUFF_ATTACK = 2
    QAVATAR_BUFF_MOVESPEED = 3
    QAVATAR_BUFF_HEALHP = 4
    QAVATAR_BUFF_CHANGESKILL = 5
    QAVATAR_BUFF_HEALSP = 6
    QAVATAR_BUFF_ADDEDDAMAGERATIO = 7
    QAVATAR_BUFF_DAMAGETAKENRATIO = 8
    QAVATAR_BUFF_CHANGESKILLCD = 9
    QAVATAR_BUFF_CRITICALRATE = 10
    QAVATAR_BUFF_CRITICALDAMAGERATIO = 11
    QAVATAR_BUFF_CLIENT_ONLY = 21


class QAvatarChangePropType(betterproto.Enum):
    QAVATAR_CHANGE_PROP_NONE = 0
    QAVATAR_CHANGE_PROP_HP = 1
    QAVATAR_CHANGE_PROP_SP = 2


class QAvatarLobbyStatus(betterproto.Enum):
    QAVATAR_LOBBY_STATUS_INVALID = 0
    QAVATAR_LOBBY_STATUS_INIT = 1
    QAVATAR_LOBBY_STATUS_PREPARE = 2
    QAVATAR_LOBBY_STATUS_FIGHT = 3
    QAVATAR_LOBBY_STATUS_SETTLE = 4
    QAVATAR_LOBBY_STATUS_DELETE = 5


class QAvatarShapeType(betterproto.Enum):
    QAVATAR_SHAPE_NONE = 0
    QAVATAR_SHAPE_AABB = 1
    QAVATAR_SHAPE_CIRCLE = 2
    QAVATAR_SHAPE_OAB = 3


class QAvatarSkillTriggerType(betterproto.Enum):
    QAVATAR_SKILL_TRIGGER_NONE = 0
    QAVATAR_SKILL_TRIGGER_DOWN = 1
    QAVATAR_SKILL_TRIGGER_UP = 2
    QAVATAR_SKILL_TRIGGER_HOLDUP = 3
    QAVATAR_SKILL_TRIGGER_HOLDLOOP = 4


class QAvatarSkillType(betterproto.Enum):
    QAVATAR_SKILL_NONE = 0
    QAVATAR_SKILL_ATK = 1
    QAVATAR_SKILL_SKL01 = 2
    QAVATAR_SKILL_SKL02 = 3


class QAvatarStigmataEffectType(betterproto.Enum):
    QAVATAR_STIGMATA_EFFECT_NONE = 0
    QAVATAR_STIGMATA_EFFECT_DIRECT = 1
    QAVATAR_STIGMATA_EFFECT_SKILL_TRIGGER = 2
    QAVATAR_STIGMATA_EFFECT_ROLE = 3
    QAVATAR_STIGMATA_EFFECT_AVATAR_ID = 4
    QAVATAR_STIGMATA_EFFECT_ATTACK_ON = 5
    QAVATAR_STIGMATA_EFFECT_DEL_HP = 8


class QAvatarStigmataSrcType(betterproto.Enum):
    QAVATAR_STIGMATA_SRC_NONE = 0
    QAVATAR_STIGMATA_SRC_DEFAULT = 1
    QAVATAR_STIGMATA_SRC_DROP = 2


class QCandyBattleActionType(betterproto.Enum):
    QCANDY_BATTLE_ACTION_TYPE_NONE = 0
    QCANDY_BATTLE_ACTION_TYPE_ADD_SCORE = 1


class QCandyBattleAvatarState(betterproto.Enum):
    QCANDY_BATTLE_AVATAR_NONE = 0
    QCANDY_BATTLE_AVATAR_IDLE = 1
    QCANDY_BATTLE_AVATAR_GROUND_MOVE = 2
    QCANDY_BATTLE_AVATAR_JUMP = 3
    QCANDY_BATTLE_AVATAR_DOUBLE_JUMP = 4
    QCANDY_BATTLE_AVATAR_FALL = 5
    QCANDY_BATTLE_AVATAR_TUMBLE = 6
    QCANDY_BATTLE_AVATAR_FLY = 7


class QCandyBattleComponentType(betterproto.Enum):
    QCANDY_BATTLE_COMPONENT_TYPE_NONE = 0
    QCANDY_BATTLE_COMPONENT_TYPE_POSITION = 1


class QCandyBattleDelayActionType(betterproto.Enum):
    QCANDY_BATTLE_DELAY_ACTION_TYPE_NONE = 0
    QCANDY_BATTLE_DELAY_ACTION_TYPE_STATE_RESET = 1
    QCANDY_BATTLE_DELAY_ACTION_TYPE_SKILL_END = 2


class QCandyBattleEntityType(betterproto.Enum):
    QCANDY_BATTLE_ENTITY_TYPE_NONE = 0
    QCANDY_BATTLE_ENTITY_TYPE_PLAYER = 1
    QCANDY_BATTLE_ENTITY_TYPE_PROP = 2


class QCandyBattlePropState(betterproto.Enum):
    QCANDY_BATTLE_PROP_CANNOT_TRIGGER = 0
    QCANDY_BATTLE_PROP_CAN_TRIGGER = 1


class QCandyBattlePropType(betterproto.Enum):
    QCANDY_BATTLE_PROP_TYPE_NONE = 0
    QCANDY_BATTLE_PROP_TYPE_HAS_CD = 1
    QCANDY_BATTLE_PROP_TYPE_AUTO_RECOVER = 2


class QCandyBattleTriggerEventType(betterproto.Enum):
    QCANDY_BATTLE_TRIGGER_EVENT_TYPE_ADD_SCORE = 1


class QCandyBattleType(betterproto.Enum):
    QCANDY_BATTLE_TYPE_NONE = 0
    QCANDY_BATTLE_TYPE_RACING = 1
    QCANDY_BATTLE_TYPE_SURVIVE = 2
    QCANDY_BATTLE_TYPE_SCORE = 3


class QCandyLobbyStatus(betterproto.Enum):
    QCANDY_LOBBY_STATUS_INVALID = 0
    QCANDY_LOBBY_STATUS_INIT = 1
    QCANDY_LOBBY_STATUS_PREPARE = 2
    QCANDY_LOBBY_STATUS_FIGHT = 3
    QCANDY_LOBBY_STATUS_SETTLE = 4
    QCANDY_LOBBY_STATUS_DELETE = 5


class RaffleActivityType(betterproto.Enum):
    RAFFLE_ACTIVITY_NONE = 0
    RAFFLE_ACTIVITY_MONOPOLY = 1


class RaffleRewardGrade(betterproto.Enum):
    RAFFLE_REWARD_NONE = 0
    RAFFLE_REWARD_FIRST = 1
    RAFFLE_REWARD_SECOND = 2
    RAFFLE_REWARD_THIRD = 3


class RaidActiveType(betterproto.Enum):
    RAID_ACTIVE_NONE = 0
    RAID_ACTIVE_DAILY_RAID = 1
    RAID_ACTIVE_WEEKLY_RAID = 2


class RanchMonsterSkillType(betterproto.Enum):
    RANCH_MONSTER_SKILL_ACTIVE = 1
    RANCH_MONSTER_SKILL_PASSIVE = 2
    RANCH_MONSTER_SKILL_FAST_PRODUCTION = 3
    RANCH_MONSTER_SKILL_RARITY_UP = 4


class RanchMonsterSourceType(betterproto.Enum):
    RANCH_MONSTER_SOURCE_STAGE = 1
    RANCH_MONSTER_SOURCE_MATERIAL = 2
    RANCH_MONSTER_SOURCE_SYNTHESIS_WITH_FOMULA = 3
    RANCH_MONSTER_SOURCE_PRODUCT = 4
    RANCH_MONSTER_SOURCE_SYNTHESIS_WITHOUT_FORMULA = 5
    RANCH_MONSTER_SOURCE_GM = 6


class RanchNotifyType(betterproto.Enum):
    RANCH_NOTIFY_UNKNOWN = 0
    RANCH_NOTIFY_SYNTHESIS = 1
    RANCH_NOTIFY_STAGE_END = 2
    RANCH_NOTIFY_LOCK = 3


class RanchRarityType(betterproto.Enum):
    RANCH_LEGENDARY = 4


class RanchSynthesisType(betterproto.Enum):
    RANCH_SYNSHESIS_WITHOUT_FORMULA = 1
    RANCH_SYNSHESIS_WITH_FORMULA = 2


class RankPowerType(betterproto.Enum):
    AVATAR_SSS_NUM = 101
    AVATAR_SS_NUM = 102
    AVATAR_S_NUM = 103
    AVATAR_A_NUM = 104
    WEAPON_5STAR_NUM = 201
    WEAPON_4STAR_NUM = 202
    WEAPON_3STAR_NUM = 203
    STIGMATA_5STAR_NUM = 301
    STIGMATA_4STAR_NUM = 302
    STIGMATA_3STAR_NUM = 303


class RankScheduleType(betterproto.Enum):
    RANK_SCHEDULE_DORM = 1


class ReclaimActivityDataType(betterproto.Enum):
    RECLAIM_ACTIVITY_DATA_ALL = 0
    RECLAIM_ACTIVITY_DATA_AVATAR = 1
    RECLAIM_ACTIVITY_DATA_LEVEL = 2


class ReclaimEquipmentType(betterproto.Enum):
    RECLAIM_NONE = 0
    RECLAIM_AVATAR = 1
    RECLAIM_WEAPON = 2
    RECLAIM_STIGMATA = 3


class ReplayOp(betterproto.Enum):
    REPLAY_UPLOAD = 1
    REPLAY_DELETE = 2


class ReplayType(betterproto.Enum):
    REPLAY_NONE = 0
    REPLAY_EXBOSS = 1
    REPLAY_TVT = 2


class RestaurantRoomType(betterproto.Enum):
    RESTAURANT_ROOM_STORE = 1
    RESTAURANT_ROOM_KITCHEN = 2
    RESTAURANT_ROOM_CHECKOUT = 3


class RestaurantSkillType(betterproto.Enum):
    RESTAURANT_SKILL_COOK_ID_SPEED_UP = 1
    RESTAURANT_SKILL_COOK_TAG_SPEED_UP = 2
    RESTAURANT_SKILL_COOK_ALL_SPEED_UP = 3
    RESTAURANT_SKILL_SELL_ID_SPEED_UP = 4
    RESTAURANT_SKILL_SELL_TAG_SPEED_UP = 5
    RESTAURANT_SKILL_SELL_ALL_SPEED_UP = 6
    RESTAURANT_SKILL_SELL_ID_PRICE_UP = 7
    RESTAURANT_SKILL_SELL_TAG_PRICE_UP = 8
    RESTAURANT_SKILL_SELL_ALL_PRICE_UP = 9


class RestaurantWorkStatus(betterproto.Enum):
    RESTAURANT_WORK_NOT_BEGIN = 1
    RESTAURANT_WORK_DOING = 2
    RESTAURANT_WORK_PAUSE = 3


class ReunionCookBookType(betterproto.Enum):
    REUNION_COOK_BOOK_NORMAL = 1
    REUNION_COOK_BOOK_RECYCLE = 2


class RogueStageEnum(betterproto.Enum):
    ROGUE_STAGE_HARD_LEVEL_NUM = 4
    ROGUE_STAGE_AVATAR_POSITION_NUM = 9


class RoomClientStatus(betterproto.Enum):
    ROOM_CLIENT_NONE = 0
    ROOM_CLIENT_SELECTING_MAP = 1
    ROOM_CLIENT_EQUIPING = 2


class RoomExitReason(betterproto.Enum):
    ROOM_EXIT_NONE = 0
    ROOM_EXIT_KICK = 1


class RoomMemberStatus(betterproto.Enum):
    ROOM_UNREADY = 1
    ROOM_READY = 2
    ROOM_IN_BATTLE = 3


class RoomMode(betterproto.Enum):
    ROOM_MODE_INVALID = 0
    ROOM_MODE_TVT = 1
    ROOM_MODE_MASSIVE_WAR = 2
    ROOM_MODE_QAVATAR_BATTLE = 3
    ROOM_MODE_QCANDY_BATTLE = 4


class RoomType(betterproto.Enum):
    ROOM_TYPE_HALL = 1
    ROOM_TYPE_BEDROOM = 2


class RpgScheduleRankType(betterproto.Enum):
    RPG_SCHEDULE_RANK_COLLECTION = 1
    RPG_SCHEDULE_RANK_GENERAL = 2


class RpgTaleCollectionRewardType(betterproto.Enum):
    RPG_TALE_COLLECTION_REWARD_NONE = 0
    RPG_TALE_COLLECTION_REWARD_QAVATAR_STAR = 1
    RPG_TALE_COLLECTION_REWARD_EVENT = 2
    RPG_TALE_COLLECTION_REWARD_SHOP = 3
    RPG_TALE_COLLECTION_REWARD_TOTAL_STAGE_SCORE = 4
    RPG_TALE_COLLECTION_REWARD_STAGE_CHALLENGE_NUM = 5
    RPG_TALE_COLLECTION_REWARD_LINKED_ACTIVITY_SCORE = 6
    RPG_TALE_COLLECTION_REWARD_STAGE_SCORE = 7


class RpgTaleFlagType(betterproto.Enum):
    RPG_TALE_FLAG_INVALID = 0
    RPG_TALE_FLAG_MATERIAL = 1
    RPG_TALE_FLAG_MISSION = 2
    RPG_TALE_FLAG_DIALOG = 3
    RPG_TALE_FLAG_ROLE = 4
    RPG_TALE_FLAG_ROLE_STAR_NUM = 5
    RPG_TALE_FLAG_BEGIN_TIME = 6
    RPG_TALE_FLAG_END_TIME = 7
    RPG_TALE_FLAG_PRE_SITE = 8
    RPG_TALE_FLAG_MATERIAL_NUM = 9
    RPG_TALE_FLAG_AVATAR = 10
    RPG_TALE_FLAG_STAGE_CHALLENGE_NUM = 11
    RPG_TALE_FLAG_PLAYER_LEVEL = 12
    RPG_TALE_FLAG_OVERALL = 13
    RPG_TALE_FLAG_TOTAL_STAGE_SCORE = 15
    RPG_TALE_FLAG_STAGE_SCORE = 16
    RPG_TALE_FLAG_ABILITY_LEVEL = 17
    RPG_TALE_FLAG_ABILITY_TOTAL_LEVEL = 18
    RPG_TALE_FLAG_SITE_ALLOW_ENTER = 19
    RPG_TALE_FLAG_SITE_STATUS = 20
    RPG_TALE_FLAG_DROP_LIMIT = 21
    RPG_TALE_FLAG_IS_STAGE_PASSED = 22


class RpgTaleLinkedActivityType(betterproto.Enum):
    RPG_TALE_LINKED_NONE = 0
    RPG_TALE_LINKED_ROGUE_TOWER = 1
    RPG_TALE_LINKED_NEWBIE = 2
    RPG_TALE_LINKED_RPG_DUNGEON = 3
    RPG_TALE_LINKED_RANCH = 4
    RPG_TALE_LINKED_RESTAURANT = 5
    RPG_TALE_LINKED_TOWN = 6
    RPG_TALE_LINKED_MONSTER_CARD = 7
    RPG_TALE_LINKED_DICEY_DUNGEON = 8
    RPG_TALE_LINKED_PVZ = 9
    RPG_TALE_LINKED_QCANDY_BATTLE = 10


class RpgTaleOverallCmpType(betterproto.Enum):
    RPG_TALE_CMP_INVALID = 0
    RPG_TALE_CMP_LESS = 1
    RPG_TALE_CMP_LESS_OR_EQUAL = 2
    RPG_TALE_CMP_EQUAL = 3
    RPG_TALE_CMP_GREATER = 4
    RPG_TALE_CMP_GREATER_OR_EQUAL = 5


class RpgTaleOverallRefreshType(betterproto.Enum):
    RPG_TALE_OVERALL_REFRESH_NONE = 0
    RPG_TALE_OVERALL_REFRESH_DAILY = 1
    RPG_TALE_OVERALL_REFRESH_WEEKLY = 2


class RpgTaleProgressType(betterproto.Enum):
    RPG_TALE_PROGRESS_NONE = 0
    RPG_TALE_PROGRESS_EVENT = 1
    RPG_TALE_PROGRESS_TOWER = 2
    RPG_TALE_PROGRESS_GENERAL_ACTIVITY = 3
    RPG_TALE_PROGRESS_STAGE_SCORE = 4


class RpgTaleRoleStatus(betterproto.Enum):
    RPG_TALE_ROLE_STATUS_INVALID = 0
    RPG_TALE_ROLE_STATUS_LOCKED = 1
    RPG_TALE_ROLE_STATUS_UNLOCKED = 2
    RPG_TALE_ROLE_STATUS_AWAY = 3


class RpgTaleSiteContentType(betterproto.Enum):
    RPG_TALE_SITE_CONTENT_INVALID = 0
    RPG_TALE_SITE_CONTENT_NONE = 1
    RPG_TALE_SITE_CONTENT_MATRIX = 2
    RPG_TALE_SITE_CONTENT_PLOT = 3
    RPG_TALE_SITE_CONTENT_TIPS = 4
    RPG_TALE_SITE_CONTENT_LINK = 5


class RpgTaleSiteStatus(betterproto.Enum):
    RPG_TALE_SITE_STATUS_INVALID = 0
    RPG_TALE_SITE_STATUS_HIDE = 1
    RPG_TALE_SITE_STATUS_SHOW = 2
    RPG_TALE_SITE_STATUS_CONTENT_UNLOCKED = 3
    RPG_TALE_SITE_STATUS_PASSED = 4
    RPG_TALE_SITE_STATUS_CLOSED = 5
    RPG_TALE_SITE_STATUS_CD = 6
    RPG_TALE_SITE_STATUS_DISCARD = 7


class RpgTaleSiteType(betterproto.Enum):
    RPG_TALE_SITE_TYPE_STORY = 1
    RPG_TALE_SITE_TYPE_CLUE = 2
    RPG_TALE_SITE_TYPE_CYCLE = 3
    RPG_TALE_SITE_TYPE_RANK = 4
    RPG_TALE_SITE_TYPE_ENDLESS = 5


class RpgTaleTicketRefreshType(betterproto.Enum):
    RPG_TALE_TICKET_REFRESH_DAILY = 1
    RPG_TALE_TICKET_REFRESH_WEEKLY = 2
    RPG_TALE_TICKET_REFRESH_CUSTOM = 3
    RPG_TALE_TICKET_REFRESH_DAILY_WITH_STORAGE = 4


class SealedModePlayerStatus(betterproto.Enum):
    SEALED_MODE_PLAYER_STATUS_NONE = 0
    SEALED_MODE_PLAYER_STATUS_IN_MATCH = 1
    SEALED_MODE_PLAYER_STATUS_IN_ROOM = 2


class SealedModeStageType(betterproto.Enum):
    SEALED_MODE_PRACTICE = 1
    SEALED_MODE_SP = 2
    SEALED_MODE_MP = 3


class SealedSuiteSelectionStatus(betterproto.Enum):
    SEALED_SUITE_SELECTION_STATUS_NONE = 0
    SEALED_SUITE_SELECTION_STATUS_ING = 1
    SEALED_SUITE_SELECTION_STATUS_FINISH = 2


class SealedSuiteSelectionStep(betterproto.Enum):
    SEALED_SUITE_SELECTION_STEP_NONE = 0
    SEALED_SUITE_SELECTION_STEP_AVATAR = 1
    SEALED_SUITE_SELECTION_STEP_WEAPON = 2
    SEALED_SUITE_SELECTION_STEP_STIGMATA = 3


class SecurityEngineCheckType(betterproto.Enum):
    SECURITY_ENGINE_CHECK_NONE = 0
    SECURITY_ENGINE_CHECK_LOGIN = 1
    SECURITY_ENGINE_CHECK_STAGE = 2


class SecurityPasswordDeviceStatus(betterproto.Enum):
    SECURITY_PASSWORD_DEVICE_UNLOCKED = 0
    SECURITY_PASSWORD_DEVICE_LOCKED = 1


class SecurityPasswordOpType(betterproto.Enum):
    SECURITY_PASSWORD_NONE_OP = 0
    SECURITY_PASSWORD_FAST_UNPROTECT_WEAPON = 1
    SECURITY_PASSWORD_FAST_UNPROTECT_STIGMATA = 2


class SecurityPasswordStatus(betterproto.Enum):
    SECURITY_PASSWORD_NOT_SET = 0
    SECURITY_PASSWORD_IS_SET = 1
    SECURITY_PASSWORD_TOO_MANY_FAILS = 2


class SellCurrencyType(betterproto.Enum):
    SELL_CURRENCY_TYPE_NONE = 0
    SELL_CURRENCY_TYPE_SCOIN = 1
    SELL_CURRENCY_TYPE_PURPLE_JADE = 5


class ShareRewardType(betterproto.Enum):
    SHARE_REWARD_TYPE_NONE = 0
    SHARE_REWARD_TYPE_ONCE = 1
    SHARE_REWARD_TYPE_DAILY = 2


class ShopGoodsPoolUnlockType(betterproto.Enum):
    SHOP_GOODS_POOL_UNLOCK_PLAYER_LEVEL = 1
    SHOP_GOODS_POOL_UNLOCK_MP_LEVEL = 2
    SHOP_GOODS_POOL_UNLOCK_MAX_QUEST_LEVEL = 3
    SHOP_GOODS_POOL_UNLOCK_OPENWORLD_ACTIVITY_LEVEL = 4
    SHOP_GOODS_POOL_UNLOCK_EX_BOSS_MONSTER_LEVEL = 5
    SHOP_GOODS_POOL_UNLOCK_EX_BOSS_SCORE = 6
    SHOP_GOODS_POOL_UNLOCK_ELF = 7
    SHOP_GOODS_POOL_UNLOCK_GLOBALWAR_POINT_NUM = 8
    SHOP_GOODS_POOL_UNLOCK_GLOBALWAR_POINT_ID = 9
    SHOP_GOODS_POOL_UNLOCK_ADVENTURE_LEVEL = 10
    SHOP_GOODS_POOL_UNLOCK_DAILY_DUTY_POINT = 11
    SHOP_GOODS_POOL_UNLOCK_AVATAR = 12
    SHOP_GOODS_POOL_UNLOCK_STAGE = 13
    SHOP_GOODS_POOL_UNLOCK_KINGDOM_WAR_CURRENCY = 14
    SHOP_GOODS_POOL_UNLOCK_MISSION = 15
    SHOP_GOODS_POOL_UNLOCK_SANCTUARY_LEVEL = 16
    SHOP_GOODS_POOL_UNLOCK_GOBACK_LEVEL = 17
    SHOP_GOODS_POOL_UNLOCK_AVATAR_LOCKED = 18
    SHOP_GOODS_POOL_UNLOCK_HAS_GOT_ITEM = 19
    SHOP_GOODS_POOL_UNLOCK_AVATAR_DETAIL = 20
    SHOP_GOODS_POOL_UNLOCK_ELF_DETAIL = 21
    SHOP_GOODS_POOL_UNLOCK_BATTLE_PASS_TICKET = 22
    SHOP_GOODS_POOL_UNLOCK_PRIVILEGE_DETAIL = 23
    SHOP_GOODS_POOL_UNLOCK_HAS_NOT_GOT_ITEM = 24
    SHOP_GOODS_POOL_UNLOCK_BP_LEVEL = 25
    SHOP_GOODS_POOL_UNLOCK_PLAYER_LEVEL_LOCK_ID = 26
    SHOP_GOODS_POOL_UNLOCK_GOBACK_NEWBIE_LEVEL = 27


class ShopType(betterproto.Enum):
    SHOP_NORMAL = 1
    SHOP_ENDLESS = 2
    SHOP_ACTIVITY = 3
    SHOP_EXTRASTORY = 4
    SHOP_ARMADA = 5
    SHOP_GACHATICKET = 6
    SHOP_EXCHANGE_HOUSE = 7
    SHOP_EXTRASTORY_ACTIVITY = 8
    SHOP_MP = 9
    SHOP_EXBOSS = 10
    SHOP_SKIN = 11
    SHOP_MASTER = 12
    SHOP_DORM = 13
    SHOP_FRAGMENT = 14
    SHOP_ACTIVITY_EXCLUDE = 15
    SHOP_MINUTE = 16
    SHOP_DUNGEONS = 17
    SHOP_GOBACK = 18
    SHOP_MASTER_PUPIL = 19
    SHOP_TYPE_ENCORE = 20
    SHOP_TYPE_WANTED = 21
    SHOP_TYPE_ADVENTURE = 22
    SHOP_TYPE_NEWBIE_ACTIVITY = 23
    SHOP_TYPE_VIP_EQUIPMENT = 24
    SHOP_TYPE_GACHA_COIN = 25
    SHOP_TYPE_MAIN_STORY = 26
    SHOP_GOBACK_2 = 27
    SHOP_GOBACK_3 = 28
    SHOP_TYPE_NEWBIE_ACTIVITY_2 = 29
    SHOP_TYPE_NEWBIE_ACTIVITY_3 = 30
    SHOP_TYPE_GOD_WAR = 31
    SHOP_TYPE_CHAPTER = 32
    SHOP_TYPE_SC_DLC = 33
    SHOP_TYPE_BP_ELITE_WORKS = 34
    SHOP_TYPE_BP_STORE = 35
    SHOP_TYPE_BP_ELITE_WORKS_VINTAGE = 36
    SHOP_TYPE_NEWBIE_ACTIVITY_4 = 37
    SHOP_TYPE_NEWBIE_ACTIVITY_5 = 38
    SHOP_TYPE_CHAPTER_OW = 39
    SHOP_OPENWORLD = 100
    SHOP_OPENWORLD_SENIOR = 101
    SHOP_OPENWORLD_NEW = 102
    SHOP_OPENWORLD_ACTIVITY = 103
    SHOP_TYPE_GIFT_PACK = 201
    SHOP_ACTIVITY_2 = 302
    SHOP_ACTIVITY_3 = 303
    SHOP_ACTIVITY_4 = 304
    SHOP_ACTIVITY_5 = 305
    SHOP_ACTIVITY_6 = 306
    SHOP_ACTIVITY_7 = 307
    SHOP_ACTIVITY_8 = 308
    SHOP_WEST = 1001


class SideMissionCond(betterproto.Enum):
    SIDE_MISSION_COND_AVATAR_GOODFEEL = 1


class SkillDamageCollisionType(betterproto.Enum):
    SKILL_DAMAGE_COLLISION_TYPE_POINT = 1
    SKILL_DAMAGE_COLLISION_TYPE_CIRCLE = 2
    SKILL_DAMAGE_COLLISION_TYPE_RECT = 3
    SKILL_DAMAGE_COLLISION_TYPE_SECTOR = 4


class SlgBattleRankType(betterproto.Enum):
    SLG_BATTLE_RANK_NORMAL_POINT = 1
    SLG_BATTLE_RANK_BIG_BOSS = 2
    SLG_BATTLE_RANK_COUNTRY = 3


class SlgBossType(betterproto.Enum):
    SLG_BOSS_TYPE_NONE = 0
    SLG_BOSS_TYPE_SMALL_BOSS = 1
    SLG_BOSS_TYPE_BIG_BOSS = 2


class SlgBroadcastType(betterproto.Enum):
    SLG_BROADCAST_TYPE_OCCUPY = 1
    SLG_BROADCAST_TYPE_SCORE_STREAK = 2
    SLG_BROADCAST_TYPE_OCCUPY_STREAK = 3


class SlgBuffType(betterproto.Enum):
    SLG_BUFF_TYPE_NONE = 0
    SLG_BUFF_TYPE_ACTIVITY_STAMINA_COST = 1
    SLG_BUFF_TYPE_STAGE_SCORE = 2
    SLG_BUFF_TYPE_SETTLE_SCORE = 3
    SLG_BUFF_TYPE_STAGE = 4


class SlgBuildingType(betterproto.Enum):
    SLG_BUILDING_TYPE_OCCUPY_OWNER_BUFF = 1
    SLG_BUILDING_TYPE_OCCUPY_OTHERS_BUFF = 2
    SLG_BUILDING_TYPE_SMALL_BOSS = 3
    SLG_BUILDING_TYPE_BIG_BOSS = 4


class SlgMatchFactorType(betterproto.Enum):
    SLG_MATCH_FACTOR_TYPE_NONE = 0
    SLG_MATCH_FACTOR_TYPE_CRYSTAL_COST = 1
    SLG_MATCH_FACTOR_TYPE_PLAYER_LEVEL = 2
    SLG_MATCH_FACTOR_TYPE_TOP_AVATAR_COMBAT_SUM = 3
    SLG_MATCH_FACTOR_TYPE_CUR_BATTLE_SCORE = 4


class SlgScoreRewardType(betterproto.Enum):
    SLG_SCORE_REWARD_TYPE_NONE = 0
    SLG_SCORE_REWARD_TYPE_PERSONAL_TOTAL = 1
    SLG_SCORE_REWARD_TYPE_COUNTRY = 2


class SnsShowPriviledgeState(betterproto.Enum):
    SNS_SHOW_NONE = 0
    SNS_SHOW_OPEN_TO_PUBLIC = 1
    SNS_SHOW_OPEN_TO_FRIENDS = 2
    SNS_SHOW_OPEN_TO_SELF = 3


class SnsShowType(betterproto.Enum):
    SNS_NONE = 0
    SNS_MAIN = 1
    SNS_WAR_HISTORY = 2
    SNS_WIKI = 3
    SNS_MSG_CARD = 4


class SpecialArmadaMatrixGenericItem(betterproto.Enum):
    ARMADA_MATRIX_GENERIC_ITEM_CANDY = 7002


class SpecialItemId(betterproto.Enum):
    ITEM_GREEN_STONE = 4
    ITEM_PURPLE_JADE = 5
    ITEM_FRIENDS_POINT = 6
    ITEM_SCOIN = 100
    ITEM_FIGHT_OPENWORLD_STAGE_BOSS = 901
    ITEM_ARMADA_WAR_ENERGE_ITEM_ID = 914
    ITEM_DLC_COIN = 801
    ITEM_DLC_REVIVE_COIN = 803
    ITEM_SC_DLC_REVIVE_COIN = 835
    ITEM_STAMINA_MEDICINE = 7033
    ITEM_BENG_HUAI_FRAGMENTS = 7032
    ITEM_WEEK_DAY_ACTIVITY_COIN = 7034
    ITEM_SPEED_UP_STAGE = 9007
    ITEM_ROGUE_STAGE_COIN = 9008


class SpecialMailId(betterproto.Enum):
    MAIL_INVITE = 1001
    MAIL_INVITEE = 1002
    MAIL_ACTIVITY_INVITE = 1003
    MAIL_ARMADA_KICK = 2001
    MAIL_ARMADA_DISSOLVE = 2002
    MAIL_RECLAIM_RANK_REWARD = 2017
    MAIL_CHAPTER_RESET = 2021
    MAIL_CHAPTER_RESET_AVATAR_COMPENSATE = 2022
    MAIL_MP_RAID_HCOIN_COMPENSATE = 2023
    MAIL_ARMADA_CHANGE_NAME = 2101
    MAIL_ARMADA_LEADER_OFFLINE_NOTICE = 2102
    MAIL_ARMADA_IMPEACH_LEADER_START = 2103
    MAIL_ARMADA_IMPEACH_LEADER_SUCCESS = 2104
    MAIL_ARMADA_IMPEACH_LEADER_FAIL = 2105
    MAIL_ARMADA_IMPEACH_LEADER_CANCEL = 2106
    MAIL_MP_NEWBIE = 3001
    MAIL_MP_REPORT = 3002
    MAIL_PAY_CARD = 4001
    MAIL_PAY_SUBS = 4002
    MAIL_SECURITY_PASSWORD_RESET = 4101
    MAIL_OPENWORLD_QUEST_REWARD = 5001
    MAIL_SIMULATE_REWARD = 6004
    MAIL_ARMADA_WAREHOUSE_AUTO_CANCEL = 6023
    MAIL_CHATWORLD_DISH_COMPENSATE = 6024
    MAIL_RAFFLE_COMPENSATE = 6025
    MAIL_BULLETIN_SCORE_REWARD = 6039
    MAIL_BIRTHDAY_REWARD = 6101
    MAIL_RAID_RANK_REWARD = 6201
    MAIL_RAID_SCORE_REWARD = 6202
    MAIL_RAID_SPECIAL_REWARD = 6203
    MAIL_SEASON_WEEK_RANK_REWARD = 6301
    MAIL_SEASON_RANK_REWARD = 6302
    MAIL_SEASON_SCORE_REWARD = 6303
    MAIL_EXTRA_STORY_COMPENSATE_REWARD = 6401
    MAIL_WORLD_BOSS_SCORE_REWARD = 6501
    MAIL_WORLD_BOSS_RANK_REWARD = 6502
    MAIL_WORLD_BOSS_KILL_BOSS_REWARD = 6503
    MAIL_HCOIN_GACHA_RESET = 6601
    MAIL_GACHA_EX_REWARD = 6602
    MAIL_COUPLE_TOWER_ACTIVITY_FLOOR_REWARD = 6801
    MAIL_PLAYER_WEEKLY_REPORT = 6901
    MAIL_MASTER_PUPIL_MASTER_REWARD_0_STAR = 7001
    MAIL_MASTER_PUPIL_MASTER_REWARD_1_STAR = 7002
    MAIL_MASTER_PUPIL_MASTER_REWARD_2_STAR = 7003
    MAIL_MASTER_PUPIL_MASTER_REWARD_3_STAR = 7004
    MAIL_MASTER_PUPIL_PUPIL_REWARD = 7005
    MAIL_MASTER_PUPIL_DISMISS = 7006
    MAIL_ARMADA_MATRIX_DEPOSIT_REWARD = 7101
    MAIL_ARMADA_WAR_SEASON_REWARD = 7102
    MAIL_ARMADA_WAR_BATTLE_REWARD = 7103
    MAIL_ARMADA_WAR_BATTLE_CONTRIBUTION_REWARD = 7104
    MAIL_ARMADA_WAR_BATTLE_RANK_REWARD = 7105
    MAIL_ARMADA_WAR_APPLY_NOTIFY_MAIL = 7106
    MAIL_ARMADA_WAR_ARMADA_RESET_MAIL = 7107
    MAIL_ARMADA_WAR_PLAYER_BATTLE_NUM_REWARD = 7108
    MAIL_ARMADA_FIRST_JOIN_REWARD = 7109
    MAIL_TIME_LIMIT_ADD_UP_REWARD = 7201
    MAIL_TVT_FIRST_DIVISION_UP_REWARD = 7202
    MAIL_TVT_SEASON_OFF_REWARD = 7203
    MAIL_CREDIT_BEHAVIOR_SELF_NOTIFY = 7209
    MAIL_CREDIT_BEHAVIOR_OTHER_NOTIFY = 7210
    MAIL_CREDIT_RANK_REDUCE_NOTIFY = 7211
    MAIL_CREDIT_RANK_IMPROVE_NOTIFY = 7212
    MAIL_KINGDOM_WAR_RANK_REWARD = 7301
    MAIL_KINGDOM_WAR_PERCENT_RANK_REWARD = 7302
    MAIL_KINGDOM_WAR_PERCENT_SCORE_REWARD = 7303
    MAIL_KINGDOM_WAR_PHASE_REWARD = 7304
    MAIL_ARMADA_MATRIX_ARMADA_REWARD = 7305
    MAIL_MP_RAID_RESET_MISSION_REWARD = 7402
    MAIL_BLOCK_ZONE_MISSION_REWARD = 7403
    MAIL_AVATAR_STAR_UP_RETURN = 7601
    MAIL_ROGUE_TOWER_ENDLESS_SCORE_REWARD = 7602
    MAIL_DREAM_REWARD = 7604
    MAIL_SLG_BATTLE_COUNTRY_RANK_REWARD = 7607
    MAIL_SINGLE_WANTED_WEEKLY_ENGAGE_REWARD = 7608
    MAIL_SINGLE_WANTED_BOX_FIXED_REWARD = 7609
    MAIL_SINGLE_WANTED_BOX_CHOICE_REWARD = 7610
    MAIL_SLG_BATTLE_SCORE_REWARD = 7611
    MAIL_SLG_ACTIVITY_SCORE_REWARD = 7612
    MAIL_WANTED_OFF_COMPENSATE_REWARD = 7613
    MAIL_OPENWORLD_CHAPTER_LIMIT_REWARD_COMPENSATE = 7617
    MAIL_SC_DLC_DAILY_QUEST_COMPENSATE = 7619
    MAIL_NEWBIE_LEVEL_RUSH_COMPENSATE = 7620
    MAIL_SC_DLC_EVENT_COMPENSATE = 7621
    MAIL_MODIFY_PLAYER_DATA_580_LEVEL_DATA_COMPENSATE = 7625
    MAIL_NEWBIE_MATERIAL_RECYCLE = 8058


class SpecialStageId(betterproto.Enum):
    STAGE_ID_ENDLESS = 900101
    STAGE_ID_ROGUE = 900201
    STAGE_ID_ARMADA = 900301
    STAGE_ID_ARMADA_MP = 900302
    STAGE_ID_OPENWORLD = 900401
    STAGE_ID_OPENWORLD_BOSS = 900402
    STAGE_ID_OPENWORLD_DEFENSE = 900408
    STAGE_ID_EXBOSS = 900501
    STAGE_ID_ARMADA_MATRIX = 900601
    STAGE_ID_SC_DLC_TOWER = 900701
    STAGE_ID_SEVEN_CHAPTER_CG = 901000
    STAGE_ID_ARMADA_BOSS = 100000000


class SpecificRankType(betterproto.Enum):
    SPECIFIC_RANK_NONE = 0
    SPECIFIC_RANK_GLOBAL_GOODS = 1


class StageChallengeType(betterproto.Enum):
    CHALLENGE_LIMIT_AVATAR = 1
    CHALLENGE_LIMIT_AVATAR_KILLED = 2
    CHALLENGE_MAX_COMBO = 3
    CHALLENGE_LIMIT_BE_HIT = 4
    CHALLENGE_LIMIT_LEVEL_TIME = 5
    CHALLENGE_LIMIT_WITCH_TIME_TRIGGERED = 6
    CHALLENGE_MAX_DAMAGE_IN_WITCH_TIME = 7
    CHALLENGE_MAX_ULTIMATE_SKILL_TRIGGERED = 8
    CHALLENGE_MAX_DAMAGE_IN_CERTAIN_TIME = 9
    CHALLENGE_MAX_ULTIMATE_SKILL_TRIGGERED_BY_DISTINCT_AVATAR = 10
    CHALLENGE_LIMIT_BE_HIT_DOWN = 11
    CHALLENGE_MAX_AVATAR_CLASS_IN_TEAM = 12
    CHALLENGE_MAX_MONSTER_KILLED = 13
    CHALLENGE_MAX_AVATAR_NATURE_IN_TEAM = 14
    CHALLENGE_LIMIT_TOTAL_DAMAGE = 15
    CHALLENGE_HELPER_AVATAR_ALIVE = 16
    CHALLENGE_LIMIT_TRAP_TRIGGERED = 17
    CHALLENGE_MAX_BOX_OPENED = 18
    CHALLENGE_MAX_DEBUFF_ADD = 19
    CHALLENGE_LIMIT_BE_ADDED_DEBUFF = 20
    CHALLENGE_MAX_ALL_DAMAGE_IND_WITCH_TIME = 21
    CHALLENGE_MAX_MONSTER_KILLED_BY_SWITCH_IN_ATTACK = 22
    CHALLENGE_MAX_MONSTER_KILLED_IN_WITCH_TIME = 23
    CHALLENGE_MONSTER_LAST_KILLED_BY_SWITCH_IN_ATTACK = 24
    CHALLENGE_MAX_MONSTER_KILLED_IN_CERTAIN_TIME = 25
    CHALLENGE_MAX_MONSTER_HIT_AIR = 26
    CHALLENGE_FINISH_STAGE_NORMAL = 27
    CHALLENGE_FINISH_STAGE_FAST = 28
    CHALLENGE_FINISH_STAGE_VERY_FAST = 29
    CHALLENGE_MONSTER_KILLED_BY_BRANCH = 30
    CHALLENGE_QTE_TRIGGERED = 31
    CHALLENGE_MAX_MONSTER_KILLED_BY_ASSASSIN = 32
    CHALLENGE_MAX_MONSTER_CONTINOUS_KILLED_BY_ASSASSIN = 33
    CHALLENGE_MAX_ELITE_MONSTER_KLLED = 34
    CHALLENGE_LIMIT_DISCOVERED = 35
    CHALLENGE_MAX_DEFEND_OBJECT_DAMAGE = 36
    CHALLENGE_MAX_TEAM_SKILL_TRIGGERED = 37
    CHALLENGE_ALL_STORY_MISSION_COMPLETE = 38
    CHALLENGE_MAX_SCORE = 39
    CHALLENGE_MAX_TEAM_SKILL_TRIGGERED_FOR_ALL_TEAM_MEMBER = 40
    CHALLENGE_MAX_MONSTER_KILLED_IN_WITCH_TIME_FOR_ALL_TEAM_MEMBER = 41
    CHALLENGE_MAX_MONSTER_KILLED_FOR_ALL_TEAM_MEMBER = 42
    CHALLENGE_MONSTER_KILLED_BY_BRANCH_FOR_ALL_TEAM_MEMBER = 43
    CHALLENGE_MAX_QTE_TRIGGERED_FOR_ALL_TEAM_MEMBER = 44
    CHALLENGE_LIMIT_EVADE_SUCCESS_TRIGGERED_FOR_ALL_TEAM_MEMBER = 45
    CHALLENGE_MAX_ULTIMATE_SKILL_TRIGGERED_FOR_ALL_TEAM_MEMBER = 46
    CHALLENGE_LIMIT_AVATAR_KILLED_FOR_ALL_TEAM_MEMBER = 47
    CHALLENGE_MONSTER_KILLED_BY_QTE_FOR_ALL_TEAM_MEMBER = 48
    CHALLENGE_CLIENT_CUSTOM = 49
    CHALLENGE_CUSTOM_BUTTON = 50
    CHALLENGE_LIMIT_LEVEL_TIME2 = 51
    CHALLENGE_MONSTERCARD_LIMIT_AVATARSIDE_MONSTER_KILLED = 52


class StageDifficulty(betterproto.Enum):
    STAGE_DIFFICULTY_NORMAL = 1
    STAGE_DIFFICULTY_HARD = 2
    STAGE_DIFFICULTY_HELL = 3


class StageEndStatus(betterproto.Enum):
    STAGE_WIN = 1
    STAGE_NOT_MEET_CONDITION = 2
    STAGE_All_DEAD = 3
    STAGE_EXIT = 4


class StageEnterTimesType(betterproto.Enum):
    STAGE_ENTER_TIMES_DAILY = 0
    STAGE_ENTER_TIMES_WEEKLY = 1


class StageOpenStatus(betterproto.Enum):
    STAGE_NOT_OPEN = 1
    STAGE_OPENED = 2
    STAGE_CLOSED = 3


class StagePassType(betterproto.Enum):
    STAGE_PASS_TYPE_NORMAL = 0
    STAGE_PASS_TYPE_BURDEN_ALLEVIATION = 1


class StageRecordType(betterproto.Enum):
    STAGE_RECORD_SCORE = 1
    STAGE_RECORD_TIME = 2
    STAGE_RECORD_TOTAL_SCORE = 3
    STAGE_RECORD_BATTLE_SCORE = 4
    STAGE_RECORD_BATTLE_SCORE_NO_COIN = 5


class StageResetType(betterproto.Enum):
    STAGE_RESET_TYPE_RESET = 0
    STAGE_RESET_TYPE_ADD = 1


class StageStatus(betterproto.Enum):
    STAGE_LOCKED = 1
    STAGE_DOING = 2
    STAGE_DONE = 3


class StageTagRestrictType(betterproto.Enum):
    STAGE_TAG_RESTRICT_NONE = 0
    STAGE_TAG_RESTRICT_TAG = 1
    STAGE_TAG_RESTRICT_NO_TAG = 2
    STAGE_TAG_RESTRICT_ATTRIBUTE = 3
    STAGE_TAG_RESTRICT_NO_ATTRIBUTE = 4
    STAGE_TAG_RESTRICT_ROLE = 5
    STAGE_TAG_RESTRICT_NO_ROLE = 6


class StageType(betterproto.Enum):
    STAGE_STORY = 1
    STAGE_WEEK_DAY = 2
    STAGE_BEFALL = 3
    STAGE_ENDLESS = 4
    STAGE_NUCLEAR = 5
    STAGE_EXTRA_STORY = 7
    STAGE_ROGUE = 9
    STAGE_ARMADA = 10
    STAGE_OPENWORLD = 11
    STAGE_OPENWORLD_BOSS = 12
    STAGE_TUTORIAL = 13
    STAGE_CAMPWAR = 14
    STAGE_EX_BOSS = 15
    STAGE_MINUTE = 16
    STAGE_SEALED = 17
    STAGE_WORLDBOSS = 18
    STAGE_LEVELMATRIX = 19
    STAGE_PUSHTOWER = 20
    STAGE_TEAM_ASSAULT = 21
    STAGE_GENERAL_ACTIVITY = 22
    STAGE_AVATAR_TRAINING = 23
    STAGE_ARMADA_WAR = 24
    STAGE_DUNGEONS = 25
    STAGE_OPENWORLD_DEFENSE = 26
    STAGE_RECLAIM = 27
    STAGE_OPENWORLD_BOSS_MP = 28
    STAGE_OPENWORLD_ENDLESS = 29
    STAGE_MATRIX_NORMAL = 30
    STAGE_MATRIX_QAVATAR = 31
    STAGE_COUPLE_TOWER = 32
    STAGE_CAMPAIGN = 33
    STAGE_TOWER_RAID = 34
    STAGE_KINGDOM_WAR = 35
    STAGE_TVT = 36
    STAGE_QUANTUM_ENDLESS = 37
    STAGE_WANTED = 38
    STAGE_QAVATAR_PVE = 39
    STAGE_DLC_TOWER = 40
    STAGE_ENDLESS_SINGLE = 41
    STAGE_MONOPOLY_BOSS = 42
    STAGE_ADVENTURE_GROUP = 43
    STAGE_GLOBAL_WAR = 44
    STAGE_GRATUITY = 45
    STAGE_NINJA = 46
    STAGE_SINGLE_RAID_STEP = 47
    STAGE_ARMADA_STAGE_SCORE_ACTIVITY = 48
    STAGE_NEWBIE_CHALLENGE_ACTIVITY = 49
    STAGE_CHALLENGE_WAR = 50
    STAGE_MASSIVE_WAR = 51
    STAGE_SANCTUARY = 52
    STAGE_CRISIS_MODE = 53
    STAGE_SCHEDULED_MAP_SITE = 54
    STAGE_EXAMINATION = 55
    STAGE_MONOPOLY_MONSTER = 56
    STAGE_ULTIMATE_ENDLESS = 57
    STAGE_HYBRID = 58
    STAGE_DAILY_MP = 59
    STAGE_ULTRA_ENDLESS = 60
    STAGE_BUFF_TOWER = 61
    STAGE_ROGUE_TOWER = 62
    STAGE_ROGUE_TOWER_ENDLESS = 64
    STAGE_CHATWORLD_BEAST = 65
    STAGE_SLG = 66
    STAGE_THEME_WANTED = 67
    STAGE_GOD_WAR = 68
    STAGE_HYBRID_RELAY = 69
    STAGE_GENSHIN_LD = 70
    STAGE_RANCH = 71
    STAGE_SINK_CITY_DLC_PREHEAT = 72
    STAGE_SC_DLC_CHALLENGE = 73
    STAGE_OW_CHAPTER_TOWER = 74
    STAGE_OW_CHAPTER_ENDLESS_TOWER = 75
    STAGE_CHATWORLD_BOX = 76
    STAGE_SC_DLC_MP = 77
    STAGE_GREEDY_ENDLESS = 78
    STAGE_OW_CHAPTER_CYCLE = 79
    STAGE_OW_HUNT_ACTIVITY = 80
    STAGE_FRONT_ENDLESS = 81
    STAGE_MONSTER_CARD_NORMAL = 82
    STAGE_MONSTER_CARD_BOSS = 83
    STAGE_MONSTER_CARD_TOWER = 84
    STAGE_DICEY_DUNGEON_STORY = 85
    STAGE_DICEY_DUNGEON_SCHEDULE = 86
    STAGE_BUFF_ASSIST = 87
    STAGE_QCANDY_TUTORIAL = 88
    STAGE_QCANDY_PVP = 89


class StigmataPosition(betterproto.Enum):
    STIGMATA_UP = 1
    STIGMATA_MID = 2
    STIGMATA_DOWN = 3
    STIGMATA_MAX = 4


class StigmataRefineTimesType(betterproto.Enum):
    STIGMATA_REFINE_TIMES_ONE = 1
    STIGMATA_REFINE_TIMES_TEN = 10


class StigmataRefineType(betterproto.Enum):
    STIGMATA_REFINE_NORMAL = 1
    STIGMATA_REFINE_ADD_SLOT = 2
    STIGMATA_REFINE_SPECIAL = 3
    STIGMATA_REFINE_LOCK = 4


class StigmataType(betterproto.Enum):
    STIGMATA_SLOT_1 = 1
    STIGMATA_SLOT_2 = 2
    STIGMATA_SLOT_3 = 3


class StorySweepGroupType(betterproto.Enum):
    STORY_SWEEP_GROUP_AVATAR_FRAGMENT = 1
    STORY_SWEEP_GROUP_MATERIAL = 2
    STORY_SWEEP_GROUP_ACTIVITY = 3
    STORY_SWEEP_GROUP_MATERIAL_NEW = 4


class SupportActivityType(betterproto.Enum):
    ACTIVITY_TYPE_GLOBAL_SUPPORT = 0
    ACTIVITY_TYPE_NORMAL = 1


class SystemChatMsgType(betterproto.Enum):
    CHAT_MSG_NONE = 0
    CHAT_MSG_GACHA = 1
    CHAT_MSG_LOBBY = 2
    CHAT_MSG_FORGE = 3
    CHAT_MSG_SCRATCH = 4


class TeamAssaultActivityScoreType(betterproto.Enum):
    TEAM_ASSAULT_ACTIVITY_SCORE_ACCUM = 1
    TEAM_ASSAULT_ACTIVITY_SCORE_MAX = 2


class TeamRestrictType(betterproto.Enum):
    TEAM_RESTRICT_TYPE_AVATAR_NUM = 1
    TEAM_RESTRICT_TYPE_AVATAR_CLASS_NUM = 2
    TEAM_RESTRICT_TYPE_AVATAR_EACH_LEVEL = 3
    TEAM_RESTRICT_TYPE_AVATAR_EACH_STAR = 4
    TEAM_RESTRICT_TYPE_AVATAR_ONE_STAR = 5
    TEAM_RESTRICT_TYPE_AVATAR_CLASS_NOT_SAME = 6
    TEAM_RESTRICT_TYPE_AVATAR_ATTR_NOT_SAME = 7
    TEAM_RESTRICT_TYPE_AVATAR_EACH_ATTR = 8
    TEAM_RESTRICT_TYPE_AVATAR_NOT_ATTR = 9
    TEAM_RESTRICT_TYPE_AVATAR_EACH_CLASS = 10
    TEAM_RESTRICT_TYPE_AVATAR_NOT_CLASS = 11
    TEAM_RESTRICT_TYPE_HAS_AVATAR_ID = 12
    TEAM_RESTRICT_TYPE_AVATAR_NOT_ID = 13
    TEMA_RESTRICT_TYPE_ROLE_AVATAR_NUM = 15
    TEAM_RESTRICT_TYPE_ROLE_LIST = 16
    TEAM_RESTRICT_TYPE_IN_AVATAR_LIST = 17
    TEAM_RESTRICT_TYPE_RESISTANCE = 18
    TEAM_RESTRICT_TYPE_HAS_ELF = 19
    TEAM_RESTRICT_TYPE_AVATAR_EACH_TAG_LIST = 20
    TEAM_RESTRICT_TYPE_AVATAR_NOT_TAG_LIST = 21
    TEAM_RESTRICT_TYPE_AVATAR_ONE_TAG = 22
    TEAM_RESTRICT_TYPE_AVATAR_TAG_NUM = 23
    TEAM_RESTRICT_TYPE_AVATAR_ATTR_NUM = 24
    TEAM_RESTRICT_TYPE_AVATAR_ATTR_SAME_NUM = 25
    TEAM_RESTRICT_TYPE_IN_RPG_ROLE_LIST = 26


class TileBarrierType(betterproto.Enum):
    TILE_BARRIER_TYPE_NONE = 0
    TILE_BARRIER_TYPE_PERMANENT = 1
    TILE_BARRIER_TYPE_BLOCK = 2
    TILE_BARRIER_TYPE_STOP_ON_PLAYER = 3
    TILE_BARRIER_TYPE_STOP_ON_ONCE = 4
    TILE_BARRIER_TYPE_NON_ROADBLOCK = 5


class TileEntityType(betterproto.Enum):
    TILE_ENTITY_TYPE_NONE = 0
    TILE_ENTITY_TYPE_PLAYER = 1
    TILE_ENTITY_TYPE_NPC = 2
    TILE_ENTITY_TYPE_ROADBLOCK = 3
    TILE_ENTITY_TYPE_TOWN_AVATAR = 4
    TILE_ENTITY_TYPE_TOWN_BUILDING = 5


class TileFloorStatus(betterproto.Enum):
    TILE_FLOOR_STATUS_NONE = 0
    TILE_FLOOR_STATUS_LOCKED = 1
    TILE_FLOOR_STATUS_UNLOCKED = 2
    TILE_FLOOR_STATUS_VISTIED = 3


class TileMoveType(betterproto.Enum):
    TILE_MOVE_WALK = 0
    TILE_MOVE_TELEPORT = 1
    TILE_MOVE_KNOCK_OFF = 2


class TimeLimitAddUpType(betterproto.Enum):
    ADD_UP_VIP_POINT_ALL = 1
    ADD_UP_HCOIN_COST = 2
    ADD_UP_SCOIN_COST = 3
    ADD_UP_STAMINA_COST = 4
    ADD_UP_HCOIN_GACHA = 5
    ADD_UP_EXP = 6
    ADD_UP_VIP_POINT = 7


class TowerRaidRating(betterproto.Enum):
    TOWER_RAID_RATING_NONE = 0
    TOWER_RAID_RATING_DEGRADE = 1
    TOWER_RAID_RATING_KEEP = 2
    TOWER_RAID_RATING_UPGRADE = 3


class TownActivityChallengeCmpType(betterproto.Enum):
    TOWN_ACTIVITY_CHALLENGE_CMP_GREATER = 1
    TOWN_ACTIVITY_CHALLENGE_CMP_LESS = 2
    TOWN_ACTIVITY_CHALLENGE_CMP_EQUAL = 3
    TOWN_ACTIVITY_CHALLENGE_CMP_GREATER_EQUAL = 4
    TOWN_ACTIVITY_CHALLENGE_CMP_LESS_EQUAL = 5


class TownActivityChallengeFinishWay(betterproto.Enum):
    TOWN_ACTIVITY_CHALLENGE_BUILDING_HP = 1
    TOWN_ACTIVITY_CHALLENGE_AVATAR_DIE_TIMES = 2
    TOWN_ACTIVITY_CHALLENGE_BUILDING_TIMES = 3
    TOWN_ACTIVITY_CHALLENGE_STRENTH_AVATAR_NUM = 4
    TOWN_ACTIVITY_CHALLENGE_COIN_NUM = 5


class TownActivityChallengeRecordType(betterproto.Enum):
    TOWN_ACTIVITY_CHALLENGE_RECORD_IN_GAME = 1
    TOWN_ACTIVITY_CHALLENGE_RECORD_SETTLE_GAME = 2


class TownActivityCondType(betterproto.Enum):
    TOWN_ACTIVITY_COND_NONE = 0
    TOWN_ACTIVITY_COND_TOTAL_STRENGTH = 1
    TOWN_ACTIVITY_COND_TOTAL_SPEED = 2
    TOWN_ACTIVITY_COND_TOTAL_LUCK = 3
    TOWN_ACTIVITY_COND_COIN_MATERIAL_NUM = 4
    TOWN_ACTIVITY_COND_BUILDING_NUM = 5


class TownActivityConst(betterproto.Enum):
    TOWN_ACTIVITY_ROUND_PER_SECOND = 50
    TOWN_ACTIVITY_STEP_PER_TILE_CELL = 10000
    TOWN_ACTIVITY_MAX_HP_RATIO = 100000


class TownActivityGoodsLimitType(betterproto.Enum):
    TOWN_ACTIVITY_GOODS_LIMIT_SHOP = 1
    TOWN_ACTIVITY_GOODS_LIMIT_GLOBAL = 2


class TownActivityMaterialUseType(betterproto.Enum):
    TOWN_ACTIVITY_MATERIAL_USE_BUILDING = 1
    TOWN_ACTIVITY_MATERIAL_USE_AVATAR_BUFF = 2
    TOWN_ACTIVITY_MATERIAL_USE_KILL_MONSTER = 3
    TOWN_ACTIVITY_MATERIAL_USE_GLOBAL_BUFF = 4


class TownBuffDurationType(betterproto.Enum):
    TOWN_BUFF_DURATION_PERMANENT = 0
    TOWN_BUFF_DURATION_BATTLE = 1
    TOWN_BUFF_DURATION_STEP = 2
    TOWN_BUFF_DURATION_BOSS = 3


class TownBuffType(betterproto.Enum):
    TOWN_BUFF_ADD_STRENGTH_RATIO = 1
    TOWN_BUFF_ADD_STRENGTH = 2
    TOWN_BUFF_ADD_LUCK = 3
    TOWN_BUFF_COIN_RATIO = 4
    TOWN_BUFF_ADD_MATERIAL = 5
    TOWN_BUFF_ADD_DAMAGE_RATIO = 6
    TOWN_BUFF_CHANGE_TERRAIN = 7
    TOWN_BUFF_CHANGE_GROUND = 8
    TOWN_BUFF_ADD_DAMAGE_RECEIVED = 9
    TOWN_BUFF_RPG_EVENT = 10
    TOWN_BUFF_HEAL_HP_BY_RATIO = 11
    TOWN_BUFF_HEAL = 12
    TOWN_BUFF_CHECK_IN = 13
    TOWN_BUFF_CHECK_OUT = 14
    TOWN_BUFF_POSTPONE_BOSS = 15
    TOWN_BUFF_CREATE_ENTITY = 16
    TOWN_BUFF_REPLACE_ENTITY = 17
    TOWN_BUFF_ADD_BRICK = 18
    TOWN_BUFF_LOSE_GAME = 19
    TOWN_BUFF_RESET_GROUND = 20
    TOWN_BUFF_ADD_SPEED = 21
    TOWN_BUFF_CHECK_IN_OPTIONAL = 22
    TOWN_BUFF_ADD_MONSTER = 23
    TOWN_BUFF_ADD_EVENT = 24
    TOWN_BUFF_WIN_GAME = 25
    TOWN_BUFF_RESET_TERRAIN = 26
    TOWN_BUFF_BATTLE_SKILL = 27
    TOWN_BUFF_CHANGE_BUILDING = 28
    TOWN_BUFF_REDUCE_BOSS_INITIAL_HP_RATIO = 29
    TOWN_BUFF_ATTACK_ENEMY = 30


class TownBuildingSkillCondType(betterproto.Enum):
    TOWN_BUILDING_COND_NONE = 0
    TOWN_BUILDING_COND_SIDE_BUILDING = 1
    TOWN_BUILDING_COND_SIDE_BUILDING_MAX_NUM = 2
    TOWN_BUILDING_COND_NO_SIDE_BUILDING = 3
    TOWN_BUILDING_COND_SIDE_ROAD = 4
    TOWN_BUILDING_COND_TOTAL_BUILDING_NUM = 5
    TOWN_BUILDING_COND_PASS_AVATAR = 6
    TOWN_BUILDING_COND_SIDE_ROAD_WITH_TERRAIN = 7


class TownBuildingSkillTargetType(betterproto.Enum):
    TOWN_TARGET_NONE = 0
    TOWN_TARGET_AVATAR_CHECK_IN = 1
    TOWN_TARGET_ALL_AVATAR = 2
    TOWN_TARGET_ATTRIBUTE_AVATAR = 3
    TOWN_TARGET_PASSED_AVATAR_IN_CROSS = 4
    TOWN_TARGET_ROAD_IN_CROSS = 5
    TOWN_TARGET_ROAD_IN_ROUND = 6
    TOWN_TARGET_BUILDING = 7
    TOWN_TARGET_PASSED_AVATAR_IN_ROUND = 8
    TOWN_TARGET_SPECIFIC_AVATAR = 9
    TOWN_TARGET_RANDOM_EMPTY_ROAD_IN_ROUND = 10
    TOWN_TARGET_RANDOM_MONSTER_AOE = 11
    TOWN_TARGET_BOSS = 12


class TownPropType(betterproto.Enum):
    TOWN_NONE = 0
    TOWN_AVATAR = 1
    TOWN_MONSTER = 2


class TownRangeType(betterproto.Enum):
    TOWN_RANGE_NONE = 0
    TOWN_RANGE_CROSS = 1
    TOWN_RANGE_ROUND = 2


class TrialWarshipTimeType(betterproto.Enum):
    TRIAL_WARSHIP_TIME_UNTIL = 1
    TRIAL_WARSHIP_TIME_DURATION = 2


class TvtBattleJudgeType(betterproto.Enum):
    TVT_BATTLE_JUDGE_NONE = 0
    TVT_BATTLE_JUDGE_WIN_WHEN_ZERO = 1
    TVT_BATTLE_JUDGE_LOSE_WHEN_ZERO = 2


class TvtBattleMemberStatus(betterproto.Enum):
    TVT_BATTLE_MEMBER_STATUS_NONE = 0
    TVT_BATTLE_MEMBER_STATUS_ONLINE = 1
    TVT_BATTLE_MEMBER_STATUS_OFFLINE = 2


class TvtStagePickType(betterproto.Enum):
    TVT_STAGE_PICK_NONE = 0
    TVT_STAGE_PICK_FREE = 1
    TVT_STAGE_PICK_RANDOM = 2


class TvtType(betterproto.Enum):
    TVT_NONE = 0
    TVT_NORMAL = 1
    TVT_RANKING = 2


class UserRankType(betterproto.Enum):
    USER_RANK_NONE = 0
    USER_RANK_NORMAL = 1
    USER_RANK_PERCENT = 2


class UserType(betterproto.Enum):
    USER_TYPE_NONE = 0
    USER_TYPE_ANDROID = 1
    USER_TYPE_IOS = 2
    USER_TYPE_PC = 3
    USER_TYPE_CHANNEL = 4
    USER_TYPE_WEGAME = 5
    USER_TYPE_STEAM = 6


class VipRewardStatus(betterproto.Enum):
    VIP_REWARD_LOCKED = 1
    VIP_REWARD_NOT_GET = 2
    VIP_REWARD_HAS_GOT = 3
    VIP_REWARD_HAS_GOT_BUT_SPECIAL = 4


class WareHouseStatus(betterproto.Enum):
    WAREHOUSE_STATUS_NONE = 0
    WAREHOUSE_STATUS_NORMAL = 1
    WAREHOUSE_STATUS_DEMANDING = 2
    WAREHOUSE_STATUS_FINISH = 3
    WAREHOUSE_STATUS_CD = 4


class WarshipBgmPlayMode(betterproto.Enum):
    WARSHIP_BGM_PLAY_MODE_RANDOM = 0
    WARSHIP_BGM_PLAY_MODE_SINGLE = 1


class WarshipItemType(betterproto.Enum):
    WARSHIP_ITEM_TYPE_NONE = 0
    WARSHIP_ITEM_TYPE_WARSHIP = 1
    WARSHIP_ITEM_TYPE_BGM = 2


class WarshipSettingType(betterproto.Enum):
    WARSHIP_SETTING_BGM_PLAY_MODE = 1
    WARSHIP_SETTING_BGM_WEATHER = 2


class WeaponBranchType(betterproto.Enum):
    WEAPON_DEFAULT = 1
    WEAPON_BEFALL = 2


class WeaponType(betterproto.Enum):
    WEAPON_DOUBLE_GUN = 1
    WEAPON_SWORD = 2
    WEAPON_HAND_GUN = 3
    WEAPON_HEAVY_SWORD = 4
    WEAPON_TAIL = 5
    WEAPON_FIST = 6
    WEAPON_SCYTHE = 7
    WEAPON_LANCE = 8
    WEAPON_BOW = 9
    BladeRing = 10


class WebActivityShowType(betterproto.Enum):
    WEB_ACTIVITY_SHOW_TYPE_NONE = 0
    WEB_ACTIVITY_SHOW_TYPE_TRACK_POINT = 1
    WEB_ACTIVITY_SHOW_TYPE_FINISH = 2
    WEB_ACTIVITY_SHOW_TYPE_HIDE = 3


class WeekdayActivityEnterTimesType(betterproto.Enum):
    WEEKDAY_ACTIVITY_ENTER_TIMES_DAILY = 0
    WEEKDAY_ACTIVITY_ENTER_TIMES_WEEKLY = 1


class WeekDayActivityOpenType(betterproto.Enum):
    WEEK_DAY_ACTIVITY_OPEN_DAILY = 0
    WEEK_DAY_ACTIVITY_OPEN_WEEK_DAY = 1


class WikiDetailType(betterproto.Enum):
    WIKI_UNKNOWN = 0
    WIKI_ALL = 1
    WIKI_STIGMATA = 2
    WIKI_WEAPON = 3
    WIKI_DORM = 4
    WIKI_CG = 5
    WIKI_MEDAL = 6
    WIKI_ACHIEVEMENT = 7
    WIKI_SKIN = 8
    WIKI_EMOJI = 9
    WIKI_AVATAR = 10


class WikiType(betterproto.Enum):
    WIKI_TYPE_OVERVIEW = 0
    WIKI_TYPE_WEAPON = 1
    WIKI_TYPE_STIGMATA = 2
    WIKI_TYPE_FURNITURE = 3
    WIKI_TYPE_CG = 4
    WIKI_TYPE_MEDAL = 5
    WIKI_TYPE_ACHIEVEMENT = 6
    WIKI_TYPE_DRESS = 7
    WIKI_TYPE_EMOJI = 8
    WIKI_TYPE_AVATAR = 9
    WIKI_TYPE_ACTIVITY = 10
    WIKI_TYPE_MONSTER = 11


class WorldChatroomType(betterproto.Enum):
    WORLD_CHATROOM_TYPE_NONE = 0
    WORLD_CHATROOM_TYPE_NORMAL = 1
    WORLD_CHATROOM_TYPE_ACTIVITY = 2


class AccelerateRestaurantWorkReqCmdId(betterproto.Enum):
    CMD_ID = 5872


class AccelerateRestaurantWorkRspCmdId(betterproto.Enum):
    CMD_ID = 5873


class AccelerateRestaurantWorkRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_LACK = 2
    ROOM_NOT_EXIST = 3
    WORK_NOT_DOING = 4
    TICKET_LACK = 5
    STOCK_LIMIT = 6
    AVATAR_INVALID = 7


class AcceptFriendInviteReqCmdId(betterproto.Enum):
    CMD_ID = 227


class AcceptFriendInviteRspCmdId(betterproto.Enum):
    CMD_ID = 228


class AcceptFriendInviteRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    INVITE_CODE_ERROR = 2
    LEVEL_LACK = 3
    INVITE_FULL = 4
    INVITE_INVALID_REGION = 5


class AcceptGratuityStageReqCmdId(betterproto.Enum):
    CMD_ID = 4102


class AcceptGratuityStageRspCmdId(betterproto.Enum):
    CMD_ID = 4103


class AcceptGratuityStageRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TIMES_LACK = 2
    NOT_OPEN = 3


class AcceptScDlcDailyQuestReqCmdId(betterproto.Enum):
    CMD_ID = 6320


class AcceptScDlcDailyQuestRspCmdId(betterproto.Enum):
    CMD_ID = 6321


class AcceptScDlcDailyQuestRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    QUEST_ERROR = 2
    STAMINA_LACK = 3
    ACCEPT_TIMES_LACK = 4
    SLOT_LACK = 5


class ActivateTrialAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 583


class ActivateTrialAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 584


class ActivateTrialAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    REPEATE_ACTIVATE = 2
    MATERIAL_LACK = 3
    TYPE_ERROR = 4
    LEVEL_LIMIT = 5


class ActiveRaidReqCmdId(betterproto.Enum):
    CMD_ID = 1624


class ActiveRaidRspCmdId(betterproto.Enum):
    CMD_ID = 1625


class ActiveRaidRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    ALREADY_ACTIVED = 3
    TYPE_ERROR = 4


class ActiveScDlcFeverSuiteReqCmdId(betterproto.Enum):
    CMD_ID = 6306


class ActiveScDlcFeverSuiteRspCmdId(betterproto.Enum):
    CMD_ID = 6307


class ActiveScDlcFeverSuiteRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class AddAvatarExpByMaterialReqCmdId(betterproto.Enum):
    CMD_ID = 35


class AddAvatarExpByMaterialRspCmdId(betterproto.Enum):
    CMD_ID = 36


class AddAvatarExpByMaterialRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2
    AVATAR_LEVEL_FULL = 3
    MATERAIL_NOT_ENOUGH = 4
    MATERAIL_CAN_NOT_ADD_EXP = 5


class AddElfExpByMaterialReqCmdId(betterproto.Enum):
    CMD_ID = 2107


class AddElfExpByMaterialRspCmdId(betterproto.Enum):
    CMD_ID = 2108


class AddElfExpByMaterialRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ELF_NOT_EXIST = 2
    ELF_LEVEL_FULL = 3
    MATERIAL_NOT_ENOUGH = 4
    MATERIAL_CAN_NOT_ADD_EXP = 5
    SCOIN_LACK = 6


class AddFriendReqCmdId(betterproto.Enum):
    CMD_ID = 66


class AddFriendRspCmdId(betterproto.Enum):
    CMD_ID = 67


class AddFriendRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TARGET_NOT_EXIST = 2
    FRIEND_FULL = 3
    TARGET_FRIEND_FULL = 4
    IS_SELF = 5
    IS_FRIEND = 6
    ASK_TOO_OFTEN = 7
    ldupAndTest = 8
    TARGET_IN_ASK_LIST = 9
    REDIS_MULTI_ERROR = 10
    NOT_ALLOW_CROSS_REGION_FRIEND = 11
    CROSS_REGION_FRIEND_FULL = 12
    FEATURE_LIMIT = 13
    FORBIDDEN = 14
    FEATURE_CLOSED = 15


class AddGoodfeelReqCmdId(betterproto.Enum):
    CMD_ID = 154


class AddGoodfeelReqAddGoodfeelType(betterproto.Enum):
    TOUCH = 1
    STAGE = 2
    DORM = 3


class AddGoodfeelRspCmdId(betterproto.Enum):
    CMD_ID = 155


class AddGoodfeelRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2


class AddOnActivityRewardNotifyCmdId(betterproto.Enum):
    CMD_ID = 4156


class AddOnActivityRewardNotifyRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class AddScDlcSupportNpcExpReqCmdId(betterproto.Enum):
    CMD_ID = 6308


class AddScDlcSupportNpcExpRspCmdId(betterproto.Enum):
    CMD_ID = 6309


class AddScDlcSupportNpcExpRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_LACK = 2
    NPC_ERROR = 3
    MATERIAL_ERROR = 4


class AddTechExpReqCmdId(betterproto.Enum):
    CMD_ID = 538


class AddTechExpRspCmdId(betterproto.Enum):
    CMD_ID = 539


class AddTechExpRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TECH_NOT_OPEN = 2
    TECH_LEVEL_FULL = 3
    MATERAIL_NOT_ENOUGH = 4
    MATERAIL_CAN_NOT_ADD_EXP = 5


class AddToBlackListReqCmdId(betterproto.Enum):
    CMD_ID = 1596


class AddToBlackListRspCmdId(betterproto.Enum):
    CMD_ID = 1597


class AddToBlackListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ALREADY_IN_LIST = 2
    LIST_FULL = 3
    TARGET_NOT_EXIST = 4


class AdventureStorySweepReqCmdId(betterproto.Enum):
    CMD_ID = 3912


class AdventureStorySweepRspCmdId(betterproto.Enum):
    CMD_ID = 3913


class AdventureStorySweepRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_MEET_RESTRICT = 2
    HAS_TAKEN = 3
    LACK_MATERIAL = 4
    STAMINA_LACK = 5
    EQUIPMENT_FULL = 6
    EQUIPMENT_MATERIAL_LIMIT = 7
    EQUIPMENT_FRAGMENT_LIMIT = 8
    ENTER_TIMES_LACK = 9
    NOT_MEET_FAST = 10
    EXCEED_STAMINA = 11
    NOT_FINISH_CHALLENGE = 12
    AVATAR_SWEEPING = 13
    TEAM_LIMIT = 14
    AVATAR_ERROR = 15
    STAGE_NOT_EXIST = 16
    ACTIVITY_ENTER_TIMES_LACK = 17
    LEVEL_LACK = 18


class AnswerQuestionReqCmdId(betterproto.Enum):
    CMD_ID = 4260


class AnswerQuestionRspCmdId(betterproto.Enum):
    CMD_ID = 4261


class AnswerQuestionRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    NO_QUESTION = 3
    HAVE_ANSWER = 4
    NO_ANSWER = 5
    NOT_JOIN_ARMADA = 6


class AntiAddictNotifyCmdId(betterproto.Enum):
    CMD_ID = 5004


class AntiAddictNotifyAntiAddictMsgType(betterproto.Enum):
    ANTI_ADDICT_MSG_ERROR = 0
    ANTI_ADDICT_MSG_ANTI_ADDICT = 1
    ANTI_ADDICT_MSG_SHOULD_BIND_ACCOUNT = 2


class AntiCheatReportReqCmdId(betterproto.Enum):
    CMD_ID = 217


class AntiCheatReportReqCheatType(betterproto.Enum):
    EMPTY = 0
    CHEATER = 1
    EMULATOR = 2
    HASH_CHANGED = 3
    MEMORY_SCAN = 4
    JAIL_BREAK = 5


class AntiCheatReportRspCmdId(betterproto.Enum):
    CMD_ID = 218


class AntiCheatReportRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class AntiCheatReportRspProgressWay(betterproto.Enum):
    IGNORE = 1
    EXIT_GAME = 2


class ApplyJoinArmadaReqCmdId(betterproto.Enum):
    CMD_ID = 2607


class ApplyJoinArmadaRspCmdId(betterproto.Enum):
    CMD_ID = 2608


class ApplyJoinArmadaRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    STATUS_ERROR = 2
    ARMADA_NOT_EXIST = 3
    LEVEL_LACK = 4
    MEMBER_FULL = 5
    APPLY_FULL = 6
    IN_CD_TIME = 7
    APPLY_LIMIT = 8
    HAS_APPLYED = 9
    IN_LOW_POPL_CD_TIME = 10
    FEATURE_CLOSED = 11


class ArmadaApplyNotifyCmdId(betterproto.Enum):
    CMD_ID = 2682


class ArmadaBossGetMpStatusReqCmdId(betterproto.Enum):
    CMD_ID = 554


class ArmadaBossGetMpStatusRspCmdId(betterproto.Enum):
    CMD_ID = 555


class ArmadaBossGetMpStatusRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2


class ArmadaBuildNotifyCmdId(betterproto.Enum):
    CMD_ID = 2678


class ArmadaBulletinNotifyCmdId(betterproto.Enum):
    CMD_ID = 2679


class ArmadaLogoutNotifyCmdId(betterproto.Enum):
    CMD_ID = 2731


class ArmadaManageNotifyCmdId(betterproto.Enum):
    CMD_ID = 2680


class ArmadaMatrixActivateBuffReqCmdId(betterproto.Enum):
    CMD_ID = 2753


class ArmadaMatrixActivateBuffRspCmdId(betterproto.Enum):
    CMD_ID = 2754


class ArmadaMatrixActivateBuffRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVATE_LIMIT = 2
    NO_BUFF = 3
    SAME_STATUS = 4
    NO_ARMADA = 5


class ArmadaMatrixActiveReqCmdId(betterproto.Enum):
    CMD_ID = 2808


class ArmadaMatrixActiveRspCmdId(betterproto.Enum):
    CMD_ID = 2809


class ArmadaMatrixActiveRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_SUPPLY = 2


class ArmadaMatrixAdvanceReqCmdId(betterproto.Enum):
    CMD_ID = 2738


class ArmadaMatrixAdvanceRspCmdId(betterproto.Enum):
    CMD_ID = 2739


class ArmadaMatrixAnswerQuestionReqCmdId(betterproto.Enum):
    CMD_ID = 2832


class ArmadaMatrixAnswerQuestionRspCmdId(betterproto.Enum):
    CMD_ID = 2833


class ArmadaMatrixAnswerQuestionRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAVE_ANSWER = 2
    NOT_QUESTION = 3


class ArmadaMatrixAskSupplyReqCmdId(betterproto.Enum):
    CMD_ID = 2810


class ArmadaMatrixAskSupplyRspCmdId(betterproto.Enum):
    CMD_ID = 2811


class ArmadaMatrixAskSupplyRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SUPPLY_LIMIT = 2
    HAVE_ASK = 3


class ArmadaMatrixChangeLevelReqCmdId(betterproto.Enum):
    CMD_ID = 2772


class ArmadaMatrixChangeLevelRspCmdId(betterproto.Enum):
    CMD_ID = 2773


class ArmadaMatrixChoosePathReqCmdId(betterproto.Enum):
    CMD_ID = 2827


class ArmadaMatrixChoosePathRspCmdId(betterproto.Enum):
    CMD_ID = 2828


class ArmadaMatrixChoosePathRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    INVALID_START = 2
    INVALID_PATH = 3
    CONDITION_LACK = 4
    ENTER_LIMIT = 5


class ArmadaMatrixChooseTemporaryDepositReqCmdId(betterproto.Enum):
    CMD_ID = 2788


class ArmadaMatrixChooseTemporaryDepositRspCmdId(betterproto.Enum):
    CMD_ID = 2789


class ArmadaMatrixConfirmPosReqCmdId(betterproto.Enum):
    CMD_ID = 2829


class ArmadaMatrixConfirmPosRspCmdId(betterproto.Enum):
    CMD_ID = 2830


class ArmadaMatrixConfirmPosRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TARGET_DISMATCH = 2
    TRIGGER_FAILED = 3


class ArmadaMatrixDialogChooseEventReqCmdId(betterproto.Enum):
    CMD_ID = 2797


class ArmadaMatrixDialogChooseEventRspCmdId(betterproto.Enum):
    CMD_ID = 2798


class ArmadaMatrixDialogChooseEventRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ArmadaMatrixDialogEventNotifyCmdId(betterproto.Enum):
    CMD_ID = 2795


class ArmadaMatrixExchangeExplorePowerReqCmdId(betterproto.Enum):
    CMD_ID = 2758


class ArmadaMatrixExchangeExplorePowerRspCmdId(betterproto.Enum):
    CMD_ID = 2759


class ArmadaMatrixExitConditionSyncNotifyCmdId(betterproto.Enum):
    CMD_ID = 2790


class ArmadaMatrixFireBossItemReqCmdId(betterproto.Enum):
    CMD_ID = 2814


class ArmadaMatrixFireBossItemRspCmdId(betterproto.Enum):
    CMD_ID = 2815


class ArmadaMatrixFireBossItemRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    IS_SELF = 2
    NO_ITEM = 3
    BOSS_DEAD = 4


class ArmadaMatrixGetAvatarTeamReqCmdId(betterproto.Enum):
    CMD_ID = 2748


class ArmadaMatrixGetAvatarTeamRspCmdId(betterproto.Enum):
    CMD_ID = 2749


class ArmadaMatrixGetExchangeExplorePowerInfoReqCmdId(betterproto.Enum):
    CMD_ID = 2760


class ArmadaMatrixGetExchangeExplorePowerInfoRspCmdId(betterproto.Enum):
    CMD_ID = 2761


class ArmadaMatrixGetGenericItemReqCmdId(betterproto.Enum):
    CMD_ID = 2755


class ArmadaMatrixGetGenericItemRspCmdId(betterproto.Enum):
    CMD_ID = 2756


class ArmadaMatrixGetGenericItemRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ArmadaMatrixGetLevelBriefDataReqCmdId(betterproto.Enum):
    CMD_ID = 2774


class ArmadaMatrixGetLevelBriefDataRspCmdId(betterproto.Enum):
    CMD_ID = 2775


class ArmadaMatrixGetLocationReqCmdId(betterproto.Enum):
    CMD_ID = 2819


class ArmadaMatrixGetLocationRspCmdId(betterproto.Enum):
    CMD_ID = 2820


class ArmadaMatrixGetLocationRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    NO_PLAYER = 3
    NO_MONSTER = 4
    MONSTER_DEAD = 5
    NOT_ARMADA_BOSS = 6
    NOT_JOIN = 7


class ArmadaMatrixGetLockedGridInfoReqCmdId(betterproto.Enum):
    CMD_ID = 2784


class ArmadaMatrixGetLockedGridInfoRspCmdId(betterproto.Enum):
    CMD_ID = 2785


class ArmadaMatrixGetMainInfoReqCmdId(betterproto.Enum):
    CMD_ID = 2736


class ArmadaMatrixGetMainInfoRspCmdId(betterproto.Enum):
    CMD_ID = 2737


class ArmadaMatrixGetOverviewReqCmdId(betterproto.Enum):
    CMD_ID = 2782


class ArmadaMatrixGetOverviewRspCmdId(betterproto.Enum):
    CMD_ID = 2783


class ArmadaMatrixGetRandomInfoReqCmdId(betterproto.Enum):
    CMD_ID = 2817


class ArmadaMatrixGetRandomInfoRspCmdId(betterproto.Enum):
    CMD_ID = 2818


class ArmadaMatrixGetRandomInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class ArmadaMatrixGetRankListReqCmdId(betterproto.Enum):
    CMD_ID = 2780


class ArmadaMatrixGetRankListRspCmdId(betterproto.Enum):
    CMD_ID = 2781


class ArmadaMatrixGetScheduleReqCmdId(betterproto.Enum):
    CMD_ID = 2734


class ArmadaMatrixGetScheduleRspCmdId(betterproto.Enum):
    CMD_ID = 2735


class ArmadaMatrixGetScoreRewardInfoReqCmdId(betterproto.Enum):
    CMD_ID = 2778


class ArmadaMatrixGetScoreRewardInfoRspCmdId(betterproto.Enum):
    CMD_ID = 2779


class ArmadaMatrixGetTemporaryDepositReqCmdId(betterproto.Enum):
    CMD_ID = 2786


class ArmadaMatrixGetTemporaryDepositRspCmdId(betterproto.Enum):
    CMD_ID = 2787


class ArmadaMatrixGrantScoreRewardNotifyCmdId(betterproto.Enum):
    CMD_ID = 2777


class ArmadaMatrixInteractNotifyCmdId(betterproto.Enum):
    CMD_ID = 2813


class ArmadaMatrixInteractNotifyInteractType(betterproto.Enum):
    INTERACT_TYPE_NONE = 0
    INTERACT_TYPE_SUPPLY = 1
    INTERACT_TYPE_BOSS = 2


class ArmadaMatrixLeaveMsgSyncNotifyCmdId(betterproto.Enum):
    CMD_ID = 2765


class ArmadaMatrixLevelBriefDataNotifyCmdId(betterproto.Enum):
    CMD_ID = 2776


class ArmadaMatrixPlayerAvatarSyncNotifyCmdId(betterproto.Enum):
    CMD_ID = 2750


class ArmadaMatrixPlayerMainInfoSyncNotifyCmdId(betterproto.Enum):
    CMD_ID = 2757


class ArmadaMatrixQuestionNotifyCmdId(betterproto.Enum):
    CMD_ID = 2831


class ArmadaMatrixRandomEventNotifyCmdId(betterproto.Enum):
    CMD_ID = 2770


class ArmadaMatrixRetcodeRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_ERROR = 2
    STAMINA_EXCHANGE_LIMIT = 3
    STAMINA_LACK = 4
    EXPLORE_POWER_LIMIT = 5
    GRID_LOCKED = 6
    CONDITION_LACK = 7
    SUPPLY_LACK = 8


class ArmadaMatrixSetAvatarTeamReqCmdId(betterproto.Enum):
    CMD_ID = 2746


class ArmadaMatrixSetAvatarTeamRspCmdId(betterproto.Enum):
    CMD_ID = 2747


class ArmadaMatrixSetCurAvatarTeamReqCmdId(betterproto.Enum):
    CMD_ID = 2751


class ArmadaMatrixSetCurAvatarTeamRspCmdId(betterproto.Enum):
    CMD_ID = 2752


class ArmadaMatrixShopBuyReqCmdId(betterproto.Enum):
    CMD_ID = 2768


class ArmadaMatrixShopBuyRspCmdId(betterproto.Enum):
    CMD_ID = 2769


class ArmadaMatrixShopBuyRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SOLD_OUT = 2
    LACK_MONEY = 3
    NO_ARMADA = 4


class ArmadaMatrixShopSyncNotifyCmdId(betterproto.Enum):
    CMD_ID = 2767


class ArmadaMatrixStageBattleNotifyCmdId(betterproto.Enum):
    CMD_ID = 2745


class ArmadaMatrixStageBeginReqCmdId(betterproto.Enum):
    CMD_ID = 2740


class ArmadaMatrixStageBeginRspCmdId(betterproto.Enum):
    CMD_ID = 2741


class ArmadaMatrixStageEndReqCmdId(betterproto.Enum):
    CMD_ID = 2742


class ArmadaMatrixStageEndRspCmdId(betterproto.Enum):
    CMD_ID = 2743


class ArmadaMatrixSyncArmadaInfoNotifyCmdId(betterproto.Enum):
    CMD_ID = 2816


class ArmadaMatrixSyncMemberNotifyCmdId(betterproto.Enum):
    CMD_ID = 2812


class ArmadaMatrixSyncNotifyCmdId(betterproto.Enum):
    CMD_ID = 2744


class ArmadaMatrixTakeFatigueRewardReqCmdId(betterproto.Enum):
    CMD_ID = 2793


class ArmadaMatrixTakeFatigueRewardRspCmdId(betterproto.Enum):
    CMD_ID = 2794


class ArmadaMatrixTakeFatigueRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_REWARD = 2
    NOT_OPEN = 3


class ArmadaMatrixTemporaryBuffSyncNotifyCmdId(betterproto.Enum):
    CMD_ID = 2766


class ArmadaMatrixTransportNotifyCmdId(betterproto.Enum):
    CMD_ID = 2796


class ArmadaMatrixTreasureNotifyCmdId(betterproto.Enum):
    CMD_ID = 2771


class ArmadaMatrixUseItemNotifyCmdId(betterproto.Enum):
    CMD_ID = 2764


class ArmadaMatrixUseItemReqCmdId(betterproto.Enum):
    CMD_ID = 2762


class ArmadaMatrixUseItemRspCmdId(betterproto.Enum):
    CMD_ID = 2763


class ArmadaMatrixUseItemRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LACK = 2
    EMPTY_MSG = 3
    MSG_ERROR = 4
    POS_ERROR = 5
    SAME_TEMP_BUFF = 6
    OUT_EFFECTIVE_RANGE = 7
    NO_ARMADA = 8
    FATIGUE_FULL = 9
    TARGET_SELF = 10
    HAVE_ANSWER = 11
    BOSS_DEAD = 12
    HAVE_USE_ITEM = 13


class ArmadaMatrixUseTempBuffReqCmdId(betterproto.Enum):
    CMD_ID = 2791


class ArmadaMatrixUseTempBuffRspCmdId(betterproto.Enum):
    CMD_ID = 2792


class ArmadaMatrixUseTempBuffRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_ALLOW = 2
    BUFF_USED_UP = 3


class ArmadaPlayerContributionSyncNotifyCmdId(betterproto.Enum):
    CMD_ID = 2806


class ArmadaPlayerNotifyCmdId(betterproto.Enum):
    CMD_ID = 2681


class ArmadaReunionRewardNotifyCmdId(betterproto.Enum):
    CMD_ID = 2836


class ArmadaSendMailReqCmdId(betterproto.Enum):
    CMD_ID = 2689


class ArmadaSendMailRspCmdId(betterproto.Enum):
    CMD_ID = 2690


class ArmadaSendMailRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_GRANTED = 2
    NOT_IN_ARMADA = 3
    FORMAT_ERROR = 4
    SENSITIVE_WORDS = 5
    SEND_CD = 6


class ArmadaStageBeginReqCmdId(betterproto.Enum):
    CMD_ID = 2669


class ArmadaStageBeginRspCmdId(betterproto.Enum):
    CMD_ID = 2670


class ArmadaStageBeginRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    NOT_OPEN = 3
    BOSS_DEAD = 4
    FIGHT_INTERVAL = 5
    NOT_BEGIN = 6
    AVATAR_ERROR = 7
    FIGHT_TIMES_LACK = 8
    BOSS_NO_DEAD = 9
    HAS_FIGHT = 10
    LEVEL_LACK = 11
    FEATURE_CLOSED = 12


class ArmadaStageEndReqCmdId(betterproto.Enum):
    CMD_ID = 2671


class ArmadaStageEndRspCmdId(betterproto.Enum):
    CMD_ID = 2672


class ArmadaStageEndRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    NOT_OPEN = 3
    BOSS_DEAD = 4
    FIGHT_INTERVAL = 5
    STAGE_ERROR = 6
    STAGE_FAIL = 7
    FIGHT_TIMES_LACK = 8
    BOSS_NO_DEAD = 9
    HAS_FIGHT = 10


class AskForMasterOrPupilReqCmdId(betterproto.Enum):
    CMD_ID = 570


class AskForMasterOrPupilRspCmdId(betterproto.Enum):
    CMD_ID = 571


class AsMasterPupilCardReqCmdId(betterproto.Enum):
    CMD_ID = 566


class AsMasterPupilCardRspCmdId(betterproto.Enum):
    CMD_ID = 567


class AssignRestaurantWorkReqCmdId(betterproto.Enum):
    CMD_ID = 5864


class AssignRestaurantWorkRspCmdId(betterproto.Enum):
    CMD_ID = 5865


class AssignRestaurantWorkRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ROOM_NOT_EXIST = 2
    ALREADY_ASSIGN = 3
    AVATAR_WORK_LIMIT = 4


class AssistGratuityStageReqCmdId(betterproto.Enum):
    CMD_ID = 4104


class AssistGratuityStageRspCmdId(betterproto.Enum):
    CMD_ID = 4105


class AssistGratuityStageRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LACK = 2
    STAGE_EXPIRED = 3
    STAGE_FINISH = 4
    HAVE_ASSIST = 5
    PLAYER_FULL = 6
    ASSIST_FULL = 7
    IS_SELF = 8
    ASSIST_STAMINA_LACK = 9


class AvatarArtifactLevelUpReqCmdId(betterproto.Enum):
    CMD_ID = 1446


class AvatarArtifactLevelUpRspCmdId(betterproto.Enum):
    CMD_ID = 1447


class AvatarArtifactLevelUpRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_LEVEL_LACK = 2
    AVATAR_STAR_LACK = 3
    MATERIAL_LACK = 4
    FEATURE_CLOSED = 5


class AvatarArtifactUnlockReqCmdId(betterproto.Enum):
    CMD_ID = 1444


class AvatarArtifactUnlockRspCmdId(betterproto.Enum):
    CMD_ID = 1445


class AvatarArtifactUnlockRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_LEVEL_LACK = 2
    AVATAR_STAR_LACK = 3
    MATERIAL_LACK = 4
    FEATURE_CLOSED = 5


class AvatarFragmentTransformReqCmdId(betterproto.Enum):
    CMD_ID = 827


class AvatarFragmentTransformRspCmdId(betterproto.Enum):
    CMD_ID = 828


class AvatarFragmentTransformRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NEED_SSS = 2
    LACK = 3
    FULL = 4
    FEATURE_CLOSED = 5


class AvatarReviveReqCmdId(betterproto.Enum):
    CMD_ID = 106


class AvatarReviveRspCmdId(betterproto.Enum):
    CMD_ID = 107


class AvatarReviveRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HCOIN_LACK = 2
    TIMES_LACK = 3
    NOT_IN_STAGE = 4
    MATERIAL_LACK = 5


class AvatarStarUpReqCmdId(betterproto.Enum):
    CMD_ID = 29


class AvatarStarUpRspCmdId(betterproto.Enum):
    CMD_ID = 30


class AvatarStarUpRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2
    FRAGMENT_LACK = 3
    STAR_FULL = 4
    FEATURE_CLOSED = 5


class AvatarSubSkillLevelUpReqCmdId(betterproto.Enum):
    CMD_ID = 50


class AvatarSubSkillLevelUpRspCmdId(betterproto.Enum):
    CMD_ID = 51


class AvatarSubSkillLevelUpRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2
    SKILL_NOT_EXIST = 3
    SUB_SKILL_NOT_EXIST = 4
    AVATAR_LEVEL_LACK = 5
    AVATAR_STAR_LACK = 6
    SCOIN_LACK = 7
    SKILL_POINT_LACK = 8
    MATERIAL_LACK = 9
    LEVEL_FULL = 10


class AvatarSuiteSelectionNotifyCmdId(betterproto.Enum):
    CMD_ID = 582


class BackEquipmentReqCmdId(betterproto.Enum):
    CMD_ID = 3663


class BackEquipmentRspCmdId(betterproto.Enum):
    CMD_ID = 3664


class BackEquipmentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 2
    CONSUME_ITEM_NOT_EXIST = 3
    CONSUME_ITEM_IN_USE = 4
    CONSUME_ITEM_PROTECTED = 5
    COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 6
    COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 7
    EQUIPMENT_NOT_OPEN = 8
    TIMES_LACK = 9
    CONSUME_ITEM_IN_FACILITY = 10
    CONSUME_ITEM_GRAND_KEY = 11
    CONSUME_ITEM_REPEAT = 12
    COST_GACHA_TICKET = 13
    CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 14


class BattlePassThemeExpTransformNotifyCmdId(betterproto.Enum):
    CMD_ID = 3766


class BbqActivityCookReqCmdId(betterproto.Enum):
    CMD_ID = 4252


class BbqActivityCookRspCmdId(betterproto.Enum):
    CMD_ID = 4253


class BbqActivityCookRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    ITEMS_LACK = 3


class BbqActivityTakeLevelUpRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4254


class BbqActivityTakeLevelUpRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4255


class BbqActivityTakeLevelUpRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    NO_REWARD = 3


class BindAccountReqCmdId(betterproto.Enum):
    CMD_ID = 119


class BindAccountRspCmdId(betterproto.Enum):
    CMD_ID = 120


class BindAccountRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACCOUNT_TYPE_ERROR = 2
    ACCOUNT_VERIFY_FAILED = 3
    ACCOUNT_BIND_TO_OTHER_UID = 4
    REPEAT_BIND = 5


class BindHoyolabAccountReqCmdId(betterproto.Enum):
    CMD_ID = 1658


class BindHoyolabAccountRspCmdId(betterproto.Enum):
    CMD_ID = 1659


class BindHoyolabAccountRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ALREADY_BIND = 2
    BIND_BY_OTHER = 3


class BingoActivityFlopCardReqCmdId(betterproto.Enum):
    CMD_ID = 4159


class BingoActivityFlopCardRspCmdId(betterproto.Enum):
    CMD_ID = 4160


class BingoActivityFlopCardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    ITEMS_LACK = 3
    HAS_FINISED = 4
    HAS_FLOPED = 5


class BingoActivityResetBingoReqCmdId(betterproto.Enum):
    CMD_ID = 4161


class BingoActivityResetBingoRspCmdId(betterproto.Enum):
    CMD_ID = 4162


class BingoActivityResetBingoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_TIMES = 2
    NO_COMPLETE = 3
    NOT_OPEN = 4
    ITEMS_LACK = 5


class BingoCardBingoCardStatus(betterproto.Enum):
    CARD_STATUS_WRONG = 0
    CARD_STATUS_CORRECT = 1


class BossChallengeActivityGetStageRankReqCmdId(betterproto.Enum):
    CMD_ID = 4062


class BossChallengeActivityGetStageRankRspCmdId(betterproto.Enum):
    CMD_ID = 4063


class BossChallengeActivityGetStageRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class BuffAssistGetActivityReqCmdId(betterproto.Enum):
    CMD_ID = 5941


class BuffAssistGetActivityRspCmdId(betterproto.Enum):
    CMD_ID = 5942


class BuffAssistGetActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class BuffAssistPublishBuffPoolReqCmdId(betterproto.Enum):
    CMD_ID = 5947


class BuffAssistPublishBuffPoolRspCmdId(betterproto.Enum):
    CMD_ID = 5948


class BuffAssistPublishBuffPoolRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    ASSIST_WORD_ERROR = 3
    POOL_ERROR = 4
    BUFF_SCHEDULE_ERROR = 5
    BUFF_POOL_FULL = 6
    LACK_TIMES = 7
    REPEATED_PUBLISH = 8


class BuffAssistRecvStageAssistInfoNotifyCmdId(betterproto.Enum):
    CMD_ID = 5950


class BuffAssistRefreshWaitSelectBuffPoolReqCmdId(betterproto.Enum):
    CMD_ID = 5943


class BuffAssistRefreshWaitSelectBuffPoolRspCmdId(betterproto.Enum):
    CMD_ID = 5944


class BuffAssistRefreshWaitSelectBuffPoolRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    NO_VALID_POOL = 3
    REFRESH_TIMES_LACK = 4
    SYSTEM_BUSY = 5


class BuffAssistSelectBuffReqCmdId(betterproto.Enum):
    CMD_ID = 5945


class BuffAssistSelectBuffRspCmdId(betterproto.Enum):
    CMD_ID = 5946


class BuffAssistSelectBuffRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    NO_BUFF = 3
    BUFF_SLOT_ERROR = 4
    BUFF_SLOT_REPLACED = 5
    WAIT_SELECT_BUFF_SLOT_ERROR = 6
    SELECT_TIMES_LACK = 7
    BUFF_SLOT_LOCKED = 8


class BuffAssistStageEndNotifyCmdId(betterproto.Enum):
    CMD_ID = 5949


class BuyBattlePassLevelReqCmdId(betterproto.Enum):
    CMD_ID = 3756


class BuyBattlePassLevelRspCmdId(betterproto.Enum):
    CMD_ID = 3757


class BuyBattlePassLevelRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    HCOIN_LACK = 3
    LEVEL_ERROR = 4
    HCOIN_ERROR = 5
    FEATURE_CLOSED = 6


class BuyBattlePassThemeLevelReqCmdId(betterproto.Enum):
    CMD_ID = 3764


class BuyBattlePassThemeLevelRspCmdId(betterproto.Enum):
    CMD_ID = 3765


class BuyBattlePassThemeLevelRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    HCOIN_LACK = 3
    LEVEL_ERROR = 4
    HCOIN_ERROR = 5
    FEATURE_CLOSED = 6


class BuyBattlePassTicketReqCmdId(betterproto.Enum):
    CMD_ID = 3752


class BuyBattlePassTicketRspCmdId(betterproto.Enum):
    CMD_ID = 3753


class BuyBattlePassTicketRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    TYPE_ERROR = 3
    HAS_GOT = 4
    LACK_MCOIN = 5
    FEATURE_CLOSED = 6


class BuyFurnitureReqCmdId(betterproto.Enum):
    CMD_ID = 621


class BuyFurnitureRspCmdId(betterproto.Enum):
    CMD_ID = 622


class BuyFurnitureRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LOCK = 2
    HCOIN_LACK = 3
    SCOIN_LACK = 4
    MATERIAL_LACK = 5
    KEEP_LIMIT = 6


class BuyGoodsReqCmdId(betterproto.Enum):
    CMD_ID = 203


class BuyGoodsRspCmdId(betterproto.Enum):
    CMD_ID = 204


class BuyGoodsRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    GOODS_NOT_EXIST = 2
    BUY_TIMES_LACK = 3
    MONEY_LACK = 4
    EQUIPMENT_FULL = 5
    SHOP_CLOSE = 6
    SHOP_OVERDUE = 7
    GIFT_GOODS_EFFECT = 8
    GOODS_LOCKED = 9
    COUPON_ERROR = 10
    COUPON_LACK = 11
    FEATURE_CLOSED = 12
    MCOIN_LIMIT = 13
    GLOBAL_GOODS_NUM_LIMIT = 14
    NOT_IN_DISCOUNT = 15
    IN_DISCOUNT = 16
    DISCOUNT_ERROR = 17


class BuyProductReqCmdId(betterproto.Enum):
    CMD_ID = 805


class BuyProductRspCmdId(betterproto.Enum):
    CMD_ID = 806


class BuyProductRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    DEVICE_ERROR = 2
    PRODUCT_INVALID = 3
    TIMES_LIMIT = 4


class CancelAdventureQuestReqCmdId(betterproto.Enum):
    CMD_ID = 3922


class CancelAdventureQuestRspCmdId(betterproto.Enum):
    CMD_ID = 3923


class CancelAdventureQuestRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_SELECTED = 2
    OVER_TIME = 3


class CancelApplyArmadaReqCmdId(betterproto.Enum):
    CMD_ID = 2629


class CancelApplyArmadaRspCmdId(betterproto.Enum):
    CMD_ID = 2630


class CancelApplyArmadaRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class CancelDissolveArmadaReqCmdId(betterproto.Enum):
    CMD_ID = 2683


class CancelDissolveArmadaRspCmdId(betterproto.Enum):
    CMD_ID = 2684


class CancelDissolveArmadaRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_GRANTED = 2
    NOT_IN_ARMADA = 3


class CancelGratuityStageReqCmdId(betterproto.Enum):
    CMD_ID = 4106


class CancelGratuityStageRspCmdId(betterproto.Enum):
    CMD_ID = 4107


class CancelGratuityStageRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACCEPTOR = 2


class CancelLevelUpArmadaCabinReqCmdId(betterproto.Enum):
    CMD_ID = 2633


class CancelLevelUpArmadaCabinRspCmdId(betterproto.Enum):
    CMD_ID = 2634


class CancelLevelUpArmadaCabinRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    CABIN_NOT_IN_LEVELUP = 2
    NOT_GRANTED = 3
    NOT_IN_ARMADA = 4
    NO_OWNERSHIP = 5


class CancelRestaurantWorkReqCmdId(betterproto.Enum):
    CMD_ID = 5866


class CancelRestaurantWorkRspCmdId(betterproto.Enum):
    CMD_ID = 5867


class CancelRestaurantWorkRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ROOM_NOT_EXIST = 2
    WORK_NOT_BEGIN = 3


class CancelRoomMatchReqCmdId(betterproto.Enum):
    CMD_ID = 3167


class CancelRoomMatchRspCmdId(betterproto.Enum):
    CMD_ID = 3168


class CancelRoomMatchRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_MATCH = 2
    TOO_FREQUENT = 3


class CancelWareHouseDemandReqCmdId(betterproto.Enum):
    CMD_ID = 2651


class CancelWareHouseDemandRspCmdId(betterproto.Enum):
    CMD_ID = 2652


class CancelWareHouseDemandRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    STATUS_ERROR = 3


class ChallengeMissionStepStepStatus(betterproto.Enum):
    UNLOCK = 0
    DOING = 1
    REWARDING = 2
    FINISH = 3


class ChallengeWarActivityFinishFloorReqCmdId(betterproto.Enum):
    CMD_ID = 4058


class ChallengeWarActivityFinishFloorRspCmdId(betterproto.Enum):
    CMD_ID = 4059


class ChallengeWarActivityFinishFloorRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_CUR_FLOOR = 2


class ChallengeWarUpdateTeamReqCmdId(betterproto.Enum):
    CMD_ID = 4054


class ChallengeWarUpdateTeamRspCmdId(betterproto.Enum):
    CMD_ID = 4055


class ChallengeWarUpdateTeamRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_REPEATED = 2
    AVATAR_NOT_EXIST = 3


class ChangeArmadaNameReqCmdId(betterproto.Enum):
    CMD_ID = 2691


class ChangeArmadaNameRspCmdId(betterproto.Enum):
    CMD_ID = 2692


class ChangeArmadaNameRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SCOIN_LACK = 2
    HCOIN_LACK = 3
    NAME_REPEAT = 4
    NAME_FORMAT_ERROR = 5
    NAME_SENSITIVE_WORDS = 6
    NOT_IN_ARMADA = 7
    POSITION_LIMIT = 8
    IN_CD = 9
    IN_AUDIT = 10


class ChangeGodWarChallengeSupportAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 0


class ChangePlayerCardReqCmdId(betterproto.Enum):
    CMD_ID = 482


class ChangePlayerCardRspCmdId(betterproto.Enum):
    CMD_ID = 483


class ChangePlayerCardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ChangeSecurityPasswordReqCmdId(betterproto.Enum):
    CMD_ID = 5025


class ChangeSecurityPasswordRspCmdId(betterproto.Enum):
    CMD_ID = 5026


class ChangeSecurityPasswordRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TOO_MANY_FAILS = 2
    IS_IN_RESETTING = 3
    WRONG_PASSWORD = 4


class ChapterActivityDailyRewardNotifyCmdId(betterproto.Enum):
    CMD_ID = 4331


class ChapterActivityTakeDailyRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4350


class ChapterActivityTakeDailyRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4351


class ChapterActivityTakeDailyRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKE = 2
    ACTIVITY_NOT_OPEN = 3


class ChapterGroupGetDataReqCmdId(betterproto.Enum):
    CMD_ID = 1660


class ChapterGroupGetDataRspCmdId(betterproto.Enum):
    CMD_ID = 1661


class ChapterGroupGetDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_EXIST = 2


class ChargeActivityBuffReqCmdId(betterproto.Enum):
    CMD_ID = 1605


class ChargeActivityBuffRspCmdId(betterproto.Enum):
    CMD_ID = 1606


class ChargeActivityBuffRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_FOUND = 2
    NOT_ALLOWED = 3
    FULL_CHARGED = 4
    MATERIAL_LACK = 5


class ChatCloseNotifyCmdId(betterproto.Enum):
    CMD_ID = 2239


class ChatCloseNotifyRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    FEATURE_CLOSE = 2
    LEVEL_LIMIT = 3


class ChatForbidNotifyCmdId(betterproto.Enum):
    CMD_ID = 1154


class ChatForbidNotifyForbidType(betterproto.Enum):
    FORBID_COMMON = 0
    REPEAT_CHAT = 1


class ChatForbidSnsNotifyCmdId(betterproto.Enum):
    CMD_ID = 1161


class ChatgroupSystemNotifyCmdId(betterproto.Enum):
    CMD_ID = 2211


class ChatMsgMsgChannel(betterproto.Enum):
    DEFAULT = 0
    WORLD = 1
    FRIEND = 2
    ARMADA = 3
    PLAYER_CARD = 4
    LOBBY = 5
    MASTER_PUPIL = 6
    COMMON_CHATWORLD = 7
    GROUP = 8
    TEAM = 9
    CAMPAIGN = 10
    ROOM = 11
    WORLD_ACTIVITY = 12
    PRIVATE = 13
    BATTLE = 14


class ChatMsgItemChatMsgType(betterproto.Enum):
    STR_MSG = 1
    WEAPON_MSG = 2
    STIGMATA_MSG = 3
    AVATAR_MSG = 4
    LOBBY_MSG = 5
    INTERNAL_MSG = 6
    SEND_RED_ENVELOPE_MSG = 7
    TAKE_RED_ENVELOPE_MSG = 8
    EMOJI = 9
    ELF_MSG = 10
    RED_ENVELOPE_TAKE_OVER_MSG = 11
    CHATWORLD_BEAST_MSG = 12


class ChatReportNotifyCmdId(betterproto.Enum):
    CMD_ID = 1152


class ChatReportReqCmdId(betterproto.Enum):
    CMD_ID = 1150


class ChatReportRspCmdId(betterproto.Enum):
    CMD_ID = 1151


class ChatReportRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    CHAT_BLOCKED = 2
    IN_REPORT_CD = 3


class ChatUnforbidNotifyCmdId(betterproto.Enum):
    CMD_ID = 1153


class ChatworldBattleCollectItemReqCmdId(betterproto.Enum):
    CMD_ID = 2425


class ChatworldBattleCollectItemRspCmdId(betterproto.Enum):
    CMD_ID = 2426


class ChatworldBattleCollectItemRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_CHATWORLD = 2
    NOT_EXIST = 3
    CAMP_INVALID = 4
    LACK_TIMES = 5
    ITEM_NOT_USED = 6
    ITEM_LIMIT = 7


class ChatworldBattleUseItemReqCmdId(betterproto.Enum):
    CMD_ID = 2422


class ChatworldBattleUseItemRspCmdId(betterproto.Enum):
    CMD_ID = 2423


class ChatworldBattleUseItemRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_CHATWORLD = 2
    NOT_EXIST = 3


class ChatworldBeastStatus(betterproto.Enum):
    CHALLENGE = 1
    TREASURE = 2


class ChatworldBeastAbandonChallengeReqCmdId(betterproto.Enum):
    CMD_ID = 2473


class ChatworldBeastAbandonChallengeRspCmdId(betterproto.Enum):
    CMD_ID = 2474


class ChatworldBeastAbandonChallengeRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ChatworldBeastAddResultNotifyCmdId(betterproto.Enum):
    CMD_ID = 2460


class ChatworldBeastAddResultNotifyRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_POSITION = 2
    ROOM_LIMIT = 3


class ChatworldBeastChallengeReqCmdId(betterproto.Enum):
    CMD_ID = 2461


class ChatworldBeastChallengeRspCmdId(betterproto.Enum):
    CMD_ID = 2462


class ChatworldBeastChallengeRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    DAILY_LIMIT = 3
    PLAYER_FULL = 4
    EXPIRE = 5
    FINISH = 6
    TIME_NOT_ENOUGH = 7


class ChatworldBeastGetActivityReqCmdId(betterproto.Enum):
    CMD_ID = 2465


class ChatworldBeastGetActivityRspCmdId(betterproto.Enum):
    CMD_ID = 2466


class ChatworldBeastGetActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class ChatworldBeastSyncReqCmdId(betterproto.Enum):
    CMD_ID = 2463


class ChatworldBeastSyncRspCmdId(betterproto.Enum):
    CMD_ID = 2464


class ChatworldBeastSyncRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ChatworldBeastTakeTreasureReqCmdId(betterproto.Enum):
    CMD_ID = 2471


class ChatworldBeastTakeTreasureRspCmdId(betterproto.Enum):
    CMD_ID = 2472


class ChatworldBeastTakeTreasureRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKE = 2
    DAILY_LIMIT = 3
    NOT_EXIST = 4
    NO_RIGHT = 5
    NOT_OPEN = 6


class ChatworldBoxGetDataReqCmdId(betterproto.Enum):
    CMD_ID = 2467


class ChatworldBoxGetDataRspCmdId(betterproto.Enum):
    CMD_ID = 2468


class ChatworldBoxGetDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class ChatworldBoxTakeRewardReqCmdId(betterproto.Enum):
    CMD_ID = 2469


class ChatworldBoxTakeRewardRspCmdId(betterproto.Enum):
    CMD_ID = 2470


class ChatworldBoxTakeRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 2
    HAS_TAKE = 3
    DAILY_LIMIT = 4
    BOX_NOT_EXIST = 5
    FINISH = 6


class ChatworldChangeAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 2409


class ChatworldChangeAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 2410


class ChatworldChangeAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_CHATWORLD = 2
    AVATAR_LOCK = 3
    SCENE_NOT_EXIST = 4


class ChatworldFishAssistReqCmdId(betterproto.Enum):
    CMD_ID = 2437


class ChatworldFishAssistRspCmdId(betterproto.Enum):
    CMD_ID = 2438


class ChatworldFishAssistRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    CURRENCY_LIMIT = 2


class ChatworldFishCancelWaitAssistReqCmdId(betterproto.Enum):
    CMD_ID = 2442


class ChatworldFishCancelWaitAssistRspCmdId(betterproto.Enum):
    CMD_ID = 2443


class ChatworldFishCancelWaitAssistRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_WAIT = 2


class ChatworldFishEndReqCmdId(betterproto.Enum):
    CMD_ID = 2435


class ChatworldFishEndReqFishEndStatus(betterproto.Enum):
    FISH_END_SUCC = 0
    FISH_END_WAIT_ASSIST = 1
    FISH_END_FAIL = 2


class ChatworldFishEndRspCmdId(betterproto.Enum):
    CMD_ID = 2436


class ChatworldFishEndRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ChatworldFishGetActivityInfoReqCmdId(betterproto.Enum):
    CMD_ID = 2445


class ChatworldFishGetActivityInfoRspCmdId(betterproto.Enum):
    CMD_ID = 2446


class ChatworldFishGetActivityInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ChatworldFishJoinSpotReqCmdId(betterproto.Enum):
    CMD_ID = 2429


class ChatworldFishJoinSpotRspCmdId(betterproto.Enum):
    CMD_ID = 2430


class ChatworldFishJoinSpotRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SPOT_FULL = 2
    CURRENCY_LIMIT = 3


class ChatworldFishKickPlayerNotifyCmdId(betterproto.Enum):
    CMD_ID = 2444


class ChatworldFishKickPlayerNotifyKickReason(betterproto.Enum):
    KICK_NONE = 0
    KICK_CURRENCY_FULL = 1
    KICK_NO_ACTION = 2


class ChatworldFishLeaveSpotReqCmdId(betterproto.Enum):
    CMD_ID = 2431


class ChatworldFishLeaveSpotRspCmdId(betterproto.Enum):
    CMD_ID = 2432


class ChatworldFishLeaveSpotRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ChatworldFishLikeReqCmdId(betterproto.Enum):
    CMD_ID = 2439


class ChatworldFishLikeRspCmdId(betterproto.Enum):
    CMD_ID = 2440


class ChatworldFishLikeRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    CURRENCY_LIMIT = 2


class ChatworldFishRewardNotifyCmdId(betterproto.Enum):
    CMD_ID = 2441


class ChatworldFishStartReqCmdId(betterproto.Enum):
    CMD_ID = 2433


class ChatworldFishStartRspCmdId(betterproto.Enum):
    CMD_ID = 2434


class ChatworldFishStartRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    CURRENCY_LIMIT = 2


class ChatworldGetActivityScheduleReqCmdId(betterproto.Enum):
    CMD_ID = 2427


class ChatworldGetActivityScheduleRspCmdId(betterproto.Enum):
    CMD_ID = 2428


class ChatworldGetActivityScheduleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ChatworldGetDishInfoReqCmdId(betterproto.Enum):
    CMD_ID = 2456


class ChatworldGetDishInfoRspCmdId(betterproto.Enum):
    CMD_ID = 2457


class ChatworldGetDishInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class ChatworldGetPrayInfoReqCmdId(betterproto.Enum):
    CMD_ID = 2451


class ChatworldGetPrayInfoRspCmdId(betterproto.Enum):
    CMD_ID = 2452


class ChatworldGetPrayInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class ChatworldGrantRewardNotifyCmdId(betterproto.Enum):
    CMD_ID = 2455


class ChatworldInteractReqCmdId(betterproto.Enum):
    CMD_ID = 2413


class ChatworldInteractRspCmdId(betterproto.Enum):
    CMD_ID = 2414


class ChatworldInteractRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_CHATWORLD = 3
    HELD_BY_OTHER = 4
    NOT_HOLD = 5


class ChatworldMsgItemChatworldMsgType(betterproto.Enum):
    STR_MSG = 1
    ENTER_CHATWORLD = 2
    MOVE_IN_CHATWORLD = 3
    LEAVE_CHATWORLD = 4
    INT_MSG = 5
    CLIENT_MSG = 6
    NORMAL_MSG = 7
    USE_ITEM = 8
    CHANGE_AVATAR = 9
    INTERACT_MSG = 10
    ACTION_MSG = 11
    SEND_RED_ENVELOPE = 12
    RED_ENVELOPE_TAKEN_OVER = 13
    TREASURE_MSG = 14
    SKILL_ATTACK_MSG = 15
    SKILL_DAMAGE_MSG = 16
    PLAYER_REBORN_MSG = 17
    BUFF_MSG = 18
    SKILL_CANCEL_MSG = 20
    PLAYER_BATTLE_MSG = 21
    ENTITY_MSG = 23
    ENTITY_HP_MSG = 24


class ChatworldPosResetNotifyCmdId(betterproto.Enum):
    CMD_ID = 2424


class ChatworldPrayReqCmdId(betterproto.Enum):
    CMD_ID = 2453


class ChatworldPrayRspCmdId(betterproto.Enum):
    CMD_ID = 2454


class ChatworldPrayRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_CHATWORLD = 2
    PRAYED = 3
    NOT_OPEN = 4


class ChatworldSkillDamageJudgeReqCmdId(betterproto.Enum):
    CMD_ID = 2420


class ChatworldSkillDamageJudgeRspCmdId(betterproto.Enum):
    CMD_ID = 2421


class ChatworldSkillDamageJudgeRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_CHATWORLD = 2
    HIT_NOT_IN_CHATWORLD = 3
    NO_ATTACK = 4
    EXCEED_RANGE = 5
    CAN_NOT_HIT = 6
    INVALID_PATH = 7
    DAMAGE_FREE = 8
    NOT_ENEMY = 9
    IS_DEAD = 10


class ChatworldTakeDishRewardReqCmdId(betterproto.Enum):
    CMD_ID = 2458


class ChatworldTakeDishRewardRspCmdId(betterproto.Enum):
    CMD_ID = 2459


class ChatworldTakeDishRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAVE_TAKEN = 2
    NOT_OPEN = 3
    NO_REWARD = 4
    IN_CD_TIME = 5


class ChatworldTreasureRewardNotifyCmdId(betterproto.Enum):
    CMD_ID = 2419


class ChatworldUseItemReqCmdId(betterproto.Enum):
    CMD_ID = 2407


class ChatworldUseItemRspCmdId(betterproto.Enum):
    CMD_ID = 2408


class ChatworldUseItemRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ITEM_LACK = 2
    SENSITIVE_WORD = 3
    NOT_IN_CHATWORLD = 4


class CheckDormLikesDropReqCmdId(betterproto.Enum):
    CMD_ID = 1010


class CheckDormLikesDropRspCmdId(betterproto.Enum):
    CMD_ID = 1011


class CheckDormLikesDropRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LIMIT = 2


class CheckExtraStoryLockedAvatarBindEquipReqCmdId(betterproto.Enum):
    CMD_ID = 1000


class CheckExtraStoryLockedAvatarBindEquipRspCmdId(betterproto.Enum):
    CMD_ID = 1001


class CheckExtraStoryLockedAvatarBindEquipRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class CheckRpgTaleStageTriggerReqCmdId(betterproto.Enum):
    CMD_ID = 2315


class CheckRpgTaleStageTriggerRspCmdId(betterproto.Enum):
    CMD_ID = 2316


class CheckRpgTaleStageTriggerRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ChooseAvatarMissionAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 3002


class ChooseAvatarMissionAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 3003


class ChooseAvatarMissionAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    HAVE_CHOOSEN = 3


class ChooseBossRushBuffReqCmdId(betterproto.Enum):
    CMD_ID = 498


class ChooseBossRushBuffRspCmdId(betterproto.Enum):
    CMD_ID = 499


class ChooseBossRushBuffRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 2
    ACTIVITY_ERROR = 3
    POOL_ID_ERROR = 4
    BUFF_ID_ERROR = 5
    TIME_LIMIT = 6


class ChooseConsignedOrderReqCmdId(betterproto.Enum):
    CMD_ID = 2641


class ChooseConsignedOrderRspCmdId(betterproto.Enum):
    CMD_ID = 2642


class ChooseConsignedOrderRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    STATUS_ERROR = 3
    INDEX_ERROR = 4
    TIMES_LIMIT = 5


class ChooseConsignedRewardReqCmdId(betterproto.Enum):
    CMD_ID = 521


class ChooseConsignedRewardRspCmdId(betterproto.Enum):
    CMD_ID = 522


class ChooseConsignedRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    ITEM_NOT_EXIST = 3


class ChooseReclaimGachaReqCmdId(betterproto.Enum):
    CMD_ID = 1179


class ChooseReclaimGachaRspCmdId(betterproto.Enum):
    CMD_ID = 1180


class ChooseReclaimGachaRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_CANDIDATE = 2
    ITEM_ERROR = 3


class ChooseStageBuffReqCmdId(betterproto.Enum):
    CMD_ID = 1530


class ChooseStageBuffRspCmdId(betterproto.Enum):
    CMD_ID = 1531


class ChooseStageBuffRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ChooseVirtualDefaultAvatarNotifyCmdId(betterproto.Enum):
    CMD_ID = 3516


class ChooseVirtualTrainGachaItemReqCmdId(betterproto.Enum):
    CMD_ID = 3514


class ChooseVirtualTrainGachaItemRspCmdId(betterproto.Enum):
    CMD_ID = 3515


class ChooseVirtualTrainGachaItemRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_CANDIDATE = 2
    ITEM_ERROR = 3


class ClaimScoinReqCmdId(betterproto.Enum):
    CMD_ID = 3910


class ClaimScoinRspCmdId(betterproto.Enum):
    CMD_ID = 3911


class ClaimScoinRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SCOIN_FULL = 2


class ClaimStaminaReqCmdId(betterproto.Enum):
    CMD_ID = 649


class ClaimStaminaRspCmdId(betterproto.Enum):
    CMD_ID = 650


class ClaimStaminaRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    FACILITY_LOCK = 2
    STORE_LACK = 3
    POWER_LACK = 4
    STAMINA_EXCEED = 5


class ClientCheckNetworkEnvReqCmdId(betterproto.Enum):
    CMD_ID = 1626


class ClientCheckNetworkEnvRspCmdId(betterproto.Enum):
    CMD_ID = 1627


class ClientCheckNetworkEnvRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ClientReportBinReqCmdId(betterproto.Enum):
    CMD_ID = 5012


class ClientReportBinRspCmdId(betterproto.Enum):
    CMD_ID = 5013


class ClientReportBinRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ClientReportReqCmdId(betterproto.Enum):
    CMD_ID = 5008


class ClientReportRspCmdId(betterproto.Enum):
    CMD_ID = 5009


class ClientReportRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class CommentReportReqCmdId(betterproto.Enum):
    CMD_ID = 229


class CommentReportRspCmdId(betterproto.Enum):
    CMD_ID = 230


class CommentReportRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class CommonCdCheckNotifyCmdId(betterproto.Enum):
    CMD_ID = 5003


class ConfirmRecommendGoodsReqCmdId(betterproto.Enum):
    CMD_ID = 1539


class ConfirmRecommendGoodsRspCmdId(betterproto.Enum):
    CMD_ID = 1540


class ConfirmRecommendGoodsRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class CoupleTowerActivityFinishFloorReqCmdId(betterproto.Enum):
    CMD_ID = 1371


class CoupleTowerActivityFinishFloorRspCmdId(betterproto.Enum):
    CMD_ID = 1372


class CoupleTowerActivityFinishFloorRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    JUMP_FLOOR = 2


class CreateAlipayOrderReqCmdId(betterproto.Enum):
    CMD_ID = 1494


class CreateAlipayOrderReqTradeType(betterproto.Enum):
    NONE = 0
    APP = 1
    QR_CODE = 2
    HUA_BEI = 3


class CreateAlipayOrderRspCmdId(betterproto.Enum):
    CMD_ID = 1495


class CreateAlipayOrderRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class CreateArmadaReqCmdId(betterproto.Enum):
    CMD_ID = 2603


class CreateArmadaRspCmdId(betterproto.Enum):
    CMD_ID = 2604


class CreateArmadaRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LACK = 2
    SCOIN_LACK = 3
    HCOIN_LACK = 4
    IN_ARMADA = 5
    IN_APPLYING = 6
    NAME_REPEAT = 7
    NAME_FORMAT_ERROR = 8
    NAME_SENSITIVE_WORDS = 9
    IN_CD_TIME = 10
    ACCOUNT_NONE = 11
    IN_LOW_POPL_CD_TIME = 12
    LABEL_ERROR = 13
    IN_AUDIT = 14


class CreateChatgroupReqCmdId(betterproto.Enum):
    CMD_ID = 2200


class CreateChatgroupRspCmdId(betterproto.Enum):
    CMD_ID = 2201


class CreateChatgroupRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    CREATE_MAX = 2
    JOIN_MAX = 3
    SENSITIVE_WORD = 4
    LEVEL_LACK = 5
    LABEL_ERROR = 6
    NAME_FORMAT_ERROR = 7
    NOTICE_FORMAT_ERROR = 8
    FEATURE_LIMIT = 9
    IN_AUDIT = 10


class CreateLobbyReqCmdId(betterproto.Enum):
    CMD_ID = 301


class CreateLobbyRspCmdId(betterproto.Enum):
    CMD_ID = 302


class CreateLobbyRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    STAGE_ERROR = 2
    SERVER_BUSY = 3
    BAD_NETWORK = 4
    CLIENT_VERSION_ERROR = 5
    NOT_ALLOWED = 6
    NO_AVAILABLE_AVATAR = 7
    TEAM_NAME_ERROR = 8
    IN_SQUAD = 9
    IN_SQUAD_MATCH = 10
    IN_ROOM = 12
    FEATURE_LIMIT = 13
    MEMBER_LIMIT = 14
    DEFAULT_TEAM_NAME_ERROR = 15


class CreateRoomReqCmdId(betterproto.Enum):
    CMD_ID = 3153


class CreateRoomRspCmdId(betterproto.Enum):
    CMD_ID = 3154


class CreateRoomRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SERVER_BUSY = 2
    IS_IN_ROOM = 3
    NO_SCHEDULE = 4
    IS_IN_BATTLE = 5
    TOO_FREQUENT = 6
    PLAYER_LEVEL_LACK = 7
    ALREADY_IN_MP = 8
    EQUIPMENT_FULL = 9
    EQUIPMENT_MATERIAL_LIMIT = 10
    EQUIPMENT_FRAGMENT_LIMIT = 11
    FEATURE_LIMIT = 12
    TIMES_LACK = 13
    STAGE_NOT_IN_SCHEDULE = 14
    PUNISHED = 15


class CreateSteamOrderReqCmdId(betterproto.Enum):
    CMD_ID = 1648


class CreateSteamOrderRspCmdId(betterproto.Enum):
    CMD_ID = 1649


class CreateSteamOrderRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class CreateWeiXinOrderReqCmdId(betterproto.Enum):
    CMD_ID = 207


class CreateWeiXinOrderReqTradeType(betterproto.Enum):
    NONE = 0
    APP = 1
    NATIVE = 2


class CreateWeiXinOrderRspCmdId(betterproto.Enum):
    CMD_ID = 208


class CreateWeiXinOrderRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class CreditAccountGetReqCmdId(betterproto.Enum):
    CMD_ID = 6002


class CreditAccountGetRspCmdId(betterproto.Enum):
    CMD_ID = 6003


class CreditAccountGetRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class CreditReportDataReqCmdId(betterproto.Enum):
    CMD_ID = 6000


class CreditReportDataRspCmdId(betterproto.Enum):
    CMD_ID = 6001


class CreditReportDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class CrisisModeActivityTakeStageRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4056


class CrisisModeActivityTakeStageRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4057


class CrisisModeActivityTakeStageRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKEN = 2


class CustomAvatarTeamEnum(betterproto.Enum):
    MIN_TEAM_ID = 1
    MAX_TEAM_ID = 10
    MAX_NAME_LEN = 24


class CustomGachaDataProtectDisplayType(betterproto.Enum):
    NO_DISPLAY = 0
    AVATAR_DISPLAY = 1
    EQUIP_DISPLAY = 2


class DanmakuBlacklistNotifyCmdId(betterproto.Enum):
    CMD_ID = 1551


class DealArmadaApplyReqCmdId(betterproto.Enum):
    CMD_ID = 2609


class DealArmadaApplyRspCmdId(betterproto.Enum):
    CMD_ID = 2610


class DealArmadaApplyRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    NOT_GRANTED = 3
    NOT_TARGET = 4
    ARMADA_FULL = 5


class DealChatgroupInviteReqCmdId(betterproto.Enum):
    CMD_ID = 2214


class DealChatgroupInviteReqInviteAction(betterproto.Enum):
    INVITE_NONE = 0
    INVITE_AGREE = 1
    INVITE_REJECT = 2


class DealChatgroupInviteRspCmdId(betterproto.Enum):
    CMD_ID = 2215


class DealChatgroupInviteRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    INVITE_NOT_EXIST = 2
    ALREADY_IN = 3
    JOIN_MAX = 4
    CHATGROUP_FULL = 5


class DealMasterPupilReqCmdId(betterproto.Enum):
    CMD_ID = 572


class DealMasterPupilRspCmdId(betterproto.Enum):
    CMD_ID = 573


class DebugHotPatchFileNotifyCmdId(betterproto.Enum):
    CMD_ID = 1600


class DelAvatarEquipSuiteReqCmdId(betterproto.Enum):
    CMD_ID = 1620


class DelAvatarEquipSuiteRspCmdId(betterproto.Enum):
    CMD_ID = 1621


class DelAvatarEquipSuiteRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_LOCK = 2
    SUITE_NOT_EXIST = 3
    SUITE_ID_LIMIT = 4


class DelClientMailReqCmdId(betterproto.Enum):
    CMD_ID = 3806


class DelClientMailRspCmdId(betterproto.Enum):
    CMD_ID = 3807


class DelClientMailRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MAIL_NOT_EXIST = 2
    MAIL_NOT_DELETE = 3


class DelEquipmentNotifyCmdId(betterproto.Enum):
    CMD_ID = 28


class DelFriendNotifyCmdId(betterproto.Enum):
    CMD_ID = 80


class DelFriendReqCmdId(betterproto.Enum):
    CMD_ID = 68


class DelFriendRspCmdId(betterproto.Enum):
    CMD_ID = 69


class DelFriendRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TARGET_NOT_FRIEND = 2
    REDIS_MULTI_ERROR = 3
    MASTER_PUPIL = 4


class DelFromBlackListReqCmdId(betterproto.Enum):
    CMD_ID = 1598


class DelFromBlackListRspCmdId(betterproto.Enum):
    CMD_ID = 1599


class DelFromBlackListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_LIST = 2


class DeliverRestaurantQuestReqCmdId(betterproto.Enum):
    CMD_ID = 5870


class DeliverRestaurantQuestRspCmdId(betterproto.Enum):
    CMD_ID = 5871


class DeliverRestaurantQuestRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_LACK = 2


class DelMissionNotifyCmdId(betterproto.Enum):
    CMD_ID = 116


class DelPlayerCardMsgReqCmdId(betterproto.Enum):
    CMD_ID = 489


class DevLevelChangeNotifyCmdId(betterproto.Enum):
    CMD_ID = 1619


class DiceyDungeonActivityDungeonBeginReqCmdId(betterproto.Enum):
    CMD_ID = 6504


class DiceyDungeonActivityDungeonBeginRspCmdId(betterproto.Enum):
    CMD_ID = 6505


class DiceyDungeonActivityDungeonBeginRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_EXIST = 2
    ROLE_NOT_EXIST = 3
    WEAPON_NOT_EXIST = 4
    ROLE_RESTRICT = 5
    TICKET_LACK = 6
    DUNGEON_TYPE_ERROR = 7
    SCHEDULE_ERROR = 8
    ORNAMENT_NUM_ERROR = 9
    ORNAMENT_ERROR = 10


class DiceyDungeonActivityDungeonEndReqCmdId(betterproto.Enum):
    CMD_ID = 6506


class DiceyDungeonActivityDungeonEndRspCmdId(betterproto.Enum):
    CMD_ID = 6507


class DiceyDungeonActivityDungeonEndRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_EXIST = 2
    DUNGEON_NOT_BEGIN = 3
    ROLE_ERROR = 4
    WEAPON_ERROR = 5
    DUNGEON_ROOM_ERROR = 6


class DiceyDungeonActivityDungeonEndRspStatus(betterproto.Enum):
    WIN = 0
    LOSE = 1
    ABANDON = 2


class DiceyDungeonActivityGetDailyScoreRankReqCmdId(betterproto.Enum):
    CMD_ID = 6520


class DiceyDungeonActivityGetDailyScoreRankRspCmdId(betterproto.Enum):
    CMD_ID = 6521


class DiceyDungeonActivityGetDailyScoreRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_EXIST = 2
    SCHEDULE_ERROR = 3


class DiceyDungeonActivityGetDataReqCmdId(betterproto.Enum):
    CMD_ID = 6500


class DiceyDungeonActivityGetDataRspCmdId(betterproto.Enum):
    CMD_ID = 6501


class DiceyDungeonActivityGetDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_EXIST = 2


class DiceyDungeonActivityGetWeaponGachaDisplayReqCmdId(betterproto.Enum):
    CMD_ID = 6512


class DiceyDungeonActivityGetWeaponGachaDisplayRspCmdId(betterproto.Enum):
    CMD_ID = 6513


class DiceyDungeonActivityGetWeaponGachaDisplayRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_EXIST = 2


class DiceyDungeonActivityRefreshOrnamentReqCmdId(betterproto.Enum):
    CMD_ID = 6518


class DiceyDungeonActivityRefreshOrnamentRspCmdId(betterproto.Enum):
    CMD_ID = 6519


class DiceyDungeonActivityRefreshOrnamentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_EXIST = 2
    DUNGEON_NOT_BEGIN = 3
    SELECT_ROOM_ERROR = 4
    ROLE_ERROR = 5
    WEAPON_ERROR = 6
    DUNGEON_ROOM_ERROR = 7
    REFRESH_TIMES_LACK = 8
    CANNOT_REFRESH = 9


class DiceyDungeonActivityRoleLevelUpReqCmdId(betterproto.Enum):
    CMD_ID = 6502


class DiceyDungeonActivityRoleLevelUpRspCmdId(betterproto.Enum):
    CMD_ID = 6503


class DiceyDungeonActivityRoleLevelUpRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_EXIST = 2
    ROLE_NOT_EXIST = 3
    MATERIAL_LACK = 4
    SITE_LOCK = 5


class DiceyDungeonActivityRoomBeginReqCmdId(betterproto.Enum):
    CMD_ID = 6508


class DiceyDungeonActivityRoomBeginRspCmdId(betterproto.Enum):
    CMD_ID = 6509


class DiceyDungeonActivityRoomBeginRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_EXIST = 2
    DUNGEON_NOT_BEGIN = 3
    SELECT_ROOM_ERROR = 4
    ROLE_ERROR = 5
    WEAPON_ERROR = 6
    DUNGEON_ROOM_ERROR = 7


class DiceyDungeonActivityRoomEndReqStatus(betterproto.Enum):
    WIN = 0
    LOSE = 1
    SKIP = 2


class DiceyDungeonActivityRoomEndReqCmdId(betterproto.Enum):
    CMD_ID = 6510


class DiceyDungeonActivityRoomEndRspCmdId(betterproto.Enum):
    CMD_ID = 6511


class DiceyDungeonActivityRoomEndRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_EXIST = 2
    DUNGEON_NOT_BEGIN = 3
    DUNGEON_ROOM_ERROR = 4
    ROLE_ERROR = 5
    WEAPON_ERROR = 6
    CHECK_EVENT_FAIL = 7


class DiceyDungeonActivitySelectOrnamentReqCmdId(betterproto.Enum):
    CMD_ID = 6516


class DiceyDungeonActivitySelectOrnamentRspCmdId(betterproto.Enum):
    CMD_ID = 6517


class DiceyDungeonActivitySelectOrnamentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_EXIST = 2
    SELECT_ORNAMENT_ERROR = 3
    REPLACE_ORNAMENT_ERROR = 4
    DUNGEON_NOT_BEGIN = 5
    DUNGEON_ROOM_ERROR = 6
    ROLE_ERROR = 7
    WEAPON_ERROR = 8
    NO_REPLACE_ORNAMENT = 9


class DiceyDungeonActivityWeaponGachaReqCmdId(betterproto.Enum):
    CMD_ID = 6514


class DiceyDungeonActivityWeaponGachaRspCmdId(betterproto.Enum):
    CMD_ID = 6515


class DiceyDungeonActivityWeaponGachaRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_EXIST = 2
    MATERIAL_LACK = 3
    ALL_WEAPON_GETTED = 4


class DisjoinFurnitureReqCmdId(betterproto.Enum):
    CMD_ID = 1134


class DisjoinFurnitureRspCmdId(betterproto.Enum):
    CMD_ID = 1135


class DisjoinFurnitureRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    FURNITURE_LACK = 2


class DissolveArmadaReqCmdId(betterproto.Enum):
    CMD_ID = 2625


class DissolveArmadaRspCmdId(betterproto.Enum):
    CMD_ID = 2626


class DissolveArmadaRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_GRANTED = 2
    NOT_IN_ARMADA = 3
    IN_DISSOLVE = 4
    IN_ARMADA_WAR = 5


class DlcAvatarReviveReqCmdId(betterproto.Enum):
    CMD_ID = 3569


class DlcAvatarReviveRspCmdId(betterproto.Enum):
    CMD_ID = 3570


class DlcAvatarReviveRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_LACK = 2
    TIMES_LACK = 3
    NOT_IN_STAGE = 4
    MAP_ERROR = 5
    AVATAR_ERROR = 6


class DlcTowerStageBeginReqCmdId(betterproto.Enum):
    CMD_ID = 3563


class DlcTowerStageBeginRspCmdId(betterproto.Enum):
    CMD_ID = 3564


class DlcTowerStageBeginRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_BEGIN = 2
    PROGRESS_FULL = 3
    AVATAR_ERROR = 4
    AVATAR_DIE = 5


class DlcTowerStageEndReqCmdId(betterproto.Enum):
    CMD_ID = 3565


class DlcTowerStageEndRspCmdId(betterproto.Enum):
    CMD_ID = 3566


class DlcTowerStageEndRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    NOT_BEGIN = 3
    PROGRESS_ERROR = 4
    PRODUCE_NUM_ERROR = 5
    AVATAR_ERROR = 6


class DonateWareHouseItemReqCmdId(betterproto.Enum):
    CMD_ID = 2653


class DonateWareHouseItemRspCmdId(betterproto.Enum):
    CMD_ID = 2654


class DonateWareHouseItemRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    TARGET_NOT_IN_ARMADA = 3
    STATUS_ERROR = 4
    CONSUME_ITEM_NOT_EXIST = 5
    CONSUME_ITEM_IN_USE = 6
    CONSUME_ITEM_REPEAT = 7
    CONSUME_ITEM_PROTECTED = 8
    COST_GACHA_TICKET = 9
    COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 10
    COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 11
    DONATE_ITEM_LACK = 12
    DONATE_TIMES_LACK = 13
    CONSUME_ITEM_IN_FACILITY = 14
    CONSUME_ITEM_GRAND_KEY = 15
    CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 16


class DonateWareHouseNotifyCmdId(betterproto.Enum):
    CMD_ID = 2677


class DrawRaffleTicketReqCmdId(betterproto.Enum):
    CMD_ID = 3896


class DrawRaffleTicketRspCmdId(betterproto.Enum):
    CMD_ID = 3897


class DrawRaffleTicketRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 3
    CANNOT_DRAW = 4
    TIMES_LIMIT = 5
    MATERIAL_NOT_ENOUGH = 6
    TOO_FREQUENT = 7


class DreamExchangeScoreReqCmdId(betterproto.Enum):
    CMD_ID = 5756


class DreamExchangeScoreRspCmdId(betterproto.Enum):
    CMD_ID = 5757


class DreamExchangeScoreRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_EXIST = 2
    DREAM_NOT_EXIST = 3
    TIMES_NOT_ENOUGH = 4
    HCOIN_NOT_ENOUGH = 5
    SCORE_FULL = 6


class DreamGetActivityReqCmdId(betterproto.Enum):
    CMD_ID = 5750


class DreamGetActivityRspCmdId(betterproto.Enum):
    CMD_ID = 5751


class DreamGetActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class DreamGiveUpDreamReqCmdId(betterproto.Enum):
    CMD_ID = 5754


class DreamGiveUpDreamRspCmdId(betterproto.Enum):
    CMD_ID = 5755


class DreamGiveUpDreamRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_EXIST = 2
    DREAM_NOT_EXIST = 3


class DreamOpenDreamReqCmdId(betterproto.Enum):
    CMD_ID = 5752


class DreamOpenDreamRspCmdId(betterproto.Enum):
    CMD_ID = 5753


class DreamOpenDreamRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_EXIST = 2
    DREAM_NOT_EXIST = 3
    REWARD_NOT_EXIST = 4
    HAS_OPEN_DREAM = 5
    LOCKED = 6
    REWARD_TAKEN = 7


class DreamTakeRewardReqCmdId(betterproto.Enum):
    CMD_ID = 5758


class DreamTakeRewardRspCmdId(betterproto.Enum):
    CMD_ID = 5759


class DreamTakeRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_EXIST = 2
    DREAM_NOT_EXIST = 3
    SCORE_NOT_ENOUGH = 4
    REWARD_TAKEN = 5


class DressEquipmentReqCmdId(betterproto.Enum):
    CMD_ID = 39


class DressEquipmentRspCmdId(betterproto.Enum):
    CMD_ID = 40


class DressEquipmentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2
    EQUIPMENT_NOT_EXIST = 3
    EQUIPMENT_DRESSED = 4
    EQUIPMENT_SLOT_ERROR = 5
    COST_LACK = 6
    AFFIX_NOT_IDENTIFY = 7


class DressReclaimEquipmentReqCmdId(betterproto.Enum):
    CMD_ID = 1173


class DressReclaimEquipmentRspCmdId(betterproto.Enum):
    CMD_ID = 1174


class DressReclaimEquipmentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2
    EQUIP_NOT_EXIST = 3
    HAVE_DRESSED = 4


class DressToReturnMaterialNotifyCmdId(betterproto.Enum):
    CMD_ID = 250


class DressVirtualEquipmentReqCmdId(betterproto.Enum):
    CMD_ID = 3506


class DressVirtualEquipmentRspCmdId(betterproto.Enum):
    CMD_ID = 3507


class DressVirtualEquipmentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2
    EQUIP_NOT_EXIST = 3
    HAVE_DRESSED = 4


class EditAdventureRoomReqCmdId(betterproto.Enum):
    CMD_ID = 3920


class EditAdventureRoomRspCmdId(betterproto.Enum):
    CMD_ID = 3921


class EditAdventureRoomRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SLOT_UNLOCK = 2
    FURNITURE_LACK = 3
    FURNITURE_TYPE_ERROR = 4
    COLLECTION_TYPE_ERROR = 5


class EditDormRoomReqCmdId(betterproto.Enum):
    CMD_ID = 605


class EditDormRoomRspCmdId(betterproto.Enum):
    CMD_ID = 606


class EditDormRoomRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ROOM_NOT_EXIST = 2
    FURNITURE_LACK = 3
    EFFECT_LACK = 4


class ElfFragmentTransformReqCmdId(betterproto.Enum):
    CMD_ID = 2121


class ElfFragmentTransformRspCmdId(betterproto.Enum):
    CMD_ID = 2122


class ElfFragmentTransformRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    STAR_LACK = 2
    FRAGMENT_LACK = 3
    MATERIAL_FULL = 4
    FEATURE_CLOSED = 5


class ElfSkillLevelUpReqCmdId(betterproto.Enum):
    CMD_ID = 2123


class ElfSkillLevelUpRspCmdId(betterproto.Enum):
    CMD_ID = 2124


class ElfSkillLevelUpRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ELF_LOCKED = 2
    SCOIN_LACK = 3
    MATERIAL_NOT_ENOUGH = 4
    LEVEL_FULL = 5
    ELF_STAR_NOT_ENOUGH = 6
    PRE_SKILL_LEVEL_NOT_ENOUGH = 7
    ELF_LEVEL_NOT_ENOUGH = 8


class ElfStarUpReqCmdId(betterproto.Enum):
    CMD_ID = 2105


class ElfStarUpRspCmdId(betterproto.Enum):
    CMD_ID = 2106


class ElfStarUpRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ELF_NOT_EXIST = 2
    FRAGMENT_LACK = 3
    STAR_FULL = 4
    LEVEL_LACK = 5
    FEATURE_CLOSED = 6


class ElfTakeCompensationReqCmdId(betterproto.Enum):
    CMD_ID = 2125


class ElfTakeCompensationRspCmdId(betterproto.Enum):
    CMD_ID = 2126


class ElfTakeCompensationRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKE = 2


class ElfUpgradeLevelPeriodReqCmdId(betterproto.Enum):
    CMD_ID = 2109


class ElfUpgradeLevelPeriodRspCmdId(betterproto.Enum):
    CMD_ID = 2110


class ElfUpgradeLevelPeriodRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ELF_NOT_EXIST = 2
    MATERIAL_NOT_ENOUGH = 3
    EXP_NOT_ENOUGH = 4
    LEVEL_CAN_NOT_UPGRADE_PERIOD = 5
    PLAYER_LEVEL_NOT_ENOUGH = 6


class EndlessInSettleNotifyCmdId(betterproto.Enum):
    CMD_ID = 3452


class EndlessSelectTypeReqCmdId(betterproto.Enum):
    CMD_ID = 3462


class EndlessSelectTypeRspCmdId(betterproto.Enum):
    CMD_ID = 3463


class EndlessSelectTypeRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    IN_ULTRA = 2
    NOT_IN_NEXT_SCHEDULE = 3
    LACK_LEVEL = 4


class EndlessSingleModeActivityBattleBeginReqCmdId(betterproto.Enum):
    CMD_ID = 4042


class EndlessSingleModeActivityBattleBeginRspCmdId(betterproto.Enum):
    CMD_ID = 4043


class EndlessSingleModeActivityBattleBeginRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class EndlessSingleModeActivityBattleEndReqCmdId(betterproto.Enum):
    CMD_ID = 4044


class EndlessSingleModeActivityBattleEndRspCmdId(betterproto.Enum):
    CMD_ID = 4045


class EndlessSingleModeActivityBattleEndRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class EndlessSingleModeActivityFinishFloorReqCmdId(betterproto.Enum):
    CMD_ID = 4038


class EndlessSingleModeActivityFinishFloorRspCmdId(betterproto.Enum):
    CMD_ID = 4039


class EndlessSingleModeActivityFinishFloorRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_CUR_FLOOR = 2


class EndlessSingleModeActivityResetReqCmdId(betterproto.Enum):
    CMD_ID = 4040


class EndlessSingleModeActivityResetRspCmdId(betterproto.Enum):
    CMD_ID = 4041


class EndlessSingleModeActivityResetRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_LACK = 2
    STAMINA_LACK = 3


class EndlessSingleModeActivityTakeItemReqCmdId(betterproto.Enum):
    CMD_ID = 4046


class EndlessSingleModeActivityTakeItemRspCmdId(betterproto.Enum):
    CMD_ID = 4047


class EndlessSingleModeActivityTakeItemRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ITEM_FULL = 2


class EndlessSingleModeActivityUseItemReqCmdId(betterproto.Enum):
    CMD_ID = 4048


class EndlessSingleModeActivityUseItemRspCmdId(betterproto.Enum):
    CMD_ID = 4049


class EndlessSingleModeActivityUseItemRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ITEM_LACK = 2


class EndlessWarInfoType(betterproto.Enum):
    USE_ITEM = 1
    BOMB_CANCEL = 2
    BOMB_BURST = 3


class EnterArmadaChatroomReqCmdId(betterproto.Enum):
    CMD_ID = 2657


class EnterArmadaChatroomRspCmdId(betterproto.Enum):
    CMD_ID = 2658


class EnterArmadaChatroomRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2


class EnterCommonChatworldReqCmdId(betterproto.Enum):
    CMD_ID = 2400


class EnterCommonChatworldRspCmdId(betterproto.Enum):
    CMD_ID = 2401


class EnterCommonChatworldRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    CHATWORLD_ID_ERROR = 2
    ENTER_ERROR = 3
    CHATWORLD_FULL = 4
    LACK_LEVEL = 5
    NO_QAVATAR = 6
    NOT_JOIN_ACTIVITY = 7
    SCENE_NOT_EXIST = 8
    NOT_OPEN = 9
    IS_ENTERING = 10
    NOT_IN_ARMADA = 11


class EnterLobbyReqCmdId(betterproto.Enum):
    CMD_ID = 303


class EnterLobbyRspCmdId(betterproto.Enum):
    CMD_ID = 304


class EnterLobbyRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LOBBY_FULL = 2
    LEVEL_NOT_SATISFY = 3
    ALREADY_IN_LOBBY = 4
    LOBBY_FIGHTING = 5
    LOBBY_NOT_EXIST = 6
    NO_LOBBY = 7
    STAGE_ERROR = 8
    SERVER_BUSY = 9
    BAD_NETWORK = 10
    CLIENT_VERSION_ERROR = 11
    IN_MATCH_QUEUE = 12
    MATCH_STAGE_EXCEED_MAX = 13
    ALREADY_IN_MATCH = 14
    NO_AVAILABLE_AVATAR = 15
    NOT_ALLOW_CROSS_REGION = 16
    IN_SQUAD = 17
    IN_SQUAD_MATCH = 18
    IN_ROOM = 19
    FEATURE_LIMIT = 20
    NOT_IN_SAME_ARMADA = 21
    DATA_VERSION_CONFLICT = 22
    FEATURE_CLOSED = 23


class EnterRoomReqCmdId(betterproto.Enum):
    CMD_ID = 3155


class EnterRoomRspCmdId(betterproto.Enum):
    CMD_ID = 3156


class EnterRoomRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SERVER_BUSY = 2
    IS_IN_ROOM = 3
    ROOM_NOT_EXIST = 4
    ROOM_FULL = 5
    ROOM_IN_MATCHING = 6
    IS_IN_BATTLE = 7
    TOO_FREQUENT = 8
    NO_SCHEDULE = 9
    PLAYER_LEVEL_LACK = 10
    ALREADY_IN_MP = 11
    EQUIPMENT_FULL = 12
    EQUIPMENT_MATERIAL_LIMIT = 13
    EQUIPMENT_FRAGMENT_LIMIT = 14
    FEATURE_LIMIT = 15
    PUNISHED = 16


class EnterRpgTaleSiteReqCmdId(betterproto.Enum):
    CMD_ID = 2303


class EnterRpgTaleSiteRspCmdId(betterproto.Enum):
    CMD_ID = 2304


class EnterRpgTaleSiteRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_PASS_CUR_SITE = 2
    SITE_LOCKED = 3


class EnterWorldChatroomReqCmdId(betterproto.Enum):
    CMD_ID = 2231


class EnterWorldChatroomRspCmdId(betterproto.Enum):
    CMD_ID = 2232


class EnterWorldChatroomRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LACK = 2
    CHATROOM_ID_ERROR = 3
    CHATROOM_FULL = 4
    NO_KINGDOM = 5
    TOO_OFTEN = 6
    FEATURE_CLOSED = 7


class EquipDlcAvatarTalentReqCmdId(betterproto.Enum):
    CMD_ID = 3554


class EquipDlcAvatarTalentRspCmdId(betterproto.Enum):
    CMD_ID = 3555


class EquipDlcAvatarTalentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2
    TALENT_NOT_EXIST = 3
    TALENT_TYPE_ERROR = 4
    TALENT_TAG_REPEAT = 5


class EquipmentEvoReqCmdId(betterproto.Enum):
    CMD_ID = 37


class EquipmentEvoRspCmdId(betterproto.Enum):
    CMD_ID = 38


class EquipmentEvoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MAIN_ITEM_NOT_EXIST = 2
    MAIN_ITEM_LEVEL_NOT_FULL = 3
    CONSUME_ITEM_NOT_EXIST = 4
    CONSUME_ITEM_IN_USE = 5
    CONSUME_ITEM_REPEAT = 6
    CONSUME_ITEM_UN_NECESSARY = 7
    CONSUME_ITEM_LACK = 8
    MAIN_ITEM_IN_CONSUME_ITEM_LIST = 9
    SCOIN_LACK = 10
    CONSUME_ITEM_PROTECTED = 11
    MAIN_ITEM_AFFIX_NOT_IDENTIFY = 12
    COST_GACHA_TICKET = 13
    COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 14
    COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 15
    CONSUME_ITEM_GRAND_KEY = 16
    CONSUME_ITEM_IN_FACILITY = 17
    MAIN_ITEM_IN_FACILITY = 18
    CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 19


class EquipmentPowerUpReqCmdId(betterproto.Enum):
    CMD_ID = 31


class EquipmentPowerUpRspCmdId(betterproto.Enum):
    CMD_ID = 32


class EquipmentPowerUpRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MAIN_ITEM_NOT_EXIST = 2
    MAIN_ITEM_LEVEL_FULL = 3
    CONSUME_ITEM_NOT_EXIST = 4
    CONSUME_ITEM_IN_USE = 5
    CONSUME_ITEM_REPEAT = 6
    MAIN_ITEM_IN_CONSUME_ITEM_LIST = 7
    SCOIN_LACK = 8
    CONSUME_ITEM_PROTECTED = 9
    MAIN_ITEM_AFFIX_NOT_IDENTIFY = 10
    COST_GACHA_TICKET = 11
    COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 12
    COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 13
    CONSUME_ITEM_IN_FACILITY = 14
    CONSUME_ITEM_GRAND_KEY = 15
    CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 16


class EquipmentSellReqCmdId(betterproto.Enum):
    CMD_ID = 33


class EquipmentSellRspCmdId(betterproto.Enum):
    CMD_ID = 34


class EquipmentSellRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    CONSUME_ITEM_NOT_EXIST = 2
    CONSUME_ITEM_IN_USE = 3
    CONSUME_ITEM_REPEAT = 4
    CONSUME_ITEM_PROTECTED = 5
    COST_GACHA_TICKET = 6
    COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 7
    COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 8
    SELL_PRICE = 9
    CONSUME_ITEM_GRAND_KEY = 10
    CONSUME_ITEM_IN_FACILITY = 11
    LACK_VITALITY = 12
    CONTAINS_EQUIP_CAN_NOT_SELL = 13
    GREEN_STONE_QUANTITY_LIMIT = 14
    PURPLE_JADE_QUANTITY_LIMIT = 15
    CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 16


class EquipScDlcAvatarTalentReqCmdId(betterproto.Enum):
    CMD_ID = 6314


class EquipScDlcAvatarTalentRspCmdId(betterproto.Enum):
    CMD_ID = 6315


class EquipScDlcAvatarTalentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_ERROR = 2
    TALENT_ERROR = 3
    TALENT_TAG_REPEAT = 4


class EquipSynthesisReqCmdId(betterproto.Enum):
    CMD_ID = 478


class EquipSynthesisRspCmdId(betterproto.Enum):
    CMD_ID = 479


class EquipSynthesisRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    FRAG_ERROR = 2
    BAG_FULL = 3


class EvaluateExaminationReqCmdId(betterproto.Enum):
    CMD_ID = 4329


class EvaluateExaminationRspCmdId(betterproto.Enum):
    CMD_ID = 4330


class EvaluateExaminationRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class EvoStigmataTitleReqCmdId(betterproto.Enum):
    CMD_ID = 326


class EvoStigmataTitleRspCmdId(betterproto.Enum):
    CMD_ID = 327


class EvoStigmataTitleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    STIGMATA_NOT_EXIST = 2
    EXP_LACK = 3
    MATERIAL_LACK = 4
    LEVEL_ERROR = 5
    LEVEL_LACK = 6


class ExBossStageBeginReqCmdId(betterproto.Enum):
    CMD_ID = 529


class ExBossStageBeginRspCmdId(betterproto.Enum):
    CMD_ID = 530


class ExBossStageBeginRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_ERROR = 3
    DUP_AVATAR = 4
    ENTER_TIMES_LACK = 5
    EX_BOSS_LACK_SCORE = 6
    ELF_ERROR = 7
    ELF_CARRY_LEVEL_LIMIT = 8
    NEED_FINISH_NORMAL = 9
    FEATURE_LIMIT = 10
    FEATURE_CLOSED = 11
    NOT_OPEN = 12
    NOT_ALLOW_TURBO = 13
    NO_AVAILABLE_BOSS = 14
    LACK_LOCK_SLOT = 15
    PRE_BOSS_NOT_FINISH = 16


class ExBossStageEndReqCmdId(betterproto.Enum):
    CMD_ID = 531


class ExBossStageEndRspCmdId(betterproto.Enum):
    CMD_ID = 532


class ExBossStageEndRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_BEGIN = 3
    NOT_OPEN = 4


class ExBossSweepReqCmdId(betterproto.Enum):
    CMD_ID = 1655


class ExBossSweepRspCmdId(betterproto.Enum):
    CMD_ID = 1656


class ExBossSweepRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LIMIT = 2
    ENTER_TIMES_LACK = 3
    FEATURE_LIMIT = 4
    FEATURE_CLOSED = 5
    FINISHED = 6
    NOT_OPEN = 7


class ExBossTakeBossScoreRewardNotifyCmdId(betterproto.Enum):
    CMD_ID = 1657


class ExchangeAvatarWeaponReqCmdId(betterproto.Enum):
    CMD_ID = 135


class ExchangeAvatarWeaponRspCmdId(betterproto.Enum):
    CMD_ID = 136


class ExchangeAvatarWeaponRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_ERROR = 2
    WEAPON_TYPE_ERROR = 3
    COST_LACK = 4


class ExchangeHcoinByMcoinReqCmdId(betterproto.Enum):
    CMD_ID = 834


class ExchangeHcoinByMcoinRspCmdId(betterproto.Enum):
    CMD_ID = 835


class ExchangeHcoinByMcoinRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LACK_MCOIN = 2
    PRODUCT_INVALID = 3


class ExchangePurpleJadeReqCmdId(betterproto.Enum):
    CMD_ID = 1367


class ExchangePurpleJadeRspCmdId(betterproto.Enum):
    CMD_ID = 1368


class ExchangePurpleJadeRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LACK_HCOIN = 2
    CAN_NOT_EXCHANGE = 3
    LIMIT_FOR_EXCHANGE = 4
    LACK_EXCHANGE_NUM = 5
    LACK_MCOIN = 6


class ExchangeRaffleMaterialReqCmdId(betterproto.Enum):
    CMD_ID = 3890


class ExchangeRaffleMaterialRspCmdId(betterproto.Enum):
    CMD_ID = 3891


class ExchangeRaffleMaterialRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_NOT_ENOUGH = 2
    NOT_OPEN = 3


class ExchangeRedeemCodeReqCmdId(betterproto.Enum):
    CMD_ID = 213


class ExchangeRedeemCodeRspCmdId(betterproto.Enum):
    CMD_ID = 214


class ExchangeRedeemCodeRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    REDEEM_CODE_ERROR = 2
    REDEEM_CODE_NUM_LACK = 3
    REDEEM_TAKE_NUM_LACK = 4
    REDEEM_CODE_EXPIRED = 5
    REDEEM_HAS_TAKEN = 6
    NOT_PERMITTED = 7
    EQUIPMENT_FULL = 8
    REDEEM_FREQ_LIMIT = 9


class ExchangeWeekDayActivityTimesReqCmdId(betterproto.Enum):
    CMD_ID = 259


class ExchangeWeekDayActivityTimesRspCmdId(betterproto.Enum):
    CMD_ID = 260


class ExchangeWeekDayActivityTimesRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 2
    COIN_LACK = 3
    TIMES_NOT_ZERO = 4


class ExitRoomNotifyCmdId(betterproto.Enum):
    CMD_ID = 3159


class ExitRoomReqCmdId(betterproto.Enum):
    CMD_ID = 3157


class ExitRoomRspCmdId(betterproto.Enum):
    CMD_ID = 3158


class ExitRoomRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ROOM = 2
    TOO_FREQUENT = 3


class ExitTvtBattleNotifyCmdId(betterproto.Enum):
    CMD_ID = 3357


class ExtractEquipmentReqCmdId(betterproto.Enum):
    CMD_ID = 3654


class ExtractEquipmentRspCmdId(betterproto.Enum):
    CMD_ID = 3655


class ExtractEquipmentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    JUST_SUPPORT_WEAPON = 2
    CONSUME_ITEM_NOT_EXIST = 3
    CONSUME_ITEM_IN_USE = 4
    CONSUME_ITEM_PROTECTED = 5
    COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 6
    COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 7
    NOT_CULTIVATED = 8
    ACTIVITY_NOT_OPEN = 9
    EQUIP_NOT_OPEN = 10
    MATERIAL_NOT_FITTED = 11
    MATERIAL_LACK = 12
    CONSUME_ITEM_IN_FACILITY = 13
    CONSUME_ITEM_GRAND_KEY = 14
    CONSUME_ITEM_REPEAT = 15
    COST_GACHA_TICKET = 16
    CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 17


class FarmActivityNotifyCmdId(betterproto.Enum):
    CMD_ID = 1395


class FinishClearStageActivityNotifyCmdId(betterproto.Enum):
    CMD_ID = 455


class FinishConsignedOrderReqCmdId(betterproto.Enum):
    CMD_ID = 2643


class FinishConsignedOrderRspCmdId(betterproto.Enum):
    CMD_ID = 2644


class FinishConsignedOrderRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    IN_CD_TIME = 3
    TIMES_LACK = 4
    CONSUME_ITEM_NOT_EXIST = 5
    CONSUME_ITEM_IN_USE = 6
    CONSUME_ITEM_REPEAT = 7
    CONSUME_ITEM_PROTECTED = 8
    COST_GACHA_TICKET = 9
    COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 10
    COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 11
    ITEM_LACK = 12
    STATUS_ERROR = 13
    ORDER_FINISHED = 14
    ORDER_PROGRESS_CHANGE = 15
    CONSUME_ITEM_IN_FACILITY = 16
    CONSUME_ITEM_GRAND_KEY = 17
    CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 18


class FinishDlcDialogReqCmdId(betterproto.Enum):
    CMD_ID = 3578


class FinishDlcDialogRspCmdId(betterproto.Enum):
    CMD_ID = 3579


class FinishDlcDialogRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_SUPPORT_DIALOG = 2
    ALREADY_TAKEN = 3


class FinishDormEventReqCmdId(betterproto.Enum):
    CMD_ID = 617


class FinishDormEventRspCmdId(betterproto.Enum):
    CMD_ID = 618


class FinishDormEventRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    CONDITION_LIMIT = 2


class FinishDormTalkReqCmdId(betterproto.Enum):
    CMD_ID = 641


class FinishDormTalkRspCmdId(betterproto.Enum):
    CMD_ID = 642


class FinishDormTalkRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    PLOT_ERROR = 2
    PLOT_FINISHED = 3


class FinishExaminationReqCmdId(betterproto.Enum):
    CMD_ID = 4325


class FinishExaminationRspCmdId(betterproto.Enum):
    CMD_ID = 4326


class FinishExaminationRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_FINISHED = 2
    NOT_CUR_EXAMINATION = 3


class FinishFarmProduceReqCmdId(betterproto.Enum):
    CMD_ID = 1391


class FinishFarmProduceRspCmdId(betterproto.Enum):
    CMD_ID = 1392


class FinishFarmProduceRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SLOT_LOCKED = 2
    NOT_IN_PRODUCE = 3
    NOT_FINISH = 4


class FinishFastPassReqCmdId(betterproto.Enum):
    CMD_ID = 1490


class FinishFastPassRspCmdId(betterproto.Enum):
    CMD_ID = 1491


class FinishFastPassRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_SCHEDULE = 2
    MATERIAL_LACK = 3
    QUEST_NOT_EXIST = 4
    QUEST_NOT_DOING = 5
    MAP_NOT_FOUND = 6
    NO_USE_TIMES = 7
    STAGE_NOT_EXIST = 8
    STAGE_CANT_FAST_PASS = 9
    NO_ENTER_TIMES = 10
    STAMINA_LACK = 11
    EQUIPMENT_FULL = 12
    GENERATE_DROP_FAILED = 13


class FinishGuideReportReqCmdId(betterproto.Enum):
    CMD_ID = 129


class FinishGuideReportRspCmdId(betterproto.Enum):
    CMD_ID = 130


class FinishGuideReportRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class FinishIslandEventReqCmdId(betterproto.Enum):
    CMD_ID = 243


class FinishIslandEventRspCmdId(betterproto.Enum):
    CMD_ID = 244


class FinishIslandEventRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class FinishMatrixEventPlotReqCmdId(betterproto.Enum):
    CMD_ID = 2336


class FinishMatrixEventPlotRspCmdId(betterproto.Enum):
    CMD_ID = 2337


class FinishMatrixEventPlotRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class FinishOpenworldEndlessInvasionMonsterReqCmdId(betterproto.Enum):
    CMD_ID = 3430


class FinishOpenworldEndlessInvasionMonsterRspCmdId(betterproto.Enum):
    CMD_ID = 3431


class FinishOpenworldEndlessInvasionMonsterRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ENDLESS_STATUS_ERROR = 2
    NOT_JOIN = 3
    NO_INVASION = 4


class FinishOpenworldEndlessMonsterGroupReqCmdId(betterproto.Enum):
    CMD_ID = 3424


class FinishOpenworldEndlessMonsterGroupRspCmdId(betterproto.Enum):
    CMD_ID = 3425


class FinishOpenworldEndlessMonsterGroupRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class FinishPlotReqCmdId(betterproto.Enum):
    CMD_ID = 1378


class FinishPlotRspCmdId(betterproto.Enum):
    CMD_ID = 1379


class FinishPlotRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    PLOT_ERROR = 2
    PLOT_FINISHED = 3


class FinishRpgTalePlotReqCmdId(betterproto.Enum):
    CMD_ID = 2305


class FinishRpgTalePlotRspCmdId(betterproto.Enum):
    CMD_ID = 2306


class FinishRpgTalePlotRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class FinishRpgTaleStagePlotReqCmdId(betterproto.Enum):
    CMD_ID = 2370


class FinishRpgTaleStagePlotRspCmdId(betterproto.Enum):
    CMD_ID = 2371


class FinishRpgTaleStagePlotRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class FinishScDlcDailyQuestReqCmdId(betterproto.Enum):
    CMD_ID = 6322


class FinishScDlcDailyQuestRspCmdId(betterproto.Enum):
    CMD_ID = 6323


class FinishScDlcDailyQuestRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    QUEST_NOT_EXIST = 2
    QUEST_NOT_DOING = 3


class FinishScDlcPlotReqCmdId(betterproto.Enum):
    CMD_ID = 6330


class FinishScDlcPlotRspCmdId(betterproto.Enum):
    CMD_ID = 6331


class FinishScDlcPlotRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class FinishSurveyNotifyCmdId(betterproto.Enum):
    CMD_ID = 4243


class FlopActivityFlopCardReqCmdId(betterproto.Enum):
    CMD_ID = 4175


class FlopActivityFlopCardRspCmdId(betterproto.Enum):
    CMD_ID = 4176


class FlopActivityFlopCardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    HAS_FLOP = 3
    HAS_UNLOCK = 4
    NO_TIMES = 5
    ITEMS_LACK = 6


class ForgeEquipmentReqCmdId(betterproto.Enum):
    CMD_ID = 3652


class ForgeEquipmentRspCmdId(betterproto.Enum):
    CMD_ID = 3653


class ForgeEquipmentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LIMIT = 2
    NO_TIMES = 3
    CONSUME_ITEM_NOT_EXIST = 4
    CONSUME_ITEM_IN_USE = 5
    CONSUME_ITEM_REPEAT = 6
    CONSUME_ITEM_PROTECTED = 7
    COST_GACHA_TICKET = 8
    COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 9
    COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 10
    CONSUME_ITEM_GRAND_KEY = 11
    CONSUME_ITEM_IN_FACILITY = 12
    CURRENCY_LACK = 13
    CONSUME_ITEM_MATCHING_REDUNDANT = 14
    CONSUME_ITEM_MATCHING_LACK = 15
    CONSUME_WEAPON_LOCKED = 16
    QUANTUM_WEAPON_NUM_LIMIT = 17
    QUANTUM_FORGE_CLOSED = 18
    WAIT_SELECTED_RUNE = 19
    NO_RUNE = 20
    CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 21
    FEATURE_CLOSED = 22


class FrameDataEvaluationType(betterproto.Enum):
    Evaluate = 0
    Playback = 1


class FriendBondNotifyCmdId(betterproto.Enum):
    CMD_ID = 394


class FrontEndlessActivityBattleBeginReqCmdId(betterproto.Enum):
    CMD_ID = 4064


class FrontEndlessActivityBattleBeginRspCmdId(betterproto.Enum):
    CMD_ID = 4065


class FrontEndlessActivityBattleBeginRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class FrontEndlessActivityBattleEndReqCmdId(betterproto.Enum):
    CMD_ID = 4066


class FrontEndlessActivityBattleEndRspCmdId(betterproto.Enum):
    CMD_ID = 4067


class FrontEndlessActivityBattleEndRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_CUR_FLOOR = 2


class GachaProtectDisplayInfoProtectDisplayType(betterproto.Enum):
    NO_DISPLAY = 0
    AVATAR_DISPLAY = 1
    EQUIP_DISPLAY = 2


class GardenHarvestReqCmdId(betterproto.Enum):
    CMD_ID = 4289


class GardenHarvestRspCmdId(betterproto.Enum):
    CMD_ID = 4290


class GardenHarvestRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    DAILY_HARVEST_LIMIT = 3


class GardenRefreshSiteReqCmdId(betterproto.Enum):
    CMD_ID = 4293


class GardenRefreshSiteRspCmdId(betterproto.Enum):
    CMD_ID = 4294


class GardenRefreshSiteRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GardenSpeedUpWithMaterialReqCmdId(betterproto.Enum):
    CMD_ID = 4291


class GardenSpeedUpWithMaterialRspCmdId(betterproto.Enum):
    CMD_ID = 4292


class GardenSpeedUpWithMaterialRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    MATERIAL_NOT_ENOUGH = 3
    SITE_FULL = 4


class GeneralActivityGetMainInfoReqCmdId(betterproto.Enum):
    CMD_ID = 4005


class GeneralActivityGetMainInfoRspCmdId(betterproto.Enum):
    CMD_ID = 4006


class GeneralActivityGetMainInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GeneralActivityGetRankReqCmdId(betterproto.Enum):
    CMD_ID = 4007


class GeneralActivityGetRankRspCmdId(betterproto.Enum):
    CMD_ID = 4008


class GeneralActivityGetRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GeneralActivityGetScheduleReqCmdId(betterproto.Enum):
    CMD_ID = 4003


class GeneralActivityGetScheduleRspCmdId(betterproto.Enum):
    CMD_ID = 4004


class GeneralActivityGetScheduleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GeneralActivityGetScoreRewardInfoReqCmdId(betterproto.Enum):
    CMD_ID = 4001


class GeneralActivityGetScoreRewardInfoRspCmdId(betterproto.Enum):
    CMD_ID = 4002


class GeneralActivityGetScoreRewardInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GeneralActivityGetStageRankReqCmdId(betterproto.Enum):
    CMD_ID = 4052


class GeneralActivityGetStageRankRspCmdId(betterproto.Enum):
    CMD_ID = 4053


class GeneralActivityGetStageRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GeneralActivityScoreRewardNotifyCmdId(betterproto.Enum):
    CMD_ID = 4000


class GeneralActivityStageExchangeEnterTimesReqCmdId(betterproto.Enum):
    CMD_ID = 4030


class GeneralActivityStageExchangeEnterTimesRspCmdId(betterproto.Enum):
    CMD_ID = 4031


class GeneralActivityStageExchangeEnterTimesRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_LACK = 2
    RESET_TIMES_LACK = 3


class GeneralActivityStageTakeStageGroupRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4036


class GeneralActivityStageTakeStageGroupRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4037


class GeneralActivityStageTakeStageGroupRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKEN = 2
    NOT_REACH = 3


class GeneralActivityStageTakeStageRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4032


class GeneralActivityStageTakeStageRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4033


class GeneralActivityStageTakeStageRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GeneralActivityTakeTicketReqCmdId(betterproto.Enum):
    CMD_ID = 4060


class GeneralActivityTakeTicketRspCmdId(betterproto.Enum):
    CMD_ID = 4061


class GeneralActivityTakeTicketRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetActivityRewardStatisticDataReqCmdId(betterproto.Enum):
    CMD_ID = 4312


class GetActivityRewardStatisticDataRspCmdId(betterproto.Enum):
    CMD_ID = 4313


class GetActivityRewardStatisticDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetAdventureGroupReqCmdId(betterproto.Enum):
    CMD_ID = 3900


class GetAdventureGroupRspCmdId(betterproto.Enum):
    CMD_ID = 3901


class GetAdventureGroupRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetAdventureStorySweepInfoReqCmdId(betterproto.Enum):
    CMD_ID = 3914


class GetAdventureStorySweepInfoRspCmdId(betterproto.Enum):
    CMD_ID = 3915


class GetAdventureStorySweepInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetArmadaActivityListReqCmdId(betterproto.Enum):
    CMD_ID = 2825


class GetArmadaActivityListRspCmdId(betterproto.Enum):
    CMD_ID = 2826


class GetArmadaActivityListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetArmadaBuildOwnershipReqCmdId(betterproto.Enum):
    CMD_ID = 2685


class GetArmadaBuildOwnershipRspCmdId(betterproto.Enum):
    CMD_ID = 2686


class GetArmadaBuildOwnershipRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_GRANTED = 2
    NOT_IN_ARMADA = 3


class GetArmadaDataReqCmdId(betterproto.Enum):
    CMD_ID = 2601


class GetArmadaDataRspCmdId(betterproto.Enum):
    CMD_ID = 2602


class GetArmadaDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LACK = 2


class GetArmadaDiscoveryReqCmdId(betterproto.Enum):
    CMD_ID = 2663


class GetArmadaDiscoveryRspCmdId(betterproto.Enum):
    CMD_ID = 2664


class GetArmadaDiscoveryRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2


class GetArmadaManageDataReqCmdId(betterproto.Enum):
    CMD_ID = 2611


class GetArmadaManageDataRspCmdId(betterproto.Enum):
    CMD_ID = 2612


class GetArmadaManageDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_GRANTED = 2
    NOT_IN_ARMADA = 3


class GetArmadaMemberDiscoveryListReqCmdId(betterproto.Enum):
    CMD_ID = 2665


class GetArmadaMemberDiscoveryListRspCmdId(betterproto.Enum):
    CMD_ID = 2666


class GetArmadaMemberDiscoveryListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2


class GetArmadaReunionActivityReqCmdId(betterproto.Enum):
    CMD_ID = 2834


class GetArmadaReunionActivityRspCmdId(betterproto.Enum):
    CMD_ID = 2835


class GetArmadaReunionActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    NOT_IN_ARMADA = 3


class GetArmadaStageReqCmdId(betterproto.Enum):
    CMD_ID = 2667


class GetArmadaStageRewardReqCmdId(betterproto.Enum):
    CMD_ID = 2673


class GetArmadaStageRewardRspCmdId(betterproto.Enum):
    CMD_ID = 2674


class GetArmadaStageRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2


class GetArmadaStageRspCmdId(betterproto.Enum):
    CMD_ID = 2668


class GetArmadaStageRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2


class GetArmadaStageScoreActivityReqCmdId(betterproto.Enum):
    CMD_ID = 2821


class GetArmadaStageScoreActivityRspCmdId(betterproto.Enum):
    CMD_ID = 2822


class GetArmadaStageScoreActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    NOT_OPEN = 3


class GetArmadaStageScoreRankReqCmdId(betterproto.Enum):
    CMD_ID = 2842


class GetArmadaStageScoreRankRspCmdId(betterproto.Enum):
    CMD_ID = 2843


class GetArmadaStageScoreRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    STAGE_ERROR = 3


class GetAskAddFriendListReqCmdId(betterproto.Enum):
    CMD_ID = 70


class GetAskAddFriendListRspCmdId(betterproto.Enum):
    CMD_ID = 71


class GetAskAddFriendListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetAssistantFrozenListReqCmdId(betterproto.Enum):
    CMD_ID = 100


class GetAssistantFrozenListRspCmdId(betterproto.Enum):
    CMD_ID = 101


class GetAssistantFrozenListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetAuthkeyReqCmdId(betterproto.Enum):
    CMD_ID = 5010


class GetAuthkeyRspCmdId(betterproto.Enum):
    CMD_ID = 5011


class GetAuthkeyRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SIGN_TYPE_ERROR = 2
    AUTHKEY_VER_ERROR = 3


class GetAvatarBindEquipInChallengeModeReqCmdId(betterproto.Enum):
    CMD_ID = 809


class GetAvatarBindEquipInChallengeModeRspCmdId(betterproto.Enum):
    CMD_ID = 810


class GetAvatarBindEquipInChallengeModeRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetAvatarDataReqCmdId(betterproto.Enum):
    CMD_ID = 24


class GetAvatarDataRspCmdId(betterproto.Enum):
    CMD_ID = 25


class GetAvatarDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2


class GetAvatarEquipSuiteReqCmdId(betterproto.Enum):
    CMD_ID = 1454


class GetAvatarEquipSuiteRspCmdId(betterproto.Enum):
    CMD_ID = 1455


class GetAvatarEquipSuiteRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetAvatarMissionActivityReqCmdId(betterproto.Enum):
    CMD_ID = 3000


class GetAvatarMissionActivityRspCmdId(betterproto.Enum):
    CMD_ID = 3001


class GetAvatarMissionActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetAvatarRollDataReqCmdId(betterproto.Enum):
    CMD_ID = 643


class GetAvatarRollDataRspCmdId(betterproto.Enum):
    CMD_ID = 644


class GetAvatarRollDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2


class GetAvatarTeamDataReqCmdId(betterproto.Enum):
    CMD_ID = 47


class GetAvatarTeamDataRspCmdId(betterproto.Enum):
    CMD_ID = 48


class GetAvatarTeamDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetBattlePassReqCmdId(betterproto.Enum):
    CMD_ID = 3750


class GetBattlePassRspCmdId(betterproto.Enum):
    CMD_ID = 3751


class GetBattlePassRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetBattlePassThemeReqCmdId(betterproto.Enum):
    CMD_ID = 3760


class GetBattlePassThemeRspCmdId(betterproto.Enum):
    CMD_ID = 3761


class GetBattlePassThemeRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetBbqActivityDataReqCmdId(betterproto.Enum):
    CMD_ID = 4250


class GetBbqActivityDataRspCmdId(betterproto.Enum):
    CMD_ID = 4251


class GetBbqActivityDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetBingoActivityDataReqCmdId(betterproto.Enum):
    CMD_ID = 4157


class GetBingoActivityDataRspCmdId(betterproto.Enum):
    CMD_ID = 4158


class GetBingoActivityDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetBlackListReqCmdId(betterproto.Enum):
    CMD_ID = 1594


class GetBlackListRspCmdId(betterproto.Enum):
    CMD_ID = 1595


class GetBlackListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetBlockZoneActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4344


class GetBlockZoneActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4345


class GetBlockZoneActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetBossRushActivityReqCmdId(betterproto.Enum):
    CMD_ID = 496


class GetBossRushActivityRspCmdId(betterproto.Enum):
    CMD_ID = 497


class GetBossRushActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 2
    ACTIVITY_ERROR = 3


class GetBriefDataListReqCmdId(betterproto.Enum):
    CMD_ID = 1374


class GetBriefDataListRspCmdId(betterproto.Enum):
    CMD_ID = 1375


class GetBriefDataListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    UID_NUM_LIMIT = 2
    TOO_FREQUENT = 3


class GetBuffEffectReqCmdId(betterproto.Enum):
    CMD_ID = 476


class GetBuffEffectRspCmdId(betterproto.Enum):
    CMD_ID = 477


class GetBuffEffectRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ADD_FAIL = 2


class GetBulletinActivityMissionReqCmdId(betterproto.Enum):
    CMD_ID = 4321


class GetBulletinActivityMissionRspCmdId(betterproto.Enum):
    CMD_ID = 4322


class GetBulletinActivityMissionRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 2


class GetBulletinReqCmdId(betterproto.Enum):
    CMD_ID = 137


class GetBulletinReqReqBulletinType(betterproto.Enum):
    BULLETIN_ALL = 0
    BULLETIN_UPDATE_TIME = 1
    BULLETIN_TITLE = 2
    BULLETIN_CONTENT = 3


class GetBulletinRspCmdId(betterproto.Enum):
    CMD_ID = 138


class GetBulletinRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetBulletinScoreActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4163


class GetBulletinScoreActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4164


class GetBulletinScoreActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetBurdenAlleviationReqCmdId(betterproto.Enum):
    CMD_ID = 4352


class GetBurdenAlleviationRspCmdId(betterproto.Enum):
    CMD_ID = 4353


class GetBurdenAlleviationRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetCardProductInfoReqCmdId(betterproto.Enum):
    CMD_ID = 1142


class GetCardProductInfoRspCmdId(betterproto.Enum):
    CMD_ID = 1143


class GetCardProductInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetChallengeStepBonusReqCmdId(betterproto.Enum):
    CMD_ID = 1043


class GetChallengeStepBonusRspCmdId(betterproto.Enum):
    CMD_ID = 1044


class GetChallengeStepBonusRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    STEP_ID_ERROR = 2
    BONUS_HAS_TAKEN = 3
    STEP_NOT_FINISH = 4
    EQUIPMENT_FULL = 5
    EQUIPMENT_MATERIAL_LIMIT = 6
    EQUIPMENT_FRAGMENT_LIMIT = 7
    EQUIPMENT_ELF_FRAGMENT_LIMIT = 8


class GetChallengeStepCompensationInfoReqCmdId(betterproto.Enum):
    CMD_ID = 1676


class GetChallengeStepCompensationInfoRspCmdId(betterproto.Enum):
    CMD_ID = 1677


class GetChallengeStepCompensationInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetChallengeStepRewardReqCmdId(betterproto.Enum):
    CMD_ID = 536


class GetChallengeStepRewardRspCmdId(betterproto.Enum):
    CMD_ID = 537


class GetChallengeStepRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    STEP_ID_ERROR = 2
    STEP_STATUS_ERROR = 3
    EQUIPMENT_FULL = 4
    EQUIPMENT_MATERIAL_LIMIT = 5
    EQUIPMENT_FRAGMENT_LIMIT = 6
    EQUIPMENT_ELF_FRAGMENT_LIMIT = 7


class GetChapterActivityDataReqCmdId(betterproto.Enum):
    CMD_ID = 4200


class GetChapterActivityDataRspCmdId(betterproto.Enum):
    CMD_ID = 4201


class GetChapterActivityDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetChapterCompensationInfoReqCmdId(betterproto.Enum):
    CMD_ID = 1672


class GetChapterCompensationInfoRspCmdId(betterproto.Enum):
    CMD_ID = 1673


class GetChapterCompensationInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetChatgroupHistoryChatMsgReqCmdId(betterproto.Enum):
    CMD_ID = 2218


class GetChatgroupHistoryChatMsgRspCmdId(betterproto.Enum):
    CMD_ID = 2219


class GetChatgroupHistoryChatMsgRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetChatgroupListReqCmdId(betterproto.Enum):
    CMD_ID = 2204


class GetChatgroupListRspCmdId(betterproto.Enum):
    CMD_ID = 2205


class GetChatgroupListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetChatRedEnvelopeInfoReqCmdId(betterproto.Enum):
    CMD_ID = 1502


class GetChatRedEnvelopeInfoRspCmdId(betterproto.Enum):
    CMD_ID = 1503


class GetChatRedEnvelopeInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetChatReportInfoReqCmdId(betterproto.Enum):
    CMD_ID = 1159


class GetChatReportInfoRspCmdId(betterproto.Enum):
    CMD_ID = 1160


class GetChatReportInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetChatworldListReqCmdId(betterproto.Enum):
    CMD_ID = 2411


class GetChatworldListRspCmdId(betterproto.Enum):
    CMD_ID = 2412


class GetChatworldListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetChatworldTreasureDataReqCmdId(betterproto.Enum):
    CMD_ID = 2415


class GetChatworldTreasureDataRspCmdId(betterproto.Enum):
    CMD_ID = 2416


class GetChatworldTreasureDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_CHATWORLD = 2


class GetClearStageActivityReqCmdId(betterproto.Enum):
    CMD_ID = 453


class GetClearStageActivityRspCmdId(betterproto.Enum):
    CMD_ID = 454


class GetClearStageActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetClientDataReqCmdId(betterproto.Enum):
    CMD_ID = 1586


class GetClientDataRspCmdId(betterproto.Enum):
    CMD_ID = 1587


class GetClientDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_FOUND = 2


class GetClientMailDataReqCmdId(betterproto.Enum):
    CMD_ID = 3800


class GetClientMailDataRspCmdId(betterproto.Enum):
    CMD_ID = 3801


class GetClientMailDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    POS_INVALID = 2
    REPEATED_REQ = 3


class GetClientSettingReqCmdId(betterproto.Enum):
    CMD_ID = 1270


class GetClientSettingRspCmdId(betterproto.Enum):
    CMD_ID = 1272


class GetClientSettingRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetCollaborationScheduleReqCmdId(betterproto.Enum):
    CMD_ID = 5831


class GetCollaborationScheduleRspCmdId(betterproto.Enum):
    CMD_ID = 5832


class GetCollaborationScheduleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetConfigReqCmdId(betterproto.Enum):
    CMD_ID = 110


class GetConfigRspCmdId(betterproto.Enum):
    CMD_ID = 111


class GetConfigRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetConsignedOrderDataReqCmdId(betterproto.Enum):
    CMD_ID = 2639


class GetConsignedOrderDataRspCmdId(betterproto.Enum):
    CMD_ID = 2640


class GetConsignedOrderDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2


class GetConsignedRewardLogReqCmdId(betterproto.Enum):
    CMD_ID = 525


class GetConsignedRewardLogRspCmdId(betterproto.Enum):
    CMD_ID = 526


class GetConsignedRewardLogRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2


class GetConsignedRewardReqCmdId(betterproto.Enum):
    CMD_ID = 519


class GetConsignedRewardRspCmdId(betterproto.Enum):
    CMD_ID = 520


class GetConsignedRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2


class GetContinuousRechargeActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4167


class GetContinuousRechargeActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4168


class GetContinuousRechargeActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetCurrencyExchangeInfoReqCmdId(betterproto.Enum):
    CMD_ID = 1480


class GetCurrencyExchangeInfoRspCmdId(betterproto.Enum):
    CMD_ID = 1481


class GetCurrencyExchangeInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetCustomHeadDataReqCmdId(betterproto.Enum):
    CMD_ID = 1523


class GetCustomHeadDataRspCmdId(betterproto.Enum):
    CMD_ID = 1524


class GetCustomHeadDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetDanmakuBriefInfoReqCmdId(betterproto.Enum):
    CMD_ID = 1547


class GetDanmakuBriefInfoRspCmdId(betterproto.Enum):
    CMD_ID = 1548


class GetDanmakuBriefInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    DANMAKU_CLOSED = 2


class GetDanmakuListReqCmdId(betterproto.Enum):
    CMD_ID = 1545


class GetDanmakuListRspCmdId(betterproto.Enum):
    CMD_ID = 1546


class GetDanmakuListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    DANMAKU_CLOSED = 2


class GetDeleteMaterialReqCmdId(betterproto.Enum):
    CMD_ID = 500


class GetDeleteMaterialRspCmdId(betterproto.Enum):
    CMD_ID = 501


class GetDeleteMaterialRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetDepotFurnitureReqCmdId(betterproto.Enum):
    CMD_ID = 607


class GetDepotFurnitureRspCmdId(betterproto.Enum):
    CMD_ID = 608


class GetDepotFurnitureRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetDispatchReqCmdId(betterproto.Enum):
    CMD_ID = 133


class GetDispatchRspCmdId(betterproto.Enum):
    CMD_ID = 134


class GetDispatchRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    CLIENT_VERSION_ERROR = 2


class GetDlcAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 3559


class GetDlcAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 3560


class GetDlcAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetDlcReqCmdId(betterproto.Enum):
    CMD_ID = 3550


class GetDlcRspCmdId(betterproto.Enum):
    CMD_ID = 3551


class GetDlcRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetDlcTowerRankReqCmdId(betterproto.Enum):
    CMD_ID = 3571


class GetDlcTowerRankRspCmdId(betterproto.Enum):
    CMD_ID = 3572


class GetDlcTowerRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetDlcTowerReqCmdId(betterproto.Enum):
    CMD_ID = 3574


class GetDlcTowerRspCmdId(betterproto.Enum):
    CMD_ID = 3575


class GetDlcTowerRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetDormDataReqCmdId(betterproto.Enum):
    CMD_ID = 601


class GetDormDataRspCmdId(betterproto.Enum):
    CMD_ID = 602


class GetDormDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetDormHouseReqCmdId(betterproto.Enum):
    CMD_ID = 603


class GetDormHouseRspCmdId(betterproto.Enum):
    CMD_ID = 604


class GetDormHouseRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HOUSE_NOT_EXIST = 2


class GetDormSnsDataReqCmdId(betterproto.Enum):
    CMD_ID = 637


class GetDormSnsDataRspCmdId(betterproto.Enum):
    CMD_ID = 638


class GetDormSnsDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LIMIT = 2


class GetDormVoteDataReqCmdId(betterproto.Enum):
    CMD_ID = 1138


class GetDormVoteDataRspCmdId(betterproto.Enum):
    CMD_ID = 1139


class GetDormVoteDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetDormVoteDataRspStatus(betterproto.Enum):
    NOT_START = 0
    VOTING = 1
    REVIEWING = 2
    DISPLAYING = 3


class GetDropLimitActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4297


class GetDropLimitActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4298


class GetDropLimitActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetElfDataReqCmdId(betterproto.Enum):
    CMD_ID = 2100


class GetElfDataRspCmdId(betterproto.Enum):
    CMD_ID = 2101


class GetElfDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetEliteChapterCompensationInfoReqCmdId(betterproto.Enum):
    CMD_ID = 1636


class GetEliteChapterCompensationInfoRspCmdId(betterproto.Enum):
    CMD_ID = 1637


class GetEliteChapterCompensationInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetEmojiDataReqCmdId(betterproto.Enum):
    CMD_ID = 1245


class GetEmojiDataRspCmdId(betterproto.Enum):
    CMD_ID = 1246


class GetEmojiDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetEndlessDataReqCmdId(betterproto.Enum):
    CMD_ID = 3400


class GetEndlessDataRspCmdId(betterproto.Enum):
    CMD_ID = 3401


class GetEndlessDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LACK = 2
    NO_ENDLESS = 3
    URGENCY_STOP = 4


class GetEndlessStatusReqCmdId(betterproto.Enum):
    CMD_ID = 3432


class GetEndlessStatusRspCmdId(betterproto.Enum):
    CMD_ID = 3433


class GetEndlessStatusRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetEquipmentBackReqCmdId(betterproto.Enum):
    CMD_ID = 3661


class GetEquipmentBackRspCmdId(betterproto.Enum):
    CMD_ID = 3662


class GetEquipmentBackRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetEquipmentDataReqCmdId(betterproto.Enum):
    CMD_ID = 26


class GetEquipmentDataRspCmdId(betterproto.Enum):
    CMD_ID = 27


class GetEquipmentDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetEquipmentForgeDataReqCmdId(betterproto.Enum):
    CMD_ID = 3650


class GetEquipmentForgeDataRspCmdId(betterproto.Enum):
    CMD_ID = 3651


class GetEquipmentForgeDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetExaminationActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4323


class GetExaminationActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4324


class GetExaminationActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetExBossInfoReqCmdId(betterproto.Enum):
    CMD_ID = 510


class GetExBossInfoRspCmdId(betterproto.Enum):
    CMD_ID = 511


class GetExBossInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    FEATURE_CLOSED = 3


class GetExBossRankReqCmdId(betterproto.Enum):
    CMD_ID = 527


class GetExBossRankRspCmdId(betterproto.Enum):
    CMD_ID = 528


class GetExBossRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    RANK_ERROR = 3
    NOT_JOIN = 4
    SCHEDULE_DISMATCH = 5
    FEATURE_CLOSED = 6


class GetExBossScheduleReqCmdId(betterproto.Enum):
    CMD_ID = 508


class GetExBossScheduleRspCmdId(betterproto.Enum):
    CMD_ID = 509


class GetExBossScheduleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    FEATURE_CLOSED = 2


class GetExtractReforgeActivityReqCmdId(betterproto.Enum):
    CMD_ID = 3659


class GetExtractReforgeActivityRspCmdId(betterproto.Enum):
    CMD_ID = 3660


class GetExtractReforgeActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetExtraStoryAchieveDataReqCmdId(betterproto.Enum):
    CMD_ID = 235


class GetExtraStoryAchieveDataRspCmdId(betterproto.Enum):
    CMD_ID = 236


class GetExtraStoryAchieveDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    CHAPTER_NOT_EXIST = 2


class GetExtraStoryAchieveRewardReqCmdId(betterproto.Enum):
    CMD_ID = 237


class GetExtraStoryAchieveRewardRspCmdId(betterproto.Enum):
    CMD_ID = 238


class GetExtraStoryAchieveRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACHIEVE_NOT_EXIST = 2
    ACHIEVE_NOT_FINISH = 3
    ACHIEVE_HAS_TAKEN = 4


class GetExtraStoryActivityActReqCmdId(betterproto.Enum):
    CMD_ID = 233


class GetExtraStoryActivityActRspCmdId(betterproto.Enum):
    CMD_ID = 234


class GetExtraStoryActivityActRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    CHAPTER_NOT_EXIST = 2


class GetExtraStoryChallengeModeDataReqCmdId(betterproto.Enum):
    CMD_ID = 502


class GetExtraStoryChallengeModeDataRspCmdId(betterproto.Enum):
    CMD_ID = 503


class GetExtraStoryChallengeModeDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    EXTRA_STORY_NOT_OPEN = 3


class GetExtraStoryDataReqCmdId(betterproto.Enum):
    CMD_ID = 231


class GetExtraStoryDataRspCmdId(betterproto.Enum):
    CMD_ID = 232


class GetExtraStoryDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetFarmActivityDataReqCmdId(betterproto.Enum):
    CMD_ID = 1385


class GetFarmActivityDataRspCmdId(betterproto.Enum):
    CMD_ID = 1386


class GetFarmActivityDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_SCHEDULE = 2


class GetFastPassDataReqCmdId(betterproto.Enum):
    CMD_ID = 1555


class GetFastPassDataRspCmdId(betterproto.Enum):
    CMD_ID = 1556


class GetFastPassDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_EXIST = 2


class GetFinishGuideDataReqCmdId(betterproto.Enum):
    CMD_ID = 127


class GetFinishGuideDataRspCmdId(betterproto.Enum):
    CMD_ID = 128


class GetFinishGuideDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetFlopActivityDataReqCmdId(betterproto.Enum):
    CMD_ID = 4173


class GetFlopActivityDataRspCmdId(betterproto.Enum):
    CMD_ID = 4174


class GetFlopActivityDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetFrameDataReqCmdId(betterproto.Enum):
    CMD_ID = 590


class GetFrameDataRspCmdId(betterproto.Enum):
    CMD_ID = 591


class GetFrameDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetFriendListReqCmdId(betterproto.Enum):
    CMD_ID = 64


class GetFriendListRspCmdId(betterproto.Enum):
    CMD_ID = 65


class GetFriendListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetFriendRemarkListReqCmdId(betterproto.Enum):
    CMD_ID = 974


class GetFriendRemarkListRspCmdId(betterproto.Enum):
    CMD_ID = 975


class GetFriendRemarkListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetGalInteractTriggerEventReqCmdId(betterproto.Enum):
    CMD_ID = 813


class GetGalInteractTriggerEventRspCmdId(betterproto.Enum):
    CMD_ID = 814


class GetGalInteractTriggerEventRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_SUCH_AVATAR = 2


class GetGameserverReqCmdId(betterproto.Enum):
    CMD_ID = 2


class GetGameserverRspCmdId(betterproto.Enum):
    CMD_ID = 3


class GetGameserverRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SERVER_STOP = 2
    VERSION_ERROR = 3
    FORCE_UPDATE = 4


class GetGardenActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4287


class GetGardenActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4288


class GetGardenActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetGardenScheduleReqCmdId(betterproto.Enum):
    CMD_ID = 4295


class GetGardenScheduleRspCmdId(betterproto.Enum):
    CMD_ID = 4296


class GetGardenScheduleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetGlobalWarActivityReqCmdId(betterproto.Enum):
    CMD_ID = 3950


class GetGlobalWarActivityRspCmdId(betterproto.Enum):
    CMD_ID = 3951


class GetGlobalWarActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetGobackReqCmdId(betterproto.Enum):
    CMD_ID = 364


class GetGobackRspCmdId(betterproto.Enum):
    CMD_ID = 365


class GetGobackRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetGodWarReqCmdId(betterproto.Enum):
    CMD_ID = 6150


class GetGodWarRspCmdId(betterproto.Enum):
    CMD_ID = 6151


class GetGodWarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetGrandKeyReqCmdId(betterproto.Enum):
    CMD_ID = 506


class GetGrandKeyRspCmdId(betterproto.Enum):
    CMD_ID = 507


class GetGrandKeyRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetGratuityActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4100


class GetGratuityActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4101


class GetGratuityActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetGratuityBattleHistoryReqCmdId(betterproto.Enum):
    CMD_ID = 4108


class GetGratuityBattleHistoryRspCmdId(betterproto.Enum):
    CMD_ID = 4109


class GetGratuityBattleHistoryRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetGratuityStageListReqCmdId(betterproto.Enum):
    CMD_ID = 4116


class GetGratuityStageListRspCmdId(betterproto.Enum):
    CMD_ID = 4117


class GetGratuityStageListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_STAGE = 2


class GetGuideRewardReqCmdId(betterproto.Enum):
    CMD_ID = 185


class GetGuideRewardRspCmdId(betterproto.Enum):
    CMD_ID = 186


class GetGuideRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    GUIDE_ERROR = 2
    REWARD_EMPTY = 3


class GetHasGotFurnitureIdListReqCmdId(betterproto.Enum):
    CMD_ID = 619


class GetHasGotFurnitureIdListRspCmdId(betterproto.Enum):
    CMD_ID = 620


class GetHasGotFurnitureIdListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetHasGotItemIdListReqCmdId(betterproto.Enum):
    CMD_ID = 104


class GetHasGotItemIdListRspCmdId(betterproto.Enum):
    CMD_ID = 105


class GetHasGotItemIdListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetHaveTakenShareRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4239


class GetHaveTakenShareRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4240


class GetHaveTakenShareRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetInviteActivityInviteeDataReqCmdId(betterproto.Enum):
    CMD_ID = 1694


class GetInviteActivityInviteeDataRspCmdId(betterproto.Enum):
    CMD_ID = 1695


class GetInviteActivityInviteeDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    FEATURE_CLOSED = 2


class GetInviteActivityInviterDataReqCmdId(betterproto.Enum):
    CMD_ID = 1690


class GetInviteActivityInviterDataRspCmdId(betterproto.Enum):
    CMD_ID = 1691


class GetInviteActivityInviterDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LACK = 2
    FEATURE_CLOSED = 3


class GetInviteeFriendReqCmdId(betterproto.Enum):
    CMD_ID = 225


class GetInviteeFriendRspCmdId(betterproto.Enum):
    CMD_ID = 226


class GetInviteeFriendRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LACK = 2


class GetInviteFriendReqCmdId(betterproto.Enum):
    CMD_ID = 223


class GetInviteFriendRspCmdId(betterproto.Enum):
    CMD_ID = 224


class GetInviteFriendRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LACK = 2


class GetIslandEventReqCmdId(betterproto.Enum):
    CMD_ID = 241


class GetIslandEventRspCmdId(betterproto.Enum):
    CMD_ID = 242


class GetIslandEventRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetJigsawActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4273


class GetJigsawActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4274


class GetJigsawActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetKingdomWarReqCmdId(betterproto.Enum):
    CMD_ID = 3050


class GetKingdomWarRspCmdId(betterproto.Enum):
    CMD_ID = 3051


class GetKingdomWarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetLastEndlessRewardDataReqCmdId(betterproto.Enum):
    CMD_ID = 3406


class GetLastEndlessRewardDataRspCmdId(betterproto.Enum):
    CMD_ID = 3407


class GetLastEndlessRewardDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_JOIN = 2


class GetLobbyStatReqCmdId(betterproto.Enum):
    CMD_ID = 1102


class GetLobbyStatRspCmdId(betterproto.Enum):
    CMD_ID = 1103


class GetLobbyStatRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetLoginActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4192


class GetLoginActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4193


class GetLoginActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_BEGIN = 2
    LEVEL_LACK = 3


class GetLoginMissionActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4299


class GetLoginMissionActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4300


class GetLoginMissionActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetLotteryActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4177


class GetLotteryActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4178


class GetLotteryActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetMailAttachmentReqCmdId(betterproto.Enum):
    CMD_ID = 86


class GetMailAttachmentRspCmdId(betterproto.Enum):
    CMD_ID = 87


class GetMailAttachmentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetMailDataReqCmdId(betterproto.Enum):
    CMD_ID = 84


class GetMailDataRspCmdId(betterproto.Enum):
    CMD_ID = 85


class GetMailDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetMainDataReqCmdId(betterproto.Enum):
    CMD_ID = 10


class GetMainDataReqDataType(betterproto.Enum):
    ALL = 0
    NICKNAME = 2
    LEVEL = 3
    EXP = 4
    HCOIN = 5
    SCOIN = 6
    STAMINA = 7
    STAMINA_RECOVER_LEFT_TIME = 8
    STAMINA_RECOVER_CONFIG_TIME = 9
    EQUIPMENT_SIZE_LIMIT = 14
    SELF_DESC = 16
    PAY_HCOIN = 17
    FREE_HCOIN = 18
    ASSISTANT_AVATAR_ID = 19
    IS_ALLOW_COST_SENIOR_EQUIP_ON_CUR_DEVICE = 20
    BIRTHDAY = 21
    RECHARGE_PRICE = 22
    WAIT_DEL_HCOIN = 23
    ON_MEDAL_ID = 24
    ANTI_ADDICT = 25
    USE_FRAME_ID = 26
    MCOIN = 27
    PANEL_ACTIVITY = 28
    VIDEO_POPUP = 29
    ON_PHONE_PENDANT_ID = 30
    STORE_EVALUATE = 31
    CHATWORLD_ACTIVITY = 32
    LEVEL_LOCK = 33
    WARSHIP_AVATAR = 35
    USE_CUSTOM_HEAD = 36
    TOTAL_LOGIN_DAYS = 37
    WARSHIP_THEME = 38
    WAIT_DEL_MATERIAL = 39


class GetMainDataRspCmdId(betterproto.Enum):
    CMD_ID = 11


class GetMainDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetMasterFameRewardReqCmdId(betterproto.Enum):
    CMD_ID = 576


class GetMasterFameRewardRspCmdId(betterproto.Enum):
    CMD_ID = 577


class GetMasterPupilApplyReqCmdId(betterproto.Enum):
    CMD_ID = 653


class GetMasterPupilApplyRspCmdId(betterproto.Enum):
    CMD_ID = 654


class GetMasterPupilCardReqCmdId(betterproto.Enum):
    CMD_ID = 587


class GetMasterPupilCardRspCmdId(betterproto.Enum):
    CMD_ID = 588


class GetMasterPupilDataReqCmdId(betterproto.Enum):
    CMD_ID = 568


class GetMasterPupilDataRspCmdId(betterproto.Enum):
    CMD_ID = 569


class GetMasterPupilMainDataReqCmdId(betterproto.Enum):
    CMD_ID = 657


class GetMasterPupilMainDataRspCmdId(betterproto.Enum):
    CMD_ID = 658


class GetMasterRankReqCmdId(betterproto.Enum):
    CMD_ID = 662


class GetMasterRankRspCmdId(betterproto.Enum):
    CMD_ID = 663


class GetMatrixFloorReqCmdId(betterproto.Enum):
    CMD_ID = 2322


class GetMatrixFloorRspCmdId(betterproto.Enum):
    CMD_ID = 2323


class GetMatrixFloorRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetMatrixReqCmdId(betterproto.Enum):
    CMD_ID = 2320


class GetMatrixRspCmdId(betterproto.Enum):
    CMD_ID = 2321


class GetMatrixRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetMedalDataReqCmdId(betterproto.Enum):
    CMD_ID = 449


class GetMedalDataRspCmdId(betterproto.Enum):
    CMD_ID = 450


class GetMedalDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetMiniRankReqCmdId(betterproto.Enum):
    CMD_ID = 1603


class GetMiniRankRspCmdId(betterproto.Enum):
    CMD_ID = 1604


class GetMiniRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetMinuteStageReqCmdId(betterproto.Enum):
    CMD_ID = 542


class GetMinuteStageRspCmdId(betterproto.Enum):
    CMD_ID = 543


class GetMinuteStageRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetMinuteTimesReqCmdId(betterproto.Enum):
    CMD_ID = 544


class GetMinuteTimesRspCmdId(betterproto.Enum):
    CMD_ID = 545


class GetMinuteTimesRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetMissionDataReqCmdId(betterproto.Enum):
    CMD_ID = 112


class GetMissionDataRspCmdId(betterproto.Enum):
    CMD_ID = 113


class GetMissionDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetMissionGroupMainInfoReqCmdId(betterproto.Enum):
    CMD_ID = 4346


class GetMissionGroupMainInfoRspCmdId(betterproto.Enum):
    CMD_ID = 4347


class GetMissionGroupMainInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetMissionRewardReqCmdId(betterproto.Enum):
    CMD_ID = 114


class GetMissionRewardRspCmdId(betterproto.Enum):
    CMD_ID = 115


class GetMissionRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MISSION_ID_ERROR = 2
    MISSION_STATUS_ERROR = 3
    EQUIPMENT_FULL = 4
    EQUIPMENT_MATERIAL_LIMIT = 5
    EQUIPMENT_FRAGMENT_LIMIT = 6
    FEATURE_CLOSED = 7
    EQUIPMENT_ELF_FRAGMENT_LIMIT = 8
    TIME_LIMIT = 9


class GetMissionStepCompensationInfoReqCmdId(betterproto.Enum):
    CMD_ID = 1632


class GetMissionStepCompensationInfoRspCmdId(betterproto.Enum):
    CMD_ID = 1633


class GetMissionStepCompensationInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_REWARD = 2


class GetMissionThemeDataReqCmdId(betterproto.Enum):
    CMD_ID = 4205


class GetMissionThemeDataRspCmdId(betterproto.Enum):
    CMD_ID = 4206


class GetMissionThemeDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetMonopolyActivityReqCmdId(betterproto.Enum):
    CMD_ID = 3850


class GetMonopolyActivityRspCmdId(betterproto.Enum):
    CMD_ID = 3851


class GetMonopolyActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetMosaicActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4340


class GetMosaicActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4341


class GetMosaicActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetMpDataReqCmdId(betterproto.Enum):
    CMD_ID = 340


class GetMpDataRspCmdId(betterproto.Enum):
    CMD_ID = 341


class GetMpDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetMpDataRspOpType(betterproto.Enum):
    INIT_DATA = 0
    ADD_DATA = 1
    UPDATE_DATA = 2


class GetMpRaidRankReqCmdId(betterproto.Enum):
    CMD_ID = 549


class GetMpRaidRankRspCmdId(betterproto.Enum):
    CMD_ID = 550


class GetMpRaidRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetMpRaidSpecialRewardReqCmdId(betterproto.Enum):
    CMD_ID = 551


class GetMpRaidSpecialRewardRspCmdId(betterproto.Enum):
    CMD_ID = 552


class GetMpRaidSpecialRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    REWARD_REPEAT = 2
    STAGE_NOT_FINISH = 3


class GetMpStageRecordReqCmdId(betterproto.Enum):
    CMD_ID = 1018


class GetMpStageRecordRspCmdId(betterproto.Enum):
    CMD_ID = 1019


class GetMpStageRecordRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetMyCardAuthCodeReqCmdId(betterproto.Enum):
    CMD_ID = 368


class GetMyCardAuthCodeRspCmdId(betterproto.Enum):
    CMD_ID = 369


class GetMyCardAuthCodeRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetNewbieActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4248


class GetNewbieActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4249


class GetNewbieActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_NEWBIE = 2


class GetNewConsignedOrderDataReqCmdId(betterproto.Enum):
    CMD_ID = 517


class GetNewConsignedOrderDataRspCmdId(betterproto.Enum):
    CMD_ID = 518


class GetNewConsignedOrderDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2


class GetNinjaActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4400


class GetNinjaActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4401


class GetNinjaActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetOfflineFriendsPointNotifyCmdId(betterproto.Enum):
    CMD_ID = 81


class GetOfflineResourceDataReqCmdId(betterproto.Enum):
    CMD_ID = 4211


class GetOfflineResourceDataRspCmdId(betterproto.Enum):
    CMD_ID = 4212


class GetOfflineResourceDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_SCHEDULE = 2


class GetOnlineRewardActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4196


class GetOnlineRewardActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4197


class GetOnlineRewardActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 2
    LEVEL_NOT_SATISFY = 3


class GetOpenworldEndlessDataReqCmdId(betterproto.Enum):
    CMD_ID = 3419


class GetOpenworldEndlessDataRspCmdId(betterproto.Enum):
    CMD_ID = 3420


class GetOpenworldEndlessDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LACK = 2
    NO_ENDLESS = 3
    URGENCY_STOP = 4
    ULTRA_ENDLESS = 5
    FEATURE_CLOSED = 6


class GetOpenworldEndlessPlayerWarInfoReqCmdId(betterproto.Enum):
    CMD_ID = 3443


class GetOpenworldEndlessPlayerWarInfoRspCmdId(betterproto.Enum):
    CMD_ID = 3444


class GetOpenworldEndlessPlayerWarInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetOpenworldEndlessStageInnerDataReqCmdId(betterproto.Enum):
    CMD_ID = 3426


class GetOpenworldEndlessStageInnerDataRspCmdId(betterproto.Enum):
    CMD_ID = 3427


class GetOpenworldEndlessStageInnerDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetOpenworldEndlessTopGroupReqCmdId(betterproto.Enum):
    CMD_ID = 3446


class GetOpenworldEndlessTopGroupRspCmdId(betterproto.Enum):
    CMD_ID = 3447


class GetOpenworldEndlessTopGroupRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TOP_GROUP_NOT_OPEN = 2


class GetOtherDormDataReqCmdId(betterproto.Enum):
    CMD_ID = 633


class GetOtherDormDataRspCmdId(betterproto.Enum):
    CMD_ID = 634


class GetOtherDormDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LIMIT = 2
    VISIT_FORBID = 3
    TARGET_ERROR = 4


class GetOtherMasterPupilReqCmdId(betterproto.Enum):
    CMD_ID = 664


class GetOtherMasterPupilRspCmdId(betterproto.Enum):
    CMD_ID = 665


class GetOtherPlayerCardDataReqCmdId(betterproto.Enum):
    CMD_ID = 490


class GetOtherPlayerCardDataRspCmdId(betterproto.Enum):
    CMD_ID = 491


class GetOtherPlayerCardDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_SAME_IDC = 2
    HAS_LOGOFF = 3


class GetOtherPlayerClientSettingReqCmdId(betterproto.Enum):
    CMD_ID = 1273


class GetOtherPlayerClientSettingRspCmdId(betterproto.Enum):
    CMD_ID = 1274


class GetOtherPlayerClientSettingRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetOverlapActivityDataReqCmdId(betterproto.Enum):
    CMD_ID = 4215


class GetOverlapActivityDataRspCmdId(betterproto.Enum):
    CMD_ID = 4216


class GetOverlapActivityDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetPediaReqCmdId(betterproto.Enum):
    CMD_ID = 464


class GetPediaRspCmdId(betterproto.Enum):
    CMD_ID = 465


class GetPediaRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetPhonePendantDataReqCmdId(betterproto.Enum):
    CMD_ID = 1197


class GetPhonePendantDataRspCmdId(betterproto.Enum):
    CMD_ID = 1198


class GetPhonePendantDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetPhotoDataReqCmdId(betterproto.Enum):
    CMD_ID = 1191


class GetPhotoDataRspCmdId(betterproto.Enum):
    CMD_ID = 1192


class GetPhotoDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetPictureActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4266


class GetPictureActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4267


class GetPictureActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetPlayerCardReqCmdId(betterproto.Enum):
    CMD_ID = 480


class GetPlayerCardRspCmdId(betterproto.Enum):
    CMD_ID = 481


class GetPlayerCardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetPlayerDetailDataReqCmdId(betterproto.Enum):
    CMD_ID = 72


class GetPlayerDetailDataRspCmdId(betterproto.Enum):
    CMD_ID = 73


class GetPlayerDetailDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TARGET_NOT_EXIST = 2


class GetPlayerOnlineStatusReqCmdId(betterproto.Enum):
    CMD_ID = 1576


class GetPlayerOnlineStatusRspCmdId(betterproto.Enum):
    CMD_ID = 1577


class GetPlayerOnlineStatusRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetPlayerTokenReqCmdId(betterproto.Enum):
    CMD_ID = 4


class GetPlayerTokenRspCmdId(betterproto.Enum):
    CMD_ID = 5


class GetPlayerTokenRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    REGISTER_CLOSED = 2
    ACCOUNT_VERIFY_ERROR = 3
    TOKEN_REPEAT = 4
    ACCOUNT_TYPE_ERROR = 5
    SERVER_FULL = 6
    INVALID_APK = 7
    TRANSFER_CODE_ERROR = 8
    IN_BLACK_LIST = 9
    SERVER_STOP = 10
    ACCOUNT_LOCKED = 11
    SERVER_BUSY = 12
    DEVICE_TYPE_ERROR = 13
    FORBID_VISITOR = 14
    FORBID_TAG_SMURF_VISITOR = 15
    ANTI_ADDICT_LOGIN = 16
    GAME_NOT_AVAILABLE = 17


class GetPlotListReqCmdId(betterproto.Enum):
    CMD_ID = 1382


class GetPlotListRspCmdId(betterproto.Enum):
    CMD_ID = 1383


class GetPlotListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetPrivateHistoryChatMsgReqCmdId(betterproto.Enum):
    CMD_ID = 2237


class GetPrivateHistoryChatMsgRspCmdId(betterproto.Enum):
    CMD_ID = 2238


class GetPrivateHistoryChatMsgRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetPrivilegeInfoReqCmdId(betterproto.Enum):
    CMD_ID = 1646


class GetPrivilegeInfoRspCmdId(betterproto.Enum):
    CMD_ID = 1647


class GetPrivilegeInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetProductListReqCmdId(betterproto.Enum):
    CMD_ID = 98


class GetProductListRspCmdId(betterproto.Enum):
    CMD_ID = 99


class GetProductListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    DEVICE_ERROR = 2


class GetProductRecommendListReqCmdId(betterproto.Enum):
    CMD_ID = 1478


class GetProductRecommendListRspCmdId(betterproto.Enum):
    CMD_ID = 1479


class GetProductRecommendListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetPupilEvalDataReqCmdId(betterproto.Enum):
    CMD_ID = 659


class GetPupilEvalDataRspCmdId(betterproto.Enum):
    CMD_ID = 660


class GetPupilMissionReqCmdId(betterproto.Enum):
    CMD_ID = 651


class GetPupilMissionRspCmdId(betterproto.Enum):
    CMD_ID = 652


class GetQuestionActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4258


class GetQuestionActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4259


class GetQuestionActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetRaffleActivityReqCmdId(betterproto.Enum):
    CMD_ID = 3898


class GetRaffleActivityRspCmdId(betterproto.Enum):
    CMD_ID = 3899


class GetRaffleActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_RAFFLE = 2
    NOT_OPEN = 3


class GetRaidActiveInfoReqCmdId(betterproto.Enum):
    CMD_ID = 1622


class GetRaidActiveInfoRspCmdId(betterproto.Enum):
    CMD_ID = 1623


class GetRaidActiveInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetRankScheduleDataReqCmdId(betterproto.Enum):
    CMD_ID = 4233


class GetRankScheduleDataRspCmdId(betterproto.Enum):
    CMD_ID = 4234


class GetRankScheduleDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetRankScheduleRankReqCmdId(betterproto.Enum):
    CMD_ID = 4235


class GetRankScheduleRankRspCmdId(betterproto.Enum):
    CMD_ID = 4236


class GetRankScheduleRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetReclaimActivityDataReqCmdId(betterproto.Enum):
    CMD_ID = 1167


class GetReclaimActivityDataRspCmdId(betterproto.Enum):
    CMD_ID = 1168


class GetReclaimActivityDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetReclaimRankReqCmdId(betterproto.Enum):
    CMD_ID = 1175


class GetReclaimRankRspCmdId(betterproto.Enum):
    CMD_ID = 1176


class GetReclaimRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetRecommendArmadaMemberListReqCmdId(betterproto.Enum):
    CMD_ID = 2803


class GetRecommendArmadaMemberListRspCmdId(betterproto.Enum):
    CMD_ID = 2804


class GetRecommendArmadaMemberListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    TOO_FREQUENT = 3
    NOT_LEADER = 4
    ZERO = 5


class GetRecommendArmadaReqCmdId(betterproto.Enum):
    CMD_ID = 2617


class GetRecommendArmadaRspCmdId(betterproto.Enum):
    CMD_ID = 2618


class GetRecommendArmadaRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LACK = 2


class GetRecommendFriendListReqCmdId(betterproto.Enum):
    CMD_ID = 76


class GetRecommendFriendListRspCmdId(betterproto.Enum):
    CMD_ID = 77


class GetRecommendFriendListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TOO_OFTEN = 2


class GetRecommendGoodsReqCmdId(betterproto.Enum):
    CMD_ID = 1275


class GetRecommendGoodsRspCmdId(betterproto.Enum):
    CMD_ID = 1276


class GetRecommendGoodsRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetRecommendMasterPupilReqCmdId(betterproto.Enum):
    CMD_ID = 655


class GetRecommendMasterPupilRspCmdId(betterproto.Enum):
    CMD_ID = 656


class GetRecommendMissionPanelListReqCmdId(betterproto.Enum):
    CMD_ID = 1519


class GetRecommendMissionPanelListRspCmdId(betterproto.Enum):
    CMD_ID = 1520


class GetRecommendMissionPanelListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetRedeemCodeInfoReqCmdId(betterproto.Enum):
    CMD_ID = 211


class GetRedeemCodeInfoRspCmdId(betterproto.Enum):
    CMD_ID = 212


class GetRedeemCodeInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    REDEEM_CODE_ERROR = 2


class GetRegionUidRangeReqCmdId(betterproto.Enum):
    CMD_ID = 1380


class GetRegionUidRangeRspCmdId(betterproto.Enum):
    CMD_ID = 1381


class GetRegionUidRangeRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetRestaurantActivityReqCmdId(betterproto.Enum):
    CMD_ID = 5860


class GetRestaurantActivityRspCmdId(betterproto.Enum):
    CMD_ID = 5861


class GetRestaurantActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetRewardLineActivityReqCmdId(betterproto.Enum):
    CMD_ID = 5890


class GetRewardLineActivityRspCmdId(betterproto.Enum):
    CMD_ID = 5891


class GetRewardLineActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    CLOSED = 2
    ACTIVITY_NOT_EXIST = 3


class GetRogueStageDataReqCmdId(betterproto.Enum):
    CMD_ID = 275


class GetRogueStageDataRspCmdId(betterproto.Enum):
    CMD_ID = 276


class GetRogueStageDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_JOIN_ARMADA = 2
    LEVEL_LACK = 3
    NOT_OPEN = 4


class GetRoomDataReqCmdId(betterproto.Enum):
    CMD_ID = 3150


class GetRoomDataRspCmdId(betterproto.Enum):
    CMD_ID = 3151


class GetRoomDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetRpgTaleFileReqCmdId(betterproto.Enum):
    CMD_ID = 2378


class GetRpgTaleFileRspCmdId(betterproto.Enum):
    CMD_ID = 2379


class GetRpgTaleFileRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetRpgTaleReqCmdId(betterproto.Enum):
    CMD_ID = 2300


class GetRpgTaleRspCmdId(betterproto.Enum):
    CMD_ID = 2301


class GetRpgTaleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetScDlcReqCmdId(betterproto.Enum):
    CMD_ID = 6300


class GetScDlcRspCmdId(betterproto.Enum):
    CMD_ID = 6301


class GetScDlcRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetScDlcSelectDailyQuestReqCmdId(betterproto.Enum):
    CMD_ID = 6316


class GetScDlcSelectDailyQuestRspCmdId(betterproto.Enum):
    CMD_ID = 6317


class GetScDlcSelectDailyQuestRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetScDlcTowerRankReqCmdId(betterproto.Enum):
    CMD_ID = 6338


class GetScDlcTowerRankRspCmdId(betterproto.Enum):
    CMD_ID = 6339


class GetScDlcTowerRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetScDlcTowerReqCmdId(betterproto.Enum):
    CMD_ID = 6332


class GetScDlcTowerRspCmdId(betterproto.Enum):
    CMD_ID = 6333


class GetScDlcTowerRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetScoinExchangeInfoReqCmdId(betterproto.Enum):
    CMD_ID = 12


class GetScoinExchangeInfoRspCmdId(betterproto.Enum):
    CMD_ID = 13


class GetScoinExchangeInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetScratchTicketReqCmdId(betterproto.Enum):
    CMD_ID = 4150


class GetScratchTicketRspCmdId(betterproto.Enum):
    CMD_ID = 4151


class GetScratchTicketRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 2


class GetSealedModeInfoReqCmdId(betterproto.Enum):
    CMD_ID = 596


class GetSealedModeInfoRspCmdId(betterproto.Enum):
    CMD_ID = 597


class GetSealedModeInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetSealedModeScheduleReqCmdId(betterproto.Enum):
    CMD_ID = 594


class GetSealedModeScheduleRspCmdId(betterproto.Enum):
    CMD_ID = 595


class GetSealedModeScheduleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetSecurityPasswordReqCmdId(betterproto.Enum):
    CMD_ID = 5021


class GetSecurityPasswordRspCmdId(betterproto.Enum):
    CMD_ID = 5022


class GetSecurityPasswordRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetShopListReqCmdId(betterproto.Enum):
    CMD_ID = 201


class GetShopListRspCmdId(betterproto.Enum):
    CMD_ID = 202


class GetShopListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetShoppingMallListReqCmdId(betterproto.Enum):
    CMD_ID = 1157


class GetShoppingMallListRspCmdId(betterproto.Enum):
    CMD_ID = 1158


class GetShoppingMallListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetSignInRewardReqCmdId(betterproto.Enum):
    CMD_ID = 123


class GetSignInRewardRspCmdId(betterproto.Enum):
    CMD_ID = 124


class GetSignInRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    REPEAT_SIGN_IN = 2


class GetSignInRewardStatusReqCmdId(betterproto.Enum):
    CMD_ID = 121


class GetSignInRewardStatusRspCmdId(betterproto.Enum):
    CMD_ID = 122


class GetSignInRewardStatusRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetSimulateActivityReqCmdId(betterproto.Enum):
    CMD_ID = 484


class GetSimulateActivityRspCmdId(betterproto.Enum):
    CMD_ID = 485


class GetSimulateActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 2
    ACTIVITY_ERROR = 3


class GetSingleShopWithoutRefreshReqCmdId(betterproto.Enum):
    CMD_ID = 1617


class GetSingleShopWithoutRefreshRspCmdId(betterproto.Enum):
    CMD_ID = 1618


class GetSingleShopWithoutRefreshRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetSlotMachineMainInfoReqCmdId(betterproto.Enum):
    CMD_ID = 4315


class GetSlotMachineMainInfoRspCmdId(betterproto.Enum):
    CMD_ID = 4316


class GetSlotMachineMainInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 2


class GetSnsShowDataReqCmdId(betterproto.Enum):
    CMD_ID = 1266


class GetSnsShowDataRspCmdId(betterproto.Enum):
    CMD_ID = 1267


class GetSnsShowDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_PRIVILEDGE = 2


class GetSpecificRankReqCmdId(betterproto.Enum):
    CMD_ID = 1684


class GetSpecificRankRspCmdId(betterproto.Enum):
    CMD_ID = 1685


class GetSpecificRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetSpecificRecommendGoodsReqCmdId(betterproto.Enum):
    CMD_ID = 1277


class GetSpecificRecommendGoodsRspCmdId(betterproto.Enum):
    CMD_ID = 1278


class GetSpecificRecommendGoodsRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetStageActDifficultyReqCmdId(betterproto.Enum):
    CMD_ID = 456


class GetStageActDifficultyRspCmdId(betterproto.Enum):
    CMD_ID = 457


class GetStageActDifficultyRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetStageBuffReqCmdId(betterproto.Enum):
    CMD_ID = 1528


class GetStageBuffRspCmdId(betterproto.Enum):
    CMD_ID = 1529


class GetStageBuffRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetStageChapterReqCmdId(betterproto.Enum):
    CMD_ID = 965


class GetStageChapterRspCmdId(betterproto.Enum):
    CMD_ID = 966


class GetStageChapterRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetStageDataReqCmdId(betterproto.Enum):
    CMD_ID = 41


class GetStageDataRspCmdId(betterproto.Enum):
    CMD_ID = 42


class GetStageDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    STAGE_NOT_EXIST = 2


class GetStageDropDisplayReqCmdId(betterproto.Enum):
    CMD_ID = 60


class GetStageDropDisplayRspCmdId(betterproto.Enum):
    CMD_ID = 61


class GetStageDropDisplayRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    STAGE_NOT_EXIST = 2
    STAGE_TOO_MUCH = 3


class GetStageRecommendAvatarCourseInfoReqCmdId(betterproto.Enum):
    CMD_ID = 1630


class GetStageRecommendAvatarCourseInfoRspCmdId(betterproto.Enum):
    CMD_ID = 1631


class GetStageRecommendAvatarCourseInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetStageRecommendAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 1541


class GetStageRecommendAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 1542


class GetStageRecommendAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ID_TOO_MUCH = 2


class GetStaminaExchangeInfoReqCmdId(betterproto.Enum):
    CMD_ID = 16


class GetStaminaExchangeInfoRspCmdId(betterproto.Enum):
    CMD_ID = 17


class GetStaminaExchangeInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetSupportActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4332


class GetSupportActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4333


class GetSupportActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetSurveyDataReqCmdId(betterproto.Enum):
    CMD_ID = 4241


class GetSurveyDataRspCmdId(betterproto.Enum):
    CMD_ID = 4242


class GetSurveyDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetTeamBriefInfoReqCmdId(betterproto.Enum):
    CMD_ID = 352


class GetTeamBriefInfoRspCmdId(betterproto.Enum):
    CMD_ID = 353


class GetTeamBriefInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TEAM_NOT_EXIST = 2


class GetTeamListReqCmdId(betterproto.Enum):
    CMD_ID = 1215


class GetTeamListRspCmdId(betterproto.Enum):
    CMD_ID = 1216


class GetTeamListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_STAGE = 2
    SERVER_BUSY = 3


class GetTeamStatusReqCmdId(betterproto.Enum):
    CMD_ID = 1553


class GetTeamStatusRspCmdId(betterproto.Enum):
    CMD_ID = 1554


class GetTeamStatusRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SERVER_BUSY = 2


class GetThemeDataReqCmdId(betterproto.Enum):
    CMD_ID = 4244


class GetThemeDataRspCmdId(betterproto.Enum):
    CMD_ID = 4245


class GetThemeDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetThemeWantedReqCmdId(betterproto.Enum):
    CMD_ID = 5790


class GetThemeWantedRspCmdId(betterproto.Enum):
    CMD_ID = 5791


class GetThemeWantedRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    FEATURE_CLOSED = 3


class GetTileMapReqCmdId(betterproto.Enum):
    CMD_ID = 4900


class GetTileMapRspCmdId(betterproto.Enum):
    CMD_ID = 4901


class GetTileMapRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LOCKED = 2


class GetTimeLimitAddUpDataReqCmdId(betterproto.Enum):
    CMD_ID = 255


class GetTimeLimitAddUpDataRspCmdId(betterproto.Enum):
    CMD_ID = 256


class GetTimeLimitAddUpDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetTowerRaidActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4185


class GetTowerRaidActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4186


class GetTowerRaidActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetTradingCardActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4262


class GetTradingCardActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4263


class GetTradingCardActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class GetTrialAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 585


class GetTrialAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 586


class GetTrialAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetTvtActivityReqCmdId(betterproto.Enum):
    CMD_ID = 3300


class GetTvtActivityRspCmdId(betterproto.Enum):
    CMD_ID = 3301


class GetTvtActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_SCHEDULE = 2
    NOT_OPEN = 3
    PLAYER_LEVEL_LACK = 4


class GetTvtBattleHistoryReqCmdId(betterproto.Enum):
    CMD_ID = 3302


class GetTvtBattleHistoryRspCmdId(betterproto.Enum):
    CMD_ID = 3303


class GetTvtBattleHistoryRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_SCHEDULE = 2


class GetVersionActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4223


class GetVersionActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4224


class GetVersionActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetVipRewardDataReqCmdId(betterproto.Enum):
    CMD_ID = 197


class GetVipRewardDataRspCmdId(betterproto.Enum):
    CMD_ID = 198


class GetVipRewardDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetVipRewardReqCmdId(betterproto.Enum):
    CMD_ID = 199


class GetVipRewardRspCmdId(betterproto.Enum):
    CMD_ID = 200


class GetVipRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    PAY_HCOIN_LACK = 2
    REPEAT_GET = 3


class GetVirtualAvatarGroupDetailReqCmdId(betterproto.Enum):
    CMD_ID = 3502


class GetVirtualAvatarGroupDetailRspCmdId(betterproto.Enum):
    CMD_ID = 3503


class GetVirtualAvatarGroupDetailRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetVirtualGachaStatusReqCmdId(betterproto.Enum):
    CMD_ID = 3510


class GetVirtualGachaStatusRspCmdId(betterproto.Enum):
    CMD_ID = 3511


class GetVirtualGachaStatusRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetWareHouseDataReqCmdId(betterproto.Enum):
    CMD_ID = 2647


class GetWareHouseDataRspCmdId(betterproto.Enum):
    CMD_ID = 2648


class GetWareHouseDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    STATUS_ERROR = 3


class GetWareHouseItemReqCmdId(betterproto.Enum):
    CMD_ID = 2655


class GetWareHouseItemRspCmdId(betterproto.Enum):
    CMD_ID = 2656


class GetWareHouseItemRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    STATUS_ERROR = 3


class GetWarshipDataReqCmdId(betterproto.Enum):
    CMD_ID = 5454


class GetWarshipDataRspCmdId(betterproto.Enum):
    CMD_ID = 5455


class GetWarshipDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetWarshipItemDataReqCmdId(betterproto.Enum):
    CMD_ID = 5450


class GetWarshipItemDataRspCmdId(betterproto.Enum):
    CMD_ID = 5451


class GetWarshipItemDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetWarshipTrialDataReqCmdId(betterproto.Enum):
    CMD_ID = 5452


class GetWarshipTrialDataRspCmdId(betterproto.Enum):
    CMD_ID = 5453


class GetWarshipTrialDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetWebActivityInfoReqCmdId(betterproto.Enum):
    CMD_ID = 1601


class GetWebActivityInfoRspCmdId(betterproto.Enum):
    CMD_ID = 1602


class GetWebActivityInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetWeekDayActivityCompensationInfoReqCmdId(betterproto.Enum):
    CMD_ID = 1666


class GetWeekDayActivityCompensationInfoRspCmdId(betterproto.Enum):
    CMD_ID = 1667


class GetWeekDayActivityCompensationInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetWeekDayActivityDataReqCmdId(betterproto.Enum):
    CMD_ID = 125


class GetWeekDayActivityDataRspCmdId(betterproto.Enum):
    CMD_ID = 126


class GetWeekDayActivityDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetWeeklyReportEndlessRecommendPlayerReqCmdId(betterproto.Enum):
    CMD_ID = 5102


class GetWeeklyReportEndlessRecommendPlayerRspCmdId(betterproto.Enum):
    CMD_ID = 5103


class GetWeeklyReportEndlessRecommendPlayerRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetWeeklyReportExBossRecommendPlayerReqCmdId(betterproto.Enum):
    CMD_ID = 5104


class GetWeeklyReportExBossRecommendPlayerRspCmdId(betterproto.Enum):
    CMD_ID = 5105


class GetWeeklyReportExBossRecommendPlayerRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetWeeklyReportReqCmdId(betterproto.Enum):
    CMD_ID = 5100


class GetWeeklyReportRspCmdId(betterproto.Enum):
    CMD_ID = 5101


class GetWeeklyReportRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetWeeklyReportUltraEndlessRecommendPlayerReqCmdId(betterproto.Enum):
    CMD_ID = 5106


class GetWeeklyReportUltraEndlessRecommendPlayerRspCmdId(betterproto.Enum):
    CMD_ID = 5107


class GetWeeklyReportUltraEndlessRecommendPlayerRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetWeeklyRoutineActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4229


class GetWeeklyRoutineActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4230


class GetWeeklyRoutineActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_SCHEDULE = 2


class GetWikiDataReqCmdId(betterproto.Enum):
    CMD_ID = 1193


class GetWikiDataRspCmdId(betterproto.Enum):
    CMD_ID = 1194


class GetWikiDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GetWorldMapDataReqCmdId(betterproto.Enum):
    CMD_ID = 1012


class GetWorldMapDataRspCmdId(betterproto.Enum):
    CMD_ID = 1013


class GetWorldMapDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GlobalPollingGetDataReqCmdId(betterproto.Enum):
    CMD_ID = 5811


class GlobalPollingGetDataRspCmdId(betterproto.Enum):
    CMD_ID = 5812


class GlobalPollingGetDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 3
    FEATURE_CLOSED = 4


class GlobalPollingSupportReqCmdId(betterproto.Enum):
    CMD_ID = 5813


class GlobalPollingSupportRspCmdId(betterproto.Enum):
    CMD_ID = 5814


class GlobalPollingSupportRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 2
    TARGET_ID_INVALID = 3
    IN_CD = 4


class GlobalPollingVoteReqCmdId(betterproto.Enum):
    CMD_ID = 5815


class GlobalPollingVoteRspCmdId(betterproto.Enum):
    CMD_ID = 5816


class GlobalPollingVoteRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 3
    VOTE_NOT_OPEN = 4
    TARGET_ID_INVALID = 5
    TOO_FREQUENT = 6
    MATERIAL_LACK = 7
    FEATURE_CLOSED = 8


class GlobalShopGoodsInfoNotifyCmdId(betterproto.Enum):
    CMD_ID = 1583


class GlobalWarAddCurrencyNotifyCmdId(betterproto.Enum):
    CMD_ID = 3954


class GlobalWarExchangeCurrencyReqCmdId(betterproto.Enum):
    CMD_ID = 3955


class GlobalWarExchangeCurrencyRspCmdId(betterproto.Enum):
    CMD_ID = 3956


class GlobalWarExchangeCurrencyRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    POINT_NOT_ACTIVE = 2
    MATERIAL_LACK = 3
    CURRENCY_FULL = 4
    AREA_NOT_FINISH = 5
    STAMINA_LACK = 6


class GlobalWarGetRankReqCmdId(betterproto.Enum):
    CMD_ID = 3957


class GlobalWarGetRankRspCmdId(betterproto.Enum):
    CMD_ID = 3958


class GlobalWarGetRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GlobalWarTakePointRewardReqCmdId(betterproto.Enum):
    CMD_ID = 3952


class GlobalWarTakePointRewardRspCmdId(betterproto.Enum):
    CMD_ID = 3953


class GlobalWarTakePointRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    POINT_NOT_FINISH = 2
    CURRENCY_LACK = 3


class GlobalWarTakeSweepRewardReqCmdId(betterproto.Enum):
    CMD_ID = 3959


class GlobalWarTakeSweepRewardRspCmdId(betterproto.Enum):
    CMD_ID = 3960


class GlobalWarTakeSweepRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    POINT_NOT_FINISH = 2
    SWEEP_MATERIAL_CD = 3


class GmTalkReqCmdId(betterproto.Enum):
    CMD_ID = 22


class GmTalkRspCmdId(betterproto.Enum):
    CMD_ID = 23


class GmTalkRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GoodsRefreshTimeType(betterproto.Enum):
    SHOP_TYPE = 0
    DAY_TYPE = 1
    WEEK_TYPE = 2
    MONTH_TYPE = 3
    VERSION_TYPE = 4
    DOUBLE_WEEK_TYPE = 5


class GoodsShowType(betterproto.Enum):
    NORMAL_SHOW = 1
    LOCK_SHOW = 2


class GrandKeyActivateSkillReqCmdId(betterproto.Enum):
    CMD_ID = 759


class GrandKeyActivateSkillRspCmdId(betterproto.Enum):
    CMD_ID = 760


class GrandKeyActivateSkillRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_LIMIT = 2
    REPEAT_ACTIVATE = 3
    SKILL_LOCK = 4
    NUM_LIMIT = 5


class GrandKeyBreachReqCmdId(betterproto.Enum):
    CMD_ID = 757


class GrandKeyBreachRspCmdId(betterproto.Enum):
    CMD_ID = 758


class GrandKeyBreachRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    WEAPON_LIMIT = 2


class GrandKeyContrastReqCmdId(betterproto.Enum):
    CMD_ID = 761


class GrandKeyContrastRspCmdId(betterproto.Enum):
    CMD_ID = 762


class GrandKeyContrastRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GrandKeyLevelUpReqCmdId(betterproto.Enum):
    CMD_ID = 753


class GrandKeyLevelUpRspCmdId(betterproto.Enum):
    CMD_ID = 754


class GrandKeyLevelUpRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    WEAPON_LEVEL_LIMIT = 2
    MATERIAL_LIMIT = 3
    MAX_LEVEL = 4
    PLAYER_LEVEL_LIMIT = 5


class GrandKeyResetReqCmdId(betterproto.Enum):
    CMD_ID = 755


class GrandKeyResetRspCmdId(betterproto.Enum):
    CMD_ID = 756


class GrandKeyResetRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GrandKeySetSkillReqCmdId(betterproto.Enum):
    CMD_ID = 763


class GrandKeySetSkillRspCmdId(betterproto.Enum):
    CMD_ID = 764


class GrandKeySetSkillRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_ACTIVE = 2
    SKILL_LOCKED = 3
    NUM_LIMIT = 4


class GrantOuterRewardNotifyCmdId(betterproto.Enum):
    CMD_ID = 4247


class GratuityStageFinishNotifyCmdId(betterproto.Enum):
    CMD_ID = 4121


class GratuityStageInviteNotifyCmdId(betterproto.Enum):
    CMD_ID = 4120


class GratuityStageMessageMessageType(betterproto.Enum):
    MESSAGE_NONE = 0
    MESSAGE_MONSTER_DAMAGE = 1


class GreedyEndlessEnrollReqCmdId(betterproto.Enum):
    CMD_ID = 3453


class GreedyEndlessEnrollRspCmdId(betterproto.Enum):
    CMD_ID = 3454


class GreedyEndlessEnrollRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ALREADY_ENROLL = 2


class GreedyEndlessFloorRewardNotifyCmdId(betterproto.Enum):
    CMD_ID = 3457


class GreedyEndlessGetRankReqCmdId(betterproto.Enum):
    CMD_ID = 3458


class GreedyEndlessGetRankRspCmdId(betterproto.Enum):
    CMD_ID = 3459


class GreedyEndlessGetRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_RANK = 2


class GreedyEndlessReportFloorBeginReqCmdId(betterproto.Enum):
    CMD_ID = 3464


class GreedyEndlessReportFloorBeginRspCmdId(betterproto.Enum):
    CMD_ID = 3465


class GreedyEndlessReportFloorBeginRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class GreedyEndlessReportFloorEndReqCmdId(betterproto.Enum):
    CMD_ID = 3455


class GreedyEndlessReportFloorEndRspCmdId(betterproto.Enum):
    CMD_ID = 3456


class GreedyEndlessReportFloorEndRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    FEATURE_CLOSED = 2
    NOT_CUR_FLOOR = 3


class GreedyEndlessTakeRankRewardReqCmdId(betterproto.Enum):
    CMD_ID = 3460


class GreedyEndlessTakeRankRewardRspCmdId(betterproto.Enum):
    CMD_ID = 3461


class GreedyEndlessTakeRankRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKE = 2
    NO_REWARD = 3


class ImpeachDanmakuReqCmdId(betterproto.Enum):
    CMD_ID = 1549


class ImpeachDanmakuRspCmdId(betterproto.Enum):
    CMD_ID = 1550


class ImpeachDanmakuRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TOO_FREQUENT = 2
    IMPEACH_SELF = 3


class InheritStigmataTitleReqCmdId(betterproto.Enum):
    CMD_ID = 328


class InheritStigmataTitleRspCmdId(betterproto.Enum):
    CMD_ID = 329


class InheritStigmataTitleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    STIGMATA_NOT_EXIST = 2
    MATERIAL_LACK = 3
    SCOIN_LACK = 4
    LEVEL_ERROR = 5
    TARGET_LEVEL_ERROR = 6
    LEVEL_LACK = 7


class InitRogueStageReqCmdId(betterproto.Enum):
    CMD_ID = 277


class InitRogueStageRspCmdId(betterproto.Enum):
    CMD_ID = 278


class InitRogueStageRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_JOIN_ARMADA = 2
    NOT_RESET = 3
    AVATAR_NUM_ERROR = 4
    AVATAR_NOT_EXIST = 5
    HARD_LEVEL_ERROR = 6
    LEVEL_LACK = 7
    NOT_OPEN = 8


class InLevelContextContextType(betterproto.Enum):
    INVALID = 0
    NORMAL = 1
    ENDLESS = 2
    OPENWORLD_ENDLESS = 3
    EXBOSS = 4


class InviteActivityAcceptInviteReqCmdId(betterproto.Enum):
    CMD_ID = 1696


class InviteActivityAcceptInviteRspCmdId(betterproto.Enum):
    CMD_ID = 1697


class InviteActivityAcceptInviteRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    INVITE_CODE_ERROR = 2
    LEVEL_LACK = 3
    INVITE_FULL = 4
    INVITE_INVALID_REGION = 5
    INVITE_CONDITION_ERROR = 6
    NO_ACTIVITY = 7
    ALREADY_INVITED = 8
    INVITE_DAILY_LIMIT = 9
    FEATURE_CLOSED = 10


class InviteChatgroupReqCmdId(betterproto.Enum):
    CMD_ID = 2202


class InviteChatgroupRspCmdId(betterproto.Enum):
    CMD_ID = 2203


class InviteChatgroupRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_CREATER = 2
    EXCEED_MAX_MEMBER_NUM = 3
    GROUP_NOT_FOUND = 4
    NOT_IN_GROUP = 5
    UID_NOT_EXIST = 6
    FRIEND_ERROR = 7
    MASTER_PUPIL_ERROR = 8
    FEATURE_LIMIT = 9
    FEATURE_CLOSED = 10


class InviteRoomReqCmdId(betterproto.Enum):
    CMD_ID = 3160


class InviteRoomRspCmdId(betterproto.Enum):
    CMD_ID = 3161


class InviteRoomRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ROOM = 2
    ROOM_IN_MATCHING = 3
    IS_IN_BATTLE = 4
    TOO_FREQUENT = 5
    INVITE_SELF = 6
    NO_SCHEDULE = 7


class InviteToMultiChatgroupReqCmdId(betterproto.Enum):
    CMD_ID = 2216


class InviteToMultiChatgroupRspCmdId(betterproto.Enum):
    CMD_ID = 2217


class InviteToMultiChatgroupRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    JOIN_MAX_NUM = 2
    FEATURE_CLOSED = 3


class IslandDisjoinEquipmentReqCmdId(betterproto.Enum):
    CMD_ID = 179


class IslandDisjoinEquipmentRspCmdId(betterproto.Enum):
    CMD_ID = 180


class IslandDisjoinEquipmentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    CABIN_TECH_NOT_ADD = 2
    CONSUME_ITEM_NOT_EXIST = 3
    CONSUME_ITEM_IN_USE = 4
    CONSUME_ITEM_PROTECTED = 5
    SCOIN_LACK = 6
    EQUIPMENT_FULL = 7
    COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 8
    COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 9
    TITLE_LEVEL_ERROR = 10
    BATCH_NUM = 11
    LEVEL_LACK = 12
    CONSUME_ITEM_REPEAT = 13
    COST_GACHA_TICKET = 14
    CONSUME_ITEM_GRAND_KEY = 15
    CONSUME_ITEM_IN_FACILITY = 16
    EX_DISJOIN_CURRENCY_LACK = 17
    CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 18


class JigsawExchangePieceReqCmdId(betterproto.Enum):
    CMD_ID = 4275


class JigsawExchangePieceRspCmdId(betterproto.Enum):
    CMD_ID = 4276


class JigsawExchangePieceRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    JIGSAW_NOT_BEGIN = 3
    PRE_JIGSAW_NOT_FINISHED = 4
    ITEMS_LACK = 5
    NO_PIECE = 6


class JigsawMovePieceInJigsawAreaReqCmdId(betterproto.Enum):
    CMD_ID = 4279


class JigsawMovePieceInJigsawAreaRspCmdId(betterproto.Enum):
    CMD_ID = 4280


class JigsawMovePieceInJigsawAreaRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    JIGSAW_NOT_BEGIN = 3
    PRE_JIGSAW_NOT_FINISHED = 4
    NO_SOURCE_PIECE = 5
    OUT_OF_RANGE = 6
    LOCKED = 7


class JigsawMoveWaitingPieceReqCmdId(betterproto.Enum):
    CMD_ID = 4277


class JigsawMoveWaitingPieceRspCmdId(betterproto.Enum):
    CMD_ID = 4278


class JigsawMoveWaitingPieceRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    JIGSAW_NOT_BEGIN = 3
    PRE_JIGSAW_NOT_FINISHED = 4
    NO_WAITING_PIECE = 5
    OUT_OF_RANGE = 6
    BLOCK_LOCKED = 7


class JigsawTakeFinishRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4283


class JigsawTakeFinishRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4284


class JigsawTakeFinishRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    JIGSAW_NOT_BEGIN = 3
    PRE_JIGSAW_NOT_FINISHED = 4
    NOT_FINISHED = 5
    HAS_TAKEN = 6


class JigsawTakeGroupRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4281


class JigsawTakeGroupRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4282


class JigsawTakeGroupRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    JIGSAW_NOT_BEGIN = 3
    PRE_JIGSAW_NOT_FINISHED = 4
    NOT_FINISHED = 5
    HAS_TAKEN = 6


class JiguangUpdateTagReqCmdId(betterproto.Enum):
    CMD_ID = 1590


class JiguangUpdateTagRspCmdId(betterproto.Enum):
    CMD_ID = 1591


class JiguangUpdateTagRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class JoinArmadaElectionReqCmdId(betterproto.Enum):
    CMD_ID = 2693


class JoinArmadaElectionRspCmdId(betterproto.Enum):
    CMD_ID = 2694


class JoinArmadaElectionRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    IMPEACH_NOT_START = 3
    IN_OPTIONAL_LIST = 4
    LEVEL_LACK = 5
    ACCOUNT_NONE = 6


class JoinQuitArmadaNotifyCmdId(betterproto.Enum):
    CMD_ID = 2805


class KeepAliveNotifyCmdId(betterproto.Enum):
    CMD_ID = 1


class KickArmadaMemberReqCmdId(betterproto.Enum):
    CMD_ID = 2623


class KickArmadaMemberRspCmdId(betterproto.Enum):
    CMD_ID = 2624


class KickArmadaMemberRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_GRANTED = 2
    NOT_IN_ARMADA = 3
    TARGET_NOT_IN_ARMADA = 4
    IN_PROTECT = 5


class KickChatgroupMemberReqCmdId(betterproto.Enum):
    CMD_ID = 2212


class KickChatgroupMemberRspCmdId(betterproto.Enum):
    CMD_ID = 2213


class KickChatgroupMemberRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_CREATER = 2
    KICK_SELF = 3
    NOT_MEMBER = 4


class KickLobbyMemberReqCmdId(betterproto.Enum):
    CMD_ID = 317


class KickLobbyMemberRspCmdId(betterproto.Enum):
    CMD_ID = 318


class KickLobbyMemberRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_LOBBY = 2
    NOT_LEADER = 3
    TARGET_NOT_EXIST = 4


class KickOutPlayerNotifyCmdId(betterproto.Enum):
    CMD_ID = 5007


class KickOutPlayerNotifyKickOutReason(betterproto.Enum):
    REASON_NONE = 0
    REASON_MTP_ERROR = 1
    REASON_PLATFORM_ERROR = 2
    REASON_SQUEEZE = 3
    REASON_LOGIN_UNFINISH = 4


class KingdomWarExchangeCurrencyReqCmdId(betterproto.Enum):
    CMD_ID = 3062


class KingdomWarExchangeCurrencyRspCmdId(betterproto.Enum):
    CMD_ID = 3063


class KingdomWarExchangeCurrencyRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    POINT_ERROR = 3
    COST_MATERIAL_LACK = 4


class KingdomWarGetPointRankReqCmdId(betterproto.Enum):
    CMD_ID = 3064


class KingdomWarGetPointRankRspCmdId(betterproto.Enum):
    CMD_ID = 3065


class KingdomWarGetPointRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class KingdomWarGetRankReqCmdId(betterproto.Enum):
    CMD_ID = 3058


class KingdomWarGetRankRspCmdId(betterproto.Enum):
    CMD_ID = 3059


class KingdomWarGetRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    KINGDOM_ERROR = 3


class KingdomWarMoveReqCmdId(betterproto.Enum):
    CMD_ID = 3052


class KingdomWarMoveRspCmdId(betterproto.Enum):
    CMD_ID = 3053


class KingdomWarMoveRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    PHASE_ERROR = 2
    TIME_ERROR = 3
    POINT_ERROR = 4
    NOT_FINISH_CUR_POINT = 5
    NO_TIMES = 6
    IN_MP_LOBBY = 7
    IN_MP_MATCH = 8


class KingdomWarTakeDailyRewardReqCmdId(betterproto.Enum):
    CMD_ID = 3060


class KingdomWarTakeDailyRewardRspCmdId(betterproto.Enum):
    CMD_ID = 3061


class KingdomWarTakeDailyRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKE = 2
    NOT_OPEN = 3


class KingdomWarVoteReqCmdId(betterproto.Enum):
    CMD_ID = 3054


class KingdomWarVoteRspCmdId(betterproto.Enum):
    CMD_ID = 3055


class KingdomWarVoteRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    PHASE_ERROR = 2
    TIME_ERROR = 3
    POINT_ERROR = 4
    HAS_VOTE = 5
    SCORE_LACK = 6


class LeaveChatgroupReqCmdId(betterproto.Enum):
    CMD_ID = 2208


class LeaveChatgroupRspCmdId(betterproto.Enum):
    CMD_ID = 2209


class LeaveChatgroupRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_MEMBER = 2


class LeaveChatroomNotifyCmdId(betterproto.Enum):
    CMD_ID = 2233


class LeaveCommonChatworldReqCmdId(betterproto.Enum):
    CMD_ID = 2402


class LeaveCommonChatworldRspCmdId(betterproto.Enum):
    CMD_ID = 2403


class LeaveCommonChatworldRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class LeaveTeamReqCmdId(betterproto.Enum):
    CMD_ID = 305


class LeaveTeamRspCmdId(betterproto.Enum):
    CMD_ID = 306


class LeaveTeamRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_TEAM = 2


class LevelUpArmadaCabinReqCmdId(betterproto.Enum):
    CMD_ID = 2631


class LevelUpArmadaCabinRspCmdId(betterproto.Enum):
    CMD_ID = 2632


class LevelUpArmadaCabinRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ARMADA_LEVEL_LACK = 2
    FUND_LACK = 3
    POPL_LACK = 4
    BUSY = 5
    LEVEL_LACK = 6
    CABIN_NOT_EXIST = 7
    CABIN_FULL = 8
    GRID_ERROR = 9
    NOT_GRANTED = 10
    NOT_IN_ARMADA = 11
    NO_OWNERSHIP = 12


class LevelUpDlcAvatarTalentReqCmdId(betterproto.Enum):
    CMD_ID = 3552


class LevelUpDlcAvatarTalentRspCmdId(betterproto.Enum):
    CMD_ID = 3553


class LevelUpDlcAvatarTalentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2
    TARGET_LEVEL_ERROR = 3
    PRE_TALENT_LACK = 4
    MATERIAL_LACK = 5
    DLC_LEVEL_LACK = 6
    PRE_AVATAR_LOCK = 7
    WAIT_SELECT_AFFIX_SET_NOT_EMPTY = 8


class LevelUpDormReqCmdId(betterproto.Enum):
    CMD_ID = 613


class LevelUpDormRspCmdId(betterproto.Enum):
    CMD_ID = 614


class LevelUpDormRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    BUSY = 2
    HOUSE_NOT_EXIST = 3
    LEVEL_ERROR = 4
    COMFORT_LIMIT = 5
    MATERIAL_LIMIT = 6


class LevelUpRestaurantFacilityReqCmdId(betterproto.Enum):
    CMD_ID = 5862


class LevelUpRestaurantFacilityRspCmdId(betterproto.Enum):
    CMD_ID = 5863


class LevelUpRestaurantFacilityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_LACK = 2
    MISSION_UNFINISH = 3


class LevelUpScDlcAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 6310


class LevelUpScDlcAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 6311


class LevelUpScDlcAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_LACK = 2
    AVATAR_NOT_EXIST = 3
    FEVER_LEVEL_LACK = 4


class LevelUpScDlcTalentReqCmdId(betterproto.Enum):
    CMD_ID = 6312


class LevelUpScDlcTalentRspCmdId(betterproto.Enum):
    CMD_ID = 6313


class LevelUpScDlcTalentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_ERROR = 2
    TALENT_ERROR = 3
    TARGET_LEVEL_ERROR = 4
    FEVER_LEVEL_LACK = 5
    PRE_TALENT_LACK = 6
    MATERIAL_LACK = 7


class LevelUpStigmataTitleReqCmdId(betterproto.Enum):
    CMD_ID = 324


class LevelUpStigmataTitleRspCmdId(betterproto.Enum):
    CMD_ID = 325


class LevelUpStigmataTitleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    STIGMATA_NOT_EXIST = 2
    EXP_FULL = 3
    MATERIAL_ERROR = 4
    LEVEL_LACK = 5


class LikeDormReqCmdId(betterproto.Enum):
    CMD_ID = 639


class LikeDormRspCmdId(betterproto.Enum):
    CMD_ID = 640


class LikeDormRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LIMIT = 2
    HAS_LIKED = 3
    SEND_LIKE_LIMIT = 4
    RECEIVE_LIKE_LIMIT = 5


class LobbyEnterFightErrorNotifyCmdId(betterproto.Enum):
    CMD_ID = 321


class LobbyEnterFightErrorNotifyRetcode(betterproto.Enum):
    SUCC = 0
    CONNECT_TIMEOUT = 1
    BEGIN_STAGE_FAIL = 2


class LobbyPrepareCountDownNotifyCmdId(betterproto.Enum):
    CMD_ID = 1028


class LobbySetClientStatusReqCmdId(betterproto.Enum):
    CMD_ID = 1026


class LobbySetClientStatusRspCmdId(betterproto.Enum):
    CMD_ID = 1027


class LobbySetClientStatusRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_TEAM = 2


class LobbyStageBeginReqCmdId(betterproto.Enum):
    CMD_ID = 311


class LobbyStageBeginRspCmdId(betterproto.Enum):
    CMD_ID = 312


class LobbyStageBeginRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_LOBBY = 2
    LOBBY_FIGHTING = 3
    NOT_LEADER = 4
    MEMBER_STATUS_ERROR = 5
    SYSTEM_ERROR = 6
    MEMBER_NOT_ENTER_LOBBY = 7
    MEMBER_NOT_ONLINE = 8
    MEMBER_DUPLICATE = 9
    MEMBER_NOT_ENOUGH = 10


class LobbyStageEndReqCmdId(betterproto.Enum):
    CMD_ID = 313


class LobbyStageEndRspCmdId(betterproto.Enum):
    CMD_ID = 314


class LobbyStageEndRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_LOBBY = 2
    LOBBY_NOT_FIGHTING = 3
    NOT_LEADER = 4
    SYSTEM_ERROR = 5


class LobbyTimeoutNoLeaderNotifyCmdId(betterproto.Enum):
    CMD_ID = 1033


class LoginWishGetMainDataReqCmdId(betterproto.Enum):
    CMD_ID = 1607


class LoginWishGetMainDataRspCmdId(betterproto.Enum):
    CMD_ID = 1608


class LoginWishGetMainDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class LoginWishMakeWishReqCmdId(betterproto.Enum):
    CMD_ID = 1613


class LoginWishMakeWishRspCmdId(betterproto.Enum):
    CMD_ID = 1614


class LoginWishMakeWishRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    DAY_LACK = 3
    REWARD_TAKEN = 4


class LoginWishTakeLoginRewardReqCmdId(betterproto.Enum):
    CMD_ID = 1609


class LoginWishTakeLoginRewardRspCmdId(betterproto.Enum):
    CMD_ID = 1610


class LoginWishTakeLoginRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    DAY_LACK = 2
    ALREADY_TAKEN = 3


class LoginWishTakeSpecialRewardReqCmdId(betterproto.Enum):
    CMD_ID = 1611


class LoginWishTakeSpecialRewardRspCmdId(betterproto.Enum):
    CMD_ID = 1612


class LoginWishTakeSpecialRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    DAY_LACK = 2
    ALREADY_TAKEN = 3


class LoginWishTakeWishRewardReqCmdId(betterproto.Enum):
    CMD_ID = 1615


class LoginWishTakeWishRewardRspCmdId(betterproto.Enum):
    CMD_ID = 1616


class LoginWishTakeWishRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class LotteryDrawNumberReqCmdId(betterproto.Enum):
    CMD_ID = 4181


class LotteryDrawNumberRspCmdId(betterproto.Enum):
    CMD_ID = 4182


class LotteryDrawNumberRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_NOT_ENOUGH = 2
    NOT_OPEN = 3
    TIMES_LIMIT = 4


class LotteryTakeRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4183


class LotteryTakeRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4184


class LotteryTakeRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_LOTTERY_NUMBER = 2
    REWARD_TAKEN = 3
    NO_REWARD = 4
    NOT_OPEN = 5


class LotteryUseBoxReqCmdId(betterproto.Enum):
    CMD_ID = 4179


class LotteryUseBoxRspCmdId(betterproto.Enum):
    CMD_ID = 4180


class LotteryUseBoxRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_NOT_ENOUGH = 2
    NOT_OPEN = 3


class ManualRefreshShopReqCmdId(betterproto.Enum):
    CMD_ID = 205


class ManualRefreshShopRspCmdId(betterproto.Enum):
    CMD_ID = 206


class ManualRefreshShopRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SHOP_NOT_EXIST = 2
    REFRESH_TIMES_LACK = 3
    HCOIN_LACK = 4
    SHOP_CLOSE = 5
    NO_NEED_REFRESH = 6
    MATERIAL_LACK = 7


class MarkReadClientMailReqCmdId(betterproto.Enum):
    CMD_ID = 3804


class MarkReadClientMailRspCmdId(betterproto.Enum):
    CMD_ID = 3805


class MarkReadClientMailRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class MassiveWarBattleBeginNotifyCmdId(betterproto.Enum):
    CMD_ID = 4806


class MassiveWarBattleEndNotifyCmdId(betterproto.Enum):
    CMD_ID = 4810


class MassiveWarBattleMessageMassiveWarMessageType(betterproto.Enum):
    MASSIVE_WAR_MESSAGE_NONE = 0
    MASSIVE_WAR_MESSAGE_BOSS_DAMAGE = 1
    MASSIVE_WAR_MESSAGE_FIELD = 2


class MassiveWarExitBattleReqCmdId(betterproto.Enum):
    CMD_ID = 4808


class MassiveWarExitBattleRspCmdId(betterproto.Enum):
    CMD_ID = 4809


class MassiveWarExitBattleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class MassiveWarGetActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4800


class MassiveWarGetActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4801


class MassiveWarGetActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class MassiveWarGetBattleInfoReqCmdId(betterproto.Enum):
    CMD_ID = 4802


class MassiveWarGetBattleInfoRspCmdId(betterproto.Enum):
    CMD_ID = 4803


class MassiveWarGetBattleInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_EXIST = 2


class MassiveWarGetRankReqCmdId(betterproto.Enum):
    CMD_ID = 4804


class MassiveWarGetRankRspCmdId(betterproto.Enum):
    CMD_ID = 4805


class MassiveWarGetRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class MassiveWarLineupInfoNotifyCmdId(betterproto.Enum):
    CMD_ID = 4811


class MassiveWarReportBattleMessageNotifyCmdId(betterproto.Enum):
    CMD_ID = 4807


class MassiveWarTakeScoreRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4812


class MassiveWarTakeScoreRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4813


class MassiveWarTakeScoreRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class MasterPupilCardReportReqCmdId(betterproto.Enum):
    CMD_ID = 578


class MasterPupilEvalReqCmdId(betterproto.Enum):
    CMD_ID = 574


class MasterPupilEvalRspCmdId(betterproto.Enum):
    CMD_ID = 575


class MasterPupilMissionMissionStatus(betterproto.Enum):
    DOING = 1
    FINISH = 2


class MasterPupilMsgNotifyCmdId(betterproto.Enum):
    CMD_ID = 589


class MasterPupilRetcodeRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    PUPIL_LEVEL_LIMIT = 2
    MASTER_LEVEL_LIMIT = 3
    APPLY_NUM_LIMIT = 6
    TARGET_APPLY_NUM_LIMIT = 7
    INVALID_UID = 8
    IS_EVALED = 9
    EXAM_MISSION_UNFINISH = 10
    FAME_LEVEL_LIMIT = 12
    FAME_LEVEL_REWARDED = 13
    CONTENT_STR_INVALID = 14
    MASTER_PUPIL_TYPE_ERROR = 16
    APPLY_REPEATE = 17
    HAS_RELATION = 18
    NO_RELATION = 19
    RELATION_CD_LIMIT = 21
    HAS_STEP_UNFINISH = 22
    NO_STEP_DOING = 23
    DAILY_REFRESH_TIMES_LIMIT = 24
    SAME_DAY_TIME = 25
    RECOMMEND_CD = 26
    INVALID_STAR = 27
    NOT_OPEN = 28
    NOT_ALLOW_CROSS_REGION_MASTER_PUPIL = 29
    FEATURE_LIMIT = 30
    SELF_PUPIL_NUM_LIMIT = 101
    SELF_HAS_MASTER = 102
    SELF_STEP_ERROR = 103
    SELF_DISMISS_TIME_LIMIT = 104
    SELF_IS_GRADUATED = 105
    SELF_MONTH_PUPIL_NUM_LIMIT = 106
    SELF_IS_MASTER = 107
    TARGET_PUPIL_NUM_LIMIT = 201
    TARGET_HAS_MASTER = 202
    TARGET_STEP_ERROR = 203
    TARGET_DISMISS_TIME_LIMIT = 204
    TARGET_IS_GRADUATED = 205
    TARGET_MONTH_PUPIL_NUM_LIMIT = 206
    TARGET_IS_MASTER = 207
    DECLARATION_IN_CD = 208
    DECLARATION_IN_AUDIT = 209
    FEATURE_CLOSED = 210
    TARGET_RECALLED = 211


class MaterialDeleteReturnReqCmdId(betterproto.Enum):
    CMD_ID = 553


class MaterialEvoReqCmdId(betterproto.Enum):
    CMD_ID = 56


class MaterialEvoRspCmdId(betterproto.Enum):
    CMD_ID = 57


class MaterialEvoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class MatrixAdvanceReqCmdId(betterproto.Enum):
    CMD_ID = 2326


class MatrixAdvanceRspCmdId(betterproto.Enum):
    CMD_ID = 2327


class MatrixAdvanceRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    PATH_NOT_VALID = 2
    IN_FLOOR_EVENT = 3


class MatrixCancelEventReqCmdId(betterproto.Enum):
    CMD_ID = 2332


class MatrixCancelEventRspCmdId(betterproto.Enum):
    CMD_ID = 2333


class MatrixCancelEventRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class MatrixEnterReqCmdId(betterproto.Enum):
    CMD_ID = 2324


class MatrixEnterRspCmdId(betterproto.Enum):
    CMD_ID = 2325


class MatrixEnterRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class MatrixEventFinishNotifyCmdId(betterproto.Enum):
    CMD_ID = 2335


class MatrixGuessFingerReqCmdId(betterproto.Enum):
    CMD_ID = 2349


class MatrixGuessFingerRspCmdId(betterproto.Enum):
    CMD_ID = 2350


class MatrixGuessFingerRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_WIN = 2


class MatrixLotteryDrawNotifyCmdId(betterproto.Enum):
    CMD_ID = 2353


class MatrixMoveObjectReqCmdId(betterproto.Enum):
    CMD_ID = 2339


class MatrixMoveObjectRspCmdId(betterproto.Enum):
    CMD_ID = 2340


class MatrixMoveObjectRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    POS_INVALID = 2
    OBJECT_NOT_EXIST = 3
    BLOCK = 4
    IN_FLOOR_EVENT = 5


class MatrixResetFloorReqCmdId(betterproto.Enum):
    CMD_ID = 2341


class MatrixResetFloorRspCmdId(betterproto.Enum):
    CMD_ID = 2342


class MatrixResetFloorRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class MatrixSetDiceDestinationReqCmdId(betterproto.Enum):
    CMD_ID = 2347


class MatrixSetDiceDestinationRspCmdId(betterproto.Enum):
    CMD_ID = 2348


class MatrixSetDiceDestinationRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_PATH = 2


class MatrixSetLotteryNumReqCmdId(betterproto.Enum):
    CMD_ID = 2351


class MatrixSetLotteryNumRspCmdId(betterproto.Enum):
    CMD_ID = 2352


class MatrixSetLotteryNumRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class MatrixSettleFloorEventReqCmdId(betterproto.Enum):
    CMD_ID = 2343


class MatrixSettleFloorEventRspCmdId(betterproto.Enum):
    CMD_ID = 2344


class MatrixSettleFloorEventRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class MatrixTeleportNotifyCmdId(betterproto.Enum):
    CMD_ID = 2338


class MatrixThrowDiceReqCmdId(betterproto.Enum):
    CMD_ID = 2345


class MatrixThrowDiceRspCmdId(betterproto.Enum):
    CMD_ID = 2346


class MatrixThrowDiceRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_DICE = 2
    IN_FLOOR_EVENT = 3
    WAIT_CHOOSE = 4
    HAVE_EVENT = 5
    LACK_DICE = 6


class MatrixTriggerEventReqCmdId(betterproto.Enum):
    CMD_ID = 2330


class MatrixTriggerEventRspCmdId(betterproto.Enum):
    CMD_ID = 2331


class MatrixTriggerEventRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    POS_INVALID = 2
    EVENT_NOT_EXIST = 3
    IN_FLOOR_EVENT = 4


class MedalOpReqCmdId(betterproto.Enum):
    CMD_ID = 451


class MedalOpRspCmdId(betterproto.Enum):
    CMD_ID = 452


class MedalOpRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_OWN = 2
    EXPIRED = 3
    OFF_ID_ERROR = 4


class MinuteStageStageState(betterproto.Enum):
    LOCKED = 0
    UNLOCK = 1
    FINISH = 2


class ModifyDlcNameReqCmdId(betterproto.Enum):
    CMD_ID = 3557


class ModifyDlcNameRspCmdId(betterproto.Enum):
    CMD_ID = 3558


class ModifyDlcNameRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    FORMAT_ERROR = 2
    SENSITIVE_WORDS = 3


class ModifyScDlcNameReqCmdId(betterproto.Enum):
    CMD_ID = 6326


class ModifyScDlcNameRspCmdId(betterproto.Enum):
    CMD_ID = 6327


class ModifyScDlcNameRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    FORMAT_ERROR = 2
    SENSITIVE_WORDS = 3


class MonopolyAddMonsterReqCmdId(betterproto.Enum):
    CMD_ID = 3867


class MonopolyAddMonsterRspCmdId(betterproto.Enum):
    CMD_ID = 3868


class MonopolyAddMonsterRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ALREADY_ADD = 2


class MonopolyBuildingConstructReqCmdId(betterproto.Enum):
    CMD_ID = 3854


class MonopolyBuildingConstructRspCmdId(betterproto.Enum):
    CMD_ID = 3855


class MonopolyBuildingConstructRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LACK_MATERIAL = 2
    ANOTHER_TYPE_EXIST = 3
    NUM_LIMIT = 4
    LEVEL_MAX = 5
    NO_LOCATION = 6
    WAIT_SELECT = 7
    STATUS_ERROR = 8


class MonopolyBuyGoodsReqCmdId(betterproto.Enum):
    CMD_ID = 3861


class MonopolyBuyGoodsRspCmdId(betterproto.Enum):
    CMD_ID = 3862


class MonopolyBuyGoodsRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LACK_MATERIAL = 2
    BUY_TIMES_LACK = 3
    INVALID_POSITION = 4
    STATUS_ERROR = 5


class MonopolyEndRoundReqCmdId(betterproto.Enum):
    CMD_ID = 3856


class MonopolyEndRoundRspCmdId(betterproto.Enum):
    CMD_ID = 3857


class MonopolyEndRoundRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    STATUS_ERROR = 2


class MonopolyResetFloorReqCmdId(betterproto.Enum):
    CMD_ID = 3865


class MonopolyResetFloorRspCmdId(betterproto.Enum):
    CMD_ID = 3866


class MonopolyResetFloorRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class MonopolyRewardNotifyCmdId(betterproto.Enum):
    CMD_ID = 3860


class MonopolySkipBattleReqCmdId(betterproto.Enum):
    CMD_ID = 3863


class MonopolySkipBattleRspCmdId(betterproto.Enum):
    CMD_ID = 3864


class MonopolySkipBattleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class MonopolyThrowDiceReqCmdId(betterproto.Enum):
    CMD_ID = 3852


class MonopolyThrowDiceRspCmdId(betterproto.Enum):
    CMD_ID = 3853


class MonopolyThrowDiceRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    WAIT_SELECT_PATH = 2
    STATUS_ERROR = 3


class MonopolyUseItemReqCmdId(betterproto.Enum):
    CMD_ID = 3858


class MonopolyUseItemRspCmdId(betterproto.Enum):
    CMD_ID = 3859


class MonopolyUseItemRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LACK_MATERIAL = 2
    INVALID_AREA = 3


class MonsterCardConfirmRandomTalentReqCmdId(betterproto.Enum):
    CMD_ID = 5933


class MonsterCardConfirmRandomTalentRspCmdId(betterproto.Enum):
    CMD_ID = 5934


class MonsterCardConfirmRandomTalentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class MonsterCardFragmentOverflowNotifyCmdId(betterproto.Enum):
    CMD_ID = 5935


class MonsterCardGetActivityReqCmdId(betterproto.Enum):
    CMD_ID = 5920


class MonsterCardGetActivityRspCmdId(betterproto.Enum):
    CMD_ID = 5921


class MonsterCardGetActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class MonsterCardGetBossRankReqCmdId(betterproto.Enum):
    CMD_ID = 5931


class MonsterCardGetBossRankRspCmdId(betterproto.Enum):
    CMD_ID = 5932


class MonsterCardGetBossRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class MonsterCardGetTowerRankReqCmdId(betterproto.Enum):
    CMD_ID = 5929


class MonsterCardGetTowerRankRspCmdId(betterproto.Enum):
    CMD_ID = 5930


class MonsterCardGetTowerRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class MonsterCardLearnRandomTalentReqCmdId(betterproto.Enum):
    CMD_ID = 5926


class MonsterCardLearnRandomTalentRspCmdId(betterproto.Enum):
    CMD_ID = 5927


class MonsterCardLearnRandomTalentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_LACK = 2
    MATERIAL_ERROR = 3
    INDEX_ERROR = 4
    NEED_TO_CONFIRM = 5


class MonsterCardLevelUpReqCmdId(betterproto.Enum):
    CMD_ID = 5922


class MonsterCardLevelUpRspCmdId(betterproto.Enum):
    CMD_ID = 5923


class MonsterCardLevelUpRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_LACK = 2
    LEVEL_LIMIT = 3
    TARGET_LEVEL_ERROR = 4


class MonsterCardStarUpReqCmdId(betterproto.Enum):
    CMD_ID = 5924


class MonsterCardStarUpRspCmdId(betterproto.Enum):
    CMD_ID = 5925


class MonsterCardStarUpRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    FRAGMENT_LACK = 2
    LEVEL_LACK = 3
    STAR_LIMIT = 4


class MonsterCardSyncCardNotifyCmdId(betterproto.Enum):
    CMD_ID = 5928


class MoveArmadaCabinReqCmdId(betterproto.Enum):
    CMD_ID = 2635


class MoveArmadaCabinRspCmdId(betterproto.Enum):
    CMD_ID = 2636


class MoveArmadaCabinRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    NOT_GRANTED = 3
    DATA_ERROR = 4
    NO_OWNERSHIP = 5


class MpCancelMatchReqCmdId(betterproto.Enum):
    CMD_ID = 468


class MpCancelMatchRspCmdId(betterproto.Enum):
    CMD_ID = 469


class MpCancelMatchRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class MpCreateTeamReqCmdId(betterproto.Enum):
    CMD_ID = 348


class MpCreateTeamRspCmdId(betterproto.Enum):
    CMD_ID = 349


class MpCreateTeamRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ALREADY_IN_TEAM = 2
    CLIENT_VERSION_ERROR = 3
    SERVER_BUSY = 4
    IN_SQUAD = 5
    IN_SQUAD_MATCH = 6
    IN_ROOM = 7
    FEATURE_LIMIT = 8


class MpEnterTeamReqCmdId(betterproto.Enum):
    CMD_ID = 350


class MpEnterTeamRspCmdId(betterproto.Enum):
    CMD_ID = 351


class MpEnterTeamRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TEAM_NOT_EXIST = 2
    TEAM_FULL = 3
    TEAM_ENTER_LOBBY = 4
    TEAM_IN_LOBBY = 5
    TEAM_IN_FIGHT = 6
    ALREADY_IN_TEAM = 7
    CLIENT_VERSION_ERROR = 8
    SERVER_BUSY = 9
    IN_SQUAD = 10
    IN_SQUAD_MATCH = 11
    IN_ROOM = 12
    CONDITION_NOT_MEET = 13
    FEATURE_LIMIT = 14
    DATA_VERSION_CONFLICT = 15


class MpFastMatchReqCmdId(betterproto.Enum):
    CMD_ID = 1247


class MpFastMatchRspCmdId(betterproto.Enum):
    CMD_ID = 1248


class MpFastMatchRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    STAGE_ERROR = 2
    CLIENT_VERSION_ERROR = 3
    BAD_NETWORK = 4
    SERVER_BUSY = 5
    ALREADY_IN_TEAM = 6
    MATCH_STAGE_EXCEED_MAX = 7
    IN_SQUAD = 8
    IN_SQUAD_MATCH = 9
    IN_ROOM = 10


class MpGetLobbyRecommendReqCmdId(betterproto.Enum):
    CMD_ID = 470


class MpGetLobbyRecommendRspCmdId(betterproto.Enum):
    CMD_ID = 471


class MpGetLobbyRecommendRspRecommendType(betterproto.Enum):
    RECOMMEND_NONE = 0
    RECOMMEND_CREATE = 1
    RECOMMEND_ENTER = 2


class MpGetLobbyRecommendRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class MpGetMatchInfoReqCmdId(betterproto.Enum):
    CMD_ID = 466


class MpGetMatchInfoRspCmdId(betterproto.Enum):
    CMD_ID = 467


class MpGetMatchInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_MATCH_ROOM = 2


class MpGetTeamReqCmdId(betterproto.Enum):
    CMD_ID = 346


class MpGetTeamRspCmdId(betterproto.Enum):
    CMD_ID = 347


class MpGetTeamRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_TEAM = 2
    DISCONNECT = 3
    KICK = 4


class MpKickFromTeamReqCmdId(betterproto.Enum):
    CMD_ID = 354


class MpKickFromTeamRspCmdId(betterproto.Enum):
    CMD_ID = 355


class MpKickFromTeamRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_TEAM = 2


class MpLeaveTeamNotifyCmdId(betterproto.Enum):
    CMD_ID = 1101


class MpLikePlayerReqCmdId(betterproto.Enum):
    CMD_ID = 392


class MpLikePlayerRspCmdId(betterproto.Enum):
    CMD_ID = 393


class MpLikePlayerRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_TEAM = 2
    HAS_LIKE = 3


class MpMemberSetClientStatusReqCmdId(betterproto.Enum):
    CMD_ID = 375


class MpMemberSetClientStatusRspCmdId(betterproto.Enum):
    CMD_ID = 376


class MpMemberSetClientStatusRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_TEAM = 2


class MpRaidResetCycleReqCmdId(betterproto.Enum):
    CMD_ID = 360


class MpRaidResetCycleRspCmdId(betterproto.Enum):
    CMD_ID = 361


class MpRaidResetCycleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 2
    RESET_TIMES_LACK = 3
    COIN_LACK = 4
    HAVE_REWARD_NOT_TAKEN = 5
    NOT_ACTIVE = 6


class MpReportPlayerReqCmdId(betterproto.Enum):
    CMD_ID = 381


class MpReportPlayerRspCmdId(betterproto.Enum):
    CMD_ID = 382


class MpReportPlayerRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_TEAM = 2
    ALREADY_REPORT = 3


class MpResetSkillPointReqCmdId(betterproto.Enum):
    CMD_ID = 344


class MpResetSkillPointRspCmdId(betterproto.Enum):
    CMD_ID = 345


class MpResetSkillPointRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    COIN_NOT_ENOUGH = 2


class MpSetExtraSkillReqCmdId(betterproto.Enum):
    CMD_ID = 1644


class MpSetExtraSkillRspCmdId(betterproto.Enum):
    CMD_ID = 1645


class MpSetExtraSkillRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_TEAM = 2


class MpStageGetVoteInfoReqCmdId(betterproto.Enum):
    CMD_ID = 1036


class MpStageGetVoteInfoRspCmdId(betterproto.Enum):
    CMD_ID = 1037


class MpStageGetVoteInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_TEAM = 2
    NOT_IN_VOTING = 3


class MpStageMemberVoteNotifyCmdId(betterproto.Enum):
    CMD_ID = 1038


class MpStageSettleNotifyCmdId(betterproto.Enum):
    CMD_ID = 391


class MpStageVoteCountDownNotifyCmdId(betterproto.Enum):
    CMD_ID = 1029


class MpStageVoteReqCmdId(betterproto.Enum):
    CMD_ID = 1030


class MpStageVoteResultNotifyCmdId(betterproto.Enum):
    CMD_ID = 1032


class MpStageVoteRspCmdId(betterproto.Enum):
    CMD_ID = 1031


class MpStageVoteRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_TEAM = 2
    NOT_VOTING = 3


class MpSyncActionFromPlayerNotifyCmdId(betterproto.Enum):
    CMD_ID = 1579


class MpSyncActionFromServerNotifyCmdId(betterproto.Enum):
    CMD_ID = 1580


class MpTeamChangeLeaderReqCmdId(betterproto.Enum):
    CMD_ID = 362


class MpTeamChangeLeaderRspCmdId(betterproto.Enum):
    CMD_ID = 363


class MpTeamChangeLeaderRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_TEAM = 2
    NOT_LEADER = 3
    NOT_ENOUGH_STAMINA = 4
    NOT_ENOUGH_ENTER_TIMES = 5
    NOT_ALLOW_CHANGE_LEADER = 6


class MpTeamEnterLobbyReqCmdId(betterproto.Enum):
    CMD_ID = 356


class MpTeamEnterLobbyRspCmdId(betterproto.Enum):
    CMD_ID = 357


class MpTeamEnterLobbyRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_TEAM = 2
    MEMBER_EXCEED_MAX = 3
    MEMBER_OFFLINE = 4
    IN_ENTER_LOBBY = 5
    ENTER_TIME_OUT = 6
    STAGE_ERROR = 7
    NOT_LEADER = 8
    MEMBER_NOT_ENTER_TEAM_UI = 9
    NO_AVAILABLE_AVATAR = 10
    TEAM_NOT_SATIFY_RAID = 11
    NOT_ALLOW_CROSS_REGION = 12
    TEAM_NAME_ERROR = 13
    DEFAULT_TEAM_NAME_ERROR = 14


class MpTeamLeaveLobbyReqCmdId(betterproto.Enum):
    CMD_ID = 373


class MpTeamLeaveLobbyRspCmdId(betterproto.Enum):
    CMD_ID = 374


class MpTeamLeaveLobbyRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_LEADER = 2
    NOT_IN_TEAM = 3
    NOT_IN_LOBBY = 4
    LEADER_IS_WILD = 5


class MpTeamMemberSetVoiceIdReqCmdId(betterproto.Enum):
    CMD_ID = 396


class MpTeamMemberSetVoiceIdRspCmdId(betterproto.Enum):
    CMD_ID = 397


class MpTeamMemberSetVoiceIdRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_TEAM = 2


class MpTeamSyncNotifyCmdId(betterproto.Enum):
    CMD_ID = 395


class MpUpgradeSkillReqCmdId(betterproto.Enum):
    CMD_ID = 342


class MpUpgradeSkillRspCmdId(betterproto.Enum):
    CMD_ID = 343


class MpUpgradeSkillRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    POINT_NOT_ENOUGH = 2
    IS_MAX_LEVEL = 3


class NewbieLevelRushPurchaseReqCmdId(betterproto.Enum):
    CMD_ID = 5881


class NewbieLevelRushPurchaseRspCmdId(betterproto.Enum):
    CMD_ID = 5882


class NewbieLevelRushPurchaseRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    PURCHASED = 2
    MCOIN_LACK = 3


class NewbieLevelRushTakeRewardReqCmdId(betterproto.Enum):
    CMD_ID = 5883


class NewbieLevelRushTakeRewardRspCmdId(betterproto.Enum):
    CMD_ID = 5884


class NewbieLevelRushTakeRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class NewClientMailNotifyCmdId(betterproto.Enum):
    CMD_ID = 3808


class NicknameModifyReqCmdId(betterproto.Enum):
    CMD_ID = 20


class NicknameModifyRspCmdId(betterproto.Enum):
    CMD_ID = 21


class NicknameModifyRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    FORMAT_ERROR = 2
    SENSITIVE_WORDS = 3
    IN_AUDIT = 4
    IN_CD = 5


class NinjaActivityNotifyCmdId(betterproto.Enum):
    CMD_ID = 4404


class NinjaSlotChooseEffectReqCmdId(betterproto.Enum):
    CMD_ID = 4405


class NinjaSlotChooseEffectRspCmdId(betterproto.Enum):
    CMD_ID = 4406


class NinjaSlotChooseEffectRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LOCKED = 2


class NinjaSlotStrengthenReqCmdId(betterproto.Enum):
    CMD_ID = 4402


class NinjaSlotStrengthenRspCmdId(betterproto.Enum):
    CMD_ID = 4403


class NinjaSlotStrengthenRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_NOT_ENOUGH = 2
    LOCKED = 3
    NOT_OPEN = 4
    LEVEL_MAX = 5


class OpenArmadaStageReqCmdId(betterproto.Enum):
    CMD_ID = 2799


class OpenArmadaStageRspCmdId(betterproto.Enum):
    CMD_ID = 2800


class OpenArmadaStageRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    NOT_LEADER = 3
    TIME_LIMIT = 4
    BOSS_NOT_FOUND = 5
    LEVEL_LOCK = 6
    POPL_LACK = 7
    HAS_OPEN = 8
    NOT_FINISH = 9


class OpenChatworldTreasureReqCmdId(betterproto.Enum):
    CMD_ID = 2417


class OpenChatworldTreasureRspCmdId(betterproto.Enum):
    CMD_ID = 2418


class OpenChatworldTreasureRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    OPEN_NUM_LIMIT = 2
    MATERIAL_LACK = 3
    HAS_OPEN = 4
    HAS_TAKEN = 5
    TREASURE_EXPIRE = 6
    NOT_IN_CHATWORLD = 7


class OpenWeekDayActivityReqCmdId(betterproto.Enum):
    CMD_ID = 534


class OpenWeekDayActivityRspCmdId(betterproto.Enum):
    CMD_ID = 535


class OpenWeekDayActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    IS_OPEN = 2
    HAS_OPEN = 3
    VALID_OPEN = 4
    MATERIAL_LACK = 5
    SCOIN_LACK = 6


class OpenworldEndlessBattleBeginReqCmdId(betterproto.Enum):
    CMD_ID = 3438


class OpenworldEndlessBattleBeginRspCmdId(betterproto.Enum):
    CMD_ID = 3439


class OpenworldEndlessBattleBeginRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class OpenworldEndlessBattleEndReqCmdId(betterproto.Enum):
    CMD_ID = 3440


class OpenworldEndlessBattleEndRspCmdId(betterproto.Enum):
    CMD_ID = 3441


class OpenworldEndlessBattleEndRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class OpenworldEndlessChangeAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 3450


class OpenworldEndlessChangeAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 3451


class OpenworldEndlessChangeAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_ERROR = 2
    STAGE_ERROR = 3


class OpenworldEndlessItemUpdateNotifyCmdId(betterproto.Enum):
    CMD_ID = 3421


class OpenworldEndlessPlayerUpdateNotifyCmdId(betterproto.Enum):
    CMD_ID = 3445


class OpenworldEndlessWarInfoType(betterproto.Enum):
    NONE = 0
    SET_TRAP = 1
    TRIGGER_TRAP = 2
    SCENE_GEAR = 3
    INVASION = 4
    INVASION_SUB_SCORE = 5
    FINISH_INVASION = 6


class OpenworldEndlessWarInfoNotifyCmdId(betterproto.Enum):
    CMD_ID = 3442


class OptionalBuffActivityChooseBuffReqCmdId(betterproto.Enum):
    CMD_ID = 4050


class OptionalBuffActivityChooseBuffRspCmdId(betterproto.Enum):
    CMD_ID = 4051


class OptionalBuffActivityChooseBuffRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    INVALID_BUFF = 2
    BUFF_LOCKED = 3


class OverlapActivityMoveReqCmdId(betterproto.Enum):
    CMD_ID = 4221


class OverlapActivityMoveRspCmdId(betterproto.Enum):
    CMD_ID = 4222


class OverlapActivityMoveRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class OverlapActivitySummonReqCmdId(betterproto.Enum):
    CMD_ID = 4219


class OverlapActivitySummonRspCmdId(betterproto.Enum):
    CMD_ID = 4220


class OverlapActivitySummonRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_NOT_ENOUGH = 2
    NOT_OPEN = 3
    FULL = 4


class PhonePendantOpReqCmdId(betterproto.Enum):
    CMD_ID = 1199


class PhonePendantOpRspCmdId(betterproto.Enum):
    CMD_ID = 1200


class PhonePendantOpRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_OWN = 2
    EXPIRED = 3
    OFF_ID_ERROR = 4


class PictureActivityChooseReqCmdId(betterproto.Enum):
    CMD_ID = 4268


class PictureActivityChooseRspCmdId(betterproto.Enum):
    CMD_ID = 4269


class PictureActivityChooseRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    HAS_CHOOSE = 3
    SCORE_LACK = 4
    PRE_NOT_CHOOSE = 5


class PictureActivityShareReqCmdId(betterproto.Enum):
    CMD_ID = 4270


class PictureActivityShareRspCmdId(betterproto.Enum):
    CMD_ID = 4271


class PictureActivityShareRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    HAS_TAKE = 3
    NOT_SHARE = 4
    NOT_FINISH = 5


class PlayerCardDataChangeNotifyCmdId(betterproto.Enum):
    CMD_ID = 492


class PlayerLevelUpNotifyCmdId(betterproto.Enum):
    CMD_ID = 976


class PlayerLoginReqCmdId(betterproto.Enum):
    CMD_ID = 6


class PlayerLoginRspCmdId(betterproto.Enum):
    CMD_ID = 7


class PlayerLoginRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    REPEAT_LOGIN = 2
    IN_BLACK_LIST = 3
    WAIT_STOP_ANOTHER_LOGIN = 4
    ANTI_ADDICT_LOGIN = 5
    SQUEEZE_CD = 6


class PlayerLogoutReqCmdId(betterproto.Enum):
    CMD_ID = 8


class PostWareHouseDemandReqCmdId(betterproto.Enum):
    CMD_ID = 2649


class PostWareHouseDemandRspCmdId(betterproto.Enum):
    CMD_ID = 2650


class PostWareHouseDemandRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    STATUS_ERROR = 3
    SCOIN_LACK = 4
    ITEM_LACK = 5
    LEVEL_LACK = 6
    NOT_VALID = 7


class PromoteStigmataRuneReqCmdId(betterproto.Enum):
    CMD_ID = 332


class PromoteStigmataRuneRspCmdId(betterproto.Enum):
    CMD_ID = 333


class PromoteStigmataRuneRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    STIGMATA_NOT_EXIST = 2
    MATERIAL_LACK = 3
    STIGMATA_NOT_IDENTIFY = 4
    CAN_NOT_PROMOTE = 5
    TIMES_LIMIT = 6
    LEVEL_LACK = 7
    TOO_MANY_WAIT_RUNE = 8


class PublishGratuityStageReqCmdId(betterproto.Enum):
    CMD_ID = 4114


class PublishGratuityStageRspCmdId(betterproto.Enum):
    CMD_ID = 4115


class PublishGratuityStageRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_ACCEPTOR = 2


class PushClientMsgNotifyCmdId(betterproto.Enum):
    CMD_ID = 801


class PushTowerActivityTakeClearRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4011


class PushTowerActivityTakeClearRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4012


class PushTowerActivityTakeClearRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKE_CAMPAIGN_REWARD = 2


class PushTowerActivityTakeStageRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4009


class PushTowerActivityTakeStageRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4010


class PushTowerActivityTakeStageRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class PvzBattleBeginReqCmdId(betterproto.Enum):
    CMD_ID = 6552


class PvzBattleBeginRspCmdId(betterproto.Enum):
    CMD_ID = 6553


class PvzBattleBeginRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    QAVATAR_ERROR = 2
    INVALID_TILE = 3
    RPG_SITE_CANNOT_ENTER = 4
    LACK_TICKET = 5
    TILE_SITE_MISMATCH = 6


class PvzBattleEndReqCmdId(betterproto.Enum):
    CMD_ID = 6554


class PvzBattleEndRspCmdId(betterproto.Enum):
    CMD_ID = 6555


class PvzBattleEndRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    BATTLE_MISMATCH = 2
    INVALID_TILE = 3
    RPG_SITE_CANNOT_ENTER = 4
    LACK_TICKET = 5
    TILE_SITE_MISMATCH = 6
    END_STATUS_INVALID = 7


class PvzGetActivityReqCmdId(betterproto.Enum):
    CMD_ID = 6550


class PvzGetActivityRspCmdId(betterproto.Enum):
    CMD_ID = 6551


class PvzGetActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class PvzQAvatarLevelUpReqCmdId(betterproto.Enum):
    CMD_ID = 6556


class PvzQAvatarLevelUpRspCmdId(betterproto.Enum):
    CMD_ID = 6557


class PvzQAvatarLevelUpRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_LACK = 2
    TARGET_LEVEL_ERROR = 3
    QAVATAR_NOT_FOUND = 4


class QAvatarBattleBeginNotifyCmdId(betterproto.Enum):
    CMD_ID = 5550


class QAvatarBattleComponentOpNotifyCmdId(betterproto.Enum):
    CMD_ID = 5611


class QAvatarBattleComponentOpNotifyComponentOpType(betterproto.Enum):
    COMPONENT_OP_NONE = 0
    COMPONENT_OP_ADD = 1
    COMPONENT_OP_DEL = 2


class QAvatarBattleDataNotifyCmdId(betterproto.Enum):
    CMD_ID = 5600


class QAvatarBattleDiscardStigmataReqCmdId(betterproto.Enum):
    CMD_ID = 5612


class QAvatarBattleDiscardStigmataRspCmdId(betterproto.Enum):
    CMD_ID = 5613


class QAvatarBattleDiscardStigmataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class QAvatarBattleEndBattleNotifyCmdId(betterproto.Enum):
    CMD_ID = 5630


class QAvatarBattleEndSkillNotifyCmdId(betterproto.Enum):
    CMD_ID = 5609


class QAvatarBattleEndSkillReqCmdId(betterproto.Enum):
    CMD_ID = 5607


class QAvatarBattleEndSkillRspCmdId(betterproto.Enum):
    CMD_ID = 5608


class QAvatarBattleEndSkillRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class QAvatarBattleEnterBattleReqCmdId(betterproto.Enum):
    CMD_ID = 5601


class QAvatarBattleEnterBattleRspCmdId(betterproto.Enum):
    CMD_ID = 5602


class QAvatarBattleEnterBattleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    BATTLE_NOT_EXIST = 2


class QAvatarBattleGetDataNotifyCmdId(betterproto.Enum):
    CMD_ID = 5614


class QAvatarBattleGetLobbyInfoReqCmdId(betterproto.Enum):
    CMD_ID = 5552


class QAvatarBattleGetLobbyInfoRspCmdId(betterproto.Enum):
    CMD_ID = 5553


class QAvatarBattleGetLobbyInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_EXIST = 2


class QAvatarBattleKillNotifyCmdId(betterproto.Enum):
    CMD_ID = 5621


class QAvatarBattleMoveNotifyCmdId(betterproto.Enum):
    CMD_ID = 5603


class QAvatarBattleRefreshGadgetForecastNotifyCmdId(betterproto.Enum):
    CMD_ID = 5622


class QAvatarBattleRefreshGadgetGenerateNotifyCmdId(betterproto.Enum):
    CMD_ID = 5623


class QAvatarBattleSettleNotifyCmdId(betterproto.Enum):
    CMD_ID = 5551


class QAvatarBattleSkillTriggerNotifyCmdId(betterproto.Enum):
    CMD_ID = 5610


class QAvatarBattleStartSkillNotifyCmdId(betterproto.Enum):
    CMD_ID = 5606


class QAvatarBattleStartSkillReqCmdId(betterproto.Enum):
    CMD_ID = 5604


class QAvatarBattleStartSkillRspCmdId(betterproto.Enum):
    CMD_ID = 5605


class QAvatarBattleStartSkillRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SKILL_CD = 2
    BULLET_LACK = 3
    RELOAD_TO_MAX = 4
    CHARGE_LACK = 5
    SP_LACK = 6


class QCandyBattleArriveReqCmdId(betterproto.Enum):
    CMD_ID = 6583


class QCandyBattleArriveRspCmdId(betterproto.Enum):
    CMD_ID = 6584


class QCandyBattleArriveRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SETTLE_FAILED = 2


class QCandyBattleAvatarLifeTimesChangeNotifyCmdId(betterproto.Enum):
    CMD_ID = 6582


class QCandyBattleAvatarStateClientNotifyCmdId(betterproto.Enum):
    CMD_ID = 6588


class QCandyBattleAvatarStateServerNotifyCmdId(betterproto.Enum):
    CMD_ID = 6589


class QCandyBattleBeginNotifyCmdId(betterproto.Enum):
    CMD_ID = 6603


class QCandyBattleChooseAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 6604


class QCandyBattleChooseAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 6605


class QCandyBattleChooseAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    OLD_AVATAR_MISMATCH = 2
    NEW_AVATAR_LOCKED = 3
    IN_MATCH_STATUS = 4
    IN_READY_STATUS = 5


class QCandyBattleCreateEntityReqCmdId(betterproto.Enum):
    CMD_ID = 6576


class QCandyBattleCreateEntityRspCmdId(betterproto.Enum):
    CMD_ID = 6577


class QCandyBattleCreateEntityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class QCandyBattleDataNotifyCmdId(betterproto.Enum):
    CMD_ID = 6572


class QCandyBattleDeleteEntityReqCmdId(betterproto.Enum):
    CMD_ID = 6578


class QCandyBattleDeleteEntityRspCmdId(betterproto.Enum):
    CMD_ID = 6579


class QCandyBattleDeleteEntityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ENTITY_NOT_EXIST = 2
    ENTITY_CANNOT_DELETE = 3


class QCandyBattleEndNotifyCmdId(betterproto.Enum):
    CMD_ID = 6573


class QCandyBattleEnterBattleReqCmdId(betterproto.Enum):
    CMD_ID = 6570


class QCandyBattleEnterBattleRspCmdId(betterproto.Enum):
    CMD_ID = 6571


class QCandyBattleEnterBattleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    BATTLE_NOT_EXIST = 2


class QCandyBattleFinishBattleNotifyCmdId(betterproto.Enum):
    CMD_ID = 6591


class QCandyBattleGetActivityReqCmdId(betterproto.Enum):
    CMD_ID = 6601


class QCandyBattleGetActivityRspCmdId(betterproto.Enum):
    CMD_ID = 6602


class QCandyBattleGetActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class QCandyBattleLeaveBattleNotifyCmdId(betterproto.Enum):
    CMD_ID = 6594


class QCandyBattleLeaveBattleReqCmdId(betterproto.Enum):
    CMD_ID = 6592


class QCandyBattleLeaveBattleRspCmdId(betterproto.Enum):
    CMD_ID = 6593


class QCandyBattleLeaveBattleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class QCandyBattleMoveNotifyCmdId(betterproto.Enum):
    CMD_ID = 6574


class QCandyBattleSettleBattleNotifyCmdId(betterproto.Enum):
    CMD_ID = 6608


class QCandyBattleSkillEndNotifyCmdId(betterproto.Enum):
    CMD_ID = 6590


class QCandyBattleTriggerEntityReqCmdId(betterproto.Enum):
    CMD_ID = 6580


class QCandyBattleTriggerEntityRspCmdId(betterproto.Enum):
    CMD_ID = 6581


class QCandyBattleTriggerEntityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ENTITY_NOT_EXIST = 2
    STATE_ERROR = 3


class QCandyBattleUnlockAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 6606


class QCandyBattleUnlockAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 6607


class QCandyBattleUnlockAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_LACK = 2
    RANK_SCORE_LACK = 3


class QCandyBattleUseSkillNotifyCmdId(betterproto.Enum):
    CMD_ID = 6587


class QCandyBattleUseSkillReqCmdId(betterproto.Enum):
    CMD_ID = 6585


class QCandyBattleUseSkillRspCmdId(betterproto.Enum):
    CMD_ID = 6586


class QCandyBattleUseSkillRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SKILL_INVALID = 2
    SKILL_IN_CD = 3
    SKILL_ALL_USED = 4


class QuickApplyJoinArmadaReqCmdId(betterproto.Enum):
    CMD_ID = 2732


class QuickApplyJoinArmadaRspCmdId(betterproto.Enum):
    CMD_ID = 2733


class QuickApplyJoinArmadaRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LACK = 2
    ALREADY_IN_ARMADA = 3
    NO_QUICK_APPLY_ARMADA = 4
    IN_CD_TIME = 5
    IN_LOW_POPL_CD_TIME = 6
    FEATURE_CLOSED = 7


class QuitArmadaReqCmdId(betterproto.Enum):
    CMD_ID = 2627


class QuitArmadaRspCmdId(betterproto.Enum):
    CMD_ID = 2628


class QuitArmadaRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 3
    IS_LEADER = 4


class RanchAssignMonsterReqCmdId(betterproto.Enum):
    CMD_ID = 5839


class RanchAssignMonsterRspCmdId(betterproto.Enum):
    CMD_ID = 5840


class RanchAssignMonsterRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MONSTER_NOT_EXIST = 2
    UNIQUE_ID_REPEATED = 3
    AREA_NOT_EXIST = 4
    MONSTER_ALREADY_ASSIGNED = 5
    SLOT_NOT_ENOUGH = 6


class RanchDelMonsterNotifyCmdId(betterproto.Enum):
    CMD_ID = 5848


class RanchFireMonsterReqCmdId(betterproto.Enum):
    CMD_ID = 5841


class RanchFireMonsterRspCmdId(betterproto.Enum):
    CMD_ID = 5842


class RanchFireMonsterRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MONSTER_NOT_EXIST = 2
    UNIQUE_ID_REPEATED = 3
    AREA_NOT_EXIST = 4
    MONSTER_NOT_ASSIGNED = 5


class RanchFreeMonsterReqCmdId(betterproto.Enum):
    CMD_ID = 5837


class RanchFreeMonsterRspCmdId(betterproto.Enum):
    CMD_ID = 5838


class RanchFreeMonsterRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MONSTER_NOT_EXIST = 2
    UNIQUE_ID_REPEATED = 3
    MONSTER_ALREADY_ASSIGNED = 4


class RanchGetActivityReqCmdId(betterproto.Enum):
    CMD_ID = 5833


class RanchGetActivityRspCmdId(betterproto.Enum):
    CMD_ID = 5834


class RanchGetActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class RanchGetMonsterWikiReqCmdId(betterproto.Enum):
    CMD_ID = 5845


class RanchGetMonsterWikiRspCmdId(betterproto.Enum):
    CMD_ID = 5846


class RanchGetMonsterWikiRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class RanchLockMonsterSkillReqCmdId(betterproto.Enum):
    CMD_ID = 5849


class RanchLockMonsterSkillRspCmdId(betterproto.Enum):
    CMD_ID = 5850


class RanchLockMonsterSkillRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MONSTER_NOT_EXIST = 2
    LOCK_NUM_LIMIT = 3


class RanchSetBattleMonsterReqCmdId(betterproto.Enum):
    CMD_ID = 5851


class RanchSetBattleMonsterRspCmdId(betterproto.Enum):
    CMD_ID = 5852


class RanchSetBattleMonsterRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MONSTER_NOT_EXIST = 2


class RanchSyncMonsterNotifyCmdId(betterproto.Enum):
    CMD_ID = 5847


class RanchSynthesisMonsterReqCmdId(betterproto.Enum):
    CMD_ID = 5835


class RanchSynthesisMonsterRspCmdId(betterproto.Enum):
    CMD_ID = 5836


class RanchSynthesisMonsterRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MONSTER_NOT_EXIST = 2
    UNIQUE_ID_REPEATED = 3
    MONSTER_ALREADY_ASSIGNED = 4
    MATERIAL_LACK = 5
    MONSTER_NOT_MATCH = 6


class RanchTakeProductReqCmdId(betterproto.Enum):
    CMD_ID = 5843


class RanchTakeProductRspCmdId(betterproto.Enum):
    CMD_ID = 5844


class RanchTakeProductRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MONSTER_NUM_OVERFLOW = 2


class RecallMasterPupilApplicationReqCmdId(betterproto.Enum):
    CMD_ID = 970


class RecallMasterPupilApplicationRspCmdId(betterproto.Enum):
    CMD_ID = 971


class RechargeFinishNotifyCmdId(betterproto.Enum):
    CMD_ID = 83


class RechargeFinishNotifyRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ORDER_REPEAT = 2
    ITUNES_RECEIPT_ERROR = 3
    DUPLICATE_FAIL = 4


class ReclaimGachaReqCmdId(betterproto.Enum):
    CMD_ID = 1177


class ReclaimGachaRspCmdId(betterproto.Enum):
    CMD_ID = 1178


class ReclaimGachaRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    WAIT_CHOOSE = 2
    MATERIAL_LACK = 3


class RecoverChatCreditNotifyCmdId(betterproto.Enum):
    CMD_ID = 1162


class RecvArmadaSystemChatMsgNotifyCmdId(betterproto.Enum):
    CMD_ID = 2662


class RecvChatMsgNotifyCmdId(betterproto.Enum):
    CMD_ID = 2235


class RecvCommonChatworldMsgNotifyCmdId(betterproto.Enum):
    CMD_ID = 2405


class RecvOfflinePrivateChatMsgNotifyCmdId(betterproto.Enum):
    CMD_ID = 2236


class RecvPlayerCardMsgNotifyCmdId(betterproto.Enum):
    CMD_ID = 487


class RecvRoomChatMsgNotifyCmdId(betterproto.Enum):
    CMD_ID = 3164


class RefineStigmataRuneReqCmdId(betterproto.Enum):
    CMD_ID = 193


class RefineStigmataRuneRspCmdId(betterproto.Enum):
    CMD_ID = 194


class RefineStigmataRuneRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    STIGMATA_NOT_EXIST = 2
    STIGMATA_NOT_IDENTIFY = 3
    STIGMATA_CAN_NOT_REFINE = 4
    STIGMATA_WAIT_RUNE_EXIST = 5
    CONSUME_ITEM_NOT_EXIST = 6
    CONSUME_ITEM_IN_USE = 7
    CONSUME_ITEM_REPEAT = 8
    CONSUME_ITEM_UN_NECESSARY = 9
    CONSUME_ITEM_LACK = 10
    ITEM_IN_CONSUME_ITEM_LIST = 11
    CONSUME_ITEM_PROTECTED = 12
    COST_GACHA_TICKET = 13
    COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 14
    COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 15
    LEVEL_LACK = 16
    CONSUME_ITEM_IN_FACILITY = 17
    CONSUME_ITEM_GRAND_KEY = 18
    SLOT_LACK = 19
    TRIGGER_MATERIAL_LACK = 20
    LOCK_INDEX_ERROR = 21
    CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 22
    NOT_OPEN = 23
    TOO_MANY_WAIT_RUNE = 24


class ReforgeEquipmentReqCmdId(betterproto.Enum):
    CMD_ID = 3657


class ReforgeEquipmentRspCmdId(betterproto.Enum):
    CMD_ID = 3658


class ReforgeEquipmentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    JUST_SUPPORT_WEAPON = 2
    CONSUME_ITEM_NOT_EXIST = 3
    CONSUME_ITEM_IN_USE = 4
    CONSUME_ITEM_PROTECTED = 5
    COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 6
    COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 7
    EQUIPMENT_NOT_EXTRACTED = 8
    ACTIVITY_NOT_OPEN = 9
    EQUIPMENT_NOT_OPEN = 10
    TIMES_LACK = 11
    CONSUME_ITEM_IN_FACILITY = 12
    TARGET_NOT_FITTED = 13
    CONSUME_ITEM_GRAND_KEY = 14
    CONSUME_ITEM_REPEAT = 15
    COST_GACHA_TICKET = 16
    CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 17


class RefreshAndSyncMissionNotifyCmdId(betterproto.Enum):
    CMD_ID = 1473


class RefreshDlcTalentAffixReqCmdId(betterproto.Enum):
    CMD_ID = 3580


class RefreshDlcTalentAffixRspCmdId(betterproto.Enum):
    CMD_ID = 3581


class RefreshDlcTalentAffixRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_ERROR = 2
    NOT_REFRESHABLE_TALENT = 3
    MATERIAL_LACK = 4
    WAIT_SELECT_AFFIX_SET_NOT_EMPTY = 5


class RefreshScDlcDailyQuestReqCmdId(betterproto.Enum):
    CMD_ID = 6318


class RefreshScDlcDailyQuestRspCmdId(betterproto.Enum):
    CMD_ID = 6319


class RefreshScDlcDailyQuestRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_LACK = 2


class RejectGratuityStageReqCmdId(betterproto.Enum):
    CMD_ID = 4118


class RejectGratuityStageRspCmdId(betterproto.Enum):
    CMD_ID = 4119


class RejectGratuityStageRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class RelationActivityDataNotifyCmdId(betterproto.Enum):
    CMD_ID = 1373


class ReleaseArmadaBuildOwnershipReqCmdId(betterproto.Enum):
    CMD_ID = 2687


class ReleaseArmadaBuildOwnershipRspCmdId(betterproto.Enum):
    CMD_ID = 2688


class ReleaseArmadaBuildOwnershipRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_GRANTED = 2
    NOT_IN_ARMADA = 3


class ReplayBeginReqCmdId(betterproto.Enum):
    CMD_ID = 5400


class ReplayBeginRspCmdId(betterproto.Enum):
    CMD_ID = 5401


class ReplayBeginRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ReplayEndReqCmdId(betterproto.Enum):
    CMD_ID = 5402


class ReplayEndRspCmdId(betterproto.Enum):
    CMD_ID = 5403


class ReplayEndRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ReplayFrameEndNotifyCmdId(betterproto.Enum):
    CMD_ID = 5409


class ReplayFrameNotifyCmdId(betterproto.Enum):
    CMD_ID = 5408


class ReplayGetFileTokenReqCmdId(betterproto.Enum):
    CMD_ID = 5410


class ReplayGetFileTokenRspCmdId(betterproto.Enum):
    CMD_ID = 5411


class ReplayGetFileTokenRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LIMIT = 2
    INVALID_PARAM = 3
    HAS_UPLOAD = 4
    HAS_DELETE = 5
    DAILY_LIMIT = 6


class ReplayGetRecommendBriefReqCmdId(betterproto.Enum):
    CMD_ID = 5418


class ReplayGetRecommendBriefRspCmdId(betterproto.Enum):
    CMD_ID = 5419


class ReplayGetRecommendBriefRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ReplayGetRecommendListReqCmdId(betterproto.Enum):
    CMD_ID = 5416


class ReplayGetRecommendListRspCmdId(betterproto.Enum):
    CMD_ID = 5417


class ReplayGetRecommendListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ReplayGetUploadListReqCmdId(betterproto.Enum):
    CMD_ID = 5414


class ReplayGetUploadListRspCmdId(betterproto.Enum):
    CMD_ID = 5415


class ReplayGetUploadListRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ReplayReportFileResultReqCmdId(betterproto.Enum):
    CMD_ID = 5412


class ReplayReportFileResultRspCmdId(betterproto.Enum):
    CMD_ID = 5413


class ReplayReportFileResultRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_MATCH = 2


class ReportBirthdayReqCmdId(betterproto.Enum):
    CMD_ID = 299


class ReportBirthdayRspCmdId(betterproto.Enum):
    CMD_ID = 300


class ReportBirthdayRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACCOUNT_ERROR = 2
    INVALID_BIRTHDAY = 3


class ReportChapterActivityStageReqCmdId(betterproto.Enum):
    CMD_ID = 4390


class ReportChapterActivityStageRspCmdId(betterproto.Enum):
    CMD_ID = 4391


class ReportChapterActivityStageRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 2
    STAGE_NOT_EXIST = 3


class ReportClickRechargeButtonNotifyCmdId(betterproto.Enum):
    CMD_ID = 661


class ReportClientDataVersionReqCmdId(betterproto.Enum):
    CMD_ID = 398


class ReportClientDataVersionRspCmdId(betterproto.Enum):
    CMD_ID = 399


class ReportDlcDropItemReqCmdId(betterproto.Enum):
    CMD_ID = 3590


class ReportDlcDropItemRspCmdId(betterproto.Enum):
    CMD_ID = 3591


class ReportDlcDropItemRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ReportOpenworldEndlessDataReqCmdId(betterproto.Enum):
    CMD_ID = 3434


class ReportOpenworldEndlessDataRspCmdId(betterproto.Enum):
    CMD_ID = 3435


class ReportOpenworldEndlessDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ReportReplayFrameReqCmdId(betterproto.Enum):
    CMD_ID = 5404


class ReportReplayFrameRspCmdId(betterproto.Enum):
    CMD_ID = 5405


class ReportReplayFrameRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ReportRpgTaleStageReqCmdId(betterproto.Enum):
    CMD_ID = 2374


class ReportRpgTaleStageRspCmdId(betterproto.Enum):
    CMD_ID = 2375


class ReportRpgTaleStageRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ReportTvtBattleStageMessageNotifyCmdId(betterproto.Enum):
    CMD_ID = 3355


class RequestLogoffReqCmdId(betterproto.Enum):
    CMD_ID = 1670


class RequestLogoffRspCmdId(betterproto.Enum):
    CMD_ID = 1671


class RequestLogoffRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ResetAdventureQuestReqCmdId(betterproto.Enum):
    CMD_ID = 3924


class ResetAdventureQuestRspCmdId(betterproto.Enum):
    CMD_ID = 3925


class ResetAdventureQuestRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_QUEST = 2
    NO_TIMES = 3
    HAS_FINISHED = 4
    HAS_SELECTED = 5


class ResetAvatarMissionAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 3008


class ResetAvatarMissionAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 3009


class ResetAvatarMissionAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    CAN_NOT_RESET = 3
    NOT_CHOOSE = 4


class ResetChapterActivityExclusiveStageReqCmdId(betterproto.Enum):
    CMD_ID = 4386


class ResetChapterActivityExclusiveStageRspCmdId(betterproto.Enum):
    CMD_ID = 4387


class ResetChapterActivityExclusiveStageRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    GROUP_NOT_EXIST = 2
    STAGE_NOT_EXIST = 3
    ACTIVITY_NOT_OPEN = 4


class ResetChapterActivityTalentReqCmdId(betterproto.Enum):
    CMD_ID = 4388


class ResetChapterActivityTalentRspCmdId(betterproto.Enum):
    CMD_ID = 4389


class ResetChapterActivityTalentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 2
    NOT_ALLOWED = 3


class ResetConsignedOrderReqCmdId(betterproto.Enum):
    CMD_ID = 2645


class ResetConsignedOrderRspCmdId(betterproto.Enum):
    CMD_ID = 2646


class ResetConsignedOrderRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    IN_CD_TIME = 3


class ResetDlcTowerProgressReqCmdId(betterproto.Enum):
    CMD_ID = 3576


class ResetDlcTowerProgressRspCmdId(betterproto.Enum):
    CMD_ID = 3577


class ResetDlcTowerProgressRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class ResetExtraStoryChallengeModeReqCmdId(betterproto.Enum):
    CMD_ID = 504


class ResetExtraStoryChallengeModeRspCmdId(betterproto.Enum):
    CMD_ID = 505


class ResetExtraStoryChallengeModeRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TIME_LIMIT = 2
    EXTRA_STORY_NOT_OPEN = 3
    RESET_TIMES_LACK = 4
    DIFFICULTY_NOT_OPEN = 5
    LEVEL_LIMIT = 6


class ResetRogueStageReqCmdId(betterproto.Enum):
    CMD_ID = 279


class ResetRogueStageRspCmdId(betterproto.Enum):
    CMD_ID = 280


class ResetRogueStageRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_JOIN_ARMADA = 2
    NOT_INIT = 3
    RESET_TIMES_LACK = 4
    NOT_OPEN = 5


class ResetScratchTicketPlateReqCmdId(betterproto.Enum):
    CMD_ID = 4154


class ResetScratchTicketPlateRspCmdId(betterproto.Enum):
    CMD_ID = 4155


class ResetScratchTicketPlateRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 2
    TIMES_LIMIT = 3
    MATERIAL_LACK = 4
    CORE_PLATE = 5
    ACTIVITY_LIMIT = 6


class ResetSecurityPasswordReqCmdId(betterproto.Enum):
    CMD_ID = 5031


class ResetSecurityPasswordRspCmdId(betterproto.Enum):
    CMD_ID = 5032


class ResetSecurityPasswordRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    IS_ALREADY_RESETTING = 2


class ResetStageEnterTimesReqCmdId(betterproto.Enum):
    CMD_ID = 108


class ResetStageEnterTimesRspCmdId(betterproto.Enum):
    CMD_ID = 109


class ResetStageEnterTimesRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HCOIN_LACK = 2
    TIMES_LACK = 3
    NOT_NEED_RESET = 4
    STAGE_ID_ERROR = 5
    MATERIAL_LACK = 6


class ResetStigmataTitleReqCmdId(betterproto.Enum):
    CMD_ID = 330


class ResetStigmataTitleRspCmdId(betterproto.Enum):
    CMD_ID = 331


class ResetStigmataTitleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    STIGMATA_NOT_EXIST = 2
    MATERIAL_LACK = 3
    SCOIN_LACK = 4
    LEVEL_LACK = 5


class ReunionCookGetActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4380


class ReunionCookGetActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4381


class ReunionCookGetActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class ReunionCookMakeDinnerReqCmdId(betterproto.Enum):
    CMD_ID = 4382


class ReunionCookMakeDinnerRspCmdId(betterproto.Enum):
    CMD_ID = 4383


class ReunionCookMakeDinnerRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    INVALID_BOOK_ID = 3
    INVALID_MATERIAL = 4
    MATERIAL_LACK = 5
    TIMES_LIMIT = 6
    DUPLICATE_BOOK_ID = 7


class ReunionCookTakeScoreRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4384


class ReunionCookTakeScoreRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4385


class ReunionCookTakeScoreRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class RogueBuffType(betterproto.Enum):
    NORMAL = 1
    SUPPORT_AVATAR = 2


class RogueStageBeginReqCmdId(betterproto.Enum):
    CMD_ID = 281


class RogueStageBeginRspCmdId(betterproto.Enum):
    CMD_ID = 282


class RogueStageBeginRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_JOIN_ARMADA = 2
    NOT_INIT = 3
    ITEM_LACK = 4
    AVATAR_DIE = 5
    AVATAR_ERROR = 6
    PROGRESS_FULL = 7
    NOT_OPEN = 8


class RogueStageEndReqCmdId(betterproto.Enum):
    CMD_ID = 283


class RogueStageEndRspCmdId(betterproto.Enum):
    CMD_ID = 284


class RogueStageEndRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_BEGIN = 2
    AVATAR_ERROR = 3
    DROP_ERROR = 4
    NOT_INIT = 5
    ITEM_LACK = 6


class RogueTowerGetActivityReqCmdId(betterproto.Enum):
    CMD_ID = 4360


class RogueTowerGetActivityRspCmdId(betterproto.Enum):
    CMD_ID = 4361


class RogueTowerGetActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class RogueTowerGetCandidateBuffReqCmdId(betterproto.Enum):
    CMD_ID = 4362


class RogueTowerGetCandidateBuffRspCmdId(betterproto.Enum):
    CMD_ID = 4363


class RogueTowerGetCandidateBuffRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_SELECT = 2
    NO_LEFT_TIMES = 3


class RogueTowerGetRankReqCmdId(betterproto.Enum):
    CMD_ID = 4376


class RogueTowerGetRankRspCmdId(betterproto.Enum):
    CMD_ID = 4377


class RogueTowerGetRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class RogueTowerLevelUpBuffReqCmdId(betterproto.Enum):
    CMD_ID = 4370


class RogueTowerLevelUpBuffRspCmdId(betterproto.Enum):
    CMD_ID = 4371


class RogueTowerLevelUpBuffRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_BUFF = 2
    COIN_LACK = 3
    LEVEL_LIMIT = 4


class RogueTowerLevelupSupportAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 4374


class RogueTowerLevelupSupportAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 4375


class RogueTowerLevelupSupportAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LACK_TIMES = 2
    MAX_LEVEL = 3
    AVATAR_LOCKED = 4


class RogueTowerRefreshBuffReqCmdId(betterproto.Enum):
    CMD_ID = 4368


class RogueTowerRefreshBuffRspCmdId(betterproto.Enum):
    CMD_ID = 4369


class RogueTowerRefreshBuffRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_LEFT_TIMES = 2
    COIN_LACK = 3
    NOT_IN_CANDIDATE = 4


class RogueTowerSaveReqCmdId(betterproto.Enum):
    CMD_ID = 4372


class RogueTowerSaveRspCmdId(betterproto.Enum):
    CMD_ID = 4373


class RogueTowerSaveRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SAVE_LIMIT = 2


class RogueTowerSelectBuffReqCmdId(betterproto.Enum):
    CMD_ID = 4364


class RogueTowerSelectBuffRspCmdId(betterproto.Enum):
    CMD_ID = 4365


class RogueTowerSelectBuffRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_CANDIDATE = 2


class RogueTowerSelectChallengeAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 4366


class RogueTowerSelectChallengeAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 4367


class RogueTowerSelectChallengeAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ALREADY_SELECTED = 2
    AVATAR_ERROR = 3


class RoomGetStatusReqCmdId(betterproto.Enum):
    CMD_ID = 3181


class RoomGetStatusRspCmdId(betterproto.Enum):
    CMD_ID = 3182


class RoomGetStatusRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TOO_FREQUENT = 2
    ROOM_NOT_EXIST = 3


class RoomInvitationNotifyCmdId(betterproto.Enum):
    CMD_ID = 3162


class RoomKickMemberReqCmdId(betterproto.Enum):
    CMD_ID = 3175


class RoomKickMemberRspCmdId(betterproto.Enum):
    CMD_ID = 3176


class RoomKickMemberRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ROOM = 2
    NOT_LEADER = 3
    NO_TARGET = 4
    SELF = 5


class RoomMatchTimeoutNotifyCmdId(betterproto.Enum):
    CMD_ID = 3170


class RoomMemberMemberPosition(betterproto.Enum):
    NORMAL = 1
    LEADER = 2


class RoomMemberSetVoiceIdReqCmdId(betterproto.Enum):
    CMD_ID = 3179


class RoomMemberSetVoiceIdRspCmdId(betterproto.Enum):
    CMD_ID = 3180


class RoomMemberSetVoiceIdRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ROOM = 2


class RoomSwitchMemberStatusReqCmdId(betterproto.Enum):
    CMD_ID = 3173


class RoomSwitchMemberStatusRspCmdId(betterproto.Enum):
    CMD_ID = 3174


class RoomSwitchMemberStatusRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class RoomTransferLeaderReqCmdId(betterproto.Enum):
    CMD_ID = 3177


class RoomTransferLeaderRspCmdId(betterproto.Enum):
    CMD_ID = 3178


class RoomTransferLeaderRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ROOM = 2
    NOT_LEADER = 3
    NO_TARGET = 4
    SELF = 5


class RpgDungeonGetActivityReqCmdId(betterproto.Enum):
    CMD_ID = 5500


class RpgDungeonGetActivityRspCmdId(betterproto.Enum):
    CMD_ID = 5501


class RpgDungeonGetActivityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class RpgDungeonGetCandidateBuffReqCmdId(betterproto.Enum):
    CMD_ID = 5504


class RpgDungeonGetCandidateBuffRspCmdId(betterproto.Enum):
    CMD_ID = 5505


class RpgDungeonGetCandidateBuffRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_SELECT = 2
    NO_LEFT_TIMES = 3


class RpgDungeonSelectBuffReqCmdId(betterproto.Enum):
    CMD_ID = 5506


class RpgDungeonSelectBuffRspCmdId(betterproto.Enum):
    CMD_ID = 5507


class RpgDungeonSelectBuffRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_CANDIDATE = 2


class RpgDungeonSelectQuestReqCmdId(betterproto.Enum):
    CMD_ID = 5502


class RpgDungeonSelectQuestRspCmdId(betterproto.Enum):
    CMD_ID = 5503


class RpgDungeonSelectQuestRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_MEET_TAG = 2
    AVATAR_NOT_EXIST = 3
    LOCKED = 4
    SELECTED = 5


class RpgTaleEventNotifyCmdId(betterproto.Enum):
    CMD_ID = 2312


class RpgTaleGetPvpDivisionRewardReqCmdId(betterproto.Enum):
    CMD_ID = 2392


class RpgTaleGetPvpDivisionRewardRspCmdId(betterproto.Enum):
    CMD_ID = 2393


class RpgTaleGetPvpDivisionRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ALREADY_TAKEN = 2


class RpgTaleLevelUpAbilityReqCmdId(betterproto.Enum):
    CMD_ID = 2382


class RpgTaleLevelUpAbilityRspCmdId(betterproto.Enum):
    CMD_ID = 2383


class RpgTaleLevelUpAbilityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TARGET_LEVEL_ERROR = 2
    MATERIAL_LACK = 3
    FLAG_LIMIT = 4
    ABILITY_ERROR = 5


class RpgTaleRefreshSiteReqCmdId(betterproto.Enum):
    CMD_ID = 2388


class RpgTaleRefreshSiteRspCmdId(betterproto.Enum):
    CMD_ID = 2389


class RpgTaleRefreshSiteRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HCOIN_LACK = 2
    MATERIAL_LACK = 3
    REFRESH_TIME_LACK = 4
    SITE_NOT_FINISH = 5


class RpgTaleRefreshTicketReqCmdId(betterproto.Enum):
    CMD_ID = 2380


class RpgTaleRefreshTicketRspCmdId(betterproto.Enum):
    CMD_ID = 2381


class RpgTaleRefreshTicketRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class RpgTaleResetTowerReqCmdId(betterproto.Enum):
    CMD_ID = 2384


class RpgTaleResetTowerRspCmdId(betterproto.Enum):
    CMD_ID = 2385


class RpgTaleResetTowerRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class RpgTaleSetOverallReqCmdId(betterproto.Enum):
    CMD_ID = 2386


class RpgTaleSetOverallRspCmdId(betterproto.Enum):
    CMD_ID = 2387


class RpgTaleSetOverallRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class RpgTaleSetPvpVirtualAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 2390


class RpgTaleSetPvpVirtualAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 2391


class RpgTaleSetPvpVirtualAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2


class RpgTaleSweepReqCmdId(betterproto.Enum):
    CMD_ID = 2376


class RpgTaleSweepRspCmdId(betterproto.Enum):
    CMD_ID = 2377


class RpgTaleSweepRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LACK_MATERIAL = 2
    STAGE_ERROR = 3
    NO_REWARD = 4
    ENTER_TIMES_LACK = 5
    CHALLENGE_NUM_LACK = 6


class SanctuaryGetMainInfoReqCmdId(betterproto.Enum):
    CMD_ID = 4305


class SanctuaryGetMainInfoRspCmdId(betterproto.Enum):
    CMD_ID = 4306


class SanctuaryGetMainInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class SanctuaryStageEndNotifyCmdId(betterproto.Enum):
    CMD_ID = 4314


class SanctuaryStartNotifyCmdId(betterproto.Enum):
    CMD_ID = 4311


class SanctuaryTakeLevelRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4307


class SanctuaryTakeLevelRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4308


class SanctuaryTakeLevelRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class SanctuaryTakeProductReqCmdId(betterproto.Enum):
    CMD_ID = 4309


class SanctuaryTakeProductRspCmdId(betterproto.Enum):
    CMD_ID = 4310


class SanctuaryTakeProductRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class ScDlcActiveFeverAbilityReqCmdId(betterproto.Enum):
    CMD_ID = 6345


class ScDlcActiveFeverAbilityRspCmdId(betterproto.Enum):
    CMD_ID = 6346


class ScDlcActiveFeverAbilityRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVE_NUM_LIMIT = 2
    ACTIVE_LIST_EMPTY = 3
    GROUP_INVALID = 4


class ScDlcReviveAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 6341


class ScDlcReviveAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 6342


class ScDlcReviveAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_ERROR = 2
    MATERIAL_LACK = 3


class ScDlcSweepTowerReqCmdId(betterproto.Enum):
    CMD_ID = 6347


class ScDlcSweepTowerRspCmdId(betterproto.Enum):
    CMD_ID = 6348


class ScDlcSweepTowerRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    CANNOT_SWEEP = 2


class ScDlcTowerReviveAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 6343


class ScDlcTowerReviveAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 6344


class ScDlcTowerReviveAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    REVIVE_TIMES_LACK = 2
    NOT_IN_TOWER = 3
    MATERIAL_LACK = 4


class ScDlcTowerScheduleRewardNotifyCmdId(betterproto.Enum):
    CMD_ID = 6340


class ScDlcTowerStageBeginReqCmdId(betterproto.Enum):
    CMD_ID = 6334


class ScDlcTowerStageBeginRspCmdId(betterproto.Enum):
    CMD_ID = 6335


class ScDlcTowerStageBeginRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_BEGIN = 2
    PROGRESS_FULL = 3
    AVATAR_ERROR = 4
    AVATAR_DIE = 5
    NOT_OPEN = 6
    SUPPORT_AVATAR_ERROR = 7
    FLOOR_ERROR = 8
    STORY_NOT_FINISH = 9


class ScDlcTowerStageEndReqCmdId(betterproto.Enum):
    CMD_ID = 6336


class ScDlcTowerStageEndRspCmdId(betterproto.Enum):
    CMD_ID = 6337


class ScDlcTowerStageEndRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_BEGIN = 2
    FLOOR_ERROR = 3
    AVATAR_ERROR = 4


class ScoinExchangeReqCmdId(betterproto.Enum):
    CMD_ID = 14


class ScoinExchangeRspCmdId(betterproto.Enum):
    CMD_ID = 15


class ScoinExchangeRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HCOIN_LACK = 2
    TIMES_LACK = 3
    LACK_PURPLE_JADE = 4


class ScratchReqCmdId(betterproto.Enum):
    CMD_ID = 4152


class ScratchRspCmdId(betterproto.Enum):
    CMD_ID = 4153


class ScratchRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 2
    POS_ERROR = 3
    POS_REPEAT = 4
    MATERIAL_LACK = 5


class SealedModeAbandonTicketReqCmdId(betterproto.Enum):
    CMD_ID = 742


class SealedModeAbandonTicketRspCmdId(betterproto.Enum):
    CMD_ID = 743


class SealedModeAbandonTicketRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_TICKET_USED = 2
    NO_TIMES_USED = 3
    NOT_SETTLED = 4


class SealedModeBattleBeginNotifyCmdId(betterproto.Enum):
    CMD_ID = 719


class SealedModeCancelMatchReqCmdId(betterproto.Enum):
    CMD_ID = 705


class SealedModeCancelMatchRspCmdId(betterproto.Enum):
    CMD_ID = 706


class SealedModeCancelMatchRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SealedModeExchangeAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 707


class SealedModeExchangeAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 708


class SealedModeExchangeAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SealedModeExchangeEquipReqCmdId(betterproto.Enum):
    CMD_ID = 732


class SealedModeExchangeEquipRspCmdId(betterproto.Enum):
    CMD_ID = 733


class SealedModeExchangeEquipRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SealedModeGetMatchInfoReqCmdId(betterproto.Enum):
    CMD_ID = 703


class SealedModeGetMatchInfoRspCmdId(betterproto.Enum):
    CMD_ID = 704


class SealedModeGetMatchInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_MATCH_ROOM = 2


class SealedModeGetPlayerStatusReqCmdId(betterproto.Enum):
    CMD_ID = 720


class SealedModeGetPlayerStatusRspCmdId(betterproto.Enum):
    CMD_ID = 721


class SealedModeGetPlayerStatusRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SealedModeGetRankInfoReqCmdId(betterproto.Enum):
    CMD_ID = 724


class SealedModeGetRankInfoRspCmdId(betterproto.Enum):
    CMD_ID = 725


class SealedModeGetRankInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SealedModeGetTotalRewardScoreInfoReqCmdId(betterproto.Enum):
    CMD_ID = 738


class SealedModeGetTotalRewardScoreInfoRspCmdId(betterproto.Enum):
    CMD_ID = 739


class SealedModeGetTotalRewardScoreInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SealedModePlayerScoreNotifyCmdId(betterproto.Enum):
    CMD_ID = 711


class SealedModeRankLevelRewardNotifyCmdId(betterproto.Enum):
    CMD_ID = 726


class SealedModeReceiveItemNotifyCmdId(betterproto.Enum):
    CMD_ID = 712


class SealedModeSelectionNotifyCmdId(betterproto.Enum):
    CMD_ID = 729


class SealedModeSelectReqCmdId(betterproto.Enum):
    CMD_ID = 730


class SealedModeSelectRspCmdId(betterproto.Enum):
    CMD_ID = 731


class SealedModeSelectRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SealedModeSettleNotifyCmdId(betterproto.Enum):
    CMD_ID = 717


class SealedModeStartMatchReqCmdId(betterproto.Enum):
    CMD_ID = 701


class SealedModeStartMatchRspCmdId(betterproto.Enum):
    CMD_ID = 702


class SealedModeStartMatchRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_BEGUN = 2


class SealedModeStartNewSelectionReqCmdId(betterproto.Enum):
    CMD_ID = 727


class SealedModeStartNewSelectionRspCmdId(betterproto.Enum):
    CMD_ID = 728


class SealedModeStartNewSelectionRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    IS_SELECTING = 2
    IS_FINISH = 3


class SealedModeStartSelectionReqCmdId(betterproto.Enum):
    CMD_ID = 598


class SealedModeStartSelectionRspCmdId(betterproto.Enum):
    CMD_ID = 599


class SealedModeStartSelectionRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    IS_SELECTING = 2
    AVATAR_FULL = 3


class SealedModeSyncLevelInfoReqCmdId(betterproto.Enum):
    CMD_ID = 715


class SealedModeSyncLevelInfoRspCmdId(betterproto.Enum):
    CMD_ID = 716


class SealedModeSyncLevelInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SealedModeTakeTotalScoreRewardReqCmdId(betterproto.Enum):
    CMD_ID = 740


class SealedModeTakeTotalScoreRewardRspCmdId(betterproto.Enum):
    CMD_ID = 741


class SealedModeTakeTotalScoreRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TOTAL_SCORE_LACK = 2
    NO_REWARD = 3
    HAVE_TAKEN = 4


class SealedModeUpdateCheatDataReqCmdId(betterproto.Enum):
    CMD_ID = 734


class SealedModeUpdateCheatDataRspCmdId(betterproto.Enum):
    CMD_ID = 735


class SealedModeUpdateCheatDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SealedModeUpdateScoreReqCmdId(betterproto.Enum):
    CMD_ID = 709


class SealedModeUpdateScoreRspCmdId(betterproto.Enum):
    CMD_ID = 710


class SealedModeUpdateScoreRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    STATE_MISMATCH = 2


class SealedModeUseItemReqCmdId(betterproto.Enum):
    CMD_ID = 713


class SealedModeUseItemRspCmdId(betterproto.Enum):
    CMD_ID = 714


class SealedModeUseItemRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SealedModeUseTicketReqCmdId(betterproto.Enum):
    CMD_ID = 722


class SealedModeUseTicketRspCmdId(betterproto.Enum):
    CMD_ID = 723


class SealedModeUseTicketRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_LEFT_TIMES = 2


class SealedModeWinBattleReqCmdId(betterproto.Enum):
    CMD_ID = 736


class SealedModeWinBattleRspCmdId(betterproto.Enum):
    CMD_ID = 737


class SealedModeWinBattleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SealedModeWinnerNotifyCmdId(betterproto.Enum):
    CMD_ID = 718


class SearchArmadaReqCmdId(betterproto.Enum):
    CMD_ID = 2605


class SearchArmadaRspCmdId(betterproto.Enum):
    CMD_ID = 2606


class SearchArmadaRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SecurityPasswordOpReqCmdId(betterproto.Enum):
    CMD_ID = 5029


class SecurityPasswordOpRspCmdId(betterproto.Enum):
    CMD_ID = 5030


class SecurityPasswordOpRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TOO_MANY_FAILS = 2
    WRONG_PASSWORD = 3


class SecurityPasswordRejectionNotifyCmdId(betterproto.Enum):
    CMD_ID = 5033


class SelectAdventureQuestReqCmdId(betterproto.Enum):
    CMD_ID = 3902


class SelectAdventureQuestRspCmdId(betterproto.Enum):
    CMD_ID = 3903


class SelectAdventureQuestRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_FINISHED = 2
    HAS_TAKE = 3
    LACK_GRAIN = 4
    LACK_STAMINA = 5
    AVATAR_LOCK = 6
    AVATAR_IN_QUEST = 7
    AVATAR_NUM_ERROR = 8
    ELF_LOCK = 9
    ELF_IN_QUEST = 10
    SKILL_LACK = 11


class SelectAvatarEquipSuiteReqCmdId(betterproto.Enum):
    CMD_ID = 1458


class SelectAvatarEquipSuiteRspCmdId(betterproto.Enum):
    CMD_ID = 1459


class SelectAvatarEquipSuiteRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_LOCK = 2
    SLOT_WEAPON = 3
    SLOT_STIGMATA_1 = 4
    SLOT_STIGMATA_2 = 5
    SLOT_STIGMATA_3 = 6


class SelectAvatarSuiteReqCmdId(betterproto.Enum):
    CMD_ID = 580


class SelectAvatarSuiteRspCmdId(betterproto.Enum):
    CMD_ID = 581


class SelectAvatarSuiteRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SelectDlcTalentAffixReqCmdId(betterproto.Enum):
    CMD_ID = 3584


class SelectDlcTalentAffixRspCmdId(betterproto.Enum):
    CMD_ID = 3585


class SelectDlcTalentAffixRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_NEW_AFFIX = 2


class SelectGodWarChallengeAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 6152


class SelectGodWarChallengeAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 6153


class SelectGodWarChallengeAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ALREADY_SELECTED = 2
    AVATAR_ERROR = 3
    SUPPORT_AVATAR_ERROR = 4
    ELF_ERROR = 5
    AVATAR_SCHEDULE_ERROR = 6
    PUNISH_BUFF_ERROR = 7
    FEATURE_CLOSE = 8
    FORCE_SETTLE = 9
    NOT_OPEN = 10
    BOON_BUFF_ERROR = 11
    AVATAR_MISSION_NOT_FINISH = 12
    EXTRA_ITEM_ERROR = 13


class SelectNewStigmataRuneReqCmdId(betterproto.Enum):
    CMD_ID = 195


class SelectNewStigmataRuneRspCmdId(betterproto.Enum):
    CMD_ID = 196


class SelectNewStigmataRuneRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    STIGMATA_NOT_EXIST = 2
    NO_NEW_RUNE = 3
    SELECT_EMPTY = 4
    NOT_OPEN = 5
    TOO_FAST = 6


class SellAvatarFragmentReqCmdId(betterproto.Enum):
    CMD_ID = 102


class SellAvatarFragmentRspCmdId(betterproto.Enum):
    CMD_ID = 103


class SellAvatarFragmentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    FRAGMENT_NOT_ENOUGH = 2


class SendArmadaSystemChatMsgNotifyCmdId(betterproto.Enum):
    CMD_ID = 2661


class SendChatMsgNotifyCmdId(betterproto.Enum):
    CMD_ID = 2234


class SendChatRedEnvelopeReqCmdId(betterproto.Enum):
    CMD_ID = 1163


class SendChatRedEnvelopeRspCmdId(betterproto.Enum):
    CMD_ID = 1164


class SendChatRedEnvelopeRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LACK_ITEM = 2
    LACK_TIMES = 3
    CHAT_FORBIDEN = 4
    LACK_CD = 5
    LACK_LEVEL = 6
    NOT_IN_CHATWORLD = 7
    NOT_IN_ARMADA = 8
    NOT_IN_WORLD_CHATROOM = 9
    SENSITIVE_WORDS = 10


class SendCommonChatworldMsgNotifyCmdId(betterproto.Enum):
    CMD_ID = 2404


class SendDanmakuReqCmdId(betterproto.Enum):
    CMD_ID = 1543


class SendDanmakuRspCmdId(betterproto.Enum):
    CMD_ID = 1544


class SendDanmakuRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SENSITIVE_WORDS = 2
    CHAT_FORBIDEN = 3
    TOO_FREQUENT = 4
    DANMAKU_CLOSED = 5
    IN_BLACKLIST = 6
    NUM_LIMIT = 7
    LENGTH_LIMIT = 8


class SendPlayerCardMsgReqCmdId(betterproto.Enum):
    CMD_ID = 486


class SendPlayerCardMsgRspCmdId(betterproto.Enum):
    CMD_ID = 493


class SendPlayerCardMsgRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SEND_NUM_LIMIT = 2
    SEND_NUM_LIMIT_PLAYER = 3
    MSG_INVALID = 4
    BLACK_LIST = 5
    FORBIDDEN = 6
    ONLY_FRIEND = 7
    MSG_CLOSED = 8


class SendRoomChatMsgNotifyCmdId(betterproto.Enum):
    CMD_ID = 3163


class SensitiveWordCheckReqCmdId(betterproto.Enum):
    CMD_ID = 5005


class SensitiveWordCheckRspCmdId(betterproto.Enum):
    CMD_ID = 5006


class SensitiveWordCheckRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SENSITIVE_WORDS = 2


class SetArmadaApplyReqCmdId(betterproto.Enum):
    CMD_ID = 2613


class SetArmadaApplyRspCmdId(betterproto.Enum):
    CMD_ID = 2614


class SetArmadaApplyRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_GRANTED = 2
    NOT_IN_ARMADA = 3
    LEVEL_ERROR = 4


class SetArmadaBulletinReqCmdId(betterproto.Enum):
    CMD_ID = 2615


class SetArmadaBulletinRspCmdId(betterproto.Enum):
    CMD_ID = 2616


class SetArmadaBulletinRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_GRANTED = 2
    FORMAT_ERROR = 3
    SENSITIVE_WORDS = 4
    NOT_IN_ARMADA = 5
    IN_CD = 6
    IN_AUDIT = 7


class SetArmadaLabelReqCmdId(betterproto.Enum):
    CMD_ID = 2840


class SetArmadaLabelRspCmdId(betterproto.Enum):
    CMD_ID = 2841


class SetArmadaLabelRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    NOT_LEADER = 3
    LABEL_ERROR = 4
    PREFIX_ERROR = 5
    FORMAT_ERROR = 6
    HEXIE_OPEN = 7
    SENSITIVE_WORDS = 8


class SetArmadaPositionReqCmdId(betterproto.Enum):
    CMD_ID = 2621


class SetArmadaPositionRspCmdId(betterproto.Enum):
    CMD_ID = 2622


class SetArmadaPositionRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_GRANTED = 2
    NOT_IN_ARMADA = 3
    TARGET_NOT_IN_ARMADA = 4
    OFFICER_FULL = 5


class SetAvatarEquipSuiteReqCmdId(betterproto.Enum):
    CMD_ID = 1456


class SetAvatarEquipSuiteRspCmdId(betterproto.Enum):
    CMD_ID = 1457


class SetAvatarEquipSuiteRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_LOCK = 2
    SLOT_WEAPON = 3
    SLOT_STIGMATA_1 = 4
    SLOT_STIGMATA_2 = 5
    SLOT_STIGMATA_3 = 6
    SUITE_ID = 7
    SENSITIVE_WORDS = 8
    NAME_LEN_ERROR = 9
    TOO_FREQUENT = 10
    FORMAT_ERROR = 11


class SetChatgroupReqCmdId(betterproto.Enum):
    CMD_ID = 2206


class SetChatgroupRspCmdId(betterproto.Enum):
    CMD_ID = 2207


class SetChatgroupRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_CREATER = 2
    SENSITIVE_WORD = 3
    LABEL_ERROR = 4
    NAME_FORMAT_ERROR = 5
    NOTICE_FORMAT_ERROR = 6
    FORBIDDEN = 7
    IN_CD = 8
    IN_AUDIT = 9


class SetClientDataReqCmdId(betterproto.Enum):
    CMD_ID = 1588


class SetClientDataRspCmdId(betterproto.Enum):
    CMD_ID = 1589


class SetClientDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SIZE_LIMIT = 2
    UNKNOWN_ID = 3


class SetCustomHeadReqCmdId(betterproto.Enum):
    CMD_ID = 1525


class SetCustomHeadRspCmdId(betterproto.Enum):
    CMD_ID = 1526


class SetCustomHeadRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LOCKED = 2


class SetDormAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 611


class SetDormAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 612


class SetDormAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HOUSE_NOT_EXIST = 2
    ROOM_NOT_EXIST = 3
    AVATAR_NOT_EXIST = 4
    AVATAR_LIMIT = 5


class SetDormNameReqCmdId(betterproto.Enum):
    CMD_ID = 615


class SetDormNameRspCmdId(betterproto.Enum):
    CMD_ID = 616


class SetDormNameRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HOUSE_NOT_EXIST = 2
    ROOM_NOT_EXIST = 3
    FORMAT_ERROR = 4
    SENSITIVE_WORDS = 5
    NAME_REPEAT = 6
    IN_AUDIT = 7
    IN_CD = 8


class SetDormSnsInfoReqCmdId(betterproto.Enum):
    CMD_ID = 635


class SetDormSnsInfoRspCmdId(betterproto.Enum):
    CMD_ID = 636


class SetDormSnsInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HOUSE_NOT_EXIST = 2
    ROOM_NOT_EXIST = 3
    AVATAR_NOT_EXIST = 4


class SetDressReqCmdId(betterproto.Enum):
    CMD_ID = 248


class SetDressRspCmdId(betterproto.Enum):
    CMD_ID = 249


class SetDressRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2
    DRESS_NOT_EXIST = 3
    DRESS_CAN_NOT_USE = 4
    DRESS_IN_USE = 5


class SetFrameUseReqCmdId(betterproto.Enum):
    CMD_ID = 592


class SetFrameUseRspCmdId(betterproto.Enum):
    CMD_ID = 593


class SetFrameUseRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SetFriendRemarkReqCmdId(betterproto.Enum):
    CMD_ID = 972


class SetFriendRemarkRspCmdId(betterproto.Enum):
    CMD_ID = 973


class SetFriendRemarkRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_FRIEND = 2
    FORMAT_ERROR = 3
    SENSITIVE_WORDS = 4
    SAME_REMARK = 5
    FEATURE_CLOSED = 6
    IN_AUDIT = 7
    IN_CD = 8


class SetLevelLockReqCmdId(betterproto.Enum):
    CMD_ID = 1488


class SetLevelLockRspCmdId(betterproto.Enum):
    CMD_ID = 1489


class SetLevelLockRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_MEET_MAX_LEVEL = 2
    NOT_NEXT_ID = 3


class SetLobbyFastEntranceReqCmdId(betterproto.Enum):
    CMD_ID = 319


class SetLobbyFastEntranceRspCmdId(betterproto.Enum):
    CMD_ID = 320


class SetLobbyFastEntranceRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SetOpenworldEndlessMonsterGroupProgressReqCmdId(betterproto.Enum):
    CMD_ID = 3448


class SetOpenworldEndlessMonsterGroupProgressRspCmdId(betterproto.Enum):
    CMD_ID = 3449


class SetOpenworldEndlessMonsterGroupProgressRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    GROUP_ERROR = 2
    PROGRESS_ERROR = 3
    HAS_FINISHED = 4


class SetPlayerTagNotifyCmdId(betterproto.Enum):
    CMD_ID = 802


class SetReclaimAvatarTeamReqCmdId(betterproto.Enum):
    CMD_ID = 1171


class SetReclaimAvatarTeamRspCmdId(betterproto.Enum):
    CMD_ID = 1172


class SetReclaimAvatarTeamRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2
    AVATAR_REPEATED = 3
    AVATAR_EMPTY = 4
    TEAM_SIZE_LIMIT = 5


class SetSecurityPasswordReqCmdId(betterproto.Enum):
    CMD_ID = 5023


class SetSecurityPasswordRspCmdId(betterproto.Enum):
    CMD_ID = 5024


class SetSecurityPasswordRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    IS_NOT_OFTEN_DEVICE = 2
    ALREADY_SET = 3


class SetSelfDescReqCmdId(betterproto.Enum):
    CMD_ID = 78


class SetSelfDescRspCmdId(betterproto.Enum):
    CMD_ID = 79


class SetSelfDescRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    FORMAT_ERROR = 2
    SENSITIVE_WORDS = 3
    IN_AUDIT = 4
    IN_CD = 5


class SettingDictValueType(betterproto.Enum):
    INT = 1
    FLOAT = 2
    STRING = 3


class SetTransferPwdReqCmdId(betterproto.Enum):
    CMD_ID = 245


class SetTransferPwdRspCmdId(betterproto.Enum):
    CMD_ID = 246


class SetTransferPwdRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    PWD_FORMAT_ERROR = 2


class SetVirtualAvatarTeamReqCmdId(betterproto.Enum):
    CMD_ID = 3504


class SetVirtualAvatarTeamRspCmdId(betterproto.Enum):
    CMD_ID = 3505


class SetVirtualAvatarTeamRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2
    AVATAR_REPEATED = 3
    AVATAR_EMPTY = 4
    TEAM_SIZE_LIMIT = 5
    LOCK = 6


class SetWarshipAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 1492


class SetWarshipAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 1493


class SetWarshipAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2
    AVATAR_NOT_TWINS = 3


class SetWarshipComponentReqCmdId(betterproto.Enum):
    CMD_ID = 5458


class SetWarshipComponentRspCmdId(betterproto.Enum):
    CMD_ID = 5459


class SetWarshipComponentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    WARSHIP_NOT_EXIST = 2
    COMPONENT_TYPE_ERROR = 3
    COMPONENT_NOT_EXIST = 4
    WARSHIP_ERROR = 5


class SetWarshipReqCmdId(betterproto.Enum):
    CMD_ID = 5456


class SetWarshipRspCmdId(betterproto.Enum):
    CMD_ID = 5457


class SetWarshipRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_EXIST = 2


class SetWarshipSettingReqCmdId(betterproto.Enum):
    CMD_ID = 5460


class SetWarshipSettingRspCmdId(betterproto.Enum):
    CMD_ID = 5461


class SetWarshipSettingRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    WARSHIP_NOT_EXIST = 2


class SlgBattleAddScoreFailNotifyCmdId(betterproto.Enum):
    CMD_ID = 6061


class SlgBattleInSettleNotifyCmdId(betterproto.Enum):
    CMD_ID = 6070


class SlgBattleMatchRspCmdId(betterproto.Enum):
    CMD_ID = 6054


class SlgBattleMatchRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_BATTLE_AVAILABLE = 2


class SlgBattleSettleNotifyCmdId(betterproto.Enum):
    CMD_ID = 6066


class SlgBroadcastNotifyCmdId(betterproto.Enum):
    CMD_ID = 6068


class SlgEnrollReqCmdId(betterproto.Enum):
    CMD_ID = 6055


class SlgEnrollRspCmdId(betterproto.Enum):
    CMD_ID = 6056


class SlgEnrollRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    BATTLE_SCHEDULE_ID_ERROR = 2
    HAS_ENROLL = 3
    TOO_FREQUENT = 4
    FEATURE_CLOSED = 5


class SlgGetActivityStaminaReqCmdId(betterproto.Enum):
    CMD_ID = 6057


class SlgGetActivityStaminaRspCmdId(betterproto.Enum):
    CMD_ID = 6058


class SlgGetActivityStaminaRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_SCHEDULE = 2


class SlgGetBattleRankReqCmdId(betterproto.Enum):
    CMD_ID = 6062


class SlgGetBattleRankRspCmdId(betterproto.Enum):
    CMD_ID = 6063


class SlgGetBattleRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_SCHEDULE = 2
    NOT_IN_BATTLE = 3


class SlgGetBriefRankReqCmdId(betterproto.Enum):
    CMD_ID = 6071


class SlgGetBriefRankRspCmdId(betterproto.Enum):
    CMD_ID = 6072


class SlgGetBriefRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_BATTLE = 2


class SlgGetDataReqCmdId(betterproto.Enum):
    CMD_ID = 6050


class SlgGetDataRspCmdId(betterproto.Enum):
    CMD_ID = 6051


class SlgGetDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    BATTLE_NOT_FOUND = 3
    NOT_IN_BATTLE = 4
    FEATURE_CLOSED = 5


class SlgGetPointRankReqCmdId(betterproto.Enum):
    CMD_ID = 6064


class SlgGetPointRankRspCmdId(betterproto.Enum):
    CMD_ID = 6065


class SlgGetPointRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_SCHEDULE = 2
    NOT_IN_BATTLE = 3
    POINT_ERROR = 4


class SlgMainPageReqCmdId(betterproto.Enum):
    CMD_ID = 6069


class SlgPointSweepReqCmdId(betterproto.Enum):
    CMD_ID = 6052


class SlgPointSweepRspCmdId(betterproto.Enum):
    CMD_ID = 6053


class SlgPointSweepRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 3
    POINT_INVALID = 4
    COST_MATERIAL_LACK = 5
    EQUIPMENT_FULL = 6


class SlgTakeScoreRewardReqCmdId(betterproto.Enum):
    CMD_ID = 6059


class SlgTakeScoreRewardRspCmdId(betterproto.Enum):
    CMD_ID = 6060


class SlgTakeScoreRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_SCHEDULE = 2


class SpeedUpFarmProduceReqCmdId(betterproto.Enum):
    CMD_ID = 1393


class SpeedUpFarmProduceRspCmdId(betterproto.Enum):
    CMD_ID = 1394


class SpeedUpFarmProduceRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_PRODUCE = 2
    MATERIAL_LACK = 3


class StageBattleSaveClientDataReqCmdId(betterproto.Enum):
    CMD_ID = 829


class StageBattleSaveClientDataRspCmdId(betterproto.Enum):
    CMD_ID = 830


class StageBattleSaveClientDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ONE_VALID_ID = 2
    STAGE_BEGIN = 3


class StageBeginReqCmdId(betterproto.Enum):
    CMD_ID = 43


class StageBeginRspCmdId(betterproto.Enum):
    CMD_ID = 44


class StageBeginRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    STAGE_NOT_EXIST = 2
    LEVEL_LACK = 3
    STAMINA_LACK = 4
    AVATAR_ERROR = 5
    EQUIPMENT_FULL = 6
    ENTER_TIMES_LACK = 7
    ASSISTANT_PLAYER_FROZEN = 8
    ACTIVITY_LEVEL_LACK = 9
    ACTIVITY_ENTER_TIMES_LACK = 10
    ACTIVITY_NOT_BEGIN = 11
    ACTIVITY_END = 12
    AVATAR_NUM_ERROR = 13
    CHALLENGE_NUM_LACK = 14
    FRIEND_NUM_MAX = 15
    EXTRA_STORY_LEVEL_LACK = 16
    EXTRA_STORY_NOT_BEGIN = 17
    EXTRA_STORY_END = 18
    NOT_MEET_RESTRICT = 19
    EQUIPMENT_MATERIAL_LIMIT = 20
    EQUIPMENT_FRAGMENT_LIMIT = 21
    NOT_MEET_FAST = 22
    PRE_MP_STAGE_NOT_FINISH = 23
    STAGE_TYPE_ERROR = 24
    MP_LEVEL_LACK = 25
    ACTIVITY_UNLOCK = 26
    NOT_MEET_EXTRA_STORY_CHALLENGE_MODE = 28
    EXTRA_STORY_EQUIPMENT_USED = 29
    EXTRA_STORY_AVATAR_USED = 30
    EXTRA_STORY_AVATAR_LIMIT = 31
    STAGE_FINISH_ONCE = 32
    SEASON_TICKET_LACK = 33
    PRE_STAGE_NOT_FINISH = 34
    CHALLENGE_MODE_NEED_RESET = 35
    ALREADY_OPEN_DUNGEONS = 36
    DUNGEONS_AREA_LOCKED = 37
    DUNGEONS_TEST_STAGE_FIRST = 38
    DUNGEONS_TEST_STAGE_DONE = 39
    COST_MATERIAL_LACK = 40
    WEEKLY_ENTER_TIMES_LACK = 41
    RECLAIM_BOOM_ENERGY_LACK = 42
    RECLAIM_LEVEL_LACK = 43
    OPENWORLD_BOSS_MP_INVALID = 44
    SCORE_LACK = 45
    COUPLE_TOWER_FLOOR_LACK = 46
    GENERAL_ACTIVITY_CONDITION_LIMIT = 47
    EQUIPMENT_DISMATCH_LOCKED = 48
    WEAPON_LOCKED = 49
    STIGMATA_LOCKED = 50
    ELF_ERROR = 51
    NOT_IN_SQUAD = 52
    ELF_CARRY_LEVEL_LIMIT = 53
    CAMPAIGN_PHASE_ERROR = 54
    MISSION_LOCKED = 55
    HAS_TAKE_CAMPAIGN_REWARD = 56
    KINGDOM_WAR_NOT_OPEN = 57
    KINGDOM_WAR_POINT_ERROR = 58
    KINGDOM_WAR_LEVEL_LACK = 59
    FEATURE_CLOSED = 61
    NOT_IN_TEAM = 62
    EXTRA_MATERIAL_LACK = 63
    FEATURE_LIMIT = 64
    STAGE_MISMATCH = 65
    GRATUITY_STAGE_NOT_EXIST = 66
    NOT_IN_SAME_ARMADA = 67
    ASSIST_STAMINA_LACK = 68
    ARMADA_ACTIVITY_NOT_OPEN = 69
    NOT_IN_ARMADA = 70
    LOGIN_DAYS_LACK = 71
    NOT_NEWBIE = 72
    IN_CD = 73
    DAILY_RAID_NOT_ACTIVE = 74
    CHAPTER_PRE_ZONE_NOT_FINISHED = 75
    BEAST_TIME_NOT_ENOUGH = 76
    SINGLE_WANTED_BOX_UNPICK = 77
    EXCLUSIVE_STAGE_CONFLICT = 78
    THEME_WANTED_LEADER_TICKET_LACK = 79
    THEME_WANTED_MEMBER_LOCKED = 80
    THEME_WANTED_LOCK = 81
    THEME_WANTED_TICKET_LACK = 82
    SLG_BATTLE_NOT_OPEN = 83
    SLG_BATTLE_POINT_ERROR = 84
    SLG_BATTLE_POINT_NOT_OPEN = 85
    UNLOCK_TIME_LIMIT = 86
    BEGIN_FLOOR_ERROR = 87
    OPENWORLD_STORY_NOT_FINISH = 88
    MONSTER_CARD_MONSTER_ERROR = 89
    MONSTER_CARD_COST_LIMIT = 90
    CHAPTER_OW_FAME_LEVEL_LACK = 91
    BUFF_ASSIST_STAGE_NOT_OPEN = 92


class StageCheatDataType(betterproto.Enum):
    STAGE_ID = 1
    STAGE_PROGRESS = 2
    STAGE_MAX_SCORE = 3
    TIME_START = 1001
    TIME_USE = 1002
    AVG_FRAME_TIME = 1003
    PLAYER_LEVEL = 1004
    STAGE_SCORE = 1005
    MONSTER_TOTAL_HP = 1006
    MONSTER_TOTAL_LOSS_HP = 1007
    MONSTER_HIT_MISS_NUM = 1008
    MONSTER_HIT_NUM = 1009
    NATURE_DAMAGE_BONUS_RATIO_MAX = 1010
    AVATAR_ID_1 = 2001
    AVATAR_LEVEL_1 = 2002
    AVATAR_COMBAT_1 = 2003
    ATTACK_MAX_1 = 2004
    SP_MAX_1 = 2005
    SP_BEGIN_1 = 2006
    SP_END_1 = 2007
    SP_GAIN_1 = 2008
    SP_USE_1 = 2009
    HP_MAX_1 = 2010
    HP_BEGIN_1 = 2011
    HP_END_1 = 2012
    HP_GAIN_1 = 2013
    HIT_COUNT_1 = 2014
    HIT_DAMAGE_1 = 2015
    HIT_NORMAL_DAMAGE_MAX_1 = 2016
    HIT_CRITICAL_DAMAGE_MAX_1 = 2017
    BEHIT_COUNT_1 = 2018
    BEHIT_NORMAL_DAMAGE_MAX_1 = 2019
    BEHIT_CRITICAL_DAMAGE_MAX_1 = 2020
    COMBO_MAX_1 = 2021
    AVATAR_TIME_USE_1 = 2022
    WEAPON_LEVEL_1 = 2023
    STIGMATA_LEVEL_MAX_1 = 2024
    MP_TEAM_SKILL_TIMES_1 = 2025
    MP_QTE_SKILL_TIMES_1 = 2026
    MP_BE_RESCUED_TIMES_1 = 2027
    MP_RESCUE_TIMES_1 = 2028
    MP_AVG_RESCUE_TIME_1 = 2029
    MP_CHAT_TIMES_1 = 2030
    ULTIMATE_SKILL_TIMES_1 = 2031
    ULTIMATE_SKILL_DURATION_1 = 2032
    ATTACK_SP_GAIN_1 = 2033
    WEAPON_SKILL_TIMES_1 = 2034
    SWITCH_IN_SKILL_DAMAGE_MAX_1 = 2035
    BRANCH_SKILL_DAMAGE_MAX_1 = 2036
    CHARGE_SKILL_DAMAGE_MAX_1 = 2037
    ULTIMATE_SKILL_DAMAGE_MAX_1 = 2038
    ULTIMATE_SKILL_INTERVAL_TIME_MIN_1 = 2039
    WEAPON_SKILL_INTERVAL_TIME_MIN_1 = 2040
    HIT_INTERVAL_TIME_MIN_1 = 2041
    SP_MIN_1 = 2042
    HP_MIN_1 = 2043
    STIGMATA_1_1 = 2044
    STIGMATA_1_2 = 2045
    STIGMATA_1_3 = 2046
    WEAPON_ID_1 = 2047
    DRESS_ID_1 = 2048
    SERVER_AVATAR_ID_1 = 2049
    SERVER_STIGMATA_1_1 = 2050
    SERVER_STIGMATA_1_2 = 2051
    SERVER_STIGMATA_1_3 = 2052
    SERVER_WEAPON_ID_1 = 2053
    SERVER_DRESS_ID_1 = 2054
    AVATAR_ID_2 = 2101
    AVATAR_LEVEL_2 = 2102
    AVATAR_COMBAT_2 = 2103
    ATTACK_MAX_2 = 2104
    SP_MAX_2 = 2105
    SP_BEGIN_2 = 2106
    SP_END_2 = 2107
    SP_GAIN_2 = 2108
    SP_USE_2 = 2109
    HP_MAX_2 = 2110
    HP_BEGIN_2 = 2111
    HP_END_2 = 2112
    HP_GAIN_2 = 2113
    HIT_COUNT_2 = 2114
    HIT_DAMAGE_2 = 2115
    HIT_NORMAL_DAMAGE_MAX_2 = 2116
    HIT_CRITICAL_DAMAGE_MAX_2 = 2117
    BEHIT_COUNT_2 = 2118
    BEHIT_NORMAL_DAMAGE_MAX_2 = 2119
    BEHIT_CRITICAL_DAMAGE_MAX_2 = 2120
    COMBO_MAX_2 = 2121
    AVATAR_TIME_USE_2 = 2122
    WEAPON_LEVEL_2 = 2123
    STIGMATA_LEVEL_MAX_2 = 2124
    MP_TEAM_SKILL_TIMES_2 = 2125
    MP_QTE_SKILL_TIMES_2 = 2126
    MP_BE_RESCUED_TIMES_2 = 2127
    MP_RESCUE_TIMES_2 = 2128
    MP_AVG_RESCUE_TIME_2 = 2129
    MP_CHAT_TIMES_2 = 2130
    ULTIMATE_SKILL_TIMES_2 = 2131
    ULTIMATE_SKILL_DURATION_2 = 2132
    ATTACK_SP_GAIN_2 = 2133
    WEAPON_SKILL_TIMES_2 = 2134
    SWITCH_IN_SKILL_DAMAGE_MAX_2 = 2135
    BRANCH_SKILL_DAMAGE_MAX_2 = 2136
    CHARGE_SKILL_DAMAGE_MAX_2 = 2137
    ULTIMATE_SKILL_DAMAGE_MAX_2 = 2138
    ULTIMATE_SKILL_INTERVAL_TIME_MIN_2 = 2139
    WEAPON_SKILL_INTERVAL_TIME_MIN_2 = 2140
    HIT_INTERVAL_TIME_MIN_2 = 2141
    SP_MIN_2 = 2142
    HP_MIN_2 = 2143
    STIGMATA_2_1 = 2144
    STIGMATA_2_2 = 2145
    STIGMATA_2_3 = 2146
    WEAPON_ID_2 = 2147
    DRESS_ID_2 = 2148
    SERVER_AVATAR_ID_2 = 2149
    SERVER_STIGMATA_2_1 = 2150
    SERVER_STIGMATA_2_2 = 2151
    SERVER_STIGMATA_2_3 = 2152
    SERVER_WEAPON_ID_2 = 2153
    SERVER_DRESS_ID_2 = 2154
    AVATAR_ID_3 = 2201
    AVATAR_LEVEL_3 = 2202
    AVATAR_COMBAT_3 = 2203
    ATTACK_MAX_3 = 2204
    SP_MAX_3 = 2205
    SP_BEGIN_3 = 2206
    SP_END_3 = 2207
    SP_GAIN_3 = 2208
    SP_USE_3 = 2209
    HP_MAX_3 = 2210
    HP_BEGIN_3 = 2211
    HP_END_3 = 2212
    HP_GAIN_3 = 2213
    HIT_COUNT_3 = 2214
    HIT_DAMAGE_3 = 2215
    HIT_NORMAL_DAMAGE_MAX_3 = 2216
    HIT_CRITICAL_DAMAGE_MAX_3 = 2217
    BEHIT_COUNT_3 = 2218
    BEHIT_NORMAL_DAMAGE_MAX_3 = 2219
    BEHIT_CRITICAL_DAMAGE_MAX_3 = 2220
    COMBO_MAX_3 = 2221
    AVATAR_TIME_USE_3 = 2222
    WEAPON_LEVEL_3 = 2223
    STIGMATA_LEVEL_MAX_3 = 2224
    MP_TEAM_SKILL_TIMES_3 = 2225
    MP_QTE_SKILL_TIMES_3 = 2226
    MP_BE_RESCUED_TIMES_3 = 2227
    MP_RESCUE_TIMES_3 = 2228
    MP_AVG_RESCUE_TIME_3 = 2229
    MP_CHAT_TIMES_3 = 2230
    ULTIMATE_SKILL_TIMES_3 = 2231
    ULTIMATE_SKILL_DURATION_3 = 2232
    ATTACK_SP_GAIN_3 = 2233
    WEAPON_SKILL_TIMES_3 = 2234
    SWITCH_IN_SKILL_DAMAGE_MAX_3 = 2235
    BRANCH_SKILL_DAMAGE_MAX_3 = 2236
    CHARGE_SKILL_DAMAGE_MAX_3 = 2237
    ULTIMATE_SKILL_DAMAGE_MAX_3 = 2238
    ULTIMATE_SKILL_INTERVAL_TIME_MIN_3 = 2239
    WEAPON_SKILL_INTERVAL_TIME_MIN_3 = 2240
    HIT_INTERVAL_TIME_MIN_3 = 2241
    SP_MIN_3 = 2242
    HP_MIN_3 = 2243
    STIGMATA_3_1 = 2244
    STIGMATA_3_2 = 2245
    STIGMATA_3_3 = 2246
    WEAPON_ID_3 = 2247
    DRESS_ID_3 = 2248
    SERVER_AVATAR_ID_3 = 2249
    SERVER_STIGMATA_3_1 = 2250
    SERVER_STIGMATA_3_2 = 2251
    SERVER_STIGMATA_3_3 = 2252
    SERVER_WEAPON_ID_3 = 2253
    SERVER_DRESS_ID_3 = 2254
    ELF_ID = 2301
    ELF_LEVEL = 2302
    ELF_COMBAT = 2303
    ELF_ATTACK = 2304
    ELF_SP_MAX = 2305
    ELF_ULTIMATE_SKILL_TIMES = 2306
    ELF_SP_USE = 2307
    ELF_HIT_CRITICAL_DAMAGE_MAX = 2308
    ELF_HIT_NORMAL_DAMAGE_MAX = 2309
    ELF_ULTIMATE_SKILL_INTERVAL_TIME_MIN = 2310
    ELF_HIT_INTERVAL_TIME_MIN = 2311
    SERVER_ELF_ID = 2312
    ELF_ID_2 = 2401
    ELF_LEVEL_2 = 2402
    ELF_COMBAT_2 = 2403
    ELF_ATTACK_2 = 2404
    ELF_SP_MAX_2 = 2405
    ELF_ULTIMATE_SKILL_TIMES_2 = 2406
    ELF_SP_USE_2 = 2407
    ELF_HIT_CRITICAL_DAMAGE_MAX_2 = 2408
    ELF_HIT_NORMAL_DAMAGE_MAX_2 = 2409
    ELF_ULTIMATE_SKILL_INTERVAL_TIME_MIN_2 = 2410
    ELF_HIT_INTERVAL_TIME_MIN_2 = 2411
    SERVER_ELF_ID_2 = 2412
    ELF_ID_3 = 2501
    ELF_LEVEL_3 = 2502
    ELF_COMBAT_3 = 2503
    ELF_ATTACK_3 = 2504
    ELF_SP_MAX_3 = 2505
    ELF_ULTIMATE_SKILL_TIMES_3 = 2506
    ELF_SP_USE_3 = 2507
    ELF_HIT_CRITICAL_DAMAGE_MAX_3 = 2508
    ELF_HIT_NORMAL_DAMAGE_MAX_3 = 2509
    ELF_ULTIMATE_SKILL_INTERVAL_TIME_MIN_3 = 2510
    ELF_HIT_INTERVAL_TIME_MIN_3 = 2511
    SERVER_ELF_ID_3 = 2512
    IS_MP_VOICE_USED = 3001
    MP_VOICE_USE_TIME = 3002
    SEALED_EVENT_ID = 4001


class StageEndReqCmdId(betterproto.Enum):
    CMD_ID = 45


class StageEndRspCmdId(betterproto.Enum):
    CMD_ID = 46


class StageEndRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    STAGE_ERROR = 2
    DROP_ERROR = 3
    CHALLENGE_ERROR = 4
    STAGE_TIME_ERROR = 5
    ALREADY_OPEN_DUNGEONS = 6
    NOT_MEET_FAST = 22
    COST_MATERIAL_LACK = 40
    NOT_IN_TEAM = 62
    SLG_BATTLE_NOT_OPEN = 63


class StageInnerDataReportReqCmdId(betterproto.Enum):
    CMD_ID = 131


class StageInnerDataReportRspCmdId(betterproto.Enum):
    CMD_ID = 132


class StageInnerDataReportRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class StaminaExchangeReqCmdId(betterproto.Enum):
    CMD_ID = 18


class StaminaExchangeRspCmdId(betterproto.Enum):
    CMD_ID = 19


class StaminaExchangeRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HCOIN_LACK = 2
    TIMES_LACK = 3
    STAMINA_FULL = 4


class StartFarmProduceReqCmdId(betterproto.Enum):
    CMD_ID = 1389


class StartFarmProduceRspCmdId(betterproto.Enum):
    CMD_ID = 1390


class StartFarmProduceRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SLOT_LOCKED = 2
    SLOT_IN_PRODUCE = 3
    EQUIPMENT_MATERIAL_LIMIT = 4
    PRODUCE_MATERIAL_LIMIT = 5
    PRODUCE_TIMES_LIMIT = 6


class StartNextRoundExaminationReqCmdId(betterproto.Enum):
    CMD_ID = 4327


class StartNextRoundExaminationRspCmdId(betterproto.Enum):
    CMD_ID = 4328


class StartNextRoundExaminationRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_FINISHED = 2


class StartRoomMatchReqCmdId(betterproto.Enum):
    CMD_ID = 3165


class StartRoomMatchRspCmdId(betterproto.Enum):
    CMD_ID = 3166


class StartRoomMatchRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TOO_FREQUENT = 2
    ALREADY_IN_MATCH = 3
    IS_IN_BATTLE = 4
    IN_CD = 5
    TIMES_LACK = 6
    STAGE_NOT_IN_SCHEDULE = 7
    IS_NOT_READY = 8
    NO_SCHEDULE = 9


class StartSlotMachineReqCmdId(betterproto.Enum):
    CMD_ID = 4317


class StartSlotMachineRspCmdId(betterproto.Enum):
    CMD_ID = 4318


class StartSlotMachineRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 2
    MATERIAL_LACK = 3


class SubscriptionStatusNotifyCmdId(betterproto.Enum):
    CMD_ID = 1496


class SupportActivitySupportReqCmdId(betterproto.Enum):
    CMD_ID = 4334


class SupportActivitySupportRspCmdId(betterproto.Enum):
    CMD_ID = 4335


class SupportActivitySupportRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    IN_CD_TIME = 3
    HAS_SUPPORT = 4


class SupportActivityTakeGlobalRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4338


class SupportActivityTakeGlobalRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4339


class SupportActivityTakeGlobalRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    HAS_TAKE = 3


class SupportActivityTakeShareRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4336


class SupportActivityTakeShareRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4337


class SupportActivityTakeShareRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    HAS_TAKE = 3
    NOT_SUPPORT = 4


class SwitchAvatarSubSkillReqCmdId(betterproto.Enum):
    CMD_ID = 253


class SwitchAvatarSubSkillRspCmdId(betterproto.Enum):
    CMD_ID = 254


class SwitchAvatarSubSkillRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2
    SKILL_NOT_EXIST = 3
    SUB_SKILL_NOT_EXIST = 4
    SUB_SKILL_CAN_NOT_SWITCH = 5


class SwitchChangeDataNotifyCmdId(betterproto.Enum):
    CMD_ID = 3701


class SwitchDataNotifyCmdId(betterproto.Enum):
    CMD_ID = 3700


class SwitchDlcAvatarTalentReqCmdId(betterproto.Enum):
    CMD_ID = 3588


class SwitchDlcAvatarTalentRspCmdId(betterproto.Enum):
    CMD_ID = 3589


class SwitchDlcAvatarTalentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2
    TALENT_NOT_EXIST = 3
    TALENT_CAN_NOT_SWITCH = 4


class SwitchDynamicHardLvReqCmdId(betterproto.Enum):
    CMD_ID = 239


class SwitchDynamicHardLvRspCmdId(betterproto.Enum):
    CMD_ID = 240


class SwitchDynamicHardLvRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SwitchExtraStoryLineEnhanceReqCmdId(betterproto.Enum):
    CMD_ID = 1039


class SwitchExtraStoryLineEnhanceRspCmdId(betterproto.Enum):
    CMD_ID = 1040


class SwitchExtraStoryLineEnhanceRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SwitchExtraStoryLockedAvatarBindEquipReqCmdId(betterproto.Enum):
    CMD_ID = 1002


class SwitchExtraStoryLockedAvatarBindEquipRspCmdId(betterproto.Enum):
    CMD_ID = 1003


class SwitchExtraStoryLockedAvatarBindEquipRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SwitchMemberStatusReqCmdId(betterproto.Enum):
    CMD_ID = 309


class SwitchMemberStatusRspCmdId(betterproto.Enum):
    CMD_ID = 310


class SwitchMemberStatusRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_LOBBY = 2
    STATUS_ERROR = 3
    IS_LEADER = 4


class SyncChapterActivityDataNotifyCmdId(betterproto.Enum):
    CMD_ID = 4204


class SyncDlcAvatarNotifyCmdId(betterproto.Enum):
    CMD_ID = 3556


class SyncDutyNotifyCmdId(betterproto.Enum):
    CMD_ID = 969


class SyncElfDataNotifyCmdId(betterproto.Enum):
    CMD_ID = 2102


class SyncElfFragmentNotifyCmdId(betterproto.Enum):
    CMD_ID = 2103


class SyncElfTalentNotifyCmdId(betterproto.Enum):
    CMD_ID = 2104


class SyncGratuityStageReqCmdId(betterproto.Enum):
    CMD_ID = 4112


class SyncGratuityStageRspCmdId(betterproto.Enum):
    CMD_ID = 4113


class SyncGratuityStageRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SyncMatrixCurEventNotifyCmdId(betterproto.Enum):
    CMD_ID = 2334


class SyncMatrixFloorNotifyCmdId(betterproto.Enum):
    CMD_ID = 2328


class SyncMatrixNotifyCmdId(betterproto.Enum):
    CMD_ID = 2329


class SyncPictureActivityScoreNotifyCmdId(betterproto.Enum):
    CMD_ID = 4272


class SyncRoomDataNotifyCmdId(betterproto.Enum):
    CMD_ID = 3152


class SyncRoomMatchDataNotifyCmdId(betterproto.Enum):
    CMD_ID = 3169


class SyncRoomMatchDataNotifyReason(betterproto.Enum):
    SUCC = 0
    CANCEL = 1
    TIMEOUT = 2
    MATCH_SUCC = 3


class SyncRpgTaleSiteNotifyCmdId(betterproto.Enum):
    CMD_ID = 2302


class SyncThemeDataNotifyCmdId(betterproto.Enum):
    CMD_ID = 4246


class SyncTimeReqCmdId(betterproto.Enum):
    CMD_ID = 803


class SyncTimeRspCmdId(betterproto.Enum):
    CMD_ID = 804


class SyncTimeRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class SyncTvtBattleInfoNotifyCmdId(betterproto.Enum):
    CMD_ID = 3350


class SyncTvtBattleStageMessageNotifyCmdId(betterproto.Enum):
    CMD_ID = 3356


class SyncTvtMemberInRoomNotifyCmdId(betterproto.Enum):
    CMD_ID = 3304


class SyncVirtualGachaStatusNotifyCmdId(betterproto.Enum):
    CMD_ID = 3517


class TakeActivityChallengeRewardReqCmdId(betterproto.Enum):
    CMD_ID = 460


class TakeActivityChallengeRewardRspCmdId(betterproto.Enum):
    CMD_ID = 461


class TakeActivityChallengeRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKE = 2
    CHALLENGE_NUM_LACK = 3


class TakeAdventureCompensationReqCmdId(betterproto.Enum):
    CMD_ID = 3918


class TakeAdventureCompensationRspCmdId(betterproto.Enum):
    CMD_ID = 3919


class TakeAdventureCompensationRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKE = 2


class TakeAdventureLevelRewardReqCmdId(betterproto.Enum):
    CMD_ID = 3908


class TakeAdventureLevelRewardRspCmdId(betterproto.Enum):
    CMD_ID = 3909


class TakeAdventureLevelRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKE = 2


class TakeAdventureQuestRewardReqCmdId(betterproto.Enum):
    CMD_ID = 3904


class TakeAdventureQuestRewardRspCmdId(betterproto.Enum):
    CMD_ID = 3905


class TakeAdventureQuestRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_QUEST = 2
    HAS_TAKE = 3
    NOT_END = 4


class TakeAdventureStorySweepRewardReqCmdId(betterproto.Enum):
    CMD_ID = 3916


class TakeAdventureStorySweepRewardRspCmdId(betterproto.Enum):
    CMD_ID = 3917


class TakeAdventureStorySweepRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_EXIST = 2
    NOT_FINISHED = 3


class TakeArmadaAchievementReqCmdId(betterproto.Enum):
    CMD_ID = 2801


class TakeArmadaAchievementRspCmdId(betterproto.Enum):
    CMD_ID = 2802


class TakeArmadaAchievementRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    NOT_REACH = 3
    HAS_TAKE = 4
    ALREADY_DISSOLVE = 5


class TakeArmadaReunionRewardReqCmdId(betterproto.Enum):
    CMD_ID = 2837


class TakeArmadaReunionRewardRspCmdId(betterproto.Enum):
    CMD_ID = 2838


class TakeArmadaReunionRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    NOT_IN_ARMADA = 3
    HAVE_TAKEN = 4
    QUIT_SHORT = 5
    IN_CD_TIME = 6


class TakeArmadaStageRewardReqCmdId(betterproto.Enum):
    CMD_ID = 2675


class TakeArmadaStageRewardRspCmdId(betterproto.Enum):
    CMD_ID = 2676


class TakeArmadaStageRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    TIME_INVALID = 3
    NO_BOSS = 4
    HAS_TAKE = 5
    NOT_FIGHT = 6
    BOSS_NOT_FINISH = 7


class TakeArmadaStageScoreActivityRewardReqCmdId(betterproto.Enum):
    CMD_ID = 2823


class TakeArmadaStageScoreActivityRewardRspCmdId(betterproto.Enum):
    CMD_ID = 2824


class TakeArmadaStageScoreActivityRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    HAS_TAKE = 3
    NOT_FINISH_STAGE = 4


class TakeAvatarMissionDailyRewardReqCmdId(betterproto.Enum):
    CMD_ID = 3004


class TakeAvatarMissionDailyRewardRspCmdId(betterproto.Enum):
    CMD_ID = 3005


class TakeAvatarMissionDailyRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    HAVE_TAKEN = 3
    LACK_CONTRACT_POINT = 4


class TakeAvatarMissionPhaseRewardReqCmdId(betterproto.Enum):
    CMD_ID = 3006


class TakeAvatarMissionPhaseRewardRspCmdId(betterproto.Enum):
    CMD_ID = 3007


class TakeAvatarMissionPhaseRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    HAVE_TAKEN = 3
    LACK_DAYS = 4
    NO_REWARD = 5


class TakeBattlePassLevelRewardReqCmdId(betterproto.Enum):
    CMD_ID = 3754


class TakeBattlePassLevelRewardRspCmdId(betterproto.Enum):
    CMD_ID = 3755


class TakeBattlePassLevelRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    HAS_TAKE = 3
    FEATURE_CLOSED = 4


class TakeBattlePassPhaseExpReqCmdId(betterproto.Enum):
    CMD_ID = 3758


class TakeBattlePassPhaseExpRspCmdId(betterproto.Enum):
    CMD_ID = 3759


class TakeBattlePassPhaseExpRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    HAS_TAKE = 3


class TakeBattlePassThemeLevelRewardReqCmdId(betterproto.Enum):
    CMD_ID = 3762


class TakeBattlePassThemeLevelRewardRspCmdId(betterproto.Enum):
    CMD_ID = 3763


class TakeBattlePassThemeLevelRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKE = 2
    NOT_OPEN = 3
    FEATURE_CLOSED = 4


class TakeBulletinScoreActivityRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4165


class TakeBulletinScoreActivityRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4166


class TakeBulletinScoreActivityRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKE_ALL = 2


class TakeCardProductBonusRewardReqCmdId(betterproto.Enum):
    CMD_ID = 1146


class TakeCardProductBonusRewardRspCmdId(betterproto.Enum):
    CMD_ID = 1147


class TakeCardProductBonusRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class TakeCardProductDailyRewardReqCmdId(betterproto.Enum):
    CMD_ID = 1144


class TakeCardProductDailyRewardRspCmdId(betterproto.Enum):
    CMD_ID = 1145


class TakeCardProductDailyRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class TakeChallengeStepCompensationReqCmdId(betterproto.Enum):
    CMD_ID = 1678


class TakeChallengeStepCompensationRspCmdId(betterproto.Enum):
    CMD_ID = 1679


class TakeChallengeStepCompensationRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKEN = 2
    LEVEL_LACK = 3
    NO_REWARD = 4


class TakeChapterActivityLevelRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4202


class TakeChapterActivityLevelRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4203


class TakeChapterActivityLevelRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LACK_LEVEL = 2
    HAVE_TAKE = 3
    NO_REWARD = 4


class TakeChapterChallengeRewardReqCmdId(betterproto.Enum):
    CMD_ID = 967


class TakeChapterChallengeRewardRspCmdId(betterproto.Enum):
    CMD_ID = 968


class TakeChapterChallengeRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKE = 2
    CHALLENGE_NUM_LACK = 3
    REWARD_INVALID = 4


class TakeChapterCompensationReqCmdId(betterproto.Enum):
    CMD_ID = 1674


class TakeChapterCompensationRspCmdId(betterproto.Enum):
    CMD_ID = 1675


class TakeChapterCompensationRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKEN = 2
    NO_REWARD = 3
    CHAPTER_NOT_FINISH = 4


class TakeChatRedEnvelopeReqCmdId(betterproto.Enum):
    CMD_ID = 1165


class TakeChatRedEnvelopeRspCmdId(betterproto.Enum):
    CMD_ID = 1166


class TakeChatRedEnvelopeRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKEN = 2
    OVER = 3
    LACK_TIMES = 4
    LACK_LEVEL = 5
    EXPIRE_TIME = 6
    TAKE_BY_OTHERS = 7
    NO_CHATROOM = 8
    NOT_IN_ARMADA = 9
    NOT_IN_WORLD_CHATROOM = 10


class TakeClientMailAttachmentReqCmdId(betterproto.Enum):
    CMD_ID = 3802


class TakeClientMailAttachmentRspCmdId(betterproto.Enum):
    CMD_ID = 3803


class TakeClientMailAttachmentRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    REPEATED_REQ = 2
    PART_FAIL = 3


class TakeConsignedRewardReqCmdId(betterproto.Enum):
    CMD_ID = 523


class TakeConsignedRewardRspCmdId(betterproto.Enum):
    CMD_ID = 524


class TakeConsignedRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ARMADA = 2
    REWARD_TAKEN = 3


class TakeContinuousRechargeRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4169


class TakeContinuousRechargeRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4170


class TakeContinuousRechargeRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    PROGRESS_LACK = 3
    HAS_TAKE = 4


class TakeDailyCompensationRewardReqCmdId(betterproto.Enum):
    CMD_ID = 564


class TakeDailyCompensationRewardRspCmdId(betterproto.Enum):
    CMD_ID = 565


class TakeDailyCompensationRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class TakeDlcLevelRewardReqCmdId(betterproto.Enum):
    CMD_ID = 3561


class TakeDlcLevelRewardRspCmdId(betterproto.Enum):
    CMD_ID = 3562


class TakeDlcLevelRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_REWARD = 2


class TakeDlcTowerRankRewardNotifyCmdId(betterproto.Enum):
    CMD_ID = 3573


class TakeDormLikesDropReqCmdId(betterproto.Enum):
    CMD_ID = 1008


class TakeDormLikesDropRspCmdId(betterproto.Enum):
    CMD_ID = 1009


class TakeDormLikesDropRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LIMIT = 2
    NO_DROP = 3
    HAVE_TAKEN = 4


class TakeDutyRewardReqCmdId(betterproto.Enum):
    CMD_ID = 288


class TakeDutyRewardRspCmdId(betterproto.Enum):
    CMD_ID = 289


class TakeDutyRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKE = 2
    LEVEL_LACK = 3
    DUTY_POINT_LACK = 4


class TakeEliteChapterCompensationReqCmdId(betterproto.Enum):
    CMD_ID = 1638


class TakeEliteChapterCompensationRspCmdId(betterproto.Enum):
    CMD_ID = 1639


class TakeEliteChapterCompensationRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKEN = 2
    NO_REWARD = 3
    CHAPTER_NOT_FINISH = 4


class TakeEndlessBaseRewardReqCmdId(betterproto.Enum):
    CMD_ID = 3417


class TakeEndlessBaseRewardRspCmdId(betterproto.Enum):
    CMD_ID = 3418


class TakeEndlessBaseRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_REWARD = 2
    NOT_JOIN = 3


class TakeExBossRankRewardNotifyCmdId(betterproto.Enum):
    CMD_ID = 516


class TakeExBossScoreRewardNotifyCmdId(betterproto.Enum):
    CMD_ID = 533


class TakeExtraStoryChallengeModeChapterRewardReqCmdId(betterproto.Enum):
    CMD_ID = 807


class TakeExtraStoryChallengeModeChapterRewardRspCmdId(betterproto.Enum):
    CMD_ID = 808


class TakeExtraStoryChallengeModeChapterRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    LEVEL_LIMIT = 3
    DIFFICULTY_NOT_OPEN = 4
    NOT_FINISHED = 5
    HAS_TAKEN = 6
    NO_CHAPTER_REWARD = 7


class TakeExtraStoryLineStoryFinishRewardReqCmdId(betterproto.Enum):
    CMD_ID = 836


class TakeExtraStoryLineStoryFinishRewardRspCmdId(betterproto.Enum):
    CMD_ID = 837


class TakeExtraStoryLineStoryFinishRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_FINISH = 2
    HAS_TAKEN = 3


class TakeFlopRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4171


class TakeFlopRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4172


class TakeFlopRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    LOCK = 3
    HAS_TAKE = 4


class TakeFoundationRewardReqCmdId(betterproto.Enum):
    CMD_ID = 963


class TakeFoundationRewardRspCmdId(betterproto.Enum):
    CMD_ID = 964


class TakeFoundationRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_BUY = 2
    LEVEL_LACK = 3
    HAS_TAKE = 4
    PRODUCT_INVALID = 5


class TakeGalInteractTriggerEventReqCmdId(betterproto.Enum):
    CMD_ID = 815


class TakeGalInteractTriggerEventRspCmdId(betterproto.Enum):
    CMD_ID = 816


class TakeGalInteractTriggerEventRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_SUCH_AVATAR = 2
    EVENT_ID_ERROR = 3


class TakeGeneralActivityScoreRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4034


class TakeGeneralActivityScoreRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4035


class TakeGeneralActivityScoreRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKEN = 2
    NOT_REACH = 3
    NOT_OPEN = 4


class TakeGobackFundRewardReqCmdId(betterproto.Enum):
    CMD_ID = 1653


class TakeGobackFundRewardRspCmdId(betterproto.Enum):
    CMD_ID = 1654


class TakeGobackFundRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ALREADY_TAKEN = 2
    NO_REWARD = 3
    FUND_LOCKED = 4


class TakeGobackLoginRewardReqCmdId(betterproto.Enum):
    CMD_ID = 366


class TakeGobackLoginRewardRspCmdId(betterproto.Enum):
    CMD_ID = 367


class TakeGobackLoginRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKE = 2
    LOGIN_DAYS_LACK = 3
    NOT_GOBACK = 4
    REWARD_TYPE_ERROR = 5
    SELECT_REWARD_ERROR = 6


class TakeGobackScoreRewardReqCmdId(betterproto.Enum):
    CMD_ID = 1448


class TakeGobackScoreRewardRspCmdId(betterproto.Enum):
    CMD_ID = 1449


class TakeGobackScoreRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SCORE_LACK = 2
    NOT_GOBACK = 3
    HAS_TAKE = 4


class TakeInviteActivityInviterProgressRewardReqCmdId(betterproto.Enum):
    CMD_ID = 1692


class TakeInviteActivityInviterProgressRewardRspCmdId(betterproto.Enum):
    CMD_ID = 1693


class TakeInviteActivityInviterProgressRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_REWARD = 2
    FEATURE_CLOSED = 3


class TakeLoginActivityRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4194


class TakeLoginActivityRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4195


class TakeLoginActivityRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LACK = 2
    HAS_TAKE = 3
    LOGIN_DAYS_LACK = 4
    NOT_NEWBIE = 5
    DURATION_END = 6


class TakeLoginMissionRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4301


class TakeLoginMissionRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4302


class TakeLoginMissionRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_FINISHED = 2
    HAS_TAKE = 3


class TakeMissionGroupRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4348


class TakeMissionGroupRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4349


class TakeMissionGroupRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKEN = 2
    NO_REWARD = 3
    NOT_FINISH = 4


class TakeMissionStepCompensationReqCmdId(betterproto.Enum):
    CMD_ID = 1634


class TakeMissionStepCompensationRspCmdId(betterproto.Enum):
    CMD_ID = 1635


class TakeMissionStepCompensationRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKEN = 2
    NO_REWARD = 3


class TakeMissionThemeRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4209


class TakeMissionThemeRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4210


class TakeMissionThemeRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MISSION_NOT_FINISH = 2
    ALREADY_TAKEN = 3
    EQUIPMENT_FULL = 4
    EQUIPMENT_MATERIAL_LIMIT = 5
    EQUIPMENT_FRAGMENT_LIMIT = 6


class TakeMosaicActivityRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4342


class TakeMosaicActivityRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4343


class TakeMosaicActivityRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKE = 2
    NOT_FINISHED = 3
    NOT_OPEN = 4


class TakeNewbieActivityLevelRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4256


class TakeNewbieActivityLevelRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4257


class TakeNewbieActivityLevelRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_NEWBIE = 2
    HAVE_TAKEN = 3
    NO_REWARD = 4
    LEVEL_LIMIT = 5


class TakeNewbieChallengeRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4285


class TakeNewbieChallengeRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4286


class TakeNewbieChallengeRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LACK = 2
    MATERIAL_LACK = 3
    HAS_TAKE = 4


class TakeNewbiePrivilegeRewardReqCmdId(betterproto.Enum):
    CMD_ID = 1640


class TakeNewbiePrivilegeRewardRspCmdId(betterproto.Enum):
    CMD_ID = 1641


class TakeNewbiePrivilegeRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKEN = 2
    NO_REWARD = 3


class TakeOfflineResourceBoxReqCmdId(betterproto.Enum):
    CMD_ID = 4213


class TakeOfflineResourceBoxRspCmdId(betterproto.Enum):
    CMD_ID = 4214


class TakeOfflineResourceBoxRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_SCHEDULE = 2
    EQUIPMENT_FULL = 3
    EQUIPMENT_MATERIAL_LIMIT = 4
    STAMINA_LACK = 5
    HCOIN_LACK = 6
    MATERIAL_LACK = 7
    BOX_LACK = 8


class TakeOnlineRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4198


class TakeOnlineRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4199


class TakeOnlineRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 2
    LEVEL_NOT_SATISFY = 3
    NOT_REACH = 4
    HAS_TAKE = 5


class TakeOverlapActivityRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4217


class TakeOverlapActivityRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4218


class TakeOverlapActivityRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    HAS_TAKEN = 3
    NOT_FINISH = 4


class TakeRaffleRewardReqCmdId(betterproto.Enum):
    CMD_ID = 3894


class TakeRaffleRewardRspCmdId(betterproto.Enum):
    CMD_ID = 3895


class TakeRaffleRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAVE_TAKEN = 2
    NOT_OPEN = 3
    NOT_DRAW = 4
    NOT_EXIST = 5


class TakeReclaimLevelRewardReqCmdId(betterproto.Enum):
    CMD_ID = 1169


class TakeReclaimLevelRewardRspCmdId(betterproto.Enum):
    CMD_ID = 1170


class TakeReclaimLevelRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LACK_LEVEL = 2
    HAVE_TAKE = 3
    NO_REWARD = 4


class TakeRestaurantOrderReqCmdId(betterproto.Enum):
    CMD_ID = 5868


class TakeRestaurantOrderRspCmdId(betterproto.Enum):
    CMD_ID = 5869


class TakeRestaurantOrderRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ORDER_LIST_EMPTY = 2


class TakeRewardLineActivityRewardReqCmdId(betterproto.Enum):
    CMD_ID = 5892


class TakeRewardLineActivityRewardRspCmdId(betterproto.Enum):
    CMD_ID = 5893


class TakeRewardLineActivityRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    CLOSED = 2
    NO_REWARD = 3
    ACTIVITY_NOT_EXIST = 4


class TakeRollRewardReqCmdId(betterproto.Enum):
    CMD_ID = 645


class TakeRollRewardRspCmdId(betterproto.Enum):
    CMD_ID = 646


class TakeRollRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_ERROR = 2
    REWARD_ERROR = 3
    PROGRESS_LACK = 4
    REWARD_HAS_TAKE = 5


class TakeRpgTaleCollectionRewardReqCmdId(betterproto.Enum):
    CMD_ID = 2309


class TakeRpgTaleCollectionRewardRspCmdId(betterproto.Enum):
    CMD_ID = 2310


class TakeRpgTaleCollectionRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NUM_LACK = 2
    NO_REWARD = 3
    TIME_LIMIT = 4
    HAVE_TAKE = 5


class TakeScDlcChallengeRewardReqCmdId(betterproto.Enum):
    CMD_ID = 6328


class TakeScDlcChallengeRewardRspCmdId(betterproto.Enum):
    CMD_ID = 6329


class TakeScDlcChallengeRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_REWARD = 2


class TakeScDlcDailyQuestRewardReqCmdId(betterproto.Enum):
    CMD_ID = 6324


class TakeScDlcDailyQuestRewardRspCmdId(betterproto.Enum):
    CMD_ID = 6325


class TakeScDlcDailyQuestRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    QUEST_NOT_EXIST = 2
    NOT_FINISH = 3


class TakeShareRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4237


class TakeShareRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4238


class TakeShareRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    INVALID_SHARE_ID = 2
    HAVE_TAKEN = 3


class TakeSlotMachineProgressRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4319


class TakeSlotMachineProgressRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4320


class TakeSlotMachineProgressRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACTIVITY_NOT_OPEN = 2
    NO_REWARD = 3


class TakeStageActChallengeRewardReqCmdId(betterproto.Enum):
    CMD_ID = 458


class TakeStageActChallengeRewardRspCmdId(betterproto.Enum):
    CMD_ID = 459


class TakeStageActChallengeRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKE = 2
    CHALLENGE_NUM_LACK = 3
    PART_FAIL = 4


class TakeTechCollectRewardReqCmdId(betterproto.Enum):
    CMD_ID = 540


class TakeTechCollectRewardRspCmdId(betterproto.Enum):
    CMD_ID = 541


class TakeTechCollectRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TECH_LEVEL_LIMIT = 2
    IN_CD_TIME = 3


class TakeTowerRaidRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4187


class TakeTowerRaidRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4188


class TakeTowerRaidRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAVE_TAKE = 2
    NOT_FINISH = 3


class TakeTradingCardRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4264


class TakeTradingCardRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4265


class TakeTradingCardRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    NOT_JOIN_ARMADA = 3
    TRADE_NUM_LIMIT = 4
    LACK_MATERIAL = 5


class TakeVersionActivityMissionRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4227


class TakeVersionActivityMissionRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4228


class TakeVersionActivityMissionRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    NOT_FINISH = 3
    HAS_TAKEN = 4


class TakeVersionActivityRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4225


class TakeVersionActivityRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4226


class TakeVersionActivityRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    NO_REWARD = 3


class TakeWeekDayActivityCompensationReqCmdId(betterproto.Enum):
    CMD_ID = 1668


class TakeWeekDayActivityCompensationRspCmdId(betterproto.Enum):
    CMD_ID = 1669


class TakeWeekDayActivityCompensationRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKEN = 2
    LEVEL_LACK = 3


class TakeWeekDayActivityReturnCoinReqCmdId(betterproto.Enum):
    CMD_ID = 1034


class TakeWeekDayActivityReturnCoinRspCmdId(betterproto.Enum):
    CMD_ID = 1035


class TakeWeekDayActivityReturnCoinRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_RETURN = 2
    COIN_LIMIT = 3


class TakeWeeklyRoutineRewardReqCmdId(betterproto.Enum):
    CMD_ID = 4231


class TakeWeeklyRoutineRewardRspCmdId(betterproto.Enum):
    CMD_ID = 4232


class TakeWeeklyRoutineRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ROUTINE_CONTRIBUTION_LACK = 2
    HAS_TAKE = 3


class TakeWikiRatingRewardReqCmdId(betterproto.Enum):
    CMD_ID = 1195


class TakeWikiRatingRewardRspCmdId(betterproto.Enum):
    CMD_ID = 1196


class TakeWikiRatingRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TKAE = 3
    SCORE_LACK = 4


class TeamAssaultActivityBeginReqCmdId(betterproto.Enum):
    CMD_ID = 4020


class TeamAssaultActivityBeginRspCmdId(betterproto.Enum):
    CMD_ID = 4021


class TeamAssaultActivityBeginRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    REPEAT_REQ = 3
    LACK_TIMES = 4
    AVATAR_RESTRICT = 5


class TeamAssaultActivityBossBeginReqCmdId(betterproto.Enum):
    CMD_ID = 4024


class TeamAssaultActivityBossBeginRspCmdId(betterproto.Enum):
    CMD_ID = 4025


class TeamAssaultActivityBossBeginRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    ORDER_ERROR = 3
    AVATAR_ERROR = 4
    AVATAR_RESTRICT = 5


class TeamAssaultActivityBossEndReqCmdId(betterproto.Enum):
    CMD_ID = 4026


class TeamAssaultActivityBossEndRspCmdId(betterproto.Enum):
    CMD_ID = 4027


class TeamAssaultActivityBossEndRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    ORDER_ERROR = 3
    CHEAT_ERROR = 4


class TeamAssaultActivityEndReqCmdId(betterproto.Enum):
    CMD_ID = 4022


class TeamAssaultActivityEndRspCmdId(betterproto.Enum):
    CMD_ID = 4023


class TeamAssaultActivityEndRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2


class TeamAssaultActivityResetReqCmdId(betterproto.Enum):
    CMD_ID = 4028


class TeamAssaultActivityResetRspCmdId(betterproto.Enum):
    CMD_ID = 4029


class TeamAssaultActivityResetRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    LACK_TIMES = 4
    NOT_NEED = 5


class TeamLeaderChangeNotifyCmdId(betterproto.Enum):
    CMD_ID = 371


class ThemeWantedBuyExtraDropReqCmdId(betterproto.Enum):
    CMD_ID = 5792


class ThemeWantedBuyExtraDropRspCmdId(betterproto.Enum):
    CMD_ID = 5793


class ThemeWantedBuyExtraDropRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_LACK = 2
    ACTIVITY_NOT_OPEN = 3
    FEATURE_CLOSED = 4


class ThemeWantedRefreshTicketReqCmdId(betterproto.Enum):
    CMD_ID = 5794


class ThemeWantedRefreshTicketRspCmdId(betterproto.Enum):
    CMD_ID = 5795


class ThemeWantedRefreshTicketRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class TileEnterReqCmdId(betterproto.Enum):
    CMD_ID = 4906


class TileEnterRspCmdId(betterproto.Enum):
    CMD_ID = 4907


class TileEnterRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LOCKED = 2


class TileEntityOpNotifyCmdId(betterproto.Enum):
    CMD_ID = 4914


class TileGetTowerReqCmdId(betterproto.Enum):
    CMD_ID = 4904


class TileGetTowerRspCmdId(betterproto.Enum):
    CMD_ID = 4905


class TileGetTowerRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class TileLoadSavedPositionReqCmdId(betterproto.Enum):
    CMD_ID = 4921


class TileLoadSavedPositionRspCmdId(betterproto.Enum):
    CMD_ID = 4922


class TileLoadSavedPositionRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_SAVED = 2


class TileMapUpdateNotifyCmdId(betterproto.Enum):
    CMD_ID = 4923


class TileReportSavedPositionReqCmdId(betterproto.Enum):
    CMD_ID = 4919


class TileReportSavedPositionRspCmdId(betterproto.Enum):
    CMD_ID = 4920


class TileReportSavedPositionRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    POSITION_ERROR = 2


class TileResetFloorReqCmdId(betterproto.Enum):
    CMD_ID = 4912


class TileResetFloorRspCmdId(betterproto.Enum):
    CMD_ID = 4913


class TileResetFloorRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class TileResetRegionReqCmdId(betterproto.Enum):
    CMD_ID = 4917


class TileResetRegionRspCmdId(betterproto.Enum):
    CMD_ID = 4918


class TileResetRegionRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class TileSaveProgressReqCmdId(betterproto.Enum):
    CMD_ID = 4908


class TileSaveProgressRspCmdId(betterproto.Enum):
    CMD_ID = 4909


class TileSaveProgressRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class TileSelectPathReqCmdId(betterproto.Enum):
    CMD_ID = 4915


class TileSelectPathRspCmdId(betterproto.Enum):
    CMD_ID = 4916


class TileSelectPathRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_CANDIDATE = 2


class TileUpdateMapReqCmdId(betterproto.Enum):
    CMD_ID = 4902


class TileUpdateMapReqOuterValueType(betterproto.Enum):
    NONE = 0
    RPG_OVERALL = 1


class TileUpdateMapRspCmdId(betterproto.Enum):
    CMD_ID = 4903


class TileUpdateMapRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class TimeLimitAddUpRewardGrantNotifyCmdId(betterproto.Enum):
    CMD_ID = 257


class TimeLimitAddUpUpdateNotifyCmdId(betterproto.Enum):
    CMD_ID = 258


class TowerRaidLockAvatarNotifyCmdId(betterproto.Enum):
    CMD_ID = 4191


class TownActivityAlterPathReqCmdId(betterproto.Enum):
    CMD_ID = 6478


class TownActivityAlterPathRspCmdId(betterproto.Enum):
    CMD_ID = 6479


class TownActivityAlterPathRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_ALTER = 2
    NOT_MEET_CONDITION = 3


class TownActivityAttackEnemyBuffNotifyCmdId(betterproto.Enum):
    CMD_ID = 6480


class TownActivityBattleReqCmdId(betterproto.Enum):
    CMD_ID = 6456


class TownActivityBattleReqBattleEndStatus(betterproto.Enum):
    WIN = 1
    ALL_DEAD = 2


class TownActivityBattleRspCmdId(betterproto.Enum):
    CMD_ID = 6457


class TownActivityBattleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_ERROR = 2
    AVATAR_TEAM_NUM_ERROR = 3
    POSITION_ERROR = 4
    MONSTER_NOT_EXIST = 5


class TownActivityBossAttackNotifyCmdId(betterproto.Enum):
    CMD_ID = 6465


class TownActivityBuildReqCmdId(betterproto.Enum):
    CMD_ID = 6454


class TownActivityBuildRspCmdId(betterproto.Enum):
    CMD_ID = 6455


class TownActivityBuildRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    INVALID_BRICK = 2
    BLUEPRINT_ERROR = 3
    INVALID_POSITION = 4
    LIMIT = 5


class TownActivityCheckInOptionalReqCmdId(betterproto.Enum):
    CMD_ID = 6474


class TownActivityCheckInOptionalRspCmdId(betterproto.Enum):
    CMD_ID = 6475


class TownActivityCheckInOptionalRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_LIST = 2
    CHECKED_IN = 3


class TownActivityEndNotifyCmdId(betterproto.Enum):
    CMD_ID = 6464


class TownActivityEndNotifyStatus(betterproto.Enum):
    WIN = 0
    LOSE = 1
    ABANDON = 2


class TownActivityGetDataReqCmdId(betterproto.Enum):
    CMD_ID = 6450


class TownActivityGetDataRspCmdId(betterproto.Enum):
    CMD_ID = 6451


class TownActivityGetDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class TownActivityGetShopReqCmdId(betterproto.Enum):
    CMD_ID = 6466


class TownActivityGetShopRspCmdId(betterproto.Enum):
    CMD_ID = 6467


class TownActivityGetShopRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class TownActivityHealAvatarReqCmdId(betterproto.Enum):
    CMD_ID = 6460


class TownActivityHealAvatarRspCmdId(betterproto.Enum):
    CMD_ID = 6461


class TownActivityHealAvatarRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class TownActivityMaterialUseReqCmdId(betterproto.Enum):
    CMD_ID = 6470


class TownActivityMaterialUseRspCmdId(betterproto.Enum):
    CMD_ID = 6471


class TownActivityMaterialUseRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_LACK = 2
    NOT_USABLE = 3
    INVALID_TARGET = 4
    FORBID = 5


class TownActivityRefreshBrickReqCmdId(betterproto.Enum):
    CMD_ID = 6481


class TownActivityRefreshBrickRspCmdId(betterproto.Enum):
    CMD_ID = 6482


class TownActivityRefreshBrickRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LACK_COIN = 2
    NO_BRICK = 3


class TownActivityResetReqCmdId(betterproto.Enum):
    CMD_ID = 6476


class TownActivityResetRspCmdId(betterproto.Enum):
    CMD_ID = 6477


class TownActivityResetRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class TownActivitySaveReqCmdId(betterproto.Enum):
    CMD_ID = 6452


class TownActivitySaveRspCmdId(betterproto.Enum):
    CMD_ID = 6453


class TownActivitySaveRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class TownActivitySellBrickReqCmdId(betterproto.Enum):
    CMD_ID = 6462


class TownActivitySellBrickRspCmdId(betterproto.Enum):
    CMD_ID = 6463


class TownActivitySellBrickRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    CAN_NOT_SELL = 2


class TownActivitySellBuildingReqCmdId(betterproto.Enum):
    CMD_ID = 6458


class TownActivitySellBuildingRspCmdId(betterproto.Enum):
    CMD_ID = 6459


class TownActivitySellBuildingRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    CAN_NOT_SELL = 2


class TownActivityShopBuyReqCmdId(betterproto.Enum):
    CMD_ID = 6468


class TownActivityShopBuyRspCmdId(betterproto.Enum):
    CMD_ID = 6469


class TownActivityShopBuyRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    COIN_LACK = 2
    SOLD = 3
    FORBID = 4


class TownActivitySpeedUpHealReqCmdId(betterproto.Enum):
    CMD_ID = 6472


class TownActivitySpeedUpHealRspCmdId(betterproto.Enum):
    CMD_ID = 6473


class TownActivitySpeedUpHealRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_HEALING = 2
    LACK_MATERIAL = 3


class TownAvatarStatus(betterproto.Enum):
    NORMAL = 0
    HEALING = 1
    DEAD = 2


class TownChallengeStatus(betterproto.Enum):
    NONE = 0
    DOING = 1
    FINISH = 2
    CLOSE = 3


class TransferArmadaLeaderReqCmdId(betterproto.Enum):
    CMD_ID = 2619


class TransferArmadaLeaderRspCmdId(betterproto.Enum):
    CMD_ID = 2620


class TransferArmadaLeaderRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_GRANTED = 2
    NOT_IN_ARMADA = 3
    TARGET_NOT_IN_ARMADA = 4
    LEVEL_LACK = 5


class TriggerBurdenAlleviationReqCmdId(betterproto.Enum):
    CMD_ID = 4354


class TriggerBurdenAlleviationRspCmdId(betterproto.Enum):
    CMD_ID = 4355


class TriggerBurdenAlleviationRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    PLAYER_LEVEL_LIMIT = 3
    TIMES_LIMIT = 4
    STAMINA_LACK = 5
    STAGE_NOT_EXIST = 6
    EQUIPMENT_FULL = 7
    NO_ENTER_TIMES = 8
    EXTRA_MATERIAL_LACK = 9
    RAID_IS_PASS = 10
    WEEKDAY_STAGE_ID_NOT_MATCH = 11
    ACTIVITY_NOT_OPEN = 12


class TriggerOpenworldEndlessTrapReqCmdId(betterproto.Enum):
    CMD_ID = 3428


class TriggerOpenworldEndlessTrapRspCmdId(betterproto.Enum):
    CMD_ID = 3429


class TriggerOpenworldEndlessTrapRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_JOIN = 2


class TriggerRecommendGoodsNotifyCmdId(betterproto.Enum):
    CMD_ID = 1538


class TriggerRpgTaleEventReqCmdId(betterproto.Enum):
    CMD_ID = 2313


class TriggerRpgTaleEventRspCmdId(betterproto.Enum):
    CMD_ID = 2314


class TriggerRpgTaleEventRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NO_EVENT = 2


class TriggerRpgTaleStageEventReqCmdId(betterproto.Enum):
    CMD_ID = 2317


class TriggerRpgTaleStageEventRspCmdId(betterproto.Enum):
    CMD_ID = 2318


class TriggerRpgTaleStageEventRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class TvtBattleBeginNotifyCmdId(betterproto.Enum):
    CMD_ID = 3352


class TvtBattleClientReportNotifyCmdId(betterproto.Enum):
    CMD_ID = 3358


class TvtBattleConfirmNotifyCmdId(betterproto.Enum):
    CMD_ID = 3361


class TvtBattleEndNotifyCmdId(betterproto.Enum):
    CMD_ID = 3353


class TvtBattleInfoBattlePhase(betterproto.Enum):
    PHASE_INVALID = 0
    PHASE_CONFIRM = 1
    PHASE_PREPARE = 2
    PHASE_FIGHT = 3
    PHASE_FINISH = 4


class TvtBattleMemberPrepareNotifyCmdId(betterproto.Enum):
    CMD_ID = 3351


class TvtBattleResultBattleStatus(betterproto.Enum):
    INVALID = 0
    LEFT_WIN = 1
    RIGHT_WIN = 2


class TvtBattleRobotSettleNotifyCmdId(betterproto.Enum):
    CMD_ID = 3363


class TvtBattleSettleNotifyCmdId(betterproto.Enum):
    CMD_ID = 3354


class TvtBattleStageMessageMessageType(betterproto.Enum):
    MESSAGE_ITEM = 1
    MESSAGE_AVATAR_HP = 2
    MESSAGE_PLAYER_WAVE = 3
    MESSAGE_BOSS_DAMAGE = 4
    MESSAGE_STAGE_SCOIN = 5
    MESSAGE_CLIENT_DEFINE = 6
    MESSAGE_ROUND_SCORE = 7


class TvtCardGetDataReqCmdId(betterproto.Enum):
    CMD_ID = 3309


class TvtCardGetDataRspCmdId(betterproto.Enum):
    CMD_ID = 3310


class TvtCardGetDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LOCKED = 2


class TvtCardLevelUpReqCmdId(betterproto.Enum):
    CMD_ID = 3311


class TvtCardLevelUpRspCmdId(betterproto.Enum):
    CMD_ID = 3312


class TvtCardLevelUpRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LACK_MATERIAL = 2
    LOCKED = 3
    MAX_LEVEL = 4


class TvtCardTakeSeasonReturnReqCmdId(betterproto.Enum):
    CMD_ID = 3315


class TvtCardTakeSeasonReturnRspCmdId(betterproto.Enum):
    CMD_ID = 3316


class TvtCardTakeSeasonReturnRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LOCKED = 2
    HAS_TAKE = 3


class TvtCardTransformMaterialReqCmdId(betterproto.Enum):
    CMD_ID = 3317


class TvtCardTransformMaterialRspCmdId(betterproto.Enum):
    CMD_ID = 3318


class TvtCardTransformMaterialRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LOCKED = 2


class TvtCardUpdateSuiteReqCmdId(betterproto.Enum):
    CMD_ID = 3313


class TvtCardUpdateSuiteRspCmdId(betterproto.Enum):
    CMD_ID = 3314


class TvtCardUpdateSuiteRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LOCKED = 2


class TvtEnterShopReqCmdId(betterproto.Enum):
    CMD_ID = 3359


class TvtEnterShopRspCmdId(betterproto.Enum):
    CMD_ID = 3360


class TvtEnterShopRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_BATTLE = 2


class TvtGetStageScheduleReqCmdId(betterproto.Enum):
    CMD_ID = 3307


class TvtGetStageScheduleRspCmdId(betterproto.Enum):
    CMD_ID = 3308


class TvtGetStageScheduleRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_SCHEDULE = 2


class TvtTakeMissionGroupRewardReqCmdId(betterproto.Enum):
    CMD_ID = 3305


class TvtTakeMissionGroupRewardRspCmdId(betterproto.Enum):
    CMD_ID = 3306


class TvtTakeMissionGroupRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_SCHEDULE = 2
    MISSION_NOT_FINISH = 3
    HAS_TAKEN = 4


class TvtUpdateLineupInfoNotifyCmdId(betterproto.Enum):
    CMD_ID = 3362


class UltraEndlessBriefDataNotifyCmdId(betterproto.Enum):
    CMD_ID = 5210


class UltraEndlessClientReportNotifyCmdId(betterproto.Enum):
    CMD_ID = 5219


class UltraEndlessClientReportNotifyClientReportType(betterproto.Enum):
    CLIENT_REPORT_TYPE_NONE = 0
    CLIENT_REPORT_TYPE_STAGE_BEGIN = 1


class UltraEndlessCommonNotifyCmdId(betterproto.Enum):
    CMD_ID = 5298


class UltraEndlessCommonNotifyEventType(betterproto.Enum):
    EVENT_NONE = 0
    EVENT_IN_SETTLE = 1


class UltraEndlessEnterSiteReqCmdId(betterproto.Enum):
    CMD_ID = 5211


class UltraEndlessEnterSiteRspCmdId(betterproto.Enum):
    CMD_ID = 5212


class UltraEndlessEnterSiteRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_SCHEDULE = 2
    PRE_NOT_FINISH = 3
    ALREADY_FINISH = 4


class UltraEndlessFirstJoinRewardNotifyCmdId(betterproto.Enum):
    CMD_ID = 5220


class UltraEndlessGetMainDataReqCmdId(betterproto.Enum):
    CMD_ID = 5202


class UltraEndlessGetMainDataRspCmdId(betterproto.Enum):
    CMD_ID = 5203


class UltraEndlessGetMainDataRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    PLAYER_LEVEL_LACK = 2
    NOT_OPEN = 3
    IN_OLD_ENDLESS = 4
    FEATURE_CLOSED = 5


class UltraEndlessGetTopRankReqCmdId(betterproto.Enum):
    CMD_ID = 5200


class UltraEndlessGetTopRankRspCmdId(betterproto.Enum):
    CMD_ID = 5201


class UltraEndlessGetTopRankRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class UltraEndlessLastSettleRewardNotifyCmdId(betterproto.Enum):
    CMD_ID = 5205


class UltraEndlessReportSiteFloorReqCmdId(betterproto.Enum):
    CMD_ID = 5206


class UltraEndlessReportSiteFloorRspCmdId(betterproto.Enum):
    CMD_ID = 5207


class UltraEndlessReportSiteFloorRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    PRE_NOT_FINISH = 2
    NOT_IN_SCHEDULE = 3


class UltraEndlessTopRankRewardReqCmdId(betterproto.Enum):
    CMD_ID = 5215


class UltraEndlessTopRankRewardRspCmdId(betterproto.Enum):
    CMD_ID = 5216


class UltraEndlessTopRankRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_RANK = 2
    ALREADY_TAKEN = 3


class UnbindAccountReqCmdId(betterproto.Enum):
    CMD_ID = 961


class UnbindAccountRspCmdId(betterproto.Enum):
    CMD_ID = 962


class UnbindAccountRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ACCOUNT_VERIFY_ERROR = 2
    ACCOUNT_TYPE_ERROR = 3
    NOT_BIND = 4
    IS_LOGIN = 5


class UnlockAvatarSkillReqCmdId(betterproto.Enum):
    CMD_ID = 88


class UnlockAvatarSkillRspCmdId(betterproto.Enum):
    CMD_ID = 89


class UnlockAvatarSkillRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2
    HAS_UNLOCK = 3
    AVATAR_LEVEL_LACK = 4
    AVATAR_STAR_LACK = 5
    MATERIAL_LACK = 6


class UnlockDeviceSecurityPasswordReqCmdId(betterproto.Enum):
    CMD_ID = 5027


class UnlockDeviceSecurityPasswordRspCmdId(betterproto.Enum):
    CMD_ID = 5028


class UnlockDeviceSecurityPasswordRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TOO_MANY_FAILS = 2
    WRONG_PASSWORD = 3


class UnlockDlcPhotoReqCmdId(betterproto.Enum):
    CMD_ID = 3586


class UnlockDlcPhotoRspCmdId(betterproto.Enum):
    CMD_ID = 3587


class UnlockDlcPhotoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class UnlockDormHouseReqCmdId(betterproto.Enum):
    CMD_ID = 609


class UnlockDormHouseRspCmdId(betterproto.Enum):
    CMD_ID = 610


class UnlockDormHouseRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    REPEAT_UNLOCK = 2
    MATERIAL_LIMIT = 3
    LEVEL_LIMIT = 4


class UnlockFarmSlotReqCmdId(betterproto.Enum):
    CMD_ID = 1387


class UnlockFarmSlotRspCmdId(betterproto.Enum):
    CMD_ID = 1388


class UnlockFarmSlotRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    FARM_LEVEL_LACK = 2
    MATERIAL_LACK = 3


class UnlockFurnitureReqCmdId(betterproto.Enum):
    CMD_ID = 680


class UnlockFurnitureRspCmdId(betterproto.Enum):
    CMD_ID = 681


class UnlockFurnitureRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    UNLOCK_FORBID = 2
    HAS_UNLOCK = 3
    HCOIN_LACK = 4
    SCOIN_LACK = 5
    MATERIAL_LACK = 6


class UnlockGobackFundReqCmdId(betterproto.Enum):
    CMD_ID = 1651


class UnlockGobackFundRspCmdId(betterproto.Enum):
    CMD_ID = 1652


class UnlockGobackFundRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ALREADY_UNLOCKED = 2
    MCOIN_LACK = 3


class UnlockPrivilegeReqCmdId(betterproto.Enum):
    CMD_ID = 1642


class UnlockPrivilegeRspCmdId(betterproto.Enum):
    CMD_ID = 1643


class UnlockPrivilegeRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LEVEL_LACK = 2
    NEWBIE_SCHEDULE_ERROR = 3
    NEWBIE_DAY_LACK = 4
    BUY_TIMES_LACK = 5
    MCOIN_LACK = 6


class UnlockRpgTaleSiteReqCmdId(betterproto.Enum):
    CMD_ID = 2307


class UnlockRpgTaleSiteRspCmdId(betterproto.Enum):
    CMD_ID = 2308


class UnlockRpgTaleSiteRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    UNLOCKED = 2
    MATERIAL_NOT_ENOUGH = 3
    FLAG_LIMIT = 4


class UpdateAssistantAvatarIdReqCmdId(betterproto.Enum):
    CMD_ID = 271


class UpdateAssistantAvatarIdRspCmdId(betterproto.Enum):
    CMD_ID = 272


class UpdateAssistantAvatarIdRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2


class UpdateAvatarTeamNotifyCmdId(betterproto.Enum):
    CMD_ID = 49


class UpdateClientSettingNotifyCmdId(betterproto.Enum):
    CMD_ID = 5002


class UpdateClientSettingReqCmdId(betterproto.Enum):
    CMD_ID = 1271


class UpdateCustomAvatarTeamReqCmdId(betterproto.Enum):
    CMD_ID = 269


class UpdateCustomAvatarTeamRspCmdId(betterproto.Enum):
    CMD_ID = 270


class UpdateCustomAvatarTeamRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    TEAM_ID_ERROR = 2
    AVATAR_ID_ERROR = 3
    AVATAR_NUM_ERROR = 4
    SENSITIVE_WORDS = 5
    NAME_LEN_ERROR = 6


class UpdateEquipmentProtectedStatusReqCmdId(betterproto.Enum):
    CMD_ID = 74


class UpdateEquipmentProtectedStatusRspCmdId(betterproto.Enum):
    CMD_ID = 75


class UpdateEquipmentProtectedStatusRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    EQUIPMENT_NOT_EXIST = 2


class UpdateLobbyLineupReqCmdId(betterproto.Enum):
    CMD_ID = 307


class UpdateLobbyLineupRspCmdId(betterproto.Enum):
    CMD_ID = 308


class UpdateLobbyLineupRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_LOBBY = 2
    AVATAR_NOT_EXIST = 3
    STATUS_ERROR = 4
    SERVER_BUSY = 5
    ELF_NOT_EXIST = 6


class UpdateLobbySettingReqCmdId(betterproto.Enum):
    CMD_ID = 1365


class UpdateLobbySettingRspCmdId(betterproto.Enum):
    CMD_ID = 1366


class UpdateLobbySettingRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_LOBBY = 2
    NOT_LEADER = 3
    TEAM_NAME_ERROR = 4


class UpdateMissionProgressReqCmdId(betterproto.Enum):
    CMD_ID = 117


class UpdateMissionProgressRspCmdId(betterproto.Enum):
    CMD_ID = 118


class UpdateMissionProgressRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    FINISH_WAY_ERROR = 2
    PLAYER_STATUS_ERROR = 3


class UpdateRogueStageAvatarPositionReqCmdId(betterproto.Enum):
    CMD_ID = 286


class UpdateRogueStageAvatarPositionRspCmdId(betterproto.Enum):
    CMD_ID = 287


class UpdateRogueStageAvatarPositionRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_JOIN_ARMADA = 2
    NOT_INIT = 3
    AVATAR_ERROR = 4


class UpdateRoomInfoReqCmdId(betterproto.Enum):
    CMD_ID = 3171


class UpdateRoomInfoRspCmdId(betterproto.Enum):
    CMD_ID = 3172


class UpdateRoomInfoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_IN_ROOM = 2
    IN_MATCH = 3
    NOT_LEADER = 4
    STAGE_NOT_IN_SCHEDULE = 5
    TOO_FREQUENT = 6


class UpdateScDlcFeverSuiteReqCmdId(betterproto.Enum):
    CMD_ID = 6304


class UpdateScDlcFeverSuiteRspCmdId(betterproto.Enum):
    CMD_ID = 6305


class UpdateScDlcFeverSuiteRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    SENSITIVE_WORDS = 2
    SLOT_LACK = 3
    INVALID_SKILL_CHIP = 4
    NAME_FORMAT_ERROR = 5


class UpdateTowerRaidBossReqCmdId(betterproto.Enum):
    CMD_ID = 4189


class UpdateTowerRaidBossRspCmdId(betterproto.Enum):
    CMD_ID = 4190


class UpdateTowerRaidBossRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_BEGIN = 2
    STAGE_ERROR = 3


class UpgradeMissionThemeReqCmdId(betterproto.Enum):
    CMD_ID = 4207


class UpgradeMissionThemeRspCmdId(betterproto.Enum):
    CMD_ID = 4208


class UpgradeMissionThemeRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    HCOIN_LACK = 3
    MCOIN_LACK = 4
    MATERIAL_LACK = 5


class UrgencyMsgNotifyCmdId(betterproto.Enum):
    CMD_ID = 187


class UseMaterialReqCmdId(betterproto.Enum):
    CMD_ID = 251


class UseMaterialRspCmdId(betterproto.Enum):
    CMD_ID = 252


class UseMaterialRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_LACK = 2
    EQUIPMENT_FULL = 3
    EQUIPMENT_MATERIAL_LIMIT = 4
    EQUIPMENT_FRAGMENT_LIMIT = 5
    STAMINA_FULL = 6
    LEVEL_LACK = 7
    EXTRA_STORY_CLOSED = 8
    EQUIPMENT_EXPIRE = 9
    BUFF_MATERIAL_FAIL = 10
    ACTIVATE_AVATAR_REPEATE_FAIL = 11
    ACTIVATE_AVATAR_LEVEL_LIMIT = 12
    NO_ARMADA = 13
    MATRIX_CLOSE = 14
    EXPLORE_POWER_LIMIT = 15
    INVALID_NUM = 16
    TEAM_NOT_EXIST = 17
    TEAM_FULL_ENERGE = 18
    VITALITY_FULL = 19
    FEATURE_CLOSED = 20
    ACTIVITY_NOT_OPEN = 21
    AVATAR_NEED = 22
    CONSUME_ITEM_NOT_EXIST = 23
    CONSUME_ITEM_IN_USE = 24
    CONSUME_ITEM_REPEAT = 25
    CONSUME_ITEM_PROTECTED = 26
    COST_GACHA_TICKET = 27
    COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 28
    COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 29
    CONSUME_ITEM_IN_FACILITY = 30
    CONSUME_ITEM_GRAND_KEY = 31
    CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 32


class UseOpenworldEndlessItemReqCmdId(betterproto.Enum):
    CMD_ID = 3422


class UseOpenworldEndlessItemRspCmdId(betterproto.Enum):
    CMD_ID = 3423


class UseOpenworldEndlessItemRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ITEM_LACK = 2
    INVASION_AVATAR_ERROR = 3
    TARGET_ERROR = 4
    TARGET_GROUP_ERROR = 5
    OUT_OF_RANGE = 6
    INVASION_FULL = 7
    INVASION_ID_ERROR = 8
    ENDLESS_STATUS_ERROR = 9
    NOT_JOIN = 10
    TRAP_FULL = 11


class UseReclaimItemReqCmdId(betterproto.Enum):
    CMD_ID = 1181


class UseReclaimItemRspCmdId(betterproto.Enum):
    CMD_ID = 1182


class UseReclaimItemRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    ITEM_ERROR = 2
    ITEM_LACK = 3


class VerifyGoogleOrderNotifyCmdId(betterproto.Enum):
    CMD_ID = 247


class VerifyGoogleOrderNotifyGoogleType(betterproto.Enum):
    GOOGLE_JAPAN = 1
    GOOGLE_TW = 2
    GOOGLE_KR = 3
    GOOGLE_OVERSEAS = 4
    GOOGLE_GLOBAL = 5


class VerifyItunesOrderNotifyCmdId(betterproto.Enum):
    CMD_ID = 82


class VerifyMyCardOrderNotifyCmdId(betterproto.Enum):
    CMD_ID = 370


class VerifySamSungOrderNotifyCmdId(betterproto.Enum):
    CMD_ID = 1581


class VerifySteamOrderNotifyCmdId(betterproto.Enum):
    CMD_ID = 1650


class VirtualAvatarGroupChangeNotifyCmdId(betterproto.Enum):
    CMD_ID = 3512


class VirtualGachaStatus(betterproto.Enum):
    NORMAL = 0
    EMPTY = 1


class VirtualGachaReqCmdId(betterproto.Enum):
    CMD_ID = 3508


class VirtualGachaRspCmdId(betterproto.Enum):
    CMD_ID = 3509


class VirtualGachaRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    WAIT_CHOOSE = 2
    MATERIAL_LACK = 3
    EMPTY = 4


class VirtualTrainCommonGroupType(betterproto.Enum):
    GROUP_CHAPTER = 1
    GROUP_RPG_TALE = 2


class VirtualTrainCommonItemType(betterproto.Enum):
    ITEM_NONE = 0
    ITEM_AVATAR = 1
    ITEM_WEAPON = 2
    ITEM_STIGMATA = 3
    ITEM_BUFF = 4


class VirtualTrainCommonVirtualAvatarType(betterproto.Enum):
    VIRTUAL_AVATAR_NONE = 0
    VIRTUAL_AVATAR_NORMAL = 1
    VIRTUAL_AVATAR_QAVATAR = 2


class VirtualTrainDirectGachaNotifyCmdId(betterproto.Enum):
    CMD_ID = 3513


class VirtualTrainEvoReqCmdId(betterproto.Enum):
    CMD_ID = 3522


class VirtualTrainEvoRspCmdId(betterproto.Enum):
    CMD_ID = 3523


class VirtualTrainEvoRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    AVATAR_NOT_EXIST = 2
    NO_NEXT_AVATAR = 3
    CAN_NOT_EVO = 4
    MATERIAL_LACK = 5
    EVO_LIMIT = 6


class VirtualTrainItemDropNotifyCmdId(betterproto.Enum):
    CMD_ID = 3524


class VirtualTrainItemDropNotifyDropSrcType(betterproto.Enum):
    DROP_SRC_NONE = 0
    DROP_SRC_RPG_STAGE = 1
    DROP_SRC_RPG_MISSION = 2
    DROP_SRC_RPG_QAVATAR = 3
    DROP_SRC_GM = 10


class VirtualTrainRoleCustomChooseReqCmdId(betterproto.Enum):
    CMD_ID = 3520


class VirtualTrainRoleCustomChooseRspCmdId(betterproto.Enum):
    CMD_ID = 3521


class VirtualTrainRoleCustomChooseRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    LOCKED = 2
    ROLE_NOT_EXIST = 3


class VirtualTrainRoleCustomLevelUpReqCmdId(betterproto.Enum):
    CMD_ID = 3518


class VirtualTrainRoleCustomLevelUpRspCmdId(betterproto.Enum):
    CMD_ID = 3519


class VirtualTrainRoleCustomLevelUpRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    MATERIAL_NOT_ENOUGH = 2
    LEVEL_MAX = 3
    ROLE_NOT_EXIST = 4
    STAGE_NOT_FINISH = 5
    PRE_CUSTOM_LEVEL_LACK = 6


class WantedMirrorRecoveryReqCmdId(betterproto.Enum):
    CMD_ID = 1517


class WantedMirrorRecoveryRspCmdId(betterproto.Enum):
    CMD_ID = 1518


class WantedMirrorRecoveryRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    NOT_OPEN = 2
    LOCK = 3
    CONSUME_ITEM_NOT_EXIST = 4
    CONSUME_ITEM_IN_USE = 5
    CONSUME_ITEM_REPEAT = 6
    CONSUME_ITEM_PROTECTED = 7
    COST_GACHA_TICKET = 8
    COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 9
    COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 10
    CONSUME_ITEM_GRAND_KEY = 11
    CONSUME_ITEM_IN_FACILITY = 12
    LACK_TICKET = 13
    CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 14


class WarshipItemReturnMaterialNotifyCmdId(betterproto.Enum):
    CMD_ID = 5462


class WatchReplayReqCmdId(betterproto.Enum):
    CMD_ID = 5406


class WatchReplayRspCmdId(betterproto.Enum):
    CMD_ID = 5407


class WatchReplayRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class WeekDayActivitySweepReqCmdId(betterproto.Enum):
    CMD_ID = 1664


class WeekDayActivitySweepRspCmdId(betterproto.Enum):
    CMD_ID = 1665


class WeekDayActivitySweepRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1


class WikiTakeActivitySuitRewardReqCmdId(betterproto.Enum):
    CMD_ID = 1592


class WikiTakeActivitySuitRewardRspCmdId(betterproto.Enum):
    CMD_ID = 1593


class WikiTakeActivitySuitRewardRspRetcode(betterproto.Enum):
    SUCC = 0
    FAIL = 1
    HAS_TAKE = 2
    NOT_GET = 3


@dataclass(eq=False, repr=False)
class AccelerateRestaurantWorkReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    room_id: int = betterproto.uint32_field(2)
    num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AccelerateRestaurantWorkRsp(betterproto.Message):
    retcode: "AccelerateRestaurantWorkRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    room_id: int = betterproto.uint32_field(3)
    num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class AcceptFriendInviteReq(betterproto.Message):
    invite_code: str = betterproto.string_field(1)
    invite_type: "InviteeActivityType" = betterproto.enum_field(2)
    schedule_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AcceptFriendInviteRsp(betterproto.Message):
    retcode: "AcceptFriendInviteRspRetcode" = betterproto.enum_field(1)
    invite_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AcceptGratuityStageReq(betterproto.Message):
    accept_type: "GratuityAcceptType" = betterproto.enum_field(1)
    player_info: "GratuityPlayerInfo" = betterproto.message_field(2)
    stage_meta_list: List["GratuityStageMeta"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class AcceptGratuityStageRsp(betterproto.Message):
    retcode: "AcceptGratuityStageRspRetcode" = betterproto.enum_field(1)
    stage_list: List["GratuityStage"] = betterproto.message_field(2)
    accept_type: "GratuityAcceptType" = betterproto.enum_field(3)
    today_left_free_stage_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class AcceptScDlcDailyQuestReq(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AcceptScDlcDailyQuestRsp(betterproto.Message):
    retcode: "AcceptScDlcDailyQuestRspRetcode" = betterproto.enum_field(1)
    quest: "OpenworldQuest" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AccountBuffReward(betterproto.Message):
    scoin_reward: int = betterproto.uint32_field(1)
    avatar_exp_reward: int = betterproto.uint32_field(2)
    player_exp_reward: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ActivateTrialAvatarReq(betterproto.Message):
    sample_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ActivateTrialAvatarRsp(betterproto.Message):
    retcode: "ActivateTrialAvatarRspRetcode" = betterproto.enum_field(1)
    avatar: "TrialAvatar" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ActiveRaidReq(betterproto.Message):
    active_type: "RaidActiveType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ActiveRaidRsp(betterproto.Message):
    retcode: "ActiveRaidRspRetcode" = betterproto.enum_field(1)
    active_type: "RaidActiveType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class ActiveScDlcFeverSuiteReq(betterproto.Message):
    suite_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ActiveScDlcFeverSuiteRsp(betterproto.Message):
    retcode: "ActiveScDlcFeverSuiteRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ActivityBuff(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    candidate_buff_id_list: List[int] = betterproto.uint32_field(2)
    buff_list: List["ActivityBuffBuff"] = betterproto.message_field(3)
    charge_value: int = betterproto.uint32_field(4)
    buff_charged_times: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ActivityBuffBuff(betterproto.Message):
    buff_id: int = betterproto.uint32_field(1)
    buff_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ActivityGachaData(betterproto.Message):
    ticket_hcoin_cost: int = betterproto.uint32_field(2)
    ticket_material_id: int = betterproto.uint32_field(3)
    cost_material_id: int = betterproto.uint32_field(4)
    cost_material_num: int = betterproto.uint32_field(5)
    baodi_times: int = betterproto.uint32_field(6)
    gacha_type: "GachaType" = betterproto.enum_field(9)
    gacha_times: int = betterproto.uint32_field(10)
    display_protect_entry_list: List["ProtectEntry"] = betterproto.message_field(11)
    is_protect_recycle: bool = betterproto.bool_field(12)
    display_protect_times: int = betterproto.uint32_field(13)
    no_protect_gacha_times: int = betterproto.uint32_field(14)
    gacha_ex_reward_info: "GachaExRewardInfo" = betterproto.message_field(15)
    display_setting_dict: "SettingDict" = betterproto.message_field(16)
    wish_well_data: "WishWellData" = betterproto.message_field(17)


@dataclass(eq=False, repr=False)
class ActivityPanelSwitchData(betterproto.Message):
    panel_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ActivityRewardStatisticData(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    item_data_list: List["ActivityRewardStatisticItemData"] = betterproto.message_field(
        2
    )


@dataclass(eq=False, repr=False)
class ActivityRewardStatisticItemData(betterproto.Message):
    show_id: int = betterproto.uint32_field(1)
    num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ActivitySeries(betterproto.Message):
    series_id: int = betterproto.uint32_field(1)
    available_sweep_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ActivitySwitchData(betterproto.Message):
    activity_type: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AddAvatarExpByMaterialReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    material_id: int = betterproto.uint32_field(2)
    material_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AddAvatarExpByMaterialRsp(betterproto.Message):
    retcode: "AddAvatarExpByMaterialRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class AddElfExpByMaterialReq(betterproto.Message):
    elf_id: int = betterproto.uint32_field(1)
    material_id: int = betterproto.uint32_field(2)
    material_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AddElfExpByMaterialRsp(betterproto.Message):
    retcode: "AddElfExpByMaterialRspRetcode" = betterproto.enum_field(1)
    old_level: int = betterproto.uint32_field(2)
    old_exp: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AddFriendReq(betterproto.Message):
    action: "AddFriendAction" = betterproto.enum_field(1)
    target_uid_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AddFriendRsp(betterproto.Message):
    retcode: "AddFriendRspRetcode" = betterproto.enum_field(1)
    action: "AddFriendAction" = betterproto.enum_field(2)
    target_uid_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AddGoodfeelReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    add_goodfeel: int = betterproto.int32_field(2)
    add_goodfeel_type: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AddGoodfeelRsp(betterproto.Message):
    retcode: "AddGoodfeelRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class AddOnActivityRewardNotify(betterproto.Message):
    mission_id: int = betterproto.uint32_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AddScDlcSupportNpcExpReq(betterproto.Message):
    npc_id: int = betterproto.uint32_field(1)
    material_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AddScDlcSupportNpcExpRsp(betterproto.Message):
    retcode: "AddScDlcSupportNpcExpRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class AddTechExpReq(betterproto.Message):
    material_id: int = betterproto.uint32_field(1)
    material_num: int = betterproto.uint32_field(2)
    map_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AddTechExpRsp(betterproto.Message):
    retcode: "AddTechExpRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class AddToBlackListReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AddToBlackListRsp(betterproto.Message):
    retcode: "AddToBlackListRspRetcode" = betterproto.enum_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AdventureAvatar(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    star: int = betterproto.uint32_field(2)
    skill_list: List["AdventureAvatarSkill"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class AdventureAvatarSkill(betterproto.Message):
    skill_id: int = betterproto.uint32_field(1)
    skill_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AdventureDecorationSlot(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    furniture_id: int = betterproto.uint32_field(2)
    direction: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AdventureGroupAvailableQuest(betterproto.Message):
    pool_id: int = betterproto.uint32_field(1)
    quest_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AdventureGroupAvatar(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    finished_record_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AdventureGroupQuest(betterproto.Message):
    pool_id: int = betterproto.uint32_field(1)
    quest_id: int = betterproto.uint32_field(2)
    accept_time: int = betterproto.uint32_field(3)
    avatar_list: List[int] = betterproto.uint32_field(4)
    status: int = betterproto.uint32_field(5)
    elf_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class AdventureStorySweepReq(betterproto.Message):
    sweep_id: int = betterproto.uint32_field(1)
    avatar_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AdventureStorySweepRsp(betterproto.Message):
    retcode: "AdventureStorySweepRspRetcode" = betterproto.enum_field(1)
    sweep_data: "IslandStorySweepData" = betterproto.message_field(2)
    used_stamina: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AnswerQuestionReq(betterproto.Message):
    question_id: int = betterproto.uint32_field(1)
    answer_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AnswerQuestionRsp(betterproto.Message):
    retcode: "AnswerQuestionRspRetcode" = betterproto.enum_field(1)
    question: "Question" = betterproto.message_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class AntiAddict(betterproto.Message):
    child_age: int = betterproto.uint32_field(1)
    teenage_age: int = betterproto.uint32_field(2)
    age: int = betterproto.uint32_field(3)
    max_today_recharge_price: int = betterproto.uint32_field(4)
    is_max_game_time: bool = betterproto.bool_field(5)
    is_force_kick: bool = betterproto.bool_field(6)
    warning_today_recharge_price: int = betterproto.uint32_field(7)
    warning_game_time: int = betterproto.uint32_field(8)
    is_warning_game_time: bool = betterproto.bool_field(9)
    max_game_time: int = betterproto.uint32_field(10)
    is_force_kick_for_latest_time: bool = betterproto.bool_field(11)
    is_force_kick_for_max_time: bool = betterproto.bool_field(12)
    teenager_login_latest_time: str = betterproto.string_field(13)
    teenager_login_earliest_time: str = betterproto.string_field(14)
    is_lastest_time: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class AntiAddictNotify(betterproto.Message):
    msg_type: "AntiAddictNotifyAntiAddictMsgType" = betterproto.enum_field(1)
    msg: str = betterproto.string_field(2)
    level: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class AntiCheatReportReq(betterproto.Message):
    cheat_type: int = betterproto.uint32_field(1)
    ext: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class AntiCheatReportRsp(betterproto.Message):
    retcode: "AntiCheatReportRspRetcode" = betterproto.enum_field(1)
    cheat_type: int = betterproto.uint32_field(2)
    progress_way: "AntiCheatReportRspProgressWay" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class ApplyJoinArmadaReq(betterproto.Message):
    armada_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ApplyJoinArmadaRsp(betterproto.Message):
    retcode: "ApplyJoinArmadaRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ArmadaActivity(betterproto.Message):
    type: "ArmadaActivityType" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    begin_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)
    open_day_time: int = betterproto.uint32_field(5)
    close_day_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ArmadaApply(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    brief_data: "PlayerFriendBriefData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaApplyNotify(betterproto.Message):
    type: "ArmadaApplyNotifyType" = betterproto.enum_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaApplyResult(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    brief_data: "PlayerFriendBriefData" = betterproto.message_field(2)
    agree: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class ArmadaBossGetMpStatusReq(betterproto.Message):
    uid_list: List[int] = betterproto.uint32_field(1)
    is_fight_body: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class ArmadaBossGetMpStatusRsp(betterproto.Message):
    retcode: "ArmadaBossGetMpStatusRspRetcode" = betterproto.enum_field(1)
    member_status_list: List["ArmadaBossMemberStatus"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaBossMemberStatus(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    error_status: int = betterproto.uint32_field(2)
    next_fight_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ArmadaBossroom(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaBriefData(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    level: int = betterproto.uint32_field(3)
    bulletin: str = betterproto.string_field(4)
    apply_level: int = betterproto.uint32_field(5)
    auto_pass: bool = betterproto.bool_field(6)
    auto_pass_level: int = betterproto.uint32_field(7)
    fund: int = betterproto.uint32_field(8)
    fund_cap: int = betterproto.uint32_field(9)
    ap: int = betterproto.uint32_field(10)
    ap_cap: int = betterproto.uint32_field(11)
    popl: int = betterproto.uint32_field(12)
    popl_cap: int = betterproto.uint32_field(13)
    member_num: int = betterproto.uint32_field(14)
    member_cap: int = betterproto.uint32_field(15)
    leader_id: int = betterproto.uint32_field(16)
    leader_name: str = betterproto.string_field(17)
    contact: str = betterproto.string_field(18)
    contribution: int = betterproto.uint32_field(19)
    is_low_popl: bool = betterproto.bool_field(20)
    recent_contribution: int = betterproto.uint32_field(21)
    active_level: int = betterproto.uint32_field(23)
    active_member_num: int = betterproto.uint32_field(24)
    friend_uid_list: List[int] = betterproto.uint32_field(25)
    leader_brief_data: "PlayerFriendBriefData" = betterproto.message_field(26)
    label: "ArmadaLabel" = betterproto.message_field(27)


@dataclass(eq=False, repr=False)
class ArmadaBuildNotify(betterproto.Message):
    type: "ArmadaBuildNotifyType" = betterproto.enum_field(1)
    armada_data: "ArmadaData" = betterproto.message_field(2)
    grid_list: List["ArmadaGrid"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ArmadaBulletinNotify(betterproto.Message):
    bulletin: str = betterproto.string_field(1)
    contact: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class ArmadaContact(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    member_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ArmadaData(betterproto.Message):
    brief: "ArmadaBriefData" = betterproto.message_field(1)
    member_list: List["ArmadaMember"] = betterproto.message_field(2)
    position: "ArmadaPosition" = betterproto.enum_field(3)
    grid_list: List["ArmadaGrid"] = betterproto.message_field(4)
    contact_list: List["ArmadaContact"] = betterproto.message_field(5)
    hangar_list: List["ArmadaHangar"] = betterproto.message_field(6)
    workshop_list: List["ArmadaWorkshop"] = betterproto.message_field(7)
    exchequer_list: List["ArmadaExchequer"] = betterproto.message_field(8)
    bossroom_list: List["ArmadaBossroom"] = betterproto.message_field(9)
    level_up_cabin_type: "ArmadaCabinType" = betterproto.enum_field(10)
    level_up_cabin_id: int = betterproto.uint32_field(11)
    level_up_end_time: int = betterproto.uint32_field(12)
    dissolve_time: int = betterproto.uint32_field(13)
    armada_player_data: "ArmadaPlayerData" = betterproto.message_field(14)
    impeach_data: "ArmadaImpeachData" = betterproto.message_field(15)
    is_armada_change_name_free: bool = betterproto.bool_field(16)


@dataclass(eq=False, repr=False)
class ArmadaDiscoveryRewardConfig(betterproto.Message):
    discovery: int = betterproto.uint32_field(1)
    reward_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaExchequer(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaGrid(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    type: "ArmadaCabinType" = betterproto.enum_field(2)
    cabin_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ArmadaHangar(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaImpeachData(betterproto.Message):
    impeach_status: int = betterproto.uint32_field(1)
    optional_leader_list: List["ArmadaOptionalLeader"] = betterproto.message_field(2)
    election_end_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ArmadaLabel(betterproto.Message):
    prefix_id: int = betterproto.uint32_field(1)
    label_id_list: List[int] = betterproto.uint32_field(2)
    recruit: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class ArmadaLogoutNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ArmadaManageNotify(betterproto.Message):
    type: "ArmadaManageNotifyType" = betterproto.enum_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixActivateBuffReq(betterproto.Message):
    buff_id: int = betterproto.uint32_field(1)
    activated: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixActivateBuffRsp(betterproto.Message):
    retcode: "ArmadaMatrixActivateBuffRspRetcode" = betterproto.enum_field(1)
    buff_id: int = betterproto.uint32_field(2)
    activated: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixActiveReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ArmadaMatrixActiveRsp(betterproto.Message):
    retcode: "ArmadaMatrixActiveRspRetcode" = betterproto.enum_field(1)
    active_days: int = betterproto.uint32_field(2)
    supply_add: int = betterproto.uint32_field(3)
    cur_supply: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ArmadaMatrixAdvancePath(betterproto.Message):
    path_from: "ArmadaMatrixGridPos" = betterproto.message_field(1)
    path_to: "ArmadaMatrixGridPos" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixAdvanceReq(betterproto.Message):
    from_: "ArmadaMatrixGridPos" = betterproto.message_field(1)
    to: "ArmadaMatrixGridPos" = betterproto.message_field(2)
    path_list: List["ArmadaMatrixAdvancePath"] = betterproto.message_field(3)
    cur_schedule_id: int = betterproto.uint32_field(4)
    level: int = betterproto.uint32_field(5)
    map_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ArmadaMatrixAdvanceRsp(betterproto.Message):
    retcode: "ArmadaMatrixRetcodeRetcode" = betterproto.enum_field(1)
    cur_pos: "ArmadaMatrixGridPos" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixAnswerQuestionReq(betterproto.Message):
    pos: "ArmadaMatrixGridPos" = betterproto.message_field(1)
    question_id: int = betterproto.uint32_field(2)
    answer_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixAnswerQuestionRsp(betterproto.Message):
    retcode: "ArmadaMatrixAnswerQuestionRspRetcode" = betterproto.enum_field(1)
    question: "Question" = betterproto.message_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixArmadaBoss(betterproto.Message):
    max_hp: int = betterproto.uint32_field(1)
    left_hp: int = betterproto.uint32_field(2)
    item_lay_list: List["ArmadaMatrixItemLay"] = betterproto.message_field(3)
    damage_uid_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ArmadaMatrixArmadaOverview(betterproto.Message):
    member_num: int = betterproto.uint32_field(1)
    deep_level: int = betterproto.uint32_field(2)
    deep_level_uid: int = betterproto.uint32_field(3)
    total_explore_value: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ArmadaMatrixAskSupplyReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ArmadaMatrixAskSupplyRsp(betterproto.Message):
    retcode: "ArmadaMatrixAskSupplyRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ArmadaMatrixBuffData(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    num: int = betterproto.uint32_field(2)
    activated: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixChangeLevelReq(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    cur_schedule_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixChangeLevelRsp(betterproto.Message):
    retcode: "ArmadaMatrixRetcodeRetcode" = betterproto.enum_field(1)
    level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixChoosePathReq(betterproto.Message):
    path_list: List["ArmadaMatrixGridPos"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ArmadaMatrixChoosePathRsp(betterproto.Message):
    retcode: "ArmadaMatrixChoosePathRspRetcode" = betterproto.enum_field(1)
    target_pos: "ArmadaMatrixGridPos" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixChooseTemporaryDepositReq(betterproto.Message):
    chosen_deposit_list: List["ArmadaMatrixChosenDeposit"] = betterproto.message_field(
        1
    )


@dataclass(eq=False, repr=False)
class ArmadaMatrixChooseTemporaryDepositRsp(betterproto.Message):
    retcode: "ArmadaMatrixRetcodeRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ArmadaMatrixChosenDeposit(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    deposit: "ArmadaMatrixTemporaryDeposit" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixConfirmPosReq(betterproto.Message):
    target_pos: "ArmadaMatrixGridPos" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ArmadaMatrixConfirmPosRsp(betterproto.Message):
    retcode: "ArmadaMatrixConfirmPosRspRetcode" = betterproto.enum_field(1)
    cur_pos: "ArmadaMatrixGridPos" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixDialogChooseEventReq(betterproto.Message):
    select_event_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ArmadaMatrixDialogChooseEventRsp(betterproto.Message):
    retcode: "ArmadaMatrixDialogChooseEventRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ArmadaMatrixDialogEventNotify(betterproto.Message):
    dialog_event_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ArmadaMatrixExchangeExplorePowerReq(betterproto.Message):
    stamina: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ArmadaMatrixExchangeExplorePowerRsp(betterproto.Message):
    retcode: "ArmadaMatrixRetcodeRetcode" = betterproto.enum_field(1)
    explore_power_added: int = betterproto.uint32_field(2)
    exp_added: int = betterproto.uint32_field(3)
    exp_convert_scoin: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ArmadaMatrixExitCondition(betterproto.Message):
    floor_id: int = betterproto.uint32_field(1)
    exit_condition_id: int = betterproto.uint32_field(2)
    progress: int = betterproto.uint32_field(3)
    status: "ArmadaMatrixExitConditionStatus" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class ArmadaMatrixExitConditionSyncNotify(betterproto.Message):
    exit_condition: "ArmadaMatrixExitCondition" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ArmadaMatrixFireBossItemReq(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    pos: "ArmadaMatrixGridPos" = betterproto.message_field(2)
    item_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixFireBossItemRsp(betterproto.Message):
    retcode: "ArmadaMatrixFireBossItemRspRetcode" = betterproto.enum_field(1)
    explore_add: int = betterproto.uint32_field(2)
    lay_uid: int = betterproto.uint32_field(3)
    boss_left_hp: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetAvatarTeamReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetAvatarTeamRsp(betterproto.Message):
    retcode: "ArmadaMatrixRetcodeRetcode" = betterproto.enum_field(1)
    team_list: List["ArmadaMatrixTeamInfo"] = betterproto.message_field(2)
    avatar_list: List["ArmadaMatrixPlayerAvatarInfo"] = betterproto.message_field(3)
    cur_team_index: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetExchangeExplorePowerInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetExchangeExplorePowerInfoRsp(betterproto.Message):
    retcode: "ArmadaMatrixRetcodeRetcode" = betterproto.enum_field(1)
    stamina_exchanged: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetGenericItemReq(betterproto.Message):
    item_id_list: List[int] = betterproto.uint32_field(1)
    buff_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetGenericItemRsp(betterproto.Message):
    retcode: "ArmadaMatrixGetGenericItemRspRetcode" = betterproto.enum_field(1)
    item_list: List["GenericItemNum"] = betterproto.message_field(2)
    buff_list: List["ArmadaMatrixBuffData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetLevelBriefDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetLevelBriefDataRsp(betterproto.Message):
    retcode: "ArmadaMatrixRetcodeRetcode" = betterproto.enum_field(1)
    level_data_list: List["ArmadaMatrixLevelBriefData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetLocationReq(betterproto.Message):
    location_type: "ArmadaMatrixLocationType" = betterproto.enum_field(1)
    uid: int = betterproto.uint32_field(2)
    level: int = betterproto.uint32_field(3)
    pos: "ArmadaMatrixGridPos" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetLocationRsp(betterproto.Message):
    retcode: "ArmadaMatrixGetLocationRspRetcode" = betterproto.enum_field(1)
    location_type: "ArmadaMatrixLocationType" = betterproto.enum_field(2)
    level: int = betterproto.uint32_field(3)
    pos: "ArmadaMatrixGridPos" = betterproto.message_field(4)
    player_info: "ArmadaMatrixMemberPos" = betterproto.message_field(5)
    stage_info: "ArmadaMatrixStageConfig" = betterproto.message_field(6)
    map_info: "ArmadaMatrixMapInfo" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetLockedGridInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetLockedGridInfoRsp(betterproto.Message):
    retcode: "ArmadaMatrixRetcodeRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetMainInfoReq(betterproto.Message):
    cur_schedule_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    is_schedule_refresh: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetMainInfoRsp(betterproto.Message):
    retcode: "ArmadaMatrixRetcodeRetcode" = betterproto.enum_field(1)
    matrix_map_info: "ArmadaMatrixMapInfo" = betterproto.message_field(2)
    player_main_info: "ArmadaMatrixPlayerMainInfo" = betterproto.message_field(3)
    settle_info: "ArmadaMatrixSettleInfo" = betterproto.message_field(4)
    exit_condition: "ArmadaMatrixExitCondition" = betterproto.message_field(5)
    level_brief_list: List["ArmadaMatrixLevelBrief"] = betterproto.message_field(6)
    map_cycle_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetOverviewReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetOverviewRsp(betterproto.Message):
    retcode: "ArmadaMatrixRetcodeRetcode" = betterproto.enum_field(1)
    player_overview: "ArmadaMatrixPlayerOverview" = betterproto.message_field(2)
    armada_overview: "ArmadaMatrixArmadaOverview" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetRandomInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetRandomInfoRsp(betterproto.Message):
    retcode: "ArmadaMatrixGetRandomInfoRspRetcode" = betterproto.enum_field(1)
    stage_list: List["ArmadaMatrixStageConfig"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetRankListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetRankListRsp(betterproto.Message):
    retcode: "ArmadaMatrixRetcodeRetcode" = betterproto.enum_field(1)
    rank_item_list: List["ArmadaMatrixRankItem"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetScheduleReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetScheduleRsp(betterproto.Message):
    retcode: "ArmadaMatrixRetcodeRetcode" = betterproto.enum_field(1)
    open_time: int = betterproto.uint32_field(2)
    close_time: int = betterproto.uint32_field(3)
    settle_time: int = betterproto.uint32_field(4)
    open_day_time: int = betterproto.uint32_field(5)
    close_day_time: int = betterproto.uint32_field(6)
    group_id: int = betterproto.uint32_field(7)
    schedule_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetScoreRewardInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetScoreRewardInfoRsp(betterproto.Message):
    retcode: "ArmadaMatrixRetcodeRetcode" = betterproto.enum_field(1)
    reward_granted_id_list: List[int] = betterproto.uint32_field(2)
    armada_reward_granted_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetTemporaryDepositReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ArmadaMatrixGetTemporaryDepositRsp(betterproto.Message):
    retcode: "ArmadaMatrixRetcodeRetcode" = betterproto.enum_field(1)
    deposit_list: List["ArmadaMatrixTemporaryDeposit"] = betterproto.message_field(2)
    choosen_idx_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGrantScoreRewardNotify(betterproto.Message):
    reward_list: List["RewardData"] = betterproto.message_field(1)
    id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGrid(betterproto.Message):
    pos: "ArmadaMatrixGridPos" = betterproto.message_field(1)
    type: "ArmadaMatrixGridType" = betterproto.enum_field(2)
    state: "ArmadaMatrixGridState" = betterproto.enum_field(3)
    is_visited: bool = betterproto.bool_field(4)
    is_win: bool = betterproto.bool_field(5)
    preset_id: int = betterproto.uint32_field(6)
    show_type: int = betterproto.uint32_field(7)
    armada_boss: "ArmadaMatrixArmadaBoss" = betterproto.message_field(8)
    expire_time: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGridDetail(betterproto.Message):
    pos: "ArmadaMatrixGridPos" = betterproto.message_field(1)
    stage_info: "ArmadaMatrixStageConfig" = betterproto.message_field(2)
    shop_info: "ArmadaMatrixShopInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixGridPos(betterproto.Message):
    row_index: int = betterproto.uint32_field(1)
    col_index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixInteractNotify(betterproto.Message):
    type: "ArmadaMatrixInteractNotifyInteractType" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    interact_uid: int = betterproto.uint32_field(3)
    supply_add: int = betterproto.uint32_field(4)
    explore_add: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ArmadaMatrixItemLay(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    lay_uid: int = betterproto.uint32_field(2)
    lay_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixLeaveMsgSyncNotify(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    pos: "ArmadaMatrixGridPos" = betterproto.message_field(2)
    msg_idx: int = betterproto.uint32_field(3)
    level: int = betterproto.uint32_field(4)
    map_id: int = betterproto.uint32_field(5)
    uid: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ArmadaMatrixLevelBrief(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    map_id: int = betterproto.uint32_field(2)
    buff_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixLevelBriefData(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    monster_left: int = betterproto.uint32_field(2)
    treasure_left: int = betterproto.uint32_field(3)
    shop_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ArmadaMatrixLevelBriefDataNotify(betterproto.Message):
    level_data: "ArmadaMatrixLevelBriefData" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ArmadaMatrixMapInfo(betterproto.Message):
    vision_grid_list: List["ArmadaMatrixGrid"] = betterproto.message_field(1)
    cur_level: int = betterproto.uint32_field(2)
    current_pos: "ArmadaMatrixGridPos" = betterproto.message_field(3)
    member_pos_list: List["ArmadaMatrixMemberPos"] = betterproto.message_field(4)
    map_id: int = betterproto.uint32_field(5)
    width: int = betterproto.uint32_field(6)
    height: int = betterproto.uint32_field(7)
    is_all: bool = betterproto.bool_field(8)
    floor_id: int = betterproto.uint32_field(9)
    floor_buff_id: int = betterproto.uint32_field(10)
    msg_pos_list: List["ArmadaMatrixMsgPos"] = betterproto.message_field(11)
    item_temp_buff: int = betterproto.uint32_field(12)
    is_locked: bool = betterproto.bool_field(13)
    event_temp_buff_list: List[int] = betterproto.uint32_field(14)
    flare_grid_list: List["ArmadaMatrixGrid"] = betterproto.message_field(15)
    grid_detail_list: List["ArmadaMatrixGridDetail"] = betterproto.message_field(16)
    random_grid_list: List["ArmadaMatrixRandomGrid"] = betterproto.message_field(17)


@dataclass(eq=False, repr=False)
class ArmadaMatrixMemberPos(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    pos: "ArmadaMatrixGridPos" = betterproto.message_field(2)
    avatar_id: int = betterproto.uint32_field(3)
    cur_level: int = betterproto.uint32_field(4)
    ask_supply_time: int = betterproto.uint32_field(5)
    cur_supply: int = betterproto.uint32_field(6)
    explore_value: int = betterproto.uint32_field(7)
    boom_item_num: int = betterproto.uint32_field(8)
    supply_item_num: int = betterproto.uint32_field(9)
    monster_defeat: int = betterproto.uint32_field(10)
    armada_boss_defeat: int = betterproto.uint32_field(11)
    collect_item_num: int = betterproto.uint32_field(12)
    collect_buff_num: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ArmadaMatrixMonster(betterproto.Message):
    monster_id: int = betterproto.uint32_field(1)
    num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixMsgPos(betterproto.Message):
    pos: "ArmadaMatrixGridPos" = betterproto.message_field(1)
    msg_list: List["ArmadaMatrixMsgPosMessage"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixMsgPosMessage(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    msg_idx: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixOuterItem(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixPlayerAvatarInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    state: "ArmadaMatrixAvatarState" = betterproto.enum_field(2)
    cur_fatigue: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixPlayerAvatarSyncNotify(betterproto.Message):
    avatar_list: List["ArmadaMatrixPlayerAvatarInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ArmadaMatrixPlayerMainInfo(betterproto.Message):
    explore_power: int = betterproto.uint32_field(1)
    explore_value: int = betterproto.uint32_field(2)
    honkai_energy: int = betterproto.uint32_field(3)
    total_explore_value: int = betterproto.uint32_field(4)
    take_fatigue_reward_days: int = betterproto.uint32_field(5)
    cur_supply: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ArmadaMatrixPlayerMainInfoSyncNotify(betterproto.Message):
    player_main_info: "ArmadaMatrixPlayerMainInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ArmadaMatrixPlayerOverview(betterproto.Message):
    monster_defeated: int = betterproto.uint32_field(1)
    boss_defeated: int = betterproto.uint32_field(2)
    honkai_energy: int = betterproto.uint32_field(3)
    treasure_found: int = betterproto.uint32_field(4)
    item_gathered: int = betterproto.uint32_field(5)
    buff_got: int = betterproto.uint32_field(6)
    shop_found: int = betterproto.uint32_field(7)
    region_marked: int = betterproto.uint32_field(8)
    explore_value: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ArmadaMatrixQuestionNotify(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    pos: "ArmadaMatrixGridPos" = betterproto.message_field(2)
    question_pool_id: int = betterproto.uint32_field(3)
    question_list: List["Question"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ArmadaMatrixRandomEvent(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    event_type: "ArmadaMatrixEventType" = betterproto.enum_field(2)
    param: int = betterproto.int32_field(3)
    deposit: "ArmadaMatrixTemporaryDeposit" = betterproto.message_field(4)
    outer_item: "ArmadaMatrixOuterItem" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ArmadaMatrixRandomEventNotify(betterproto.Message):
    pos: "ArmadaMatrixGridPos" = betterproto.message_field(1)
    random_event: "ArmadaMatrixRandomEvent" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixRandomGrid(betterproto.Message):
    pos: "ArmadaMatrixGridPos" = betterproto.message_field(1)
    grid_type: int = betterproto.uint32_field(2)
    expire_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixRankItem(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    explore_value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixRetcode(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ArmadaMatrixSetAvatarTeamReq(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    team_info: "ArmadaMatrixTeamInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixSetAvatarTeamRsp(betterproto.Message):
    retcode: "ArmadaMatrixRetcodeRetcode" = betterproto.enum_field(1)
    index: int = betterproto.uint32_field(2)
    team_info: "ArmadaMatrixTeamInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixSetCurAvatarTeamReq(betterproto.Message):
    index: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ArmadaMatrixSetCurAvatarTeamRsp(betterproto.Message):
    retcode: "ArmadaMatrixRetcodeRetcode" = betterproto.enum_field(1)
    cur_team_index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixSettleInfo(betterproto.Message):
    explore_value: int = betterproto.uint32_field(1)
    total_explore_value: int = betterproto.uint32_field(2)
    explore_winner: "ArmadaMatrixSettleWinner" = betterproto.message_field(3)
    monster_winner: "ArmadaMatrixSettleWinner" = betterproto.message_field(4)
    honkai_energy_winner: "ArmadaMatrixSettleWinner" = betterproto.message_field(5)
    floor_id: int = betterproto.uint32_field(6)
    monster_defeated: int = betterproto.uint32_field(7)
    boss_defeated: int = betterproto.uint32_field(8)
    treasure_found: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ArmadaMatrixSettleWinner(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixShopBuyReq(betterproto.Message):
    pos: "ArmadaMatrixGridPos" = betterproto.message_field(1)
    goods_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixShopBuyRsp(betterproto.Message):
    retcode: "ArmadaMatrixShopBuyRspRetcode" = betterproto.enum_field(1)
    goods_id: int = betterproto.uint32_field(2)
    is_sold: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixShopInfo(betterproto.Message):
    shop_id: int = betterproto.uint32_field(1)
    goods_list: List["DropItem"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixShopSyncNotify(betterproto.Message):
    shop: "PlayerMatrixShop" = betterproto.message_field(1)
    pos: "ArmadaMatrixGridPos" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixStageBattleNotify(betterproto.Message):
    stage_config: "ArmadaMatrixStageConfig" = betterproto.message_field(1)
    pos: "ArmadaMatrixGridPos" = betterproto.message_field(2)
    boss_lose_hp_percent: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixStageBeginReq(betterproto.Message):
    pos: "ArmadaMatrixGridPos" = betterproto.message_field(1)
    avatar_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixStageBeginRsp(betterproto.Message):
    retcode: "ArmadaMatrixRetcodeRetcode" = betterproto.enum_field(1)
    drop_item_list: List["DropItem"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixStageConfig(betterproto.Message):
    preset_id: int = betterproto.uint32_field(1)
    hard_level: int = betterproto.uint32_field(2)
    monster_list: List["ArmadaMatrixMonster"] = betterproto.message_field(3)
    monster_buff_list: List[int] = betterproto.uint32_field(4)
    discovery_value: int = betterproto.uint32_field(5)
    honkai_energy: int = betterproto.uint32_field(6)
    fund_reward: int = betterproto.uint32_field(7)
    displayer_drop_list: List[int] = betterproto.uint32_field(8)
    supply_cost: int = betterproto.uint32_field(9)
    armada_boss: "ArmadaMatrixArmadaBoss" = betterproto.message_field(10)
    armada_discovery_value: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class ArmadaMatrixStageDropItem(betterproto.Message):
    matrix_material_id: int = betterproto.uint32_field(1)
    matrix_material_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixStageEndReq(betterproto.Message):
    pos: "ArmadaMatrixGridPos" = betterproto.message_field(1)
    end_status: "StageEndStatus" = betterproto.enum_field(2)
    cheat_data_list: List["StageCheatData"] = betterproto.message_field(3)
    drop_item_list: List["DropItem"] = betterproto.message_field(4)
    boss_lose_hp_percent: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ArmadaMatrixStageEndRsp(betterproto.Message):
    retcode: "ArmadaMatrixRetcodeRetcode" = betterproto.enum_field(1)
    drop_item_list: List["DropItem"] = betterproto.message_field(2)
    matrix_drop_item_list: List["DropItem"] = betterproto.message_field(3)
    discovery_value: int = betterproto.uint32_field(4)
    honkai_energy: int = betterproto.uint32_field(5)
    fund_reward: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ArmadaMatrixSyncArmadaInfoNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    total_explore_value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixSyncMemberNotify(betterproto.Message):
    member: "ArmadaMatrixMemberPos" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ArmadaMatrixSyncNotify(betterproto.Message):
    matrix_map_info: "ArmadaMatrixMapInfo" = betterproto.message_field(1)
    notify_type: "ArmadaMatrixSyncNotifyType" = betterproto.enum_field(2)
    schedule_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixTakeFatigueRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ArmadaMatrixTakeFatigueRewardRsp(betterproto.Message):
    retcode: "ArmadaMatrixTakeFatigueRewardRspRetcode" = betterproto.enum_field(1)
    reward_num: int = betterproto.uint32_field(2)
    item_id: int = betterproto.uint32_field(3)
    item_count: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ArmadaMatrixTeamInfo(betterproto.Message):
    avatar_id_list: List[int] = betterproto.uint32_field(1)
    index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixTemporaryBuffSyncNotify(betterproto.Message):
    item_temp_buff: int = betterproto.uint32_field(1)
    event_temp_buff_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixTemporaryDeposit(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixTransportNotify(betterproto.Message):
    target_pos: "ArmadaMatrixGridPos" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ArmadaMatrixTreasure(betterproto.Message):
    treasure_id: int = betterproto.uint32_field(1)
    treasure_item: "DropItem" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixTreasureNotify(betterproto.Message):
    pos: "ArmadaMatrixGridPos" = betterproto.message_field(1)
    treasure: "ArmadaMatrixTreasure" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixUseItemNotify(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    target_list: List[int] = betterproto.uint32_field(2)
    cur_schedule_id: int = betterproto.uint32_field(3)
    level: int = betterproto.uint32_field(4)
    map_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ArmadaMatrixUseItemReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    target_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaMatrixUseItemRsp(betterproto.Message):
    retcode: "ArmadaMatrixUseItemRspRetcode" = betterproto.enum_field(1)
    id: int = betterproto.uint32_field(2)
    target_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ArmadaMatrixUseTempBuffReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ArmadaMatrixUseTempBuffRsp(betterproto.Message):
    retcode: "ArmadaMatrixUseTempBuffRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ArmadaMember(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    position: "ArmadaPosition" = betterproto.enum_field(2)
    brief_data: "PlayerFriendBriefData" = betterproto.message_field(3)
    week_popl: int = betterproto.uint32_field(4)
    total_popl: int = betterproto.uint32_field(5)
    week_fund: int = betterproto.uint32_field(6)
    total_fund: int = betterproto.uint32_field(7)
    week_contribution: int = betterproto.uint32_field(8)
    total_contribution: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ArmadaMemberDiscovery(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    week_discovery: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaOptionalLeader(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    contribution: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaPlayerContributionSyncNotify(betterproto.Message):
    armada_contribution: int = betterproto.uint32_field(1)
    uid: int = betterproto.uint32_field(2)
    week_contribution: int = betterproto.uint32_field(3)
    total_contribution: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ArmadaPlayerData(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    take_achievement_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaPlayerNotify(betterproto.Message):
    type: "ArmadaPlayerNotifyType" = betterproto.enum_field(1)
    target_uid: int = betterproto.uint32_field(2)
    member: "ArmadaMember" = betterproto.message_field(3)
    member_list: List[int] = betterproto.uint32_field(5)
    new_name: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class ArmadaReunionMission(betterproto.Message):
    mission_id: int = betterproto.uint32_field(1)
    finish_times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaReunionPlayer(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    material_list: List["Material"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaReunionRewardNotify(betterproto.Message):
    mission: "ArmadaReunionMission" = betterproto.message_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ArmadaSendMailReq(betterproto.Message):
    content: str = betterproto.string_field(1)
    sender: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class ArmadaSendMailRsp(betterproto.Message):
    retcode: "ArmadaSendMailRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ArmadaStageBeginReq(betterproto.Message):
    avatar_id_list: List[int] = betterproto.uint32_field(1)
    is_fight_body: bool = betterproto.bool_field(2)
    is_mp_mode: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class ArmadaStageBeginRsp(betterproto.Message):
    retcode: "ArmadaStageBeginRspRetcode" = betterproto.enum_field(1)
    is_fight_body: bool = betterproto.bool_field(2)
    is_mp_mode: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class ArmadaStageEndReq(betterproto.Message):
    boss_damage: int = betterproto.uint32_field(1)
    end_status: "StageEndStatus" = betterproto.enum_field(2)
    cheat_type: int = betterproto.uint32_field(3)
    cheat_data_list: List["StageCheatData"] = betterproto.message_field(4)
    is_fight_body: bool = betterproto.bool_field(5)
    body: "StageEndReqBody" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class ArmadaStageEndRsp(betterproto.Message):
    retcode: "ArmadaStageEndRspRetcode" = betterproto.enum_field(1)
    add_scoin: int = betterproto.uint32_field(2)
    end_status: "StageEndStatus" = betterproto.enum_field(3)
    is_fight_body: bool = betterproto.bool_field(5)
    body: "StageEndReqBody" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class ArmadaStageFightInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    total_damage: int = betterproto.uint32_field(2)
    is_fight_body: bool = betterproto.bool_field(3)
    kill_reward_material_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ArmadaStageScore(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ArmadaStageScorePlayerScore(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)
    avatar_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ArmadaSystemChatMsg(betterproto.Message):
    type: "ArmadaSystemChatMsgType" = betterproto.enum_field(1)
    uid: int = betterproto.uint32_field(2)
    nickname: str = betterproto.string_field(3)
    avatar_id: int = betterproto.uint32_field(4)
    dress_id: int = betterproto.uint32_field(5)
    time: int = betterproto.uint32_field(6)
    gacha_type: "GachaType" = betterproto.enum_field(7)
    item_id: int = betterproto.uint32_field(8)
    target_avatar_id: int = betterproto.uint32_field(9)
    mission_id: int = betterproto.uint32_field(10)
    armada_level: int = betterproto.uint32_field(11)
    cabin_type: "ArmadaCabinType" = betterproto.enum_field(12)
    cabin_level: int = betterproto.uint32_field(13)
    position: "ArmadaPosition" = betterproto.enum_field(14)
    target_uid: int = betterproto.uint32_field(15)
    popl_cost: int = betterproto.uint32_field(16)
    old_name: str = betterproto.string_field(17)
    new_name: str = betterproto.string_field(18)
    text_map: str = betterproto.string_field(19)


@dataclass(eq=False, repr=False)
class ArmadaWorkshop(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AskForMasterOrPupilReq(betterproto.Message):
    type: "MasterPupilType" = betterproto.enum_field(1)
    ask_uid: int = betterproto.uint32_field(2)
    time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AskForMasterOrPupilRsp(betterproto.Message):
    retcode: "MasterPupilRetcodeRetcode" = betterproto.enum_field(1)
    type: "MasterPupilType" = betterproto.enum_field(2)
    ask_uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AsMasterPupilCardReq(betterproto.Message):
    card: "MasterPupilCard" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AsMasterPupilCardRsp(betterproto.Message):
    retcode: "MasterPupilRetcodeRetcode" = betterproto.enum_field(1)
    cd_end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AssignRestaurantWorkReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    room_id: int = betterproto.uint32_field(2)
    avatar_id: int = betterproto.uint32_field(3)
    material_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class AssignRestaurantWorkRsp(betterproto.Message):
    retcode: "AssignRestaurantWorkRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    room_id: int = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(4)
    material_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class AssistantFrozen(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    left_frozen_time: int = betterproto.uint32_field(2)
    left_assistant_times: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AssistGratuityStageReq(betterproto.Message):
    stage_unique_id: int = betterproto.uint32_field(1)
    player_info: "GratuityPlayerInfo" = betterproto.message_field(2)
    relation_tag: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AssistGratuityStageRsp(betterproto.Message):
    retcode: "AssistGratuityStageRspRetcode" = betterproto.enum_field(1)
    stage: "GratuityStage" = betterproto.message_field(2)
    relation_tag: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class Avatar(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    star: int = betterproto.uint32_field(2)
    level: int = betterproto.uint32_field(3)
    exp: int = betterproto.uint32_field(4)
    fragment: int = betterproto.uint32_field(5)
    weapon_unique_id: int = betterproto.uint32_field(6)
    stigmata_unique_id_1: int = betterproto.uint32_field(7)
    stigmata_unique_id_2: int = betterproto.uint32_field(8)
    stigmata_unique_id_3: int = betterproto.uint32_field(9)
    skill_list: List["AvatarSkill"] = betterproto.message_field(10)
    touch_goodfeel: int = betterproto.uint32_field(11)
    today_has_add_goodfeel: int = betterproto.uint32_field(12)
    stage_goodfeel: int = betterproto.uint32_field(13)
    dress_list: List[int] = betterproto.uint32_field(14)
    dress_id: int = betterproto.uint32_field(15)
    mode: "AvatarBindEquipMode" = betterproto.enum_field(17)
    avatar_artifact: "AvatarArtifactDetail" = betterproto.message_field(18)
    sub_star: int = betterproto.uint32_field(19)


@dataclass(eq=False, repr=False)
class AvatarArtifactDetail(betterproto.Message):
    artifact_id: int = betterproto.uint32_field(1)
    artifact_level: int = betterproto.uint32_field(2)
    is_artifact_switch_on: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class AvatarArtifactLevelUpReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    artifact_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarArtifactLevelUpRsp(betterproto.Message):
    retcode: "AvatarArtifactLevelUpRspRetcode" = betterproto.enum_field(1)
    avatar_id: int = betterproto.uint32_field(2)
    artifact_id: int = betterproto.uint32_field(3)
    avatar_detail: "AvatarDetailData" = betterproto.message_field(4)
    reward_data: "RewardData" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class AvatarArtifactSwitch(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    is_artifact_switch_on: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class AvatarArtifactUnlockReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    artifact_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarArtifactUnlockRsp(betterproto.Message):
    retcode: "AvatarArtifactUnlockRspRetcode" = betterproto.enum_field(1)
    avatar_id: int = betterproto.uint32_field(2)
    artifact_id: int = betterproto.uint32_field(3)
    reward_data: "RewardData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class AvatarBindEquipData(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    weapon_uid: int = betterproto.uint32_field(2)
    stigmata_uid_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AvatarBriefInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    avatar_level: int = betterproto.uint32_field(2)
    avatar_star: int = betterproto.uint32_field(3)
    weapon_id: int = betterproto.uint32_field(4)
    stigmata_id_list: List[int] = betterproto.uint32_field(5)
    sub_weapon_id: int = betterproto.uint32_field(6)
    dress_id: int = betterproto.uint32_field(7)
    is_artifact_switch_on: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class AvatarCostPlusConfig(betterproto.Message):
    star: int = betterproto.uint32_field(1)
    cost_plus: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarDetailData(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    avatar_star: int = betterproto.uint32_field(2)
    avatar_level: int = betterproto.uint32_field(3)
    weapon: "WeaponDetailData" = betterproto.message_field(4)
    stigmata_1: "StigmataDetailData" = betterproto.message_field(5)
    stigmata_2: "StigmataDetailData" = betterproto.message_field(6)
    stigmata_3: "StigmataDetailData" = betterproto.message_field(7)
    skill_list: List["AvatarSkillDetailData"] = betterproto.message_field(8)
    dress_id: int = betterproto.uint32_field(9)
    avatar_combat: int = betterproto.uint32_field(10)
    avatar_artifact: "AvatarArtifactDetail" = betterproto.message_field(12)
    avatar_sub_star: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class AvatarEquipBuff(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    buff_name: str = betterproto.string_field(2)
    buff_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AvatarEquipSuite(betterproto.Message):
    suite_id: int = betterproto.uint32_field(1)
    weapon_unique_id: int = betterproto.uint32_field(2)
    stigmata_unique_id_1: int = betterproto.uint32_field(3)
    stigmata_unique_id_2: int = betterproto.uint32_field(4)
    stigmata_unique_id_3: int = betterproto.uint32_field(5)
    suite_name: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class AvatarFragment(betterproto.Message):
    fragment_id: int = betterproto.uint32_field(1)
    num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarFragmentSwitchData(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AvatarFragmentTransformReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarFragmentTransformRsp(betterproto.Message):
    retcode: "AvatarFragmentTransformRspRetcode" = betterproto.enum_field(1)
    return_id: int = betterproto.uint32_field(2)
    return_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AvatarReviveReq(betterproto.Message):
    is_retry: bool = betterproto.bool_field(1)
    revive_use_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarReviveRsp(betterproto.Message):
    retcode: "AvatarReviveRspRetcode" = betterproto.enum_field(1)
    revive_times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarRoll(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)
    has_take_group_list: List[int] = betterproto.uint32_field(3)
    is_unlock: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class AvatarSkill(betterproto.Message):
    skill_id: int = betterproto.uint32_field(1)
    sub_skill_list: List["AvatarSubSkill"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AvatarSkillDetailData(betterproto.Message):
    skill_id: int = betterproto.uint32_field(1)
    sub_skill_list: List["AvatarSubSkillDetailData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AvatarStarUpReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AvatarStarUpRsp(betterproto.Message):
    retcode: "AvatarStarUpRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class AvatarSubSkill(betterproto.Message):
    sub_skill_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    is_mask: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class AvatarSubSkillDetailData(betterproto.Message):
    sub_skill_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    is_mask: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class AvatarSubSkillLevelUpReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    skill_id: int = betterproto.uint32_field(2)
    sub_skill_id: int = betterproto.uint32_field(3)
    is_level_up_all: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class AvatarSubSkillLevelUpRsp(betterproto.Message):
    retcode: "AvatarSubSkillLevelUpRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class AvatarSuite(betterproto.Message):
    avatar: "ObjSelected" = betterproto.message_field(1)
    weapon: "ObjSelected" = betterproto.message_field(2)
    stigmata_list: List["ObjSelected"] = betterproto.message_field(3)
    skill: "ObjSelected" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class AvatarSuiteSelection(betterproto.Message):
    status: "AvatarSuiteSelectionStatus" = betterproto.enum_field(1)
    sys_id: "AvatarSuiteSelectionSystem" = betterproto.enum_field(2)
    begin_time: int = betterproto.uint32_field(3)
    cur_step: "AvatarSuiteSelectionStep" = betterproto.enum_field(4)
    choice_list: List[int] = betterproto.uint32_field(5)
    avatar_suite: "AvatarSuite" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class AvatarSuiteSelectionNotify(betterproto.Message):
    avatar_selection: "AvatarSuiteSelection" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AvatarTeam(betterproto.Message):
    stage_type: int = betterproto.uint32_field(1)
    avatar_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BackEquipmentActivity(betterproto.Message):
    mainid_list: List[int] = betterproto.uint32_field(1)
    remain_back_times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BackEquipmentReq(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class BackEquipmentRsp(betterproto.Message):
    retcode: "BackEquipmentRspRetcode" = betterproto.enum_field(1)
    unique_id_list: List[int] = betterproto.uint32_field(2)
    material_list: List["Material"] = betterproto.message_field(3)
    remain_back_times: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BattleChatParam(betterproto.Message):
    battle_mode: "BattleMode" = betterproto.enum_field(1)
    battle_para: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BattlePassMission(betterproto.Message):
    mission_id: int = betterproto.uint32_field(1)
    mission_finish_times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BattlePassSwitchData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BattlePassThemeExpTransformNotify(betterproto.Message):
    add_exp: int = betterproto.uint32_field(1)
    add_theme_exp: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BbqActivityCookReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    bonus_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BbqActivityCookRsp(betterproto.Message):
    retcode: "BbqActivityCookRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)
    bbq_level: int = betterproto.uint32_field(4)
    bbq_exp: int = betterproto.uint32_field(5)
    can_use_bbq_count: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class BbqActivityTakeLevelUpRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class BbqActivityTakeLevelUpRewardRsp(betterproto.Message):
    retcode: "BbqActivityTakeLevelUpRewardRspRetcode" = betterproto.enum_field(1)
    reward_data_list: List["RewardData"] = betterproto.message_field(2)
    max_reward_taken_level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BindAccountReq(betterproto.Message):
    account_type: int = betterproto.uint32_field(1)
    account_uid: str = betterproto.string_field(2)
    account_token: str = betterproto.string_field(3)
    account_ext: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class BindAccountRsp(betterproto.Message):
    retcode: "BindAccountRspRetcode" = betterproto.enum_field(1)
    account_type: int = betterproto.uint32_field(2)
    account_uid: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class BindHoyolabAccountReq(betterproto.Message):
    hoyolab_channel_id: int = betterproto.uint32_field(1)
    hoyolab_account_uid: str = betterproto.string_field(2)
    hoyolab_token: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class BindHoyolabAccountRsp(betterproto.Message):
    retcode: "BindHoyolabAccountRspRetcode" = betterproto.enum_field(1)
    hoyolab_account_uid: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class BingoActivityFlopCardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    bingo_id: int = betterproto.uint32_field(2)
    card_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BingoActivityFlopCardRsp(betterproto.Message):
    retcode: "BingoActivityFlopCardRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    bingo_id: int = betterproto.uint32_field(3)
    card_id: int = betterproto.uint32_field(4)
    reward_list: List["RewardData"] = betterproto.message_field(5)
    drop_item_list: List["DropItem"] = betterproto.message_field(6)
    is_all_finished: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class BingoActivityResetBingoReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    bingo_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BingoActivityResetBingoRsp(betterproto.Message):
    retcode: "BingoActivityResetBingoRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BingoCard(betterproto.Message):
    card_id: int = betterproto.uint32_field(1)
    card_status: "BingoCardBingoCardStatus" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class BingoData(betterproto.Message):
    bingo_id: int = betterproto.uint32_field(1)
    card_list: List["BingoCard"] = betterproto.message_field(2)
    reset_times: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BossChallengeActivity(betterproto.Message):
    stage_list: List["BossChallengeStage"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class BossChallengeActivityGetStageRankReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BossChallengeActivityGetStageRankRsp(betterproto.Message):
    retcode: "BossChallengeActivityGetStageRankRspRetcode" = betterproto.enum_field(1)
    rank: int = betterproto.uint32_field(2)
    rank_ratio: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BossChallengeAvatar(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    hp_percent: int = betterproto.uint32_field(2)
    sp_percent: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BossChallengeScDlcStatus(betterproto.Message):
    sc_dlc_fever_score: int = betterproto.uint32_field(1)
    sc_dlc_climax_score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BossChallengeStage(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    unlock_time: int = betterproto.uint32_field(2)
    max_reward_idx: int = betterproto.uint32_field(3)
    cur_floor: int = betterproto.uint32_field(4)
    cur_stage_cost_time: int = betterproto.uint32_field(5)
    min_stage_cost_time: int = betterproto.uint32_field(6)
    avatar_list: List["BossChallengeAvatar"] = betterproto.message_field(7)
    sc_dlc_status: "BossChallengeScDlcStatus" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class BossRushBuff(betterproto.Message):
    pool_id: int = betterproto.uint32_field(1)
    buff_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BoxGachaData(betterproto.Message):
    box_gacha_data: "BoxGachaDisplayData" = betterproto.message_field(2)
    ticket_hcoin_cost: int = betterproto.uint32_field(3)
    ticket_material_id: int = betterproto.uint32_field(4)
    cost_material_id: int = betterproto.uint32_field(5)
    cost_material_num: int = betterproto.uint32_field(6)
    is_enable_baodi: bool = betterproto.bool_field(7)
    max_gacha_times: int = betterproto.uint32_field(10)
    gacha_times: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class BoxGachaDisplayData(betterproto.Message):
    item_list: List["BoxGachaItemData"] = betterproto.message_field(1)
    show_list: List["GachaItem"] = betterproto.message_field(2)
    pre_gacha_id: int = betterproto.uint32_field(3)
    web_link: str = betterproto.string_field(4)
    link_type: int = betterproto.uint32_field(5)
    link_para: str = betterproto.string_field(6)
    link_para_str: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class BoxGachaItemData(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    total_num: int = betterproto.uint32_field(2)
    gacha_num: int = betterproto.uint32_field(3)
    item_num_per_drop: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BuffAssistActivity(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    buff_schedule_id: int = betterproto.uint32_field(2)
    wait_select_buff_pool: "BuffAssistBuffPool" = betterproto.message_field(3)
    produce_buff_pool_list: List["BuffAssistBuffPool"] = betterproto.message_field(4)
    buff_slot_list: List["BuffAssistPlayerBuffSlot"] = betterproto.message_field(5)
    refresh_buff_pool_times: int = betterproto.uint32_field(6)
    cur_stage_group_id: int = betterproto.uint32_field(7)
    left_select_buff_times: int = betterproto.uint32_field(8)
    history_list: List["BuffAssistHistory"] = betterproto.message_field(9)
    assist_level: int = betterproto.uint32_field(10)
    assist_num: int = betterproto.uint32_field(11)
    be_assisted_num: int = betterproto.uint32_field(12)
    publish_buff_pool_times: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class BuffAssistBuffPool(betterproto.Message):
    pool_id: int = betterproto.uint32_field(1)
    unique_id: int = betterproto.uint32_field(2)
    producer_uid: int = betterproto.uint32_field(3)
    producer_nickname: str = betterproto.string_field(4)
    buff_slot_list: List["BuffAssistBuffSlot"] = betterproto.message_field(5)
    expire_time: int = betterproto.uint32_field(6)
    assist_word_id_list: List[int] = betterproto.uint32_field(7)
    buff_schedule_id: int = betterproto.uint32_field(8)
    producer_type: int = betterproto.uint32_field(9)
    producer_head_id: int = betterproto.uint32_field(10)
    producer_assist_level: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class BuffAssistBuffSlot(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    buff_id: int = betterproto.uint32_field(2)
    is_used: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class BuffAssistGetActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BuffAssistGetActivityRsp(betterproto.Message):
    retcode: "BuffAssistGetActivityRspRetcode" = betterproto.enum_field(1)
    activity: "BuffAssistActivity" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class BuffAssistHistory(betterproto.Message):
    assist_type: int = betterproto.uint32_field(1)
    peer_nickname: str = betterproto.string_field(2)
    peer_assist_level: int = betterproto.uint32_field(3)
    assist_stage_id: int = betterproto.uint32_field(4)
    assist_word_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class BuffAssistPlayerBuffSlot(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    buff_id: int = betterproto.uint32_field(2)
    is_replace: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class BuffAssistPublishBuffPoolReq(betterproto.Message):
    pool_id: int = betterproto.uint32_field(1)
    assist_word_id_list: List[int] = betterproto.uint32_field(2)
    buff_pool: "BuffAssistBuffPool" = betterproto.message_field(3)
    is_anonymous: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class BuffAssistPublishBuffPoolRsp(betterproto.Message):
    retcode: "BuffAssistPublishBuffPoolRspRetcode" = betterproto.enum_field(1)
    pool_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BuffAssistRecvStageAssistInfoNotify(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    assist_info: "BuffAssistStageAssistInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class BuffAssistRefreshWaitSelectBuffPoolReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BuffAssistRefreshWaitSelectBuffPoolRsp(betterproto.Message):
    retcode: "BuffAssistRefreshWaitSelectBuffPoolRspRetcode" = betterproto.enum_field(1)
    buff_pool: "BuffAssistBuffPool" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class BuffAssistSelectBuffReq(betterproto.Message):
    buff_slot_id: int = betterproto.uint32_field(1)
    wait_select_buff_slot_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BuffAssistSelectBuffRsp(betterproto.Message):
    retcode: "BuffAssistSelectBuffRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class BuffAssistStageAssistInfo(betterproto.Message):
    producer_uid: int = betterproto.uint32_field(1)
    peer_uid: int = betterproto.uint32_field(2)
    peer_assist_level: int = betterproto.uint32_field(3)
    assist_stage_id: int = betterproto.uint32_field(4)
    assist_word_id_list: List[int] = betterproto.uint32_field(5)
    buff_slot_list: List["BuffAssistBuffSlot"] = betterproto.message_field(6)
    buff_pool_unique_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class BuffAssistStageEndNotify(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    cur_stage_buff_pool_list: List["BuffAssistBuffPool"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class BuffEffect(betterproto.Message):
    effect_id: int = betterproto.uint32_field(1)
    end_time: int = betterproto.uint32_field(2)
    max_during: int = betterproto.uint32_field(3)
    total_contri_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class Bulletin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    type: int = betterproto.uint32_field(2)
    weight: int = betterproto.uint32_field(3)
    title_button: str = betterproto.string_field(4)
    title: str = betterproto.string_field(5)
    banner_path: str = betterproto.string_field(6)
    event_date_str: str = betterproto.string_field(7)
    content: str = betterproto.string_field(8)
    mark: int = betterproto.uint32_field(9)
    begin_time: int = betterproto.uint32_field(10)
    end_time: int = betterproto.uint32_field(11)
    update_time: int = betterproto.uint32_field(12)
    show_config_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class BulletinActivityConfig(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    activity_type: int = betterproto.uint32_field(2)
    begin_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)
    bulletin_id: int = betterproto.uint32_field(5)
    mission_ids: List[int] = betterproto.uint32_field(6)
    type_param_list: List[int] = betterproto.uint32_field(7)
    type_param_str: str = betterproto.string_field(8)
    min_player_level: int = betterproto.uint32_field(9)
    max_player_level: int = betterproto.uint32_field(10)
    item_list: List[int] = betterproto.uint32_field(11)
    title_name: str = betterproto.string_field(12)
    title_image: str = betterproto.string_field(13)
    image_path: str = betterproto.string_field(14)
    link_button: str = betterproto.string_field(15)
    description: str = betterproto.string_field(16)
    weight: int = betterproto.uint32_field(17)
    background_path: str = betterproto.string_field(18)
    text_image_path: str = betterproto.string_field(19)
    currency_list: List[int] = betterproto.uint32_field(20)
    unlock_param_str: str = betterproto.string_field(21)


@dataclass(eq=False, repr=False)
class BulletinMission(betterproto.Message):
    mission_id: int = betterproto.uint32_field(1)
    cycle_list: List["BulletinMissionBulletinMissionCycle"] = betterproto.message_field(
        2
    )


@dataclass(eq=False, repr=False)
class BulletinMissionBulletinMissionCycle(betterproto.Message):
    cycle_id: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BulletinMissionGroup(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    mission_list: List["BulletinMission"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class BulletinScoreActivity(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)
    has_take_reward_list: List[int] = betterproto.uint32_field(3)
    has_take_reward_progress_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BurdenAlleviation(betterproto.Message):
    alleviation_id: int = betterproto.uint32_field(1)
    show_begin_time: int = betterproto.uint32_field(2)
    show_end_time: int = betterproto.uint32_field(3)
    begin_time: int = betterproto.uint32_field(4)
    end_time: int = betterproto.uint32_field(5)
    alleviate_times: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class BurdenAlleviationActivity(betterproto.Message):
    cur_schedule_id: int = betterproto.uint32_field(1)
    alleviation_list: List["BurdenAlleviation"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class BuyBattlePassLevelReq(betterproto.Message):
    target_level: int = betterproto.uint32_field(1)
    hcoin_cost: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BuyBattlePassLevelRsp(betterproto.Message):
    retcode: "BuyBattlePassLevelRspRetcode" = betterproto.enum_field(1)
    hcoin_cost: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BuyBattlePassThemeLevelReq(betterproto.Message):
    target_level: int = betterproto.uint32_field(1)
    hcoin_cost: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BuyBattlePassThemeLevelRsp(betterproto.Message):
    retcode: "BuyBattlePassThemeLevelRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class BuyBattlePassTicketReq(betterproto.Message):
    type: "BattlePassTicketType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class BuyBattlePassTicketRsp(betterproto.Message):
    retcode: "BuyBattlePassTicketRspRetcode" = betterproto.enum_field(1)
    advanced_reward_list: List["RewardData"] = betterproto.message_field(2)
    luxury_reward_list: List["RewardData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class BuyFurnitureReq(betterproto.Message):
    furniture_list: List["DepotFurniture"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class BuyFurnitureRsp(betterproto.Message):
    retcode: "BuyFurnitureRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class BuyGoodsCost(betterproto.Message):
    hcoin_cost: int = betterproto.uint32_field(1)
    scoin_cost: int = betterproto.uint32_field(2)
    mcoin_cost: int = betterproto.uint32_field(3)
    cost_item_list: List["Material"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class BuyGoodsReq(betterproto.Message):
    shop_id: int = betterproto.uint32_field(1)
    goods_id: int = betterproto.uint32_field(2)
    coupon_material_id: int = betterproto.uint32_field(3)
    coupon_num: int = betterproto.uint32_field(4)
    mcoin_coupon_material_id: int = betterproto.uint32_field(5)
    goods_num: int = betterproto.uint32_field(6)
    gift_pack_select_reward_id: int = betterproto.uint32_field(7)
    discount_save_num: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class BuyGoodsRsp(betterproto.Message):
    retcode: "BuyGoodsRspRetcode" = betterproto.enum_field(1)
    shop_id: int = betterproto.uint32_field(2)
    goods_id: int = betterproto.uint32_field(3)
    goods_buy_times: int = betterproto.uint32_field(4)
    item_id: int = betterproto.uint32_field(5)
    level: int = betterproto.uint32_field(6)
    num: int = betterproto.uint32_field(7)
    gift_pack_select_reward_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class BuyProductReq(betterproto.Message):
    name: str = betterproto.string_field(1)
    price: int = betterproto.uint32_field(2)
    currency_code: str = betterproto.string_field(3)
    format_price: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class BuyProductRsp(betterproto.Message):
    retcode: "BuyProductRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class Cabin(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    extend_grade: int = betterproto.uint32_field(3)
    level_up_end_time: int = betterproto.uint32_field(4)
    tech_list: List["CabinTech"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class CabinLevel(betterproto.Message):
    cabin_type: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    extend_grade: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CabinTech(betterproto.Message):
    pos_x: int = betterproto.int32_field(1)
    pos_y: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class CabinTechAddAttr(betterproto.Message):
    attr_type: "AvatarAttrType" = betterproto.enum_field(1)
    add_ratio: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class CancelAdventureQuestReq(betterproto.Message):
    pool_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CancelAdventureQuestRsp(betterproto.Message):
    retcode: "CancelAdventureQuestRspRetcode" = betterproto.enum_field(1)
    pool_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CancelApplyArmadaReq(betterproto.Message):
    armada_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CancelApplyArmadaRsp(betterproto.Message):
    retcode: "CancelApplyArmadaRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CancelDissolveArmadaReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class CancelDissolveArmadaRsp(betterproto.Message):
    retcode: "CancelDissolveArmadaRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CancelGratuityStageReq(betterproto.Message):
    stage_unique_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CancelGratuityStageRsp(betterproto.Message):
    retcode: "CancelGratuityStageRspRetcode" = betterproto.enum_field(1)
    stage_unique_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CancelLevelUpArmadaCabinReq(betterproto.Message):
    type: "ArmadaCabinType" = betterproto.enum_field(1)
    cabin_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CancelLevelUpArmadaCabinRsp(betterproto.Message):
    retcode: "CancelLevelUpArmadaCabinRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CancelRestaurantWorkReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    room_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CancelRestaurantWorkRsp(betterproto.Message):
    retcode: "CancelRestaurantWorkRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    room_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CancelRoomMatchReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class CancelRoomMatchRsp(betterproto.Message):
    retcode: "CancelRoomMatchRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CancelWareHouseDemandReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class CancelWareHouseDemandRsp(betterproto.Message):
    retcode: "CancelWareHouseDemandRspRetcode" = betterproto.enum_field(1)
    demand_id: int = betterproto.uint32_field(2)
    is_auto_cancel: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class CardProductInfo(betterproto.Message):
    product_name: str = betterproto.string_field(1)
    expire_time: int = betterproto.uint32_field(2)
    reward_num: int = betterproto.uint32_field(3)
    hcoin: int = betterproto.uint32_field(4)
    take_reward_days: int = betterproto.uint32_field(5)
    last_daily_reward_time: int = betterproto.uint32_field(6)
    bonus_need_days: int = betterproto.uint32_field(7)
    bonus_hcoin: int = betterproto.uint32_field(8)
    bonus_max_save_days: int = betterproto.uint32_field(9)
    card_left_days: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class CardProductReward(betterproto.Message):
    product_name: str = betterproto.string_field(1)
    hcoin: int = betterproto.uint32_field(2)
    take_reward_days: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChallengeMissionData(betterproto.Message):
    is_unlock: bool = betterproto.bool_field(1)
    step_list: List["ChallengeMissionStep"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ChallengeMissionStep(betterproto.Message):
    step_id: int = betterproto.uint32_field(1)
    status: "ChallengeMissionStepStepStatus" = betterproto.enum_field(2)
    has_take_bonus: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class ChallengeModeArea(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)
    avatar_list: List["ChallengeModeAvatar"] = betterproto.message_field(2)
    weapon_uid_list: List[int] = betterproto.uint32_field(3)
    stigmata_uid_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ChallengeModeAvatar(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    hp_percent: int = betterproto.uint32_field(2)
    sp_percent: int = betterproto.uint32_field(3)
    last_recover_time: int = betterproto.uint32_field(4)
    is_die: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class ChallengeStepCompensation(betterproto.Message):
    compensation_id: int = betterproto.uint32_field(1)
    is_take_compensation: bool = betterproto.bool_field(2)
    new_challenge_step_compensation_list: List[
        "StepCompensation"
    ] = betterproto.message_field(3)
    old_challenge_step_compensation_list: List[
        "StepCompensation"
    ] = betterproto.message_field(4)
    mainline_step_compensation_list: List[
        "StepCompensation"
    ] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ChallengeWarActivity(betterproto.Message):
    stage_group_schedule_list: List[
        "GeneralActivityStageGroupScheduleInfo"
    ] = betterproto.message_field(1)
    team_list: List["ChallengeWarActivityStageAvatarTeam"] = betterproto.message_field(
        2
    )
    stage_list: List["ChallengeWarStage"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ChallengeWarActivityStageAvatarTeam(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    avatar_id_list: List[int] = betterproto.uint32_field(2)
    support_avatar_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChallengeWarActivityFinishFloorReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    floor: int = betterproto.uint32_field(2)
    score: int = betterproto.uint32_field(3)
    cheat_data_list: List["StageCheatData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ChallengeWarActivityFinishFloorRsp(betterproto.Message):
    retcode: "ChallengeWarActivityFinishFloorRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ChallengeWarStage(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    floor_score_list: List[
        "ChallengeWarStageStageFloorScore"
    ] = betterproto.message_field(2)
    max_finish_floor: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChallengeWarStageStageFloorScore(betterproto.Message):
    floor: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChallengeWarUpdateTeamReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    avatar_id_list: List[int] = betterproto.uint32_field(2)
    support_avatar_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChallengeWarUpdateTeamRsp(betterproto.Message):
    retcode: "ChallengeWarUpdateTeamRspRetcode" = betterproto.enum_field(1)
    stage_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChangeArmadaNameReq(betterproto.Message):
    name: str = betterproto.string_field(1)
    is_scoin_lack: bool = betterproto.bool_field(2)
    is_hcoin_lack: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class ChangeArmadaNameRsp(betterproto.Message):
    retcode: "ChangeArmadaNameRspRetcode" = betterproto.enum_field(1)
    name: str = betterproto.string_field(2)
    old_name: str = betterproto.string_field(3)
    audit_name: str = betterproto.string_field(4)
    is_change_name_free: bool = betterproto.bool_field(5)
    cd_end_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ChangeFriendRemarkSwitchData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ChangeGodWarChallengeSupportAvatarReq(betterproto.Message):
    god_war_id: int = betterproto.uint32_field(1)
    tale_id: int = betterproto.uint32_field(2)
    support_avatar_id_list: List[int] = betterproto.uint32_field(3)
    extra_item_id: int = betterproto.uint32_field(4)
    assistant_extra_item_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ChangePlayerCardReq(betterproto.Message):
    type: "PlayerCardType" = betterproto.enum_field(1)
    slot_list: List["PlayerCardSlot"] = betterproto.message_field(2)
    msg_config: "PlayerCardMsgConfig" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class ChangePlayerCardRsp(betterproto.Message):
    retcode: "ChangePlayerCardRspRetcode" = betterproto.enum_field(1)
    type: "PlayerCardType" = betterproto.enum_field(2)
    slot_list: List["PlayerCardSlot"] = betterproto.message_field(3)
    msg_config: "PlayerCardMsgConfig" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class ChangeSecurityPasswordReq(betterproto.Message):
    old_password: str = betterproto.string_field(1)
    new_password: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class ChangeSecurityPasswordRsp(betterproto.Message):
    retcode: "ChangeSecurityPasswordRspRetcode" = betterproto.enum_field(1)
    security_password_info: "SecurityPasswordInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ChapterActCompensation(betterproto.Message):
    act_id: int = betterproto.uint32_field(1)
    difficulty: int = betterproto.uint32_field(2)
    challenge_reward_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChapterActivity(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    level_exp: int = betterproto.uint32_field(3)
    has_take_reward_level_list: List[int] = betterproto.uint32_field(4)
    is_take_daily_reward: bool = betterproto.bool_field(5)
    boss_list: List["ChapterActivityBoss"] = betterproto.message_field(6)
    player_level: int = betterproto.uint32_field(7)
    daily_reward_id: int = betterproto.uint32_field(8)
    stage_list: List["ChapterActivityStage"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class ChapterActivityBoss(betterproto.Message):
    boss_stage_id: int = betterproto.uint32_field(1)
    left_hp: int = betterproto.uint32_field(2)
    cur_section_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChapterActivityDailyRewardNotify(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)
    daily_reward: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ChapterActivityExclusiveStage(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChapterActivityStage(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    max_floor: int = betterproto.uint32_field(2)
    pass_times: int = betterproto.uint32_field(3)
    max_score: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ChapterActivityTakeDailyRewardReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChapterActivityTakeDailyRewardRsp(betterproto.Message):
    retcode: "ChapterActivityTakeDailyRewardRspRetcode" = betterproto.enum_field(1)
    chapter_id: int = betterproto.uint32_field(2)
    daily_reward: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ChapterCompensationInfo(betterproto.Message):
    compensation_id: int = betterproto.uint32_field(1)
    stage_compensation_list: List[
        "ChapterStageCompensation"
    ] = betterproto.message_field(2)
    act_compensation_list: List["ChapterActCompensation"] = betterproto.message_field(3)
    is_taken_compensation: bool = betterproto.bool_field(4)
    chapter_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ChapterGroup(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    site_list: List["ChapterGroupSite"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ChapterGroupGetDataReq(betterproto.Message):
    chapter_group_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChapterGroupGetDataRsp(betterproto.Message):
    retcode: "ChapterGroupGetDataRspRetcode" = betterproto.enum_field(1)
    chapter_group_list: List["ChapterGroup"] = betterproto.message_field(2)
    is_all: bool = betterproto.bool_field(3)
    chapter_group_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ChapterGroupSite(betterproto.Message):
    site_id: int = betterproto.uint32_field(1)
    chapter_id: int = betterproto.uint32_field(2)
    status: "ChapterGroupSiteStatus" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class ChapterStageCompensation(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_first_win: bool = betterproto.bool_field(2)
    challenge_reward_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChargeActivityBuffReq(betterproto.Message):
    activity_buff_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChargeActivityBuffRsp(betterproto.Message):
    retcode: "ChargeActivityBuffRspRetcode" = betterproto.enum_field(1)
    activity_buff_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatCloseNotify(betterproto.Message):
    retcode: "ChatCloseNotifyRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ChatForbidNotify(betterproto.Message):
    forbid_finish_time: int = betterproto.uint32_field(1)
    forbid_type: "ChatForbidNotifyForbidType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class ChatForbidSnsNotify(betterproto.Message):
    credit_bound: int = betterproto.uint32_field(1)
    chat_forbid_finish_time: int = betterproto.uint32_field(2)
    chat_forbid_times: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class Chatgroup(betterproto.Message):
    chatgroup_id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    notice: str = betterproto.string_field(3)
    icon_id: int = betterproto.uint32_field(4)
    member_list: List["ChatgroupMember"] = betterproto.message_field(5)
    label_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ChatgroupInvite(betterproto.Message):
    chatgroup_id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    notice: str = betterproto.string_field(3)
    icon_id: int = betterproto.uint32_field(4)
    inviter_uid: int = betterproto.uint32_field(5)
    inviter_info: "PlayerFriendBriefData" = betterproto.message_field(6)
    invite_time: int = betterproto.uint32_field(7)
    chatgroup_member_num: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ChatgroupJoinMsg(betterproto.Message):
    inviter_uid: int = betterproto.uint32_field(1)
    member_list: List["ChatgroupMember"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ChatgroupLeaveMsg(betterproto.Message):
    operator_uid: int = betterproto.uint32_field(1)
    leave_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatgroupMember(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    position: "ChatgroupPosition" = betterproto.enum_field(2)
    brief_data: "PlayerFriendBriefData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ChatgroupSettingMsg(betterproto.Message):
    operator_uid: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    notice: str = betterproto.string_field(3)
    icon_id: int = betterproto.uint32_field(4)
    label_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ChatgroupSystemNotify(betterproto.Message):
    type: "ChatgroupSystemNotifyType" = betterproto.enum_field(1)
    chatgroup_id: int = betterproto.uint32_field(2)
    chatgroup: "Chatgroup" = betterproto.message_field(3)
    join_msg: "ChatgroupJoinMsg" = betterproto.message_field(4)
    leave_msg: "ChatgroupLeaveMsg" = betterproto.message_field(5)
    setting_msg: "ChatgroupSettingMsg" = betterproto.message_field(6)
    invite: "ChatgroupInvite" = betterproto.message_field(7)
    target_uid_list: List[int] = betterproto.uint32_field(8)
    chatgroup_name: str = betterproto.string_field(9)
    time: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ChatMsg(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    time: int = betterproto.uint32_field(3)
    msg: str = betterproto.string_field(4)
    avatar_id: int = betterproto.uint32_field(5)
    dress_id: int = betterproto.uint32_field(6)
    content: "ChatMsgContent" = betterproto.message_field(7)
    channel: "ChatMsgMsgChannel" = betterproto.enum_field(8)
    frame_id: int = betterproto.uint32_field(9)
    is_sensitive: bool = betterproto.bool_field(10)
    is_goback: bool = betterproto.bool_field(11)
    channel_id: int = betterproto.uint32_field(12)
    custom_head_id: int = betterproto.uint32_field(13)
    master_pupil_tag: "MasterPupilType" = betterproto.enum_field(14)
    system_msg: "ChatMsgSystemChatMsg" = betterproto.message_field(15)
    target_uid: int = betterproto.uint32_field(16)
    season_id: int = betterproto.uint32_field(17)
    season_group_id: int = betterproto.uint32_field(18)
    season_level: int = betterproto.uint32_field(19)
    mode: int = betterproto.uint32_field(20)
    mode_para: int = betterproto.uint32_field(21)
    is_armada_leader: bool = betterproto.bool_field(22)
    is_team_leader: bool = betterproto.bool_field(23)
    check_result: "ChatMsgSensitiveCheckResult" = betterproto.message_field(24)
    is_lobby_invite: bool = betterproto.bool_field(25)


@dataclass(eq=False, repr=False)
class ChatMsgSystemChatMsg(betterproto.Message):
    type: "SystemChatMsgType" = betterproto.enum_field(1)
    item_id: int = betterproto.uint32_field(2)
    item_level: int = betterproto.uint32_field(3)
    item_num: int = betterproto.uint32_field(4)
    gacha_type: "GachaType" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class ChatMsgAvatar(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    avatar: "AvatarDetailData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ChatMsgContent(betterproto.Message):
    items: List["ChatMsgItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ChatMsgElf(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    elf: "ElfDetailData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ChatMsgInternal(betterproto.Message):
    key_value_list: List["ChatMsgKeyValue"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ChatMsgItem(betterproto.Message):
    type: "ChatMsgItemChatMsgType" = betterproto.enum_field(1)
    msg_str: str = betterproto.string_field(2)
    weapon: "ChatMsgWeapon" = betterproto.message_field(3)
    stigmata: "ChatMsgStigmata" = betterproto.message_field(4)
    avatar: "ChatMsgAvatar" = betterproto.message_field(5)
    lobby: "ChatMsgLobby" = betterproto.message_field(6)
    internal: "ChatMsgInternal" = betterproto.message_field(7)
    send_red_envelope: "ChatSendRedEnvelope" = betterproto.message_field(8)
    take_red_envelope: "ChatTakeRedEnvelope" = betterproto.message_field(9)
    emoji_id: int = betterproto.uint32_field(10)
    elf: "ChatMsgElf" = betterproto.message_field(11)
    red_envelope_take_over: "ChatRedEnvelopeTakeOver" = betterproto.message_field(12)
    chatworld_beast: "ChatMsgWorldBeast" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class ChatMsgKeyValue(betterproto.Message):
    key: str = betterproto.string_field(1)
    value: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class ChatMsgLobby(betterproto.Message):
    msg: str = betterproto.string_field(1)
    level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatMsgSensitiveCheckResult(betterproto.Message):
    shield_type: int = betterproto.int32_field(1)
    number_check: int = betterproto.int32_field(2)
    rewrite_text: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class ChatMsgStigmata(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    stigmata: "StigmataDetailData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ChatMsgWeapon(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    weapon: "WeaponDetailData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ChatMsgWorldBeast(betterproto.Message):
    chatworld_id: int = betterproto.uint32_field(1)
    scene_id: int = betterproto.uint32_field(2)
    beast_unique_id_u64: int = betterproto.uint64_field(3)
    stage_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ChatRedEnvelopeTakeOver(betterproto.Message):
    sender_uid: int = betterproto.uint32_field(1)
    sender_nickname: str = betterproto.string_field(2)
    item_id: int = betterproto.uint32_field(3)
    msg: str = betterproto.string_field(4)
    red_envelope_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ChatReport(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)
    report_type: int = betterproto.uint32_field(2)
    report_detail: str = betterproto.string_field(3)
    reporter_uid: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ChatReportNotify(betterproto.Message):
    report_uid: int = betterproto.uint32_field(1)
    target_uid: int = betterproto.uint32_field(2)
    report_type: int = betterproto.uint32_field(3)
    lost_chat_credit: int = betterproto.uint32_field(4)
    chat_forbid_times: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ChatReportReq(betterproto.Message):
    chat_report: "ChatReport" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ChatReportRsp(betterproto.Message):
    retcode: "ChatReportRspRetcode" = betterproto.enum_field(1)
    cd_left_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatSendRedEnvelope(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    msg: str = betterproto.string_field(2)
    red_envelope_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChatSwitchData(betterproto.Message):
    chat_switch_channel_type: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChatTakeRedEnvelope(betterproto.Message):
    sender_uid: int = betterproto.uint32_field(1)
    sender_nickname: str = betterproto.string_field(2)
    item_id: int = betterproto.uint32_field(3)
    take_scoin: int = betterproto.uint32_field(4)
    drop_item_list: List["DropItem"] = betterproto.message_field(5)
    msg: str = betterproto.string_field(6)
    take_material: "Material" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class ChatUnforbidNotify(betterproto.Message):
    uid_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChatworldActivityInfo(betterproto.Message):
    treasure_schedule_id: int = betterproto.uint32_field(1)
    is_has_npc_red_envelope: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class ChatworldActivitySchedule(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    activity_id: int = betterproto.uint32_field(2)
    begin_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)
    begin_day_time: int = betterproto.uint32_field(5)
    end_day_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ChatworldBattle(betterproto.Message):
    score: int = betterproto.uint32_field(1)
    kill_num: int = betterproto.uint32_field(2)
    kill_streak: int = betterproto.uint32_field(3)
    legendary_times: int = betterproto.uint32_field(4)
    collect_battle_item_list: List[
        "ChatworldCollectBattleItem"
    ] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ChatworldBattleCollectItemReq(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    item_unique_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatworldBattleCollectItemRsp(betterproto.Message):
    retcode: "ChatworldBattleCollectItemRspRetcode" = betterproto.enum_field(1)
    item_id: int = betterproto.uint32_field(2)
    item_unique_id: int = betterproto.uint32_field(3)
    reward_data: "RewardData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ChatworldBattleUseItemReq(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChatworldBattleUseItemRsp(betterproto.Message):
    retcode: "ChatworldBattleUseItemRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ChatworldBeast(betterproto.Message):
    beast_unique_id_u64: int = betterproto.uint64_field(1)
    beast_id: int = betterproto.uint32_field(2)
    stage_id: int = betterproto.uint32_field(4)
    left_hp: int = betterproto.uint32_field(5)
    status: "ChatworldBeastStatus" = betterproto.enum_field(6)
    wait_take_treasure_uid_list: List[int] = betterproto.uint32_field(7)
    expire_time: int = betterproto.uint32_field(8)
    challenger_num: int = betterproto.uint32_field(9)
    treasure_rank_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ChatworldBeastAbandonChallengeReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ChatworldBeastAbandonChallengeRsp(betterproto.Message):
    retcode: "ChatworldBeastAbandonChallengeRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ChatworldBeastAddResultNotify(betterproto.Message):
    retcode: "ChatworldBeastAddResultNotifyRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ChatworldBeastChallengeReq(betterproto.Message):
    beast_unique_id_u64: int = betterproto.uint64_field(1)
    beast_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatworldBeastChallengeRsp(betterproto.Message):
    retcode: "ChatworldBeastChallengeRspRetcode" = betterproto.enum_field(1)
    beast: "ChatworldBeast" = betterproto.message_field(2)
    chatworld_id: int = betterproto.uint32_field(3)
    scene_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ChatworldBeastGetActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ChatworldBeastGetActivityRsp(betterproto.Message):
    retcode: "ChatworldBeastGetActivityRspRetcode" = betterproto.enum_field(1)
    daily_senior_challenge_times: int = betterproto.uint32_field(2)
    daily_junior_challenge_times: int = betterproto.uint32_field(3)
    daily_senior_treasure_times: int = betterproto.uint32_field(4)
    daily_junior_treasure_times: int = betterproto.uint32_field(5)
    refresh_begin_time: int = betterproto.uint32_field(6)
    refresh_end_time: int = betterproto.uint32_field(7)
    refresh_interval: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ChatworldBeastSyncReq(betterproto.Message):
    beast_unique_id_u64: int = betterproto.uint64_field(1)
    cost_hp: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatworldBeastSyncRsp(betterproto.Message):
    retcode: "ChatworldBeastSyncRspRetcode" = betterproto.enum_field(1)
    beast_unique_id_u64: int = betterproto.uint64_field(2)
    from_uid: int = betterproto.uint32_field(3)
    cost_hp: int = betterproto.uint32_field(4)
    left_hp: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ChatworldBeastTakeTreasureReq(betterproto.Message):
    beast_unique_id_u64: int = betterproto.uint64_field(1)
    beast_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatworldBeastTakeTreasureRsp(betterproto.Message):
    retcode: "ChatworldBeastTakeTreasureRspRetcode" = betterproto.enum_field(1)
    drop_item_list: List["DropItem"] = betterproto.message_field(2)
    beast_id: int = betterproto.uint32_field(3)
    treasure_rank_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ChatworldBox(betterproto.Message):
    box_series_id: int = betterproto.uint32_field(1)
    schedule_id: int = betterproto.uint32_field(3)
    expire_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ChatworldBoxActivity(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    open_box_unique_id_u64_list: List[int] = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class ChatworldBoxGetDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ChatworldBoxGetDataRsp(betterproto.Message):
    retcode: "ChatworldBoxGetDataRspRetcode" = betterproto.enum_field(1)
    box_activity_list: List["ChatworldBoxActivity"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ChatworldBoxTakeRewardReq(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    schedule_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatworldBoxTakeRewardRsp(betterproto.Message):
    retcode: "ChatworldBoxTakeRewardRspRetcode" = betterproto.enum_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)
    box_series_id: int = betterproto.uint32_field(4)
    schedule_id: int = betterproto.uint32_field(5)
    stage_id: int = betterproto.uint32_field(6)
    box_unique_id: int = betterproto.uint32_field(7)
    open_box_unique_id_u64_list: List[int] = betterproto.uint64_field(8)
    chatworld_id: int = betterproto.uint32_field(9)
    scene_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ChatworldBrief(betterproto.Message):
    chatworld_id: int = betterproto.uint32_field(1)
    player_num: int = betterproto.uint32_field(2)
    is_has_untaken_treasure: bool = betterproto.bool_field(3)
    beast_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ChatworldBuff(betterproto.Message):
    buff_id: int = betterproto.uint32_field(1)
    expire_time_ms_u64: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class ChatworldChangeAvatarReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    scene_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatworldChangeAvatarRsp(betterproto.Message):
    retcode: "ChatworldChangeAvatarRspRetcode" = betterproto.enum_field(1)
    avatar_id: int = betterproto.uint32_field(2)
    scene_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChatworldCollectBattleItem(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    item_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatworldDishReward(betterproto.Message):
    reward_id: int = betterproto.uint32_field(1)
    taken_times: int = betterproto.uint32_field(2)
    last_take_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChatworldEntity(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    entity_type: int = betterproto.uint32_field(2)
    camp_tag: int = betterproto.uint32_field(3)
    position: "ChatworldPosition" = betterproto.message_field(4)
    player_info: "ChatworldPlayerInfo" = betterproto.message_field(16)
    chatworld_item: "ChatworldItem" = betterproto.message_field(17)
    chatworld_stance: "ChatworldStance" = betterproto.message_field(18)
    chatworld_fish_spot: "ChatworldFishSpot" = betterproto.message_field(19)
    chatworld_question: "ChatworldQuestion" = betterproto.message_field(20)
    chatworld_beast: "ChatworldBeast" = betterproto.message_field(21)
    chatworld_box: "ChatworldBox" = betterproto.message_field(22)


@dataclass(eq=False, repr=False)
class ChatworldEntityHp(betterproto.Message):
    hit_unique_id: int = betterproto.uint32_field(1)
    old_hp: int = betterproto.uint32_field(2)
    left_hp: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChatworldEntityMsg(betterproto.Message):
    update_entity_list: List["ChatworldEntity"] = betterproto.message_field(1)
    delete_entity_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatworldFishAssistReq(betterproto.Message):
    fish_spot_id: int = betterproto.uint32_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatworldFishAssistRsp(betterproto.Message):
    retcode: "ChatworldFishAssistRspRetcode" = betterproto.enum_field(1)
    fish_spot_id: int = betterproto.uint32_field(2)
    target_uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChatworldFishCancelWaitAssistReq(betterproto.Message):
    fish_spot_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChatworldFishCancelWaitAssistRsp(betterproto.Message):
    retcode: "ChatworldFishCancelWaitAssistRspRetcode" = betterproto.enum_field(1)
    fish_spot_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatworldFishEndReq(betterproto.Message):
    fish_end_status: "ChatworldFishEndReqFishEndStatus" = betterproto.enum_field(1)
    fish_spot_id: int = betterproto.uint32_field(2)
    fish_group_id: int = betterproto.uint32_field(3)
    fish_hard_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ChatworldFishEndRsp(betterproto.Message):
    retcode: "ChatworldFishEndRspRetcode" = betterproto.enum_field(1)
    fish_spot_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatworldFisher(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    seat_idx: int = betterproto.uint32_field(2)
    fisher_status: "ChatworldFisherStatus" = betterproto.enum_field(3)
    status_start_time_ms_u64: int = betterproto.uint64_field(4)
    wait_assist_fish_hard_level: int = betterproto.uint32_field(5)
    assist_uid_list: List[int] = betterproto.uint32_field(6)
    like_uid_list: List[int] = betterproto.uint32_field(7)
    last_get_fish_id: int = betterproto.uint32_field(8)
    last_get_fish_time_ms_u64: int = betterproto.uint64_field(9)
    fish_info: "ChatworldFishInfo" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class ChatworldFishGetActivityInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ChatworldFishGetActivityInfoRsp(betterproto.Message):
    retcode: "ChatworldFishGetActivityInfoRspRetcode" = betterproto.enum_field(1)
    fish_info: "ChatworldFishInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ChatworldFishInfo(betterproto.Message):
    daily_get_currency_num: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChatworldFishJoinSpotReq(betterproto.Message):
    fish_spot_id: int = betterproto.uint32_field(1)
    seat_idx: int = betterproto.uint32_field(2)
    fish_info: "ChatworldFishInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ChatworldFishJoinSpotRsp(betterproto.Message):
    retcode: "ChatworldFishJoinSpotRspRetcode" = betterproto.enum_field(1)
    fish_spot_id: int = betterproto.uint32_field(2)
    seat_idx: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChatworldFishKickPlayerNotify(betterproto.Message):
    kick_reason: "ChatworldFishKickPlayerNotifyKickReason" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ChatworldFishLeaveSpotReq(betterproto.Message):
    fish_spot_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChatworldFishLeaveSpotRsp(betterproto.Message):
    retcode: "ChatworldFishLeaveSpotRspRetcode" = betterproto.enum_field(1)
    fish_spot_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatworldFishLikeReq(betterproto.Message):
    fish_spot_id: int = betterproto.uint32_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatworldFishLikeRsp(betterproto.Message):
    retcode: "ChatworldFishLikeRspRetcode" = betterproto.enum_field(1)
    fish_spot_id: int = betterproto.uint32_field(2)
    target_uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChatworldFishRewardNotify(betterproto.Message):
    reward_src: "FishRewardSrc" = betterproto.enum_field(1)
    fish_id: int = betterproto.uint32_field(2)
    add_currency_num: int = betterproto.uint32_field(3)
    cur_daily_get_currency_num: int = betterproto.uint32_field(4)
    extra_reward_data: "RewardData" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ChatworldFishSpot(betterproto.Message):
    fish_spot_id: int = betterproto.uint32_field(1)
    fisher_list: List["ChatworldFisher"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ChatworldFishStartReq(betterproto.Message):
    fish_spot_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChatworldFishStartRsp(betterproto.Message):
    retcode: "ChatworldFishStartRspRetcode" = betterproto.enum_field(1)
    fish_spot_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatworldGetActivityScheduleReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChatworldGetActivityScheduleRsp(betterproto.Message):
    retcode: "ChatworldGetActivityScheduleRspRetcode" = betterproto.enum_field(1)
    scene_id: int = betterproto.uint32_field(2)
    schedule_list: List["ChatworldActivitySchedule"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ChatworldGetDishInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ChatworldGetDishInfoRsp(betterproto.Message):
    retcode: "ChatworldGetDishInfoRspRetcode" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    is_prepare_reward_taken: bool = betterproto.bool_field(3)
    dish_reward_list: List["ChatworldDishReward"] = betterproto.message_field(4)
    taken_dish_limited_reward_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ChatworldGetPrayInfoReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChatworldGetPrayInfoRsp(betterproto.Message):
    retcode: "ChatworldGetPrayInfoRspRetcode" = betterproto.enum_field(1)
    pray_id: int = betterproto.uint32_field(2)
    is_has_prayed: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class ChatworldGrantRewardNotify(betterproto.Message):
    activity_type: int = betterproto.uint32_field(1)
    activity_id: int = betterproto.uint32_field(2)
    reward_id: int = betterproto.uint32_field(3)
    extra_int: int = betterproto.uint32_field(4)
    reward_data: "RewardData" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ChatworldInteractReq(betterproto.Message):
    interact_msg: "ChatworldMsgInteract" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ChatworldInteractRsp(betterproto.Message):
    retcode: "ChatworldInteractRspRetcode" = betterproto.enum_field(1)
    interact_msg: "ChatworldMsgInteract" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ChatworldItem(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    item_hp: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatworldItemMsg(betterproto.Message):
    update_item_list: List["ChatworldItem"] = betterproto.message_field(1)
    delete_item_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatworldMsg(betterproto.Message):
    item_list: List["ChatworldMsgItem"] = betterproto.message_field(1)
    uid: int = betterproto.uint32_field(2)
    time_ms_u64: int = betterproto.uint64_field(3)
    client_time: float = betterproto.float_field(4)
    is_system_msg: bool = betterproto.bool_field(5)
    check_result: "ChatMsgSensitiveCheckResult" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class ChatworldMsgAction(betterproto.Message):
    action_id: int = betterproto.uint32_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatworldMsgInteract(betterproto.Message):
    interact_type: "ChatworldInteractType" = betterproto.enum_field(1)
    target_npc_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatworldMsgItem(betterproto.Message):
    type: "ChatworldMsgItemChatworldMsgType" = betterproto.enum_field(1)
    player_info: "ChatworldEntity" = betterproto.message_field(2)
    msg_int: int = betterproto.int32_field(5)
    client_msg: bytes = betterproto.bytes_field(6)
    normal_msg: "ChatMsgItem" = betterproto.message_field(7)
    use_item_msg: "ChatworldMsgUseItem" = betterproto.message_field(8)
    interact_msg: "ChatworldMsgInteract" = betterproto.message_field(10)
    action_msg: "ChatworldMsgAction" = betterproto.message_field(11)
    red_envelope_msg: "CommonChatworldRedEnvelopeMsg" = betterproto.message_field(12)
    chatworld_treasure_msg: "ChatworldTreasureMsg" = betterproto.message_field(13)
    skill_attack_msg: "ChatworldSkillAttackMsg" = betterproto.message_field(14)
    skill_damage_msg: "ChatworldSkillDamageMsg" = betterproto.message_field(15)
    skill_cancel_msg: "ChatworldSkillCancelMsg" = betterproto.message_field(17)
    entity_msg: "ChatworldEntityMsg" = betterproto.message_field(20)
    entity_hp_msg: "ChatworldEntityHp" = betterproto.message_field(21)


@dataclass(eq=False, repr=False)
class ChatworldMsgMove(betterproto.Message):
    target_position: "ChatworldPosition" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ChatworldMsgUseItem(betterproto.Message):
    material_id: int = betterproto.uint32_field(1)
    num: int = betterproto.uint32_field(2)
    target_uid_list: List[int] = betterproto.uint32_field(3)
    msg: str = betterproto.string_field(4)
    extra_data: bytes = betterproto.bytes_field(5)


@dataclass(eq=False, repr=False)
class ChatworldPlayerInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    avatar_id: int = betterproto.uint32_field(3)
    chat_dress_id: int = betterproto.uint32_field(4)
    position: "ChatworldPosition" = betterproto.message_field(5)
    chat_avatar_id: int = betterproto.uint32_field(6)
    chat_frame_id: int = betterproto.uint32_field(7)
    holding_list: List[int] = betterproto.uint32_field(8)
    level: int = betterproto.uint32_field(9)
    armada_name: str = betterproto.string_field(10)
    mp_level: int = betterproto.uint32_field(11)
    on_medal_id: int = betterproto.uint32_field(12)
    action_id: int = betterproto.uint32_field(13)
    chatworld_red_envelope_list: List[
        "CommonChatworldRedEnvelope"
    ] = betterproto.message_field(14)
    is_all_info: bool = betterproto.bool_field(15)
    left_hp: int = betterproto.uint32_field(16)
    next_reborn_time: int = betterproto.uint32_field(17)
    buff_list: List["ChatworldBuff"] = betterproto.message_field(18)
    runtime_tag: int = betterproto.uint32_field(20)
    custom_head_id: int = betterproto.uint32_field(22)
    on_medal: "Medal" = betterproto.message_field(23)
    battle_info: "ChatworldBattle" = betterproto.message_field(32)


@dataclass(eq=False, repr=False)
class ChatworldPlayerScene(betterproto.Message):
    left_hp: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)
    last_login_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChatworldPosition(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)
    z: float = betterproto.float_field(3)
    rotation: float = betterproto.float_field(4)
    speed: float = betterproto.float_field(5)
    time_ms_u64: int = betterproto.uint64_field(6)
    aim_rotation: float = betterproto.float_field(7)


@dataclass(eq=False, repr=False)
class ChatworldPosResetNotify(betterproto.Message):
    reset_pos: "ChatworldPosition" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ChatworldPrayReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChatworldPrayRsp(betterproto.Message):
    retcode: "ChatworldPrayRspRetcode" = betterproto.enum_field(1)
    pray_id: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ChatworldQuestion(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    question_id: int = betterproto.uint32_field(2)
    status: "ChatworldQuestionStatus" = betterproto.enum_field(3)
    end_time: int = betterproto.uint32_field(4)
    right_answer_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ChatworldSkillAttackMsg(betterproto.Message):
    skill_unique_id_list: List[int] = betterproto.uint32_field(1)
    skill_id: int = betterproto.uint32_field(2)
    attack_pos: "ChatworldPosition" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ChatworldSkillCancelMsg(betterproto.Message):
    skill_unique_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChatworldSkillDamageJudgeReq(betterproto.Message):
    skill_unique_id: int = betterproto.uint32_field(1)
    hit_unique_id_list: List[int] = betterproto.uint32_field(2)
    damage_pos: "ChatworldPosition" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ChatworldSkillDamageJudgeRsp(betterproto.Message):
    retcode: "ChatworldSkillDamageJudgeRspRetcode" = betterproto.enum_field(1)
    damage_msg: "ChatworldSkillDamageMsg" = betterproto.message_field(2)
    score: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChatworldSkillDamageMsg(betterproto.Message):
    skill_unique_id: int = betterproto.uint32_field(1)
    skill_id: int = betterproto.uint32_field(2)
    damage_pos: "ChatworldPosition" = betterproto.message_field(3)
    entity_hp_list: List["ChatworldEntityHp"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ChatworldStance(betterproto.Message):
    stance_id: int = betterproto.uint32_field(1)
    position: "ChatworldPosition" = betterproto.message_field(2)
    holding_stance_camp_tag: int = betterproto.uint32_field(3)
    camp_1_stance_progress: int = betterproto.uint32_field(4)
    camp_2_stance_progress: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ChatworldStanceMsg(betterproto.Message):
    stance_list: List["ChatworldStance"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ChatworldTakeDishRewardReq(betterproto.Message):
    reward_type: "DishRewardType" = betterproto.enum_field(1)
    reward_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChatworldTakeDishRewardRsp(betterproto.Message):
    retcode: "ChatworldTakeDishRewardRspRetcode" = betterproto.enum_field(1)
    reward_type: "DishRewardType" = betterproto.enum_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ChatworldTreasure(betterproto.Message):
    chatworld_id: int = betterproto.uint32_field(1)
    treasure_id: int = betterproto.uint32_field(2)
    position: "ChatworldPosition" = betterproto.message_field(3)
    is_reward_taken: bool = betterproto.bool_field(4)
    open_uid_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ChatworldTreasureMsg(betterproto.Message):
    cur_treasure_schedule_id: int = betterproto.uint32_field(1)
    new_treasure_list: List["ChatworldTreasure"] = betterproto.message_field(2)
    update_treasure_list: List["ChatworldTreasure"] = betterproto.message_field(3)
    delete_treasure_list: List["ChatworldTreasure"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ChatworldTreasureRewardNotify(betterproto.Message):
    chatworld_id: int = betterproto.uint32_field(1)
    treasure_id: int = betterproto.uint32_field(2)
    drop_item_list: List["DropItem"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ChatworldUseItemReq(betterproto.Message):
    use_item_msg: "ChatworldMsgUseItem" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ChatworldUseItemRsp(betterproto.Message):
    retcode: "ChatworldUseItemRspRetcode" = betterproto.enum_field(1)
    material_id: int = betterproto.uint32_field(2)
    num: int = betterproto.uint32_field(3)
    target_uid_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CheckDormLikesDropReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class CheckDormLikesDropRsp(betterproto.Message):
    retcode: "CheckDormLikesDropRspRetcode" = betterproto.enum_field(1)
    has_likes_drop: bool = betterproto.bool_field(2)
    yesterday_be_liked_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CheckExtraStoryLockedAvatarBindEquipReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class CheckExtraStoryLockedAvatarBindEquipRsp(betterproto.Message):
    retcode: "CheckExtraStoryLockedAvatarBindEquipRspRetcode" = betterproto.enum_field(
        1
    )
    need_switch: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class CheckRpgTaleStageTriggerReq(betterproto.Message):
    trigger_list: List[int] = betterproto.uint32_field(1)
    tale_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CheckRpgTaleStageTriggerRsp(betterproto.Message):
    retcode: "CheckRpgTaleStageTriggerRspRetcode" = betterproto.enum_field(1)
    show_trigger_list: List[int] = betterproto.uint32_field(2)
    tale_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChooseAvatarMissionAvatarReq(betterproto.Message):
    sample_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChooseAvatarMissionAvatarRsp(betterproto.Message):
    retcode: "ChooseAvatarMissionAvatarRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    sample_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChooseBossRushBuffReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    pool_id: int = betterproto.uint32_field(2)
    buff_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChooseBossRushBuffRsp(betterproto.Message):
    retcode: "ChooseBossRushBuffRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    pool_id: int = betterproto.uint32_field(3)
    buff_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ChooseConsignedOrderReq(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    choosen_order: "ConsignedOrder" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ChooseConsignedOrderRsp(betterproto.Message):
    retcode: "ChooseConsignedOrderRspRetcode" = betterproto.enum_field(1)
    choosen_order: "ConsignedOrder" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ChooseConsignedRewardReq(betterproto.Message):
    optional_reward_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChooseConsignedRewardRsp(betterproto.Message):
    retcode: "ChooseConsignedRewardRspRetcode" = betterproto.enum_field(1)
    optional_reward_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChooseReclaimGachaReq(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChooseReclaimGachaRsp(betterproto.Message):
    retcode: "ChooseReclaimGachaRspRetcode" = betterproto.enum_field(1)
    item_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChooseStageBuffReq(betterproto.Message):
    activity_buff_id: int = betterproto.uint32_field(1)
    buff_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChooseStageBuffRsp(betterproto.Message):
    retcode: "ChooseStageBuffRspRetcode" = betterproto.enum_field(1)
    activity_buff_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChooseVirtualDefaultAvatarNotify(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    candidate_avatar_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChooseVirtualTrainGachaItemReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    item_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChooseVirtualTrainGachaItemRsp(betterproto.Message):
    retcode: "ChooseVirtualTrainGachaItemRspRetcode" = betterproto.enum_field(1)
    group_id: int = betterproto.uint32_field(2)
    item_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CityActivityAffinityDropInfo(betterproto.Message):
    max_daily_affinity_drop_in_stage: int = betterproto.uint32_field(1)
    today_affinity_drop_in_stage: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CityActivityEvent(betterproto.Message):
    site_id: int = betterproto.uint32_field(1)
    event_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CityActivityPhoneEvent(betterproto.Message):
    role_id: int = betterproto.uint32_field(1)
    phone_event_id: int = betterproto.uint32_field(2)
    status: "PhoneEventStatus" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class CityActivityRole(betterproto.Message):
    role_id: int = betterproto.uint32_field(1)
    affinity: int = betterproto.uint32_field(2)
    affinity_level: int = betterproto.uint32_field(3)
    is_like_type_gift_received: bool = betterproto.bool_field(4)
    is_favourite_gift_received: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class CityActivitySite(betterproto.Message):
    site_id: int = betterproto.uint32_field(1)
    site_begin_time: int = betterproto.uint32_field(2)
    site_end_time: int = betterproto.uint32_field(3)
    activity_schedule_id: int = betterproto.uint32_field(4)
    activity_begin_time: int = betterproto.uint32_field(5)
    activity_end_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ClaimScoinReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ClaimScoinRsp(betterproto.Message):
    retcode: "ClaimScoinRspRetcode" = betterproto.enum_field(1)
    add_scoin: int = betterproto.uint32_field(2)
    is_extra: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class ClaimStaminaReq(betterproto.Message):
    stamina: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ClaimStaminaRsp(betterproto.Message):
    retcode: "ClaimStaminaRspRetcode" = betterproto.enum_field(1)
    stamina: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ClearStageActivity(betterproto.Message):
    begin_time: int = betterproto.uint32_field(1)
    end_time: int = betterproto.uint32_field(2)
    stage_id: int = betterproto.uint32_field(3)
    reward_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ClientCheckNetworkEnvReq(betterproto.Message):
    token_str: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class ClientCheckNetworkEnvRsp(betterproto.Message):
    retcode: "ClientCheckNetworkEnvRspRetcode" = betterproto.enum_field(1)
    token_str: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class ClientData(betterproto.Message):
    type: "ClientDataType" = betterproto.enum_field(1)
    id: int = betterproto.uint32_field(2)
    data: bytes = betterproto.bytes_field(3)


@dataclass(eq=False, repr=False)
class ClientMail(betterproto.Message):
    key: "ClientMailKey" = betterproto.message_field(1)
    title: str = betterproto.string_field(2)
    content: str = betterproto.string_field(3)
    sender: str = betterproto.string_field(4)
    time: int = betterproto.uint32_field(5)
    attachment: "MailAttachment" = betterproto.message_field(6)
    is_attachment_got: bool = betterproto.bool_field(7)
    expire_time: int = betterproto.uint32_field(8)
    content_param_list: List[str] = betterproto.string_field(9)
    template_id: int = betterproto.uint32_field(10)
    is_read: bool = betterproto.bool_field(11)
    mail_style: int = betterproto.uint32_field(12)
    img_path: str = betterproto.string_field(13)


@dataclass(eq=False, repr=False)
class ClientMailAttachmentItem(betterproto.Message):
    key: "ClientMailKey" = betterproto.message_field(1)
    item_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ClientMailInfo(betterproto.Message):
    total_num: int = betterproto.uint32_field(1)
    can_fast_delete_num: int = betterproto.uint32_field(2)
    mail_style_info_list: List["ClientMailStyleInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ClientMailKey(betterproto.Message):
    type: "ClientMailType" = betterproto.enum_field(1)
    id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ClientMailStyleInfo(betterproto.Message):
    mail_style: int = betterproto.uint32_field(1)
    untaken_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ClientReportBinReq(betterproto.Message):
    report_type: "ClientReportBinType" = betterproto.enum_field(1)
    report_bin_list: List[bytes] = betterproto.bytes_field(2)


@dataclass(eq=False, repr=False)
class ClientReportBinRsp(betterproto.Message):
    retcode: "ClientReportBinRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ClientReportReq(betterproto.Message):
    report_type: str = betterproto.string_field(1)
    report_value: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class ClientReportRsp(betterproto.Message):
    retcode: "ClientReportRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CommandCdSwitchData(betterproto.Message):
    cmd_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CommentReportReq(betterproto.Message):
    comment: "CommentType" = betterproto.enum_field(1)
    times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CommentReportRsp(betterproto.Message):
    retcode: "CommentReportRspRetcode" = betterproto.enum_field(1)
    next_evaluate_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CommonCdCheckNotify(betterproto.Message):
    end_time: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CommonChatworldRedEnvelope(betterproto.Message):
    red_envelope_id: int = betterproto.uint32_field(1)
    expire_time: int = betterproto.uint32_field(2)
    sender_uid: int = betterproto.uint32_field(3)
    item_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CommonChatworldRedEnvelopeMsg(betterproto.Message):
    sender_uid: int = betterproto.uint32_field(1)
    channel: int = betterproto.uint32_field(2)
    is_sender_npc: bool = betterproto.bool_field(3)
    chatworld_red_envelope: "CommonChatworldRedEnvelope" = betterproto.message_field(4)
    msg: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class ConfirmRecommendGoodsReq(betterproto.Message):
    recommend_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ConfirmRecommendGoodsRsp(betterproto.Message):
    retcode: "ConfirmRecommendGoodsRspRetcode" = betterproto.enum_field(1)
    recommend_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ConsignedOrder(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    consigner_uid: int = betterproto.uint32_field(2)
    reward_id: int = betterproto.uint32_field(3)
    progress: int = betterproto.uint32_field(4)
    unique_id: int = betterproto.uint32_field(5)
    order_level: int = betterproto.uint32_field(6)
    reward_list: List["RewardData"] = betterproto.message_field(7)
    drop_item_list: List["DropItem"] = betterproto.message_field(8)
    order_credit: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ConsignedRewardLog(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)
    credit: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ControllableBoxGachaItem(betterproto.Message):
    drop_id: int = betterproto.uint32_field(1)
    item_id: int = betterproto.uint32_field(2)
    item_level: int = betterproto.uint32_field(3)
    item_num: int = betterproto.uint32_field(4)
    is_shining: bool = betterproto.bool_field(5)
    is_core: bool = betterproto.bool_field(6)
    display_setting_dict: "SettingDict" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class ControllableBoxGachaItemData(betterproto.Message):
    item_list: List["ControllableBoxGachaItem"] = betterproto.message_field(1)
    has_got_item_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ControllableBoxGachaSelectableGroup(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    select_drop_id: int = betterproto.uint32_field(2)
    drop_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CoupleTowerActivity(betterproto.Message):
    max_floor: int = betterproto.uint32_field(1)
    floor_score_list: List["CoupleTowerScore"] = betterproto.message_field(2)
    is_settled: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class CoupleTowerActivityFinishFloorReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    floor: int = betterproto.uint32_field(2)
    score: int = betterproto.uint32_field(3)
    cheat_data_list: List["StageCheatData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class CoupleTowerActivityFinishFloorRsp(betterproto.Message):
    retcode: "CoupleTowerActivityFinishFloorRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CoupleTowerScore(betterproto.Message):
    floor: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CreateAlipayOrderReq(betterproto.Message):
    product_name: str = betterproto.string_field(1)
    total_fee: str = betterproto.string_field(2)
    notify_url: str = betterproto.string_field(3)
    body: str = betterproto.string_field(4)
    trade_type: "CreateAlipayOrderReqTradeType" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class CreateAlipayOrderRsp(betterproto.Message):
    retcode: "CreateAlipayOrderRspRetcode" = betterproto.enum_field(1)
    qr_code_url: str = betterproto.string_field(2)
    product_name: str = betterproto.string_field(3)
    order_string: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class CreateArmadaReq(betterproto.Message):
    name: str = betterproto.string_field(1)
    label: "ArmadaLabel" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CreateArmadaRsp(betterproto.Message):
    retcode: "CreateArmadaRspRetcode" = betterproto.enum_field(1)
    armada_id: int = betterproto.uint32_field(2)
    armada_name: str = betterproto.string_field(3)
    audit_armada_name: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class CreateChatgroupReq(betterproto.Message):
    name: str = betterproto.string_field(1)
    notice: str = betterproto.string_field(2)
    icon_id: int = betterproto.uint32_field(3)
    label_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CreateChatgroupRsp(betterproto.Message):
    retcode: "CreateChatgroupRspRetcode" = betterproto.enum_field(1)
    chatgroup: "Chatgroup" = betterproto.message_field(2)
    audit_name: str = betterproto.string_field(3)
    audit_notice: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class CreateLobbyReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    min_level: int = betterproto.uint32_field(2)
    lobby_enter_type: "LobbyEnterType" = betterproto.enum_field(3)
    max_player_num: int = betterproto.uint32_field(4)
    cabin_attr: List["CabinTechAddAttr"] = betterproto.message_field(5)
    client_rtt: int = betterproto.uint32_field(6)
    member: "MpTeamMember" = betterproto.message_field(7)
    avatar_trial_list: List[int] = betterproto.uint32_field(8)
    is_allow_cross_region: bool = betterproto.bool_field(10)
    team_name: str = betterproto.string_field(11)
    team_description: str = betterproto.string_field(12)
    is_team_name_default: bool = betterproto.bool_field(13)
    max_level: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class CreateLobbyRsp(betterproto.Message):
    retcode: "CreateLobbyRspRetcode" = betterproto.enum_field(1)
    sub_retcode: int = betterproto.int32_field(2)
    lobby_id: int = betterproto.uint32_field(3)
    stage_id: int = betterproto.uint32_field(4)
    min_level: int = betterproto.uint32_field(5)
    lobby_enter_type: "LobbyEnterType" = betterproto.enum_field(6)
    max_level: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class CreateRoomReq(betterproto.Message):
    room_mode: "RoomMode" = betterproto.enum_field(1)
    member_data: "RoomMember" = betterproto.message_field(2)
    room_info: "RoomInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class CreateRoomRsp(betterproto.Message):
    retcode: "CreateRoomRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CreateSteamOrderReq(betterproto.Message):
    product_name: str = betterproto.string_field(1)
    product_desc: str = betterproto.string_field(2)
    account_id: str = betterproto.string_field(3)
    order_id: int = betterproto.uint64_field(4)


@dataclass(eq=False, repr=False)
class CreateSteamOrderRsp(betterproto.Message):
    retcode: "CreateSteamOrderRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CreateWeiXinOrderReq(betterproto.Message):
    body: str = betterproto.string_field(1)
    attach: str = betterproto.string_field(2)
    total_fee: str = betterproto.string_field(3)
    notify_url: str = betterproto.string_field(4)
    trade_type: "CreateWeiXinOrderReqTradeType" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class CreateWeiXinOrderRsp(betterproto.Message):
    retcode: "CreateWeiXinOrderRspRetcode" = betterproto.enum_field(1)
    prepay_id: str = betterproto.string_field(2)
    partner_id: str = betterproto.string_field(3)
    nonce_str: str = betterproto.string_field(4)
    timestamp: str = betterproto.string_field(5)
    sign: str = betterproto.string_field(6)
    qr_code_url: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class CreditAccount(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CreditAccountGetReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CreditAccountGetRsp(betterproto.Message):
    retcode: "CreditAccountGetRspRetcode" = betterproto.enum_field(1)
    account: "CreditAccount" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CreditReportDataReq(betterproto.Message):
    type: "CreditType" = betterproto.enum_field(1)
    cheat_data_list: List["StageCheatData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CreditReportDataRsp(betterproto.Message):
    retcode: "CreditReportDataRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class CrisisModeActivity(betterproto.Message):
    stage_group_schedule_list: List[
        "GeneralActivityStageGroupScheduleInfo"
    ] = betterproto.message_field(1)
    stage_reward_taken_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CrisisModeActivityTakeStageRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CrisisModeActivityTakeStageRewardRsp(betterproto.Message):
    retcode: "CrisisModeActivityTakeStageRewardRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    stage_id: int = betterproto.uint32_field(3)
    reward_data: "RewardData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class CurRpgTaleStage(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    cur_floor: int = betterproto.uint32_field(2)
    avatar_list: List[int] = betterproto.uint32_field(3)
    client_data: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class CustomAvatarTeam(betterproto.Message):
    team_id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    avatar_id_list: List[int] = betterproto.uint32_field(3)
    elf_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CustomGachaData(betterproto.Message):
    ticket_hcoin_cost: int = betterproto.uint32_field(2)
    ticket_material_id: int = betterproto.uint32_field(3)
    cost_material_id: int = betterproto.uint32_field(4)
    cost_material_num: int = betterproto.uint32_field(5)
    is_enable_baodi: bool = betterproto.bool_field(6)
    gacha_type: "GachaType" = betterproto.enum_field(9)
    total_gacha_times: int = betterproto.uint32_field(10)
    gacha_times: int = betterproto.uint32_field(11)
    item_list: List["CustomGachaItemData"] = betterproto.message_field(12)
    display_max_times: int = betterproto.uint32_field(13)
    no_protect_gacha_times: int = betterproto.uint32_field(14)
    protect_display_type: "CustomGachaDataProtectDisplayType" = betterproto.enum_field(
        15
    )
    display_key_avatar: int = betterproto.uint32_field(16)
    display_video_avatar: int = betterproto.uint32_field(17)
    droped_up_item_list: List[int] = betterproto.uint32_field(18)
    shining_type: int = betterproto.uint32_field(19)
    gacha_panel_type: int = betterproto.uint32_field(20)
    display_key_item_list: List[int] = betterproto.uint32_field(21)
    display_extra_para: str = betterproto.string_field(22)
    ex_id: int = betterproto.uint32_field(23)
    ex_energy: int = betterproto.uint32_field(24)
    ex_gacha_num: int = betterproto.uint32_field(25)
    gacha_ex_reward_info: "GachaExRewardInfo" = betterproto.message_field(26)
    protect_display_info: "GachaProtectDisplayInfo" = betterproto.message_field(27)


@dataclass(eq=False, repr=False)
class CustomGachaItemData(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    total_num: int = betterproto.uint32_field(2)
    gacha_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CustomHead(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DanmakuBlacklistNotify(betterproto.Message):
    blacklist_expire_time: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DanmakuContent(betterproto.Message):
    danmaku_id: str = betterproto.string_field(1)
    sender_uid: int = betterproto.uint32_field(2)
    nickname: str = betterproto.string_field(3)
    send_time: int = betterproto.uint32_field(4)
    content: str = betterproto.string_field(5)
    kingdom_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class DanmakuSlotBriefInfo(betterproto.Message):
    danmaku_slot: int = betterproto.uint32_field(1)
    danmaku_slot_status: int = betterproto.uint32_field(2)
    danmaku_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DanmakuSwitchData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class DealArmadaApplyReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)
    agree: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class DealArmadaApplyRsp(betterproto.Message):
    retcode: "DealArmadaApplyRspRetcode" = betterproto.enum_field(1)
    target_uid: int = betterproto.uint32_field(2)
    agree: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class DealChatgroupInviteReq(betterproto.Message):
    chatgroup_id: int = betterproto.uint32_field(1)
    action: "DealChatgroupInviteReqInviteAction" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class DealChatgroupInviteRsp(betterproto.Message):
    retcode: "DealChatgroupInviteRspRetcode" = betterproto.enum_field(1)
    chatgroup_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DealMasterPupilReq(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    op: "MasterPupilOpType" = betterproto.enum_field(2)
    type: "MasterPupilType" = betterproto.enum_field(3)
    time: int = betterproto.uint32_field(4)
    nickname: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class DealMasterPupilRsp(betterproto.Message):
    retcode: "MasterPupilRetcodeRetcode" = betterproto.enum_field(1)
    uid: int = betterproto.uint32_field(2)
    op: "MasterPupilOpType" = betterproto.enum_field(3)
    type: "MasterPupilType" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class DebugHotPatchFileNotify(betterproto.Message):
    file_url: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class DelAvatarEquipSuiteReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    suite_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DelAvatarEquipSuiteRsp(betterproto.Message):
    retcode: "DelAvatarEquipSuiteRspRetcode" = betterproto.enum_field(1)
    avatar_id: int = betterproto.uint32_field(2)
    suite_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DelClientMailReq(betterproto.Message):
    mail_key: "ClientMailKey" = betterproto.message_field(1)
    is_one_click_delete: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class DelClientMailRsp(betterproto.Message):
    retcode: "DelClientMailRspRetcode" = betterproto.enum_field(1)
    mail_key: "ClientMailKey" = betterproto.message_field(2)
    is_one_click_delete: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class DelEquipmentNotify(betterproto.Message):
    weapon_unique_id_list: List[int] = betterproto.uint32_field(1)
    stigmata_unique_id_list: List[int] = betterproto.uint32_field(2)
    mecha_unique_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DelFriendNotify(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DelFriendReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DelFriendRsp(betterproto.Message):
    retcode: "DelFriendRspRetcode" = betterproto.enum_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DelFromBlackListReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DelFromBlackListRsp(betterproto.Message):
    retcode: "DelFromBlackListRspRetcode" = betterproto.enum_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DeliverRestaurantQuestReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    quest_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DeliverRestaurantQuestRsp(betterproto.Message):
    retcode: "DeliverRestaurantQuestRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    quest_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DelMissionNotify(betterproto.Message):
    mission_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DelPlayerCardMsgReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)
    index_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DepotFurniture(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DevLevelChangeNotify(betterproto.Message):
    dev_level_msg: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivity(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    role_list: List["DiceyDungeonRole"] = betterproto.message_field(2)
    weapon_list: List["DiceyDungeonWeapon"] = betterproto.message_field(3)
    story_dicey_dungeon_info: "DiceyDungeonInfo" = betterproto.message_field(4)
    schedule_dicey_dungeon_info: "DiceyDungeonInfo" = betterproto.message_field(5)
    endless_dicey_dungeon_info: "DiceyDungeonInfo" = betterproto.message_field(6)
    passed_endless_dungeon_room_id_list: List[int] = betterproto.uint32_field(7)
    cur_schedule_id: int = betterproto.uint32_field(8)
    refresh_ornament_random: int = betterproto.uint32_field(9)
    has_got_daily_material_list: List[
        "DiceyDungeonHasGotDailyMaterial"
    ] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityDungeonBeginReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)
    activity_id: int = betterproto.uint32_field(2)
    dungeon_info: "DiceyDungeonInfo" = betterproto.message_field(3)
    dungeon_type: "DiceyDungeonType" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityDungeonBeginRsp(betterproto.Message):
    retcode: "DiceyDungeonActivityDungeonBeginRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    dungeon_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityDungeonEndReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)
    activity_id: int = betterproto.uint32_field(2)
    dungeon_info: "DiceyDungeonInfo" = betterproto.message_field(3)
    dungeon_type: "DiceyDungeonType" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityDungeonEndRsp(betterproto.Message):
    retcode: "DiceyDungeonActivityDungeonEndRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    dungeon_id: int = betterproto.uint32_field(3)
    status: "DiceyDungeonActivityDungeonEndRspStatus" = betterproto.enum_field(4)
    reward_data: "RewardData" = betterproto.message_field(5)
    total_dicey_battle_score: int = betterproto.uint32_field(7)
    daily_drop_item_list: List["DropItem"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityGetDailyScoreRankReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)
    activity_id: int = betterproto.uint32_field(2)
    dungeon_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityGetDailyScoreRankRsp(betterproto.Message):
    retcode: "DiceyDungeonActivityGetDailyScoreRankRspRetcode" = betterproto.enum_field(
        1
    )
    activity_id: int = betterproto.uint32_field(2)
    dungeon_id: int = betterproto.uint32_field(3)
    rank_data: "RankShowData" = betterproto.message_field(4)
    rank_percent: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityGetDataReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)
    activity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityGetDataRsp(betterproto.Message):
    retcode: "DiceyDungeonActivityGetDataRspRetcode" = betterproto.enum_field(1)
    dungeon_activity: "DiceyDungeonActivity" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityGetWeaponGachaDisplayReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)
    activity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityGetWeaponGachaDisplayRsp(betterproto.Message):
    retcode: "DiceyDungeonActivityGetWeaponGachaDisplayRspRetcode" = (
        betterproto.enum_field(1)
    )
    valid_pool_id_list: List[int] = betterproto.uint32_field(2)
    gacha_random: int = betterproto.uint32_field(3)
    activity_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityRefreshOrnamentReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)
    activity_id: int = betterproto.uint32_field(2)
    refresh_ornament_random: int = betterproto.uint32_field(3)
    dungeon_info: "DiceyDungeonInfo" = betterproto.message_field(4)
    dungeon_type: "DiceyDungeonType" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityRefreshOrnamentRsp(betterproto.Message):
    retcode: "DiceyDungeonActivityRefreshOrnamentRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityRoleLevelUpReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)
    activity_id: int = betterproto.uint32_field(2)
    role_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityRoleLevelUpRsp(betterproto.Message):
    retcode: "DiceyDungeonActivityRoleLevelUpRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityRoomBeginReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)
    activity_id: int = betterproto.uint32_field(2)
    select_dungeon_room_id: int = betterproto.uint32_field(3)
    dungeon_type: "DiceyDungeonType" = betterproto.enum_field(4)
    dungeon_info: "DiceyDungeonInfo" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityRoomBeginRsp(betterproto.Message):
    retcode: "DiceyDungeonActivityRoomBeginRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    dungeon_id: int = betterproto.uint32_field(3)
    dungeon_room_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityRoomEndReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)
    activity_id: int = betterproto.uint32_field(2)
    dungeon_info: "DiceyDungeonInfo" = betterproto.message_field(3)
    status: "DiceyDungeonActivityRoomEndReqStatus" = betterproto.enum_field(4)
    dungeon_type: "DiceyDungeonType" = betterproto.enum_field(5)
    battle_time: int = betterproto.uint32_field(6)
    battle_round: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityRoomEndRsp(betterproto.Message):
    retcode: "DiceyDungeonActivityRoomEndRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    dungeon_id: int = betterproto.uint32_field(3)
    dungeon_room_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivitySelectOrnamentReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)
    activity_id: int = betterproto.uint32_field(2)
    select_ornament_id: int = betterproto.uint32_field(3)
    replace_ornament_id: int = betterproto.uint32_field(4)
    is_abandon: bool = betterproto.bool_field(5)
    dungeon_info: "DiceyDungeonInfo" = betterproto.message_field(6)
    dungeon_type: "DiceyDungeonType" = betterproto.enum_field(7)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivitySelectOrnamentRsp(betterproto.Message):
    retcode: "DiceyDungeonActivitySelectOrnamentRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    is_abandon: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityWeaponGachaReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)
    activity_id: int = betterproto.uint32_field(2)
    gacha_random: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DiceyDungeonActivityWeaponGachaRsp(betterproto.Message):
    retcode: "DiceyDungeonActivityWeaponGachaRspRetcode" = betterproto.enum_field(1)
    weapon_id: int = betterproto.uint32_field(2)
    is_new: bool = betterproto.bool_field(3)
    gacha_random: int = betterproto.uint32_field(4)
    activity_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class DiceyDungeonHasGotDailyMaterial(betterproto.Message):
    material_id: int = betterproto.uint32_field(1)
    num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DiceyDungeonInfo(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(1)
    floor: int = betterproto.uint32_field(2)
    dungeon_room_id: int = betterproto.uint32_field(3)
    role: "DiceyDungeonRole" = betterproto.message_field(4)
    health: int = betterproto.uint32_field(5)
    weapon: "DiceyDungeonWeapon" = betterproto.message_field(6)
    passed_room_id_list: List[int] = betterproto.uint32_field(7)
    ornament_list: List["DiceyDungeonOrnament"] = betterproto.message_field(8)
    wait_select_ornament_id_list: List[int] = betterproto.uint32_field(9)
    random_dicey_num_list: List[int] = betterproto.uint32_field(10)
    left_refresh_ornament_times: int = betterproto.uint32_field(11)
    dicey_battle_score: int = betterproto.uint32_field(12)
    total_dicey_battle_score: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class DiceyDungeonOrnament(betterproto.Message):
    ornament_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DiceyDungeonRole(betterproto.Message):
    role_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DiceyDungeonWeapon(betterproto.Message):
    weapon_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DisjoinFurnitureReq(betterproto.Message):
    furniture_list: List["DepotFurniture"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class DisjoinFurnitureRsp(betterproto.Message):
    retcode: "DisjoinFurnitureRspRetcode" = betterproto.enum_field(1)
    material_list: List["Material"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class DissolveArmadaReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class DissolveArmadaRsp(betterproto.Message):
    retcode: "DissolveArmadaRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class DlcAvatar(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    talent_list: List["DlcAvatarTalent"] = betterproto.message_field(2)
    equip_talent_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DlcAvatarReviveReq(betterproto.Message):
    cost_type: "DlcAvatarReviveCostType" = betterproto.enum_field(1)
    map_id: int = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(4)
    drop_item_list: List["DropItem"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class DlcAvatarReviveRsp(betterproto.Message):
    retcode: "DlcAvatarReviveRspRetcode" = betterproto.enum_field(1)
    revive_times: int = betterproto.uint32_field(2)
    cost_type: "DlcAvatarReviveCostType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class DlcAvatarTalent(betterproto.Message):
    talent_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    affix_set_id: int = betterproto.uint32_field(4)
    wait_select_affix_set_id: int = betterproto.uint32_field(6)
    is_mask: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class DlcSupportNpc(betterproto.Message):
    npc_id: int = betterproto.uint32_field(1)
    support_point: int = betterproto.uint32_field(2)
    support_level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DlcTowerAvatarInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    hp_percent: int = betterproto.uint32_field(2)
    sp_percent: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DlcTowerFloorMaxScore(betterproto.Message):
    floor: int = betterproto.uint32_field(1)
    max_score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DlcTowerStageBeginReq(betterproto.Message):
    avatar_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DlcTowerStageBeginRsp(betterproto.Message):
    retcode: "DlcTowerStageBeginRspRetcode" = betterproto.enum_field(1)
    progress: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DlcTowerStageEndReq(betterproto.Message):
    end_status: "StageEndStatus" = betterproto.enum_field(1)
    avatar_info_list: List["DlcTowerAvatarInfo"] = betterproto.message_field(2)
    progress: int = betterproto.uint32_field(3)
    stage_pass_time: int = betterproto.uint32_field(4)
    drop_item_list: List["DropItem"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class DlcTowerStageEndRsp(betterproto.Message):
    retcode: "DlcTowerStageEndRspRetcode" = betterproto.enum_field(1)
    progress: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)
    end_progress: int = betterproto.uint32_field(4)
    score: int = betterproto.uint32_field(5)
    is_new_record: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class DonateWareHouseItemReq(betterproto.Message):
    item: "EquipmentItem" = betterproto.message_field(1)
    target_uid: int = betterproto.uint32_field(2)
    demand_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DonateWareHouseItemRsp(betterproto.Message):
    retcode: "DonateWareHouseItemRspRetcode" = betterproto.enum_field(1)
    item: "EquipmentItem" = betterproto.message_field(2)
    demand_id: int = betterproto.uint32_field(3)
    reward_list: List["RewardData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class DonateWareHouseNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class DormEvent(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    event_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DormFacility(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    id: int = betterproto.uint32_field(3)
    begin_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class DormFacilityData(betterproto.Message):
    facility_list: List["DormFacility"] = betterproto.message_field(1)
    level_up_facility_type: int = betterproto.uint32_field(2)
    level_up_end_time: int = betterproto.uint32_field(3)
    store_stamina: int = betterproto.uint32_field(4)
    is_can_store_stamina: bool = betterproto.bool_field(5)
    power: int = betterproto.uint32_field(10)
    power_recover_left_time: int = betterproto.uint32_field(11)
    power_recover_config_time: int = betterproto.uint32_field(12)
    power_limit: int = betterproto.uint32_field(13)
    base_power_limit: int = betterproto.uint32_field(14)
    limit_bonus_list: List["DormPowerBonus"] = betterproto.message_field(15)
    power_recovery: int = betterproto.uint32_field(16)
    base_power_recovery: int = betterproto.uint32_field(17)
    bonus_power_recovery: int = betterproto.uint32_field(18)


@dataclass(eq=False, repr=False)
class DormHouse(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    room_list: List["DormRoom"] = betterproto.message_field(3)
    level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class DormPowerBonus(betterproto.Message):
    house_id: int = betterproto.uint32_field(1)
    bonus: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DormRoom(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    furniture_list: List["Furniture"] = betterproto.message_field(3)
    avatar_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class DormRoomAvatar(betterproto.Message):
    room_id: int = betterproto.uint32_field(1)
    avatar_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DormVisitRecord(betterproto.Message):
    visit_time: int = betterproto.uint32_field(1)
    visit_uid: int = betterproto.uint32_field(2)
    visit_avatar: int = betterproto.uint32_field(3)
    level: int = betterproto.uint32_field(4)
    name: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class DrawRaffleTicketReq(betterproto.Message):
    raffle_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DrawRaffleTicketRsp(betterproto.Message):
    retcode: "DrawRaffleTicketRspRetcode" = betterproto.enum_field(1)
    raffle_id: int = betterproto.uint32_field(2)
    ticket: int = betterproto.uint32_field(3)
    draw_idx: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class Dream(betterproto.Message):
    dream_id: int = betterproto.uint32_field(1)
    unlock_id: int = betterproto.uint32_field(2)
    is_open: bool = betterproto.bool_field(3)
    selected_dream_reward_id: int = betterproto.uint32_field(4)
    score: int = betterproto.uint32_field(5)
    is_reward_taken: bool = betterproto.bool_field(6)
    exchange_score_times: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class DreamActivity(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    dream_list: List["Dream"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class DreamExchangeScoreReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    dream_id: int = betterproto.uint32_field(2)
    num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DreamExchangeScoreRsp(betterproto.Message):
    retcode: "DreamExchangeScoreRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class DreamGetActivityReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DreamGetActivityRsp(betterproto.Message):
    retcode: "DreamGetActivityRspRetcode" = betterproto.enum_field(1)
    activity: "DreamActivity" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class DreamGiveUpDreamReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    dream_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DreamGiveUpDreamRsp(betterproto.Message):
    retcode: "DreamGiveUpDreamRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class DreamOpenDreamReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    dream_id: int = betterproto.uint32_field(2)
    select_dream_reward_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DreamOpenDreamRsp(betterproto.Message):
    retcode: "DreamOpenDreamRspRetcode" = betterproto.enum_field(1)
    unlock_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DreamTakeRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    dream_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DreamTakeRewardRsp(betterproto.Message):
    retcode: "DreamTakeRewardRspRetcode" = betterproto.enum_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class DressEquipmentReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    slot: "EquipmentSlot" = betterproto.enum_field(2)
    unique_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DressEquipmentRsp(betterproto.Message):
    retcode: "DressEquipmentRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class DressReclaimEquipmentReq(betterproto.Message):
    reclaim_avatar_id: int = betterproto.uint32_field(1)
    slot: "EquipmentSlot" = betterproto.enum_field(2)
    reclaim_equip_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DressReclaimEquipmentRsp(betterproto.Message):
    retcode: "DressReclaimEquipmentRspRetcode" = betterproto.enum_field(1)
    reclaim_avatar: "ReclaimAvatar" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class DressToReturnMaterialNotify(betterproto.Message):
    dress_id: int = betterproto.uint32_field(1)
    num: int = betterproto.uint32_field(2)
    scoin: int = betterproto.uint32_field(3)
    return_material_id: int = betterproto.uint32_field(4)
    return_material_num: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class DressVirtualEquipmentReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    virtual_avatar_id: int = betterproto.uint32_field(2)
    equip_type: int = betterproto.uint32_field(3)
    slot: int = betterproto.uint32_field(4)
    virtual_equip_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class DressVirtualEquipmentRsp(betterproto.Message):
    retcode: "DressVirtualEquipmentRspRetcode" = betterproto.enum_field(1)
    group_id: int = betterproto.uint32_field(2)
    virtual_avatar: "VirtualAvatar" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class DropItem(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    num: int = betterproto.uint32_field(3)
    rarity: int = betterproto.uint32_field(4)
    is_baodi: bool = betterproto.bool_field(5)
    is_rare_drop: bool = betterproto.bool_field(6)
    gift_item_id: int = betterproto.uint32_field(7)
    gift_level: int = betterproto.uint32_field(8)
    gift_num: int = betterproto.uint32_field(9)
    is_treasure: bool = betterproto.bool_field(10)
    is_equip_drop: bool = betterproto.bool_field(11)
    is_stage_clear_drop: bool = betterproto.bool_field(12)
    is_avatar_drop: bool = betterproto.bool_field(13)
    is_theme_wanted_double_drop: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class DropLimitActivity(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)
    drop_limit_got_num_list: List["DropLimitItem"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class DropLimitItem(betterproto.Message):
    limit_id: int = betterproto.uint32_field(1)
    got_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EditAdventureRoomReq(betterproto.Message):
    decoration_slot: "AdventureDecorationSlot" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EditAdventureRoomRsp(betterproto.Message):
    retcode: "EditAdventureRoomRspRetcode" = betterproto.enum_field(1)
    slot_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EditDormRoomReq(betterproto.Message):
    house_id: int = betterproto.uint32_field(1)
    room_id: int = betterproto.uint32_field(2)
    furniture_list: List["Furniture"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class EditDormRoomRsp(betterproto.Message):
    retcode: "EditDormRoomRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class EffectiveGiftGoodsData(betterproto.Message):
    goods_id: int = betterproto.uint32_field(1)
    expire_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class Elf(betterproto.Message):
    elf_id: int = betterproto.uint32_field(1)
    star: int = betterproto.uint32_field(2)
    level: int = betterproto.uint32_field(3)
    exp: int = betterproto.uint32_field(4)
    equip_talent_id_list: List[int] = betterproto.uint32_field(5)
    skill_list: List["ElfSkill"] = betterproto.message_field(6)
    compensate_level: int = betterproto.uint32_field(7)
    total_compensate_exp: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ElfBriefInfo(betterproto.Message):
    elf_id: int = betterproto.uint32_field(1)
    elf_level: int = betterproto.uint32_field(2)
    elf_star: int = betterproto.uint32_field(3)
    equip_talent_id_list: List[int] = betterproto.uint32_field(4)
    skill_list: List["ElfBriefInfoSkill"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ElfBriefInfoSkill(betterproto.Message):
    skill_id: int = betterproto.uint32_field(1)
    skill_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ElfDetailData(betterproto.Message):
    elf_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    star: int = betterproto.uint32_field(3)
    equip_talent_list: List["ElfTalentDetailData"] = betterproto.message_field(4)
    skill_list: List["ElfSkillDetailData"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ElfFragment(betterproto.Message):
    elf_id: int = betterproto.uint32_field(1)
    fragment_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ElfFragmentSwitchData(betterproto.Message):
    elf_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ElfFragmentTransformReq(betterproto.Message):
    elf_fragment_id: int = betterproto.uint32_field(1)
    elf_fragment_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ElfFragmentTransformRsp(betterproto.Message):
    retcode: "ElfFragmentTransformRspRetcode" = betterproto.enum_field(1)
    add_material_id: int = betterproto.uint32_field(2)
    add_material_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ElfSkill(betterproto.Message):
    skill_id: int = betterproto.uint32_field(1)
    skill_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ElfSkillDetailData(betterproto.Message):
    elf_skill_id: int = betterproto.uint32_field(1)
    skill_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ElfSkillLevelUpReq(betterproto.Message):
    elf_id: int = betterproto.uint32_field(1)
    elf_skill_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ElfSkillLevelUpRsp(betterproto.Message):
    retcode: "ElfSkillLevelUpRspRetcode" = betterproto.enum_field(1)
    elf_skill: "ElfSkill" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ElfStarUpReq(betterproto.Message):
    elf_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ElfStarUpRsp(betterproto.Message):
    retcode: "ElfStarUpRspRetcode" = betterproto.enum_field(1)
    elf_id: int = betterproto.uint32_field(2)
    is_unlock: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class ElfTakeCompensationReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ElfTakeCompensationRsp(betterproto.Message):
    retcode: "ElfTakeCompensationRspRetcode" = betterproto.enum_field(1)
    item_list: List["RewardItemData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ElfTalent(betterproto.Message):
    talent_id: int = betterproto.uint32_field(1)
    talent_level: int = betterproto.uint32_field(2)
    equip_elf_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ElfTalentDetailData(betterproto.Message):
    elf_talent_id: int = betterproto.uint32_field(1)
    talent_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ElfUpgradeLevelPeriodReq(betterproto.Message):
    elf_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ElfUpgradeLevelPeriodRsp(betterproto.Message):
    retcode: "ElfUpgradeLevelPeriodRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class EliteChapterActCompensation(betterproto.Message):
    act_id: int = betterproto.uint32_field(1)
    difficulty: int = betterproto.uint32_field(2)
    challenge_reward_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EliteChapterCompensationInfo(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)
    stage_compensation_list: List[
        "EliteChapterStageCompensation"
    ] = betterproto.message_field(2)
    act_compensation_list: List[
        "EliteChapterActCompensation"
    ] = betterproto.message_field(3)
    has_taken_compensation: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class EliteChapterStageCompensation(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_first_win: bool = betterproto.bool_field(2)
    challenge_reward_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EndlessAvatar(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    star: int = betterproto.uint32_field(2)
    level: int = betterproto.uint32_field(3)
    weapon_id: int = betterproto.uint32_field(4)
    stigmata_id_1: int = betterproto.uint32_field(5)
    stigmata_id_2: int = betterproto.uint32_field(6)
    stigmata_id_3: int = betterproto.uint32_field(7)
    quantum_weapon_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class EndlessAvatarGoodfeel(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    goodfeel_value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EndlessAvatarHp(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    hp_percent: int = betterproto.uint32_field(2)
    next_recover_time: int = betterproto.uint32_field(3)
    is_die: bool = betterproto.bool_field(4)
    sp_percent: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class EndlessElfStatus(betterproto.Message):
    elf_id: int = betterproto.uint32_field(1)
    sp_percent: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EndlessInSettleNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class EndlessItem(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EndlessItemFrozenInfo(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)
    frozen_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EndlessNtrAvatar(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EndlessPlayerData(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)
    progress_time: int = betterproto.uint32_field(3)
    wait_effect_item_list: List["EndlessWaitEffectItem"] = betterproto.message_field(4)
    hidden_expire_time: int = betterproto.uint32_field(5)
    max_progress: int = betterproto.uint32_field(6)
    wait_burst_bomb_list: List["EndlessWaitBurstBomb"] = betterproto.message_field(7)
    is_just_bomb_burst: bool = betterproto.bool_field(8)
    hidden_item_id: int = betterproto.uint32_field(9)
    reward_progress: int = betterproto.uint32_field(10)
    last_lineup_info: "LineupBriefInfo" = betterproto.message_field(11)
    group_level: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class EndlessSelectTypeReq(betterproto.Message):
    endless_type: "EndlessType" = betterproto.enum_field(1)
    level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EndlessSelectTypeRsp(betterproto.Message):
    retcode: "EndlessSelectTypeRspRetcode" = betterproto.enum_field(1)
    endless_type: "EndlessType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class EndlessSingleModeActivity(betterproto.Message):
    cur_floor: int = betterproto.uint32_field(1)
    floor_score_list: List["EndlessSingleModeScore"] = betterproto.message_field(2)
    is_settled: bool = betterproto.bool_field(3)
    reset_times: int = betterproto.uint32_field(4)
    monster_random_id: int = betterproto.uint32_field(5)
    activity_type: int = betterproto.uint32_field(6)
    ow_monster_score_list: List[
        "EndlessSingleModeMonsterScore"
    ] = betterproto.message_field(7)
    ow_item_list: List["EndlessSingleModeItem"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class EndlessSingleModeActivityBattleBeginReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    map_id: int = betterproto.uint32_field(2)
    area_id: int = betterproto.uint32_field(3)
    battle_id: int = betterproto.uint32_field(4)
    group_level: int = betterproto.uint32_field(5)
    monster_group_id: int = betterproto.uint32_field(6)
    layer_number: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class EndlessSingleModeActivityBattleBeginRsp(betterproto.Message):
    retcode: "EndlessSingleModeActivityBattleBeginRspRetcode" = betterproto.enum_field(
        1
    )


@dataclass(eq=False, repr=False)
class EndlessSingleModeActivityBattleEndReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    map_id: int = betterproto.uint32_field(2)
    area_id: int = betterproto.uint32_field(3)
    battle_id: int = betterproto.uint32_field(4)
    monster_group_id: int = betterproto.uint32_field(5)
    score: int = betterproto.uint32_field(6)
    cost_time: int = betterproto.uint32_field(7)
    end_status: "StageEndStatus" = betterproto.enum_field(8)
    avatar_list: List["StageInnerAvatarData"] = betterproto.message_field(9)
    environment_id: int = betterproto.uint32_field(10)
    layer_number: int = betterproto.uint32_field(11)
    elf_list: List["StageInnerElfData"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class EndlessSingleModeActivityBattleEndRsp(betterproto.Message):
    retcode: "EndlessSingleModeActivityBattleEndRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    map_id: int = betterproto.uint32_field(3)
    area_id: int = betterproto.uint32_field(4)
    battle_id: int = betterproto.uint32_field(5)
    monster_group_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class EndlessSingleModeActivityFinishFloorReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    floor: int = betterproto.uint32_field(2)
    score: int = betterproto.uint32_field(3)
    cost_time: int = betterproto.uint32_field(4)
    cheat_data_list: List["StageCheatData"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class EndlessSingleModeActivityFinishFloorRsp(betterproto.Message):
    retcode: "EndlessSingleModeActivityFinishFloorRspRetcode" = betterproto.enum_field(
        1
    )


@dataclass(eq=False, repr=False)
class EndlessSingleModeActivityResetReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class EndlessSingleModeActivityResetRsp(betterproto.Message):
    retcode: "EndlessSingleModeActivityResetRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EndlessSingleModeActivityTakeItemReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    item_id: int = betterproto.uint32_field(2)
    item_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EndlessSingleModeActivityTakeItemRsp(betterproto.Message):
    retcode: "EndlessSingleModeActivityTakeItemRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class EndlessSingleModeActivityUseItemReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    item_id: int = betterproto.uint32_field(2)
    item_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EndlessSingleModeActivityUseItemRsp(betterproto.Message):
    retcode: "EndlessSingleModeActivityUseItemRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class EndlessSingleModeItem(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    item_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EndlessSingleModeMonsterScore(betterproto.Message):
    monster_group_id: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EndlessSingleModeScore(betterproto.Message):
    floor: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EndlessStatus(betterproto.Message):
    endless_type: "EndlessType" = betterproto.enum_field(1)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)
    close_time: int = betterproto.uint32_field(4)
    sin_type: int = betterproto.uint32_field(5)
    progress_or_score: int = betterproto.uint32_field(6)
    group_level: int = betterproto.uint32_field(7)
    last_lineup_info: "LineupBriefInfo" = betterproto.message_field(8)
    can_join_in: bool = betterproto.bool_field(9)
    pre_general_activity_id: int = betterproto.uint32_field(10)
    replace_endless_group_list: List[int] = betterproto.uint32_field(11)
    max_score_lineup_info: "LineupBriefInfo" = betterproto.message_field(12)
    greedy_max_finish_floor: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class EndlessSwitchData(betterproto.Message):
    endless_type: int = betterproto.uint32_field(1)
    player_group: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EndlessWaitBurstBomb(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    burst_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EndlessWaitEffectItem(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    effect_times: int = betterproto.uint32_field(2)
    expire_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EndlessWarInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    target_uid: int = betterproto.uint32_field(2)
    item_id: int = betterproto.uint32_field(3)
    type: "EndlessWarInfoType" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class EnterArmadaChatroomReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class EnterArmadaChatroomRsp(betterproto.Message):
    retcode: "EnterArmadaChatroomRspRetcode" = betterproto.enum_field(1)
    his_chat_msg_list: List["ChatMsg"] = betterproto.message_field(2)
    his_system_chat_msg_list: List["ArmadaSystemChatMsg"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class EnterCommonChatworldReq(betterproto.Message):
    chatworld_id: int = betterproto.uint32_field(1)
    player_info: "ChatworldPlayerInfo" = betterproto.message_field(2)
    scene_id: int = betterproto.uint32_field(3)
    scene_data: "ChatworldPlayerScene" = betterproto.message_field(4)
    last_chatworld_id: int = betterproto.uint32_field(5)
    camp_tag: int = betterproto.uint32_field(6)
    last_scene_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class EnterCommonChatworldRsp(betterproto.Message):
    retcode: "EnterCommonChatworldRspRetcode" = betterproto.enum_field(1)
    chatworld_id: int = betterproto.uint32_field(2)
    player_info_list: List["ChatworldEntity"] = betterproto.message_field(3)
    self_info: "ChatworldEntity" = betterproto.message_field(4)
    npc_red_envelope_list: List[
        "CommonChatworldRedEnvelope"
    ] = betterproto.message_field(5)
    time: int = betterproto.uint32_field(6)
    scene_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class EnterLobbyReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    lobby_id: int = betterproto.uint32_field(2)
    is_friend_invitation: bool = betterproto.bool_field(3)
    level: int = betterproto.uint32_field(4)
    client_rtt: int = betterproto.uint32_field(6)
    has_leader_stamina: bool = betterproto.bool_field(7)
    member: "MpTeamMember" = betterproto.message_field(8)
    has_leader_enter_times: bool = betterproto.bool_field(9)
    device_score: int = betterproto.uint32_field(10)
    report_num: int = betterproto.uint32_field(11)
    has_leader_theme_wanted_ticket: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class EnterLobbyRsp(betterproto.Message):
    retcode: "EnterLobbyRspRetcode" = betterproto.enum_field(1)
    sub_retcode: int = betterproto.int32_field(2)
    lobby_id: int = betterproto.uint32_field(3)
    stage_id: int = betterproto.uint32_field(4)
    avatar_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class EnterRoomReq(betterproto.Message):
    room_mode: "RoomMode" = betterproto.enum_field(1)
    room_id: int = betterproto.uint32_field(2)
    member_data: "RoomMember" = betterproto.message_field(3)
    room_info: "RoomInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class EnterRoomRsp(betterproto.Message):
    retcode: "EnterRoomRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class EnterRpgTaleSiteReq(betterproto.Message):
    site_id: int = betterproto.uint32_field(1)
    tale_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EnterRpgTaleSiteRsp(betterproto.Message):
    retcode: "EnterRpgTaleSiteRspRetcode" = betterproto.enum_field(1)
    site_id: int = betterproto.uint32_field(2)
    tale_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EnterWorldChatroomReq(betterproto.Message):
    chatroom_id: int = betterproto.uint32_field(1)
    activity_type: "ActivityWorldChatroomType" = betterproto.enum_field(2)
    para: int = betterproto.uint32_field(3)
    player_level: int = betterproto.uint32_field(4)
    player_region: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class EnterWorldChatroomRsp(betterproto.Message):
    retcode: "EnterWorldChatroomRspRetcode" = betterproto.enum_field(1)
    chatroom_id: int = betterproto.uint32_field(2)
    his_chat_msg_list: List["ChatMsg"] = betterproto.message_field(3)
    activity_type: "ActivityWorldChatroomType" = betterproto.enum_field(4)
    player_num: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class EquipDlcAvatarTalentReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    equip_talent_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EquipDlcAvatarTalentRsp(betterproto.Message):
    retcode: "EquipDlcAvatarTalentRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class EquipForgeSwitchData(betterproto.Message):
    equip_forge_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class EquipmentEvoReq(betterproto.Message):
    main_item: "EquipmentItem" = betterproto.message_field(1)
    consume_item_list: "EquipmentItemList" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EquipmentEvoRsp(betterproto.Message):
    retcode: "EquipmentEvoRspRetcode" = betterproto.enum_field(1)
    new_item: "EquipmentItem" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EquipmentForge(betterproto.Message):
    forge_id: int = betterproto.uint32_field(1)
    times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EquipmentForgeConsume(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    equip_list: List["EquipmentForgeConsumeConsumeEquip"] = betterproto.message_field(2)
    material_list: List["Material"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class EquipmentForgeConsumeConsumeEquip(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    exp: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EquipmentItem(betterproto.Message):
    type: "EquipmentType" = betterproto.enum_field(1)
    id_or_unique_id: int = betterproto.uint32_field(2)
    num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EquipmentItemList(betterproto.Message):
    item_list: List["EquipmentItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EquipmentPowerUpReq(betterproto.Message):
    main_item: "EquipmentItem" = betterproto.message_field(1)
    consume_item_list: "EquipmentItemList" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EquipmentPowerUpRsp(betterproto.Message):
    retcode: "EquipmentPowerUpRspRetcode" = betterproto.enum_field(1)
    main_item: "EquipmentItem" = betterproto.message_field(2)
    boost_rate: int = betterproto.uint32_field(3)
    return_material_list: List["Material"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class EquipmentSellReq(betterproto.Message):
    sell_item_list: "EquipmentItemList" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EquipmentSellRsp(betterproto.Message):
    retcode: "EquipmentSellRspRetcode" = betterproto.enum_field(1)
    scoin_add: int = betterproto.uint32_field(2)
    purple_jade_add: int = betterproto.uint32_field(4)
    cost_vitality: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class EquipScDlcAvatarTalentReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    equip_talent_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EquipScDlcAvatarTalentRsp(betterproto.Message):
    retcode: "EquipScDlcAvatarTalentRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class EquipSynthesisReq(betterproto.Message):
    material: "Material" = betterproto.message_field(1)
    equip_item: "EquipmentItem" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EquipSynthesisRsp(betterproto.Message):
    retcode: "EquipSynthesisRspRetcode" = betterproto.enum_field(1)
    equip_list: "EquipmentItemList" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EvaluateExaminationReq(betterproto.Message):
    examination_id: int = betterproto.uint32_field(1)
    is_like: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class EvaluateExaminationRsp(betterproto.Message):
    retcode: "EvaluateExaminationRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class EvoStigmataTitleReq(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class EvoStigmataTitleRsp(betterproto.Message):
    retcode: "EvoStigmataTitleRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class Examination(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    last_answer: int = betterproto.uint32_field(2)
    is_finished: bool = betterproto.bool_field(3)
    answer_list: List[int] = betterproto.uint32_field(4)
    is_evaluated: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class ExBossEnterSwitchData(betterproto.Message):
    ex_boss_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ExBossIdInfo(betterproto.Message):
    boss_id: int = betterproto.uint32_field(1)
    avatar_id_list: List[int] = betterproto.uint32_field(3)
    weapon_id_list: List[int] = betterproto.uint32_field(4)
    stigmata_id_list: List[int] = betterproto.uint32_field(5)
    score: int = betterproto.uint32_field(6)
    last_avatar_id_list: List[int] = betterproto.uint32_field(7)
    boss_times_score: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ExBossInfo(betterproto.Message):
    enter_times: int = betterproto.uint32_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    rank_id: int = betterproto.uint32_field(3)
    boss_id_list: List["ExBossIdInfo"] = betterproto.message_field(4)
    now_schedule_id: int = betterproto.uint32_field(5)
    ex_boss_list: List["ExBossIdInfo"] = betterproto.message_field(6)
    max_sweep_level: int = betterproto.uint32_field(7)
    single_boss_score_reward_list: List[
        "ExBossSingleBossScoreReward"
    ] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class ExBossSingleBossScoreReward(betterproto.Message):
    boss_id: int = betterproto.uint32_field(1)
    max_settle_score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ExBossStageBeginReq(betterproto.Message):
    avatar_id_list: List[int] = betterproto.uint32_field(1)
    boss_id: int = betterproto.uint32_field(2)
    is_training: bool = betterproto.bool_field(3)
    elf_id_list: List[int] = betterproto.uint32_field(4)
    is_turbo: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class ExBossStageBeginRsp(betterproto.Message):
    retcode: "ExBossStageBeginRspRetcode" = betterproto.enum_field(1)
    stage_transaction_str: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class ExBossStageEndReq(betterproto.Message):
    end_status: "StageEndStatus" = betterproto.enum_field(1)
    cheat_type: int = betterproto.uint32_field(2)
    cheat_data_list: List["StageCheatData"] = betterproto.message_field(3)
    boss_id: int = betterproto.uint32_field(4)
    score: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ExBossStageEndRsp(betterproto.Message):
    retcode: "ExBossStageEndRspRetcode" = betterproto.enum_field(1)
    end_status: "StageEndStatus" = betterproto.enum_field(2)
    boss_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ExBossSweepReq(betterproto.Message):
    boss_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ExBossSweepRsp(betterproto.Message):
    retcode: "ExBossSweepRspRetcode" = betterproto.enum_field(1)
    boss_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ExBossSwitchData(betterproto.Message):
    boss_group_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ExBossTakeBossScoreRewardNotify(betterproto.Message):
    reward_list: List["RewardData"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ExchangeAvatarWeaponReq(betterproto.Message):
    avatar_id_1: int = betterproto.uint32_field(1)
    avatar_id_2: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ExchangeAvatarWeaponRsp(betterproto.Message):
    retcode: "ExchangeAvatarWeaponRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ExchangeHcoinByMcoinReq(betterproto.Message):
    product_name: str = betterproto.string_field(1)
    mcoin_price: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ExchangeHcoinByMcoinRsp(betterproto.Message):
    retcode: "ExchangeHcoinByMcoinRspRetcode" = betterproto.enum_field(1)
    product_name: str = betterproto.string_field(2)
    pay_hcoin: int = betterproto.uint32_field(3)
    free_hcoin: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ExchangePurpleJadeReq(betterproto.Message):
    hcoin_num: int = betterproto.uint32_field(1)
    mcoin_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ExchangePurpleJadeRsp(betterproto.Message):
    retcode: "ExchangePurpleJadeRspRetcode" = betterproto.enum_field(1)
    hcoin_cost: int = betterproto.uint32_field(2)
    purple_jade_added: int = betterproto.uint32_field(3)
    mcoin_cost: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ExchangeRaffleMaterialReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ExchangeRaffleMaterialRsp(betterproto.Message):
    retcode: "ExchangeRaffleMaterialRspRetcode" = betterproto.enum_field(1)
    get_material_list: List["Material"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ExchangeRedeemCodeReq(betterproto.Message):
    redeem_code: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class ExchangeRedeemCodeRsp(betterproto.Message):
    retcode: "ExchangeRedeemCodeRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)
    redeem_code: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class ExchangeWeekDayActivityTimesReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    activity_times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ExchangeWeekDayActivityTimesRsp(betterproto.Message):
    retcode: "ExchangeWeekDayActivityTimesRspRetcode" = betterproto.enum_field(1)
    coin_cost: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ExitRoomNotify(betterproto.Message):
    reason: "RoomExitReason" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ExitRoomReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ExitRoomRsp(betterproto.Message):
    retcode: "ExitRoomRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ExitTvtBattleNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ExtraChatParam(betterproto.Message):
    room_chat_param: "RoomChatParam" = betterproto.message_field(1)
    private_chat_param: "PrivateChatParam" = betterproto.message_field(2)
    group_chat_param: "GroupChatParam" = betterproto.message_field(3)
    battle_chat_param: "BattleChatParam" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ExtractEquipmentActivity(betterproto.Message):
    extract_weapon_list: List[
        "ExtractEquipmentActivityOpenExtractWeapon"
    ] = betterproto.message_field(4)
    mainid_black_list: List[int] = betterproto.uint32_field(5)
    is_reforge: bool = betterproto.bool_field(6)
    reforge_main_id_list: List[int] = betterproto.uint32_field(7)
    reforge_times: int = betterproto.uint32_field(8)
    powerup_material_ratio: int = betterproto.uint32_field(10)
    reforge_init_level: int = betterproto.uint32_field(11)
    remain_reforge_times: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ExtractEquipmentActivityOpenExtractWeapon(betterproto.Message):
    quality: int = betterproto.uint32_field(1)
    base_type: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ExtractEquipmentReq(betterproto.Message):
    type: "EquipmentType" = betterproto.enum_field(1)
    unique_id: int = betterproto.uint32_field(2)
    capsule_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ExtractEquipmentRsp(betterproto.Message):
    retcode: "ExtractEquipmentRspRetcode" = betterproto.enum_field(1)
    unique_id: int = betterproto.uint32_field(2)
    material_list: List["Material"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ExtraStoryAchieve(betterproto.Message):
    achieve_id: int = betterproto.uint32_field(1)
    is_take: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class ExtraStoryAct(betterproto.Message):
    act_id: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ExtraStoryArea(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)
    act_list: List["ExtraStoryAct"] = betterproto.message_field(2)
    begin_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ExtraStoryChapter(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)
    min_player_level: int = betterproto.uint32_field(2)
    area_list: List["ExtraStoryArea"] = betterproto.message_field(3)
    begin_time: int = betterproto.uint32_field(4)
    end_time: int = betterproto.uint32_field(5)
    is_need_key: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class FacilityLevel(betterproto.Message):
    facility_type: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FarmActivityNotify(betterproto.Message):
    farm_level: int = betterproto.uint32_field(1)
    farm_exp: int = betterproto.uint32_field(2)
    slot_detail_list: List["FarmSlotDetail"] = betterproto.message_field(3)
    produce_material_list: List[
        "FarmProduceMaterialDetail"
    ] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class FarmProduceMaterialDetail(betterproto.Message):
    material_id: int = betterproto.uint32_field(1)
    has_produce_times_total: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FarmSlotDetail(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    slot_status: int = betterproto.uint32_field(2)
    produce_begin_time: int = betterproto.uint32_field(3)
    produce_end_time: int = betterproto.uint32_field(4)
    produce_material_id: int = betterproto.uint32_field(5)
    has_produce_times_daily: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class FastPassParaOw(betterproto.Message):
    map_id: int = betterproto.uint32_field(1)
    quest_id: int = betterproto.uint32_field(2)
    finish_challenge_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FastPassParaWeekday(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class FeverSkillSuite(betterproto.Message):
    suite_id: int = betterproto.uint32_field(1)
    suite_name: str = betterproto.string_field(2)
    skill_chip_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FinishClearStageActivityNotify(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class FinishConsignedOrderReq(betterproto.Message):
    item: "EquipmentItem" = betterproto.message_field(1)
    unique_id: int = betterproto.uint32_field(2)
    consign_id: int = betterproto.uint32_field(3)
    progress: int = betterproto.uint32_field(4)
    order_level: int = betterproto.uint32_field(5)
    order: "ConsignedOrder" = betterproto.message_field(6)
    next_order: "ConsignedOrder" = betterproto.message_field(7)
    reliable_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class FinishConsignedOrderRsp(betterproto.Message):
    retcode: "FinishConsignedOrderRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)
    drop_item_list: List["DropItem"] = betterproto.message_field(3)
    item: "EquipmentItem" = betterproto.message_field(4)
    consign_id: int = betterproto.uint32_field(5)
    reliable_id: int = betterproto.uint32_field(8)
    progress: int = betterproto.uint32_field(9)
    finish_order_times: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class FinishDlcDialogReq(betterproto.Message):
    dialog_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class FinishDlcDialogRsp(betterproto.Message):
    retcode: "FinishDlcDialogRspRetcode" = betterproto.enum_field(1)
    dialog_id: int = betterproto.uint32_field(2)
    add_support_point: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FinishDormEventReq(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    avatar_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FinishDormEventRsp(betterproto.Message):
    retcode: "FinishDormEventRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)
    drop_item_list: List["DropItem"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class FinishDormTalkReq(betterproto.Message):
    plot_id: int = betterproto.uint32_field(1)
    avatar_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FinishDormTalkRsp(betterproto.Message):
    retcode: "FinishDormTalkRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)
    drop_item_list: List["DropItem"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class FinishedExBossInfo(betterproto.Message):
    boss_id: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)
    avatar_info_list: List["AvatarBriefInfo"] = betterproto.message_field(3)
    elf_info_list: List["ElfBriefInfo"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class FinishExaminationReq(betterproto.Message):
    examination_id: int = betterproto.uint32_field(1)
    answer_index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FinishExaminationRsp(betterproto.Message):
    retcode: "FinishExaminationRspRetcode" = betterproto.enum_field(1)
    examination_id: int = betterproto.uint32_field(2)
    is_finished: bool = betterproto.bool_field(3)
    reward_data: "RewardData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class FinishFarmProduceReq(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    is_finish_all: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class FinishFarmProduceRsp(betterproto.Message):
    retcode: "FinishFarmProduceRspRetcode" = betterproto.enum_field(1)
    slot_id: int = betterproto.uint32_field(2)
    is_finish_all: bool = betterproto.bool_field(3)
    reward_farm_exp: int = betterproto.uint32_field(4)
    produce_material_list: List["Material"] = betterproto.message_field(5)
    reward_data: "RewardData" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class FinishFastPassReq(betterproto.Message):
    fast_pass_type: int = betterproto.uint32_field(1)
    fast_pass_para_ow: "FastPassParaOw" = betterproto.message_field(2)
    fast_pass_para_weekday: "FastPassParaWeekday" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class FinishFastPassRsp(betterproto.Message):
    retcode: "FinishFastPassRspRetcode" = betterproto.enum_field(1)
    fast_pass_type: int = betterproto.uint32_field(2)
    drop_item_list: List["DropItem"] = betterproto.message_field(4)
    fast_pass_para_ow: "FastPassParaOw" = betterproto.message_field(5)
    fast_pass_para_weekday: "FastPassParaWeekday" = betterproto.message_field(6)
    player_exp_reward: int = betterproto.uint32_field(7)
    scoin_reward: int = betterproto.uint32_field(8)
    exp_convert_scoin: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class FinishGuideReportReq(betterproto.Message):
    guide_id_list: List[int] = betterproto.uint32_field(1)
    is_force_finish: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class FinishGuideReportRsp(betterproto.Message):
    retcode: "FinishGuideReportRspRetcode" = betterproto.enum_field(1)
    guide_id_list: List[int] = betterproto.uint32_field(2)
    is_finish: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class FinishIslandEventReq(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    node_num: int = betterproto.uint32_field(2)
    is_get_reward: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class FinishIslandEventRsp(betterproto.Message):
    retcode: "FinishIslandEventRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class FinishMatrixEventPlotReq(betterproto.Message):
    plot_id: int = betterproto.uint32_field(1)
    dialog_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FinishMatrixEventPlotRsp(betterproto.Message):
    retcode: "FinishMatrixEventPlotRspRetcode" = betterproto.enum_field(1)
    plot_id: int = betterproto.uint32_field(2)
    dialog_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FinishOpenworldEndlessInvasionMonsterReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    battle_id: int = betterproto.uint32_field(2)
    transaction_str: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class FinishOpenworldEndlessInvasionMonsterRsp(betterproto.Message):
    retcode: "FinishOpenworldEndlessInvasionMonsterRspRetcode" = betterproto.enum_field(
        1
    )
    sub_score: int = betterproto.uint32_field(2)
    id: int = betterproto.uint32_field(3)
    clear_item_list: List["OpenworldEndlessItem"] = betterproto.message_field(4)
    score: int = betterproto.uint32_field(5)
    battle_id: int = betterproto.uint32_field(6)
    transaction_str: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class FinishOpenworldEndlessMonsterGroupReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    lineup_info: "LineupBriefInfo" = betterproto.message_field(2)
    extra_score: int = betterproto.uint32_field(3)
    battle_id: int = betterproto.uint32_field(4)
    cost_time: int = betterproto.uint32_field(5)
    cheat_data_list: List["StageCheatData"] = betterproto.message_field(6)
    stage_id: int = betterproto.uint32_field(7)
    transaction_str: str = betterproto.string_field(8)
    type: "EndlessType" = betterproto.enum_field(9)
    quantum_monster_progress: int = betterproto.uint32_field(10)
    is_skip_level: bool = betterproto.bool_field(11)
    final_boss_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class FinishOpenworldEndlessMonsterGroupRsp(betterproto.Message):
    retcode: "FinishOpenworldEndlessMonsterGroupRspRetcode" = betterproto.enum_field(1)
    finish_monster_group_list: List[int] = betterproto.uint32_field(2)
    group_id: int = betterproto.uint32_field(3)
    clear_item_list: List["OpenworldEndlessItem"] = betterproto.message_field(4)
    score: int = betterproto.uint32_field(5)
    battle_id: int = betterproto.uint32_field(6)
    old_score: int = betterproto.uint32_field(7)
    is_boss: bool = betterproto.bool_field(8)
    transaction_str: str = betterproto.string_field(9)
    monster_group_list: List[
        "OpenworldEndlessMonsterGroup"
    ] = betterproto.message_field(10)
    group_level: int = betterproto.uint32_field(11)
    lineup_info: "LineupBriefInfo" = betterproto.message_field(12)
    type: "EndlessType" = betterproto.enum_field(13)
    quantum_endless: "QuantumEndless" = betterproto.message_field(14)
    is_skip_level: bool = betterproto.bool_field(15)
    final_boss_id: int = betterproto.uint32_field(16)
    max_score_lineup_info: "LineupBriefInfo" = betterproto.message_field(17)


@dataclass(eq=False, repr=False)
class FinishPlotReq(betterproto.Message):
    plot_type: int = betterproto.uint32_field(1)
    plot_id: int = betterproto.uint32_field(3)
    dialog_id: int = betterproto.uint32_field(4)
    avatar_id_list: List[int] = betterproto.uint32_field(5)
    visual_novel_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class FinishPlotRsp(betterproto.Message):
    retcode: "FinishPlotRspRetcode" = betterproto.enum_field(1)
    plot_type: int = betterproto.uint32_field(2)
    plot_id: int = betterproto.uint32_field(4)
    dialog_id: int = betterproto.uint32_field(5)
    reward_list: List["RewardData"] = betterproto.message_field(6)
    drop_item_list: List["DropItem"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class FinishRpgTalePlotReq(betterproto.Message):
    plot_id: int = betterproto.uint32_field(1)
    dialog_id: int = betterproto.uint32_field(2)
    tale_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FinishRpgTalePlotRsp(betterproto.Message):
    retcode: "FinishRpgTalePlotRspRetcode" = betterproto.enum_field(1)
    plot_id: int = betterproto.uint32_field(2)
    dialog_id: int = betterproto.uint32_field(3)
    tale_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class FinishRpgTaleStagePlotReq(betterproto.Message):
    plot_id: int = betterproto.uint32_field(1)
    dialog_id: int = betterproto.uint32_field(2)
    tale_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FinishRpgTaleStagePlotRsp(betterproto.Message):
    retcode: "FinishRpgTaleStagePlotRspRetcode" = betterproto.enum_field(1)
    plot_id: int = betterproto.uint32_field(2)
    dialog_id: int = betterproto.uint32_field(3)
    tale_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class FinishScDlcDailyQuestReq(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)
    cost_time: int = betterproto.uint32_field(2)
    finish_challenge_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FinishScDlcDailyQuestRsp(betterproto.Message):
    retcode: "FinishScDlcDailyQuestRspRetcode" = betterproto.enum_field(1)
    quest_id: int = betterproto.uint32_field(2)
    cost_time: int = betterproto.uint32_field(3)
    finish_challenge_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class FinishScDlcPlotReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class FinishScDlcPlotRsp(betterproto.Message):
    retcode: "FinishScDlcPlotRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class FinishSurveyNotify(betterproto.Message):
    survey_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class FlopActivityCardData(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    state: int = betterproto.uint32_field(2)
    card_number: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FlopActivityData(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    card_list: List["FlopActivityCardData"] = betterproto.message_field(2)
    has_take_reward_list: List[int] = betterproto.uint32_field(3)
    flop_times: int = betterproto.uint32_field(4)
    cur_front_card: int = betterproto.uint32_field(5)
    show_id: int = betterproto.uint32_field(6)
    total_flop_times: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class FlopActivityFlopCardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    card_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FlopActivityFlopCardRsp(betterproto.Message):
    retcode: "FlopActivityFlopCardRspRetcode" = betterproto.enum_field(1)
    activity_data: "FlopActivityData" = betterproto.message_field(2)
    reward_index: int = betterproto.uint32_field(3)
    reward_list: List["RewardData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class FlopActivityRewardData(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    state: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ForgeEquipmentReq(betterproto.Message):
    forge_id: int = betterproto.uint32_field(1)
    consume_item_list: "EquipmentItemList" = betterproto.message_field(2)
    keep_rune_equip_unique_id: int = betterproto.uint32_field(4)
    keep_rune_cost_item_list: "EquipmentItemList" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ForgeEquipmentRsp(betterproto.Message):
    retcode: "ForgeEquipmentRspRetcode" = betterproto.enum_field(1)
    forge_id: int = betterproto.uint32_field(2)
    return_material_list: List["Material"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class FoundationData(betterproto.Message):
    product_name: str = betterproto.string_field(1)
    has_take_reward_level_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FrameData(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    expire_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FriendAskAddData(betterproto.Message):
    brief: "PlayerFriendBriefData" = betterproto.message_field(1)
    ask_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FriendBondNotify(betterproto.Message):
    friend_uid: int = betterproto.uint32_field(1)
    bond: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FriendCabin(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    extend_grade: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FriendRemark(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    remark: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class FriendsPointGachaData(betterproto.Message):
    friends_point_cost: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FrontEndlessActivity(betterproto.Message):
    cur_floor: int = betterproto.uint32_field(1)
    floor_score_list: List[
        "FrontEndlessActivityFloorScore"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class FrontEndlessActivityFloorScore(betterproto.Message):
    floor: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FrontEndlessActivityBattleBeginReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(2)
    floor: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FrontEndlessActivityBattleBeginRsp(betterproto.Message):
    retcode: "FrontEndlessActivityBattleBeginRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class FrontEndlessActivityBattleEndReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(2)
    floor: int = betterproto.uint32_field(3)
    score: int = betterproto.uint32_field(4)
    end_status: "StageEndStatus" = betterproto.enum_field(5)
    cost_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class FrontEndlessActivityBattleEndRsp(betterproto.Message):
    retcode: "FrontEndlessActivityBattleEndRspRetcode" = betterproto.enum_field(1)
    cur_floor: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class Furniture(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    pos_x: int = betterproto.uint32_field(2)
    pos_y: int = betterproto.uint32_field(3)
    direction: int = betterproto.uint32_field(4)
    location: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GachaCoinTransferData(betterproto.Message):
    gacha_type: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GachaDailyTimesLimitSwitchData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GachaDetailProb(betterproto.Message):
    name: str = betterproto.string_field(1)
    star: str = betterproto.string_field(2)
    content: str = betterproto.string_field(3)
    prob: str = betterproto.string_field(4)
    is_up: bool = betterproto.bool_field(5)
    order_value: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GachaDisplayCommonData(betterproto.Message):
    title_image: str = betterproto.string_field(1)
    supply_image: str = betterproto.string_field(2)
    title: str = betterproto.string_field(3)
    content: str = betterproto.string_field(4)
    up_avatar_list: List[int] = betterproto.uint32_field(5)
    up_weapon_list: List["WeaponDetailData"] = betterproto.message_field(6)
    up_stigmata_list: List["StigmataDetailData"] = betterproto.message_field(7)
    rule: str = betterproto.string_field(8)
    content_detail: str = betterproto.string_field(9)
    up_item_list: List[int] = betterproto.uint32_field(10)
    content_url: str = betterproto.string_field(11)
    btn_image_path: str = betterproto.string_field(12)
    sort_item_list: List["GachaSortItem"] = betterproto.message_field(13)
    is_enable_prompt: bool = betterproto.bool_field(14)
    gacha_id: int = betterproto.uint32_field(15)
    data_begin_time: int = betterproto.uint32_field(16)
    data_end_time: int = betterproto.uint32_field(17)
    up_elf_list: List[int] = betterproto.uint32_field(18)
    display_ext: str = betterproto.string_field(19)
    free_gacha_times: int = betterproto.uint32_field(20)


@dataclass(eq=False, repr=False)
class GachaExRewardInfo(betterproto.Message):
    ex_reward_list: List["GachaExRewardInfoExReward"] = betterproto.message_field(15)
    display_ex_reward_item: int = betterproto.uint32_field(16)
    display_ex_reward_type: int = betterproto.uint32_field(17)
    display_ex_reward_detail_list: List[
        "GachaExRewardInfoExRewardDisplayDetail"
    ] = betterproto.message_field(18)


@dataclass(eq=False, repr=False)
class GachaExRewardInfoExReward(betterproto.Message):
    need_gacha_times: int = betterproto.uint32_field(1)
    reward_id: int = betterproto.uint32_field(2)
    is_taken: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GachaExRewardInfoExRewardDisplayDetail(betterproto.Message):
    need_gacha_times: int = betterproto.uint32_field(1)
    item_id: int = betterproto.uint32_field(2)
    item_num: int = betterproto.uint32_field(3)
    is_taken: bool = betterproto.bool_field(4)
    is_display_shining: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class GachaItem(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    num: int = betterproto.uint32_field(3)
    split_fragment_num: int = betterproto.uint32_field(4)
    is_rare_drop: bool = betterproto.bool_field(5)
    gift_item_id: int = betterproto.uint32_field(6)
    gift_level: int = betterproto.uint32_field(7)
    gift_num: int = betterproto.uint32_field(8)
    transfer_item_list: List["GenericItemNum"] = betterproto.message_field(9)
    is_client_display_transfer: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class GachaLog(betterproto.Message):
    time: int = betterproto.uint32_field(1)
    item: "GachaItem" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GachaProtectDisplayInfo(betterproto.Message):
    protect_display_type: "GachaProtectDisplayInfoProtectDisplayType" = (
        betterproto.enum_field(1)
    )
    display_key_avatar: int = betterproto.uint32_field(2)
    display_key_item_list: List[int] = betterproto.uint32_field(3)
    droped_up_item_list: List[int] = betterproto.uint32_field(4)
    no_protect_gacha_times: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GachaSortItem(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GachaSwitchData(betterproto.Message):
    gacha_id: int = betterproto.uint32_field(1)
    gacha_type: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GachaTotalProb(betterproto.Message):
    name: str = betterproto.string_field(1)
    prob: str = betterproto.string_field(2)
    order_value: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GardenActivityData(betterproto.Message):
    garden_id: int = betterproto.uint32_field(1)
    site_list: List["GardenSite"] = betterproto.message_field(2)
    crop_list: List["GardenCrop"] = betterproto.message_field(3)
    daily_harvest_num: int = betterproto.uint32_field(4)
    last_grow_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GardenCrop(betterproto.Message):
    crop_id: int = betterproto.uint32_field(1)
    harvest_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GardenHarvestReq(betterproto.Message):
    site_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GardenHarvestRsp(betterproto.Message):
    retcode: "GardenHarvestRspRetcode" = betterproto.enum_field(1)
    garden: "GardenActivityData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GardenRefreshSiteReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GardenRefreshSiteRsp(betterproto.Message):
    retcode: "GardenRefreshSiteRspRetcode" = betterproto.enum_field(1)
    garden_id: int = betterproto.uint32_field(2)
    site_list: List["GardenSite"] = betterproto.message_field(3)
    last_grow_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GardenSite(betterproto.Message):
    site_id: int = betterproto.uint32_field(1)
    crop_id: int = betterproto.uint32_field(2)
    delay_begin_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GardenSpeedUpWithMaterialReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GardenSpeedUpWithMaterialRsp(betterproto.Message):
    retcode: "GardenSpeedUpWithMaterialRspRetcode" = betterproto.enum_field(1)
    garden: "GardenActivityData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GeneralActivity(betterproto.Message):
    general_basic_info: "GeneralActivityBasicInfo" = betterproto.message_field(1)
    settle_info: "GeneralActivitySettleInfo" = betterproto.message_field(2)
    push_tower_info: "PushTowerActivityInfo" = betterproto.message_field(3)
    team_assault_info: "TeamAssaultActivityInfo" = betterproto.message_field(4)
    activity_stage: "GeneralActivityStage" = betterproto.message_field(5)
    couple_tower: "CoupleTowerActivity" = betterproto.message_field(6)
    endless_single: "EndlessSingleModeActivity" = betterproto.message_field(7)
    single_raid: "SingleRaidActivity" = betterproto.message_field(8)
    optional_buff: "OptionalBuffActivity" = betterproto.message_field(9)
    challenge_war: "ChallengeWarActivity" = betterproto.message_field(10)
    crisis_mode: "CrisisModeActivity" = betterproto.message_field(11)
    scheduled_map_site: "ScheduledMapSiteActivity" = betterproto.message_field(12)
    boss_challenge: "BossChallengeActivity" = betterproto.message_field(13)
    front_endless: "FrontEndlessActivity" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class GeneralActivityBasicInfo(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    cur_score: int = betterproto.uint32_field(2)
    series_activity_id: List[int] = betterproto.uint32_field(3)
    score_reward_taken_list: List[int] = betterproto.uint32_field(4)
    schedule_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GeneralActivityGetMainInfoReq(betterproto.Message):
    activity_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GeneralActivityGetMainInfoRsp(betterproto.Message):
    retcode: "GeneralActivityGetMainInfoRspRetcode" = betterproto.enum_field(1)
    activity_list: List["GeneralActivity"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GeneralActivityGetRankReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GeneralActivityGetRankRsp(betterproto.Message):
    retcode: "GeneralActivityGetRankRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    rank_data: "RankShowData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GeneralActivityGetScheduleReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GeneralActivityGetScheduleRsp(betterproto.Message):
    retcode: "GeneralActivityGetScheduleRspRetcode" = betterproto.enum_field(1)
    schedule_list: List["GeneralActivityScheduleInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GeneralActivityGetScoreRewardInfoReq(betterproto.Message):
    activity_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GeneralActivityGetScoreRewardInfoRsp(betterproto.Message):
    retcode: "GeneralActivityGetScoreRewardInfoRspRetcode" = betterproto.enum_field(1)
    score_info_list: List["GeneralActivityScoreRewardInfo"] = betterproto.message_field(
        2
    )


@dataclass(eq=False, repr=False)
class GeneralActivityGetStageRankReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    rank_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GeneralActivityGetStageRankRsp(betterproto.Message):
    retcode: "GeneralActivityGetStageRankRspRetcode" = betterproto.enum_field(1)
    stage_id: int = betterproto.uint32_field(2)
    rank_data: "RankShowData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GeneralActivityScheduleInfo(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    show_time: int = betterproto.uint32_field(2)
    begin_time: int = betterproto.uint32_field(3)
    settle_time: int = betterproto.uint32_field(4)
    end_time: int = betterproto.uint32_field(5)
    begin_day_time: int = betterproto.uint32_field(6)
    end_day_time: int = betterproto.uint32_field(7)
    left_times: int = betterproto.uint32_field(8)
    schedule_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GeneralActivityScoreRewardInfo(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    cur_score: int = betterproto.uint32_field(2)
    score_reward_taken_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GeneralActivityScoreRewardNotify(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    id: int = betterproto.uint32_field(2)
    reward_list: List["RewardData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GeneralActivitySettleInfo(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    rank_type: int = betterproto.uint32_field(2)
    rank: int = betterproto.uint32_field(3)
    reward_list: List["RewardData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GeneralActivityStage(betterproto.Message):
    enter_times: int = betterproto.uint32_field(1)
    exchange_times: int = betterproto.uint32_field(2)
    cur_score: int = betterproto.uint32_field(3)
    stage_reward_taken_list: List[int] = betterproto.uint32_field(4)
    bonus_score_times: int = betterproto.uint32_field(5)
    stage_group_schedule_list: List[
        "GeneralActivityStageGroupScheduleInfo"
    ] = betterproto.message_field(6)
    stage_group_reward_taken_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GeneralActivityStageExchangeEnterTimesReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GeneralActivityStageExchangeEnterTimesRsp(betterproto.Message):
    retcode: "GeneralActivityStageExchangeEnterTimesRspRetcode" = (
        betterproto.enum_field(1)
    )
    activity_id: int = betterproto.uint32_field(2)
    enter_times: int = betterproto.uint32_field(3)
    exchange_times: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GeneralActivityStageGroupScheduleInfo(betterproto.Message):
    stage_group_id: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GeneralActivityStageTakeStageGroupRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    activity_stage_group_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GeneralActivityStageTakeStageGroupRewardRsp(betterproto.Message):
    retcode: "GeneralActivityStageTakeStageGroupRewardRspRetcode" = (
        betterproto.enum_field(1)
    )
    reward_data: "RewardData" = betterproto.message_field(2)
    activity_id: int = betterproto.uint32_field(3)
    activity_stage_group_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GeneralActivityStageTakeStageRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GeneralActivityStageTakeStageRewardRsp(betterproto.Message):
    retcode: "GeneralActivityStageTakeStageRewardRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    stage_id: int = betterproto.uint32_field(3)
    reward_data_list: List["RewardData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GeneralActivityTakeTicketReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GeneralActivityTakeTicketRsp(betterproto.Message):
    retcode: "GeneralActivityTakeTicketRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    ticket_list: List["GeneralActivityTicket"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GeneralActivityTicket(betterproto.Message):
    material_id: int = betterproto.uint32_field(1)
    add_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GenericItemNum(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    num: int = betterproto.uint32_field(2)
    level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetActivityRewardStatisticDataReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetActivityRewardStatisticDataRsp(betterproto.Message):
    retcode: "GetActivityRewardStatisticDataRspRetcode" = betterproto.enum_field(1)
    id: int = betterproto.uint32_field(2)
    activity_reward_data: "ActivityRewardStatisticData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetAdventureGroupReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetAdventureGroupRsp(betterproto.Message):
    retcode: "GetAdventureGroupRspRetcode" = betterproto.enum_field(1)
    level: int = betterproto.uint32_field(2)
    badge: int = betterproto.uint32_field(3)
    last_examination: int = betterproto.uint32_field(4)
    avatar_list: List["AdventureGroupAvatar"] = betterproto.message_field(5)
    quest_list: List["AdventureGroupQuest"] = betterproto.message_field(6)
    available_quest_list: List[
        "AdventureGroupAvailableQuest"
    ] = betterproto.message_field(7)
    grain: int = betterproto.uint32_field(8)
    has_take_reward_level: int = betterproto.uint32_field(9)
    next_scoin_add_time: int = betterproto.uint32_field(10)
    storage_scoin: int = betterproto.uint32_field(11)
    storage_stamina: int = betterproto.uint32_field(12)
    has_take_compensation_list: List[int] = betterproto.uint32_field(13)
    cabin_level_list: List["CabinLevel"] = betterproto.message_field(14)
    decoration_slot_list: List["AdventureDecorationSlot"] = betterproto.message_field(
        15
    )
    facility_level_list: List["FacilityLevel"] = betterproto.message_field(16)
    today_reset_quest_num: int = betterproto.uint32_field(17)


@dataclass(eq=False, repr=False)
class GetAdventureStorySweepInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetAdventureStorySweepInfoRsp(betterproto.Message):
    retcode: "GetAdventureStorySweepInfoRspRetcode" = betterproto.enum_field(1)
    story_sweep_list: List["IslandStorySweepData"] = betterproto.message_field(2)
    used_stamina: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetArmadaActivityListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetArmadaActivityListRsp(betterproto.Message):
    retcode: "GetArmadaActivityListRspRetcode" = betterproto.enum_field(1)
    activity_list: List["ArmadaActivity"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetArmadaBuildOwnershipReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetArmadaBuildOwnershipRsp(betterproto.Message):
    retcode: "GetArmadaBuildOwnershipRspRetcode" = betterproto.enum_field(1)
    build_owner: int = betterproto.uint32_field(2)
    build_ownership_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetArmadaDataReq(betterproto.Message):
    level: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetArmadaDataRsp(betterproto.Message):
    retcode: "GetArmadaDataRspRetcode" = betterproto.enum_field(1)
    status: "ArmadaPlayerStatus" = betterproto.enum_field(2)
    armada: "ArmadaData" = betterproto.message_field(3)
    apply_list: List["ArmadaBriefData"] = betterproto.message_field(4)
    join_cd_finish_time: int = betterproto.uint32_field(5)
    is_need_recommend: bool = betterproto.bool_field(6)
    last_mail_time: int = betterproto.uint32_field(7)
    recommend_armada: "ArmadaBriefData" = betterproto.message_field(8)
    is_new: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class GetArmadaDiscoveryReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetArmadaDiscoveryRsp(betterproto.Message):
    retcode: "GetArmadaDiscoveryRspRetcode" = betterproto.enum_field(1)
    armada_week_discovery: int = betterproto.uint32_field(2)
    self_week_discovery: int = betterproto.uint32_field(3)
    next_refresh_time: int = betterproto.uint32_field(4)
    cur_time: int = betterproto.uint32_field(5)
    join_time: int = betterproto.uint32_field(6)
    join_armada_week_discovery: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GetArmadaManageDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetArmadaManageDataRsp(betterproto.Message):
    retcode: "GetArmadaManageDataRspRetcode" = betterproto.enum_field(1)
    apply_list: List["ArmadaApply"] = betterproto.message_field(2)
    apply_result_list: List["ArmadaApplyResult"] = betterproto.message_field(3)
    apply_level: int = betterproto.uint32_field(4)
    auto_pass: bool = betterproto.bool_field(5)
    auto_pass_level: int = betterproto.uint32_field(6)
    build_owner: int = betterproto.uint32_field(7)
    build_ownership_time: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GetArmadaMemberDiscoveryListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetArmadaMemberDiscoveryListRsp(betterproto.Message):
    retcode: "GetArmadaMemberDiscoveryListRspRetcode" = betterproto.enum_field(1)
    armada_week_discovery: int = betterproto.uint32_field(2)
    member_discovery_list: List["ArmadaMemberDiscovery"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetArmadaReunionActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetArmadaReunionActivityRsp(betterproto.Message):
    retcode: "GetArmadaReunionActivityRspRetcode" = betterproto.enum_field(1)
    cur_schedule_id: int = betterproto.uint32_field(2)
    mission_list: List["ArmadaReunionMission"] = betterproto.message_field(3)
    player_list: List["ArmadaReunionPlayer"] = betterproto.message_field(4)
    reward_list: List["ChatworldDishReward"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GetArmadaStageReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetArmadaStageRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetArmadaStageRewardRsp(betterproto.Message):
    retcode: "GetArmadaStageRewardRspRetcode" = betterproto.enum_field(1)
    hp_1_percent: int = betterproto.uint32_field(2)
    hp_2_percent: int = betterproto.uint32_field(3)
    hp_3_percent: int = betterproto.uint32_field(4)
    is_take: bool = betterproto.bool_field(5)
    kill_reward_material_id: int = betterproto.uint32_field(6)
    kill_reward_material_num: int = betterproto.uint32_field(7)
    last_damage_rate: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GetArmadaStageRsp(betterproto.Message):
    retcode: "GetArmadaStageRspRetcode" = betterproto.enum_field(1)
    hard_grade: int = betterproto.uint32_field(2)
    hard_level: int = betterproto.uint32_field(3)
    summon_progress: int = betterproto.uint32_field(4)
    boss_id: int = betterproto.uint32_field(5)
    boss_begin_time: int = betterproto.uint32_field(6)
    boss_end_time: int = betterproto.uint32_field(7)
    boss_total_hp: int = betterproto.uint32_field(8)
    boss_left_hp: int = betterproto.uint32_field(9)
    next_fight_time: int = betterproto.uint32_field(10)
    hp_1_percent: int = betterproto.uint32_field(11)
    hp_2_percent: int = betterproto.uint32_field(12)
    hp_3_percent: int = betterproto.uint32_field(13)
    is_take: bool = betterproto.bool_field(14)
    open_begin_time: int = betterproto.uint32_field(15)
    open_end_time: int = betterproto.uint32_field(16)
    fight_list: List["ArmadaStageFightInfo"] = betterproto.message_field(17)
    left_fight_times: int = betterproto.uint32_field(18)
    max_hard_level: int = betterproto.uint32_field(19)
    kill_reward_material_id: int = betterproto.uint32_field(20)
    last_damage_rate: int = betterproto.uint32_field(21)


@dataclass(eq=False, repr=False)
class GetArmadaStageScoreActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetArmadaStageScoreActivityRsp(betterproto.Message):
    retcode: "GetArmadaStageScoreActivityRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    has_take_self_score: int = betterproto.uint32_field(3)
    has_take_armada_score: int = betterproto.uint32_field(4)
    stage_score_list: List["ArmadaStageScore"] = betterproto.message_field(5)
    armada_score_list: List["ArmadaStageScorePlayerScore"] = betterproto.message_field(
        6
    )


@dataclass(eq=False, repr=False)
class GetArmadaStageScoreRankReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetArmadaStageScoreRankRsp(betterproto.Message):
    retcode: "GetArmadaStageScoreRankRspRetcode" = betterproto.enum_field(1)
    stage_id: int = betterproto.uint32_field(2)
    rank_data: "RankShowData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetAskAddFriendListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetAskAddFriendListRsp(betterproto.Message):
    retcode: "GetAskAddFriendListRspRetcode" = betterproto.enum_field(1)
    ask_list: List["FriendAskAddData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetAssistantFrozenListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetAssistantFrozenListRsp(betterproto.Message):
    retcode: "GetAssistantFrozenListRspRetcode" = betterproto.enum_field(1)
    frozen_list: List["AssistantFrozen"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetAuthkeyReq(betterproto.Message):
    auth_appid: str = betterproto.string_field(1)
    sign_type: int = betterproto.uint32_field(2)
    authkey_ver: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetAuthkeyRsp(betterproto.Message):
    retcode: "GetAuthkeyRspRetcode" = betterproto.enum_field(1)
    authkey: str = betterproto.string_field(2)
    auth_appid: str = betterproto.string_field(3)
    sign_type: int = betterproto.uint32_field(4)
    authkey_ver: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetAvatarBindEquipInChallengeModeReq(betterproto.Message):
    avatar_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetAvatarBindEquipInChallengeModeRsp(betterproto.Message):
    retcode: "GetAvatarBindEquipInChallengeModeRspRetcode" = betterproto.enum_field(1)
    avatar_equip_list: List["AvatarBindEquipData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetAvatarDataReq(betterproto.Message):
    avatar_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetAvatarDataRsp(betterproto.Message):
    retcode: "GetAvatarDataRspRetcode" = betterproto.enum_field(1)
    avatar_list: List["Avatar"] = betterproto.message_field(2)
    is_all: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GetAvatarEquipSuiteReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetAvatarEquipSuiteRsp(betterproto.Message):
    retcode: "GetAvatarEquipSuiteRspRetcode" = betterproto.enum_field(1)
    avatar_id: int = betterproto.uint32_field(2)
    equip_suite_list: List["AvatarEquipSuite"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetAvatarMissionActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetAvatarMissionActivityRsp(betterproto.Message):
    retcode: "GetAvatarMissionActivityRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    avatar_sample_id: int = betterproto.uint32_field(3)
    choose_avatar_time: int = betterproto.uint32_field(4)
    reset_choose_times: int = betterproto.uint32_field(5)
    last_refresh_time: int = betterproto.uint32_field(6)
    daily_contract_point: int = betterproto.uint32_field(7)
    is_daily_reward_taken: bool = betterproto.bool_field(8)
    activity_finish_days: int = betterproto.uint32_field(9)
    taken_reward_days_list: List[int] = betterproto.uint32_field(10)
    daily_reward_num: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GetAvatarRollDataReq(betterproto.Message):
    avatar_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetAvatarRollDataRsp(betterproto.Message):
    retcode: "GetAvatarRollDataRspRetcode" = betterproto.enum_field(1)
    roll_list: List["AvatarRoll"] = betterproto.message_field(2)
    is_all: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GetAvatarTeamDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetAvatarTeamDataRsp(betterproto.Message):
    retcode: "GetAvatarTeamDataRspRetcode" = betterproto.enum_field(1)
    avatar_team_list: List["AvatarTeam"] = betterproto.message_field(2)
    custom_avatar_team_list: List["CustomAvatarTeam"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetBattlePassReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetBattlePassRsp(betterproto.Message):
    retcode: "GetBattlePassRspRetcode" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    level: int = betterproto.uint32_field(3)
    exp: int = betterproto.uint32_field(4)
    has_take_reward_level: int = betterproto.uint32_field(5)
    has_got_ticket_list: List[int] = betterproto.uint32_field(6)
    phase_max_exp: int = betterproto.uint32_field(7)
    phase_exp: int = betterproto.uint32_field(8)
    is_take_phase_free_exp: bool = betterproto.bool_field(9)
    battle_pass_mission_list: List["BattlePassMission"] = betterproto.message_field(10)
    phase_end_time: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GetBattlePassThemeReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetBattlePassThemeRsp(betterproto.Message):
    retcode: "GetBattlePassThemeRspRetcode" = betterproto.enum_field(1)
    id: int = betterproto.uint32_field(2)
    level: int = betterproto.uint32_field(3)
    exp: int = betterproto.uint32_field(4)
    has_take_reward_level: int = betterproto.uint32_field(5)
    begin_time: int = betterproto.uint32_field(6)
    end_time: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GetBbqActivityDataReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetBbqActivityDataRsp(betterproto.Message):
    retcode: "GetBbqActivityDataRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    bbq_level: int = betterproto.uint32_field(3)
    bbq_exp: int = betterproto.uint32_field(4)
    max_reward_taken_level: int = betterproto.uint32_field(5)
    can_use_bbq_count: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GetBingoActivityDataReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetBingoActivityDataRsp(betterproto.Message):
    retcode: "GetBingoActivityDataRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    bingo_data_list: List["BingoData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetBlackListReq(betterproto.Message):
    is_only_uid: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class GetBlackListRsp(betterproto.Message):
    retcode: "GetBlackListRspRetcode" = betterproto.enum_field(1)
    black_list: List["PlayerFriendBriefData"] = betterproto.message_field(2)
    is_whole_data: bool = betterproto.bool_field(3)
    is_only_uid: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class GetBlockZoneActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetBlockZoneActivityRsp(betterproto.Message):
    retcode: "GetBlockZoneActivityRspRetcode" = betterproto.enum_field(1)
    season_id: int = betterproto.uint32_field(2)
    tale_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetBossRushActivityReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetBossRushActivityRsp(betterproto.Message):
    retcode: "GetBossRushActivityRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    phase_id: int = betterproto.uint32_field(3)
    buff_list: List["BossRushBuff"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetBriefDataListReq(betterproto.Message):
    uid_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetBriefDataListRsp(betterproto.Message):
    retcode: "GetBriefDataListRspRetcode" = betterproto.enum_field(1)
    uid_brief_data_list: List["PlayerFriendBriefData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetBuffEffectReq(betterproto.Message):
    effect_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetBuffEffectRsp(betterproto.Message):
    retcode: "GetBuffEffectRspRetcode" = betterproto.enum_field(1)
    effect_list: List["BuffEffect"] = betterproto.message_field(2)
    aura_effect_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetBulletinActivityMissionReq(betterproto.Message):
    activity_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetBulletinActivityMissionRsp(betterproto.Message):
    retcode: "GetBulletinActivityMissionRspRetcode" = betterproto.enum_field(1)
    mission_group_list: List["BulletinMissionGroup"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetBulletinReq(betterproto.Message):
    type: "GetBulletinReqReqBulletinType" = betterproto.enum_field(1)
    bulletin_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetBulletinRsp(betterproto.Message):
    retcode: "GetBulletinRspRetcode" = betterproto.enum_field(1)
    bulletin_list: List["Bulletin"] = betterproto.message_field(2)
    is_all: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GetBulletinScoreActivityReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetBulletinScoreActivityRsp(betterproto.Message):
    retcode: "GetBulletinScoreActivityRspRetcode" = betterproto.enum_field(1)
    activity_list: List["BulletinScoreActivity"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetBurdenAlleviationReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetBurdenAlleviationRsp(betterproto.Message):
    retcode: "GetBurdenAlleviationRspRetcode" = betterproto.enum_field(1)
    activity_data: "BurdenAlleviationActivity" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetCardProductInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetCardProductInfoRsp(betterproto.Message):
    retcode: "GetCardProductInfoRspRetcode" = betterproto.enum_field(1)
    card_product_info_list: List["CardProductInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetChallengeStepBonusReq(betterproto.Message):
    step_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetChallengeStepBonusRsp(betterproto.Message):
    retcode: "GetChallengeStepBonusRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetChallengeStepCompensationInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetChallengeStepCompensationInfoRsp(betterproto.Message):
    retcode: "GetChallengeStepCompensationInfoRspRetcode" = betterproto.enum_field(1)
    compensation_list: List["ChallengeStepCompensation"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetChallengeStepRewardReq(betterproto.Message):
    step_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetChallengeStepRewardRsp(betterproto.Message):
    retcode: "GetChallengeStepRewardRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetChapterActivityDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetChapterActivityDataRsp(betterproto.Message):
    retcode: "GetChapterActivityDataRspRetcode" = betterproto.enum_field(1)
    chapter_activity_list: List["ChapterActivity"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetChapterCompensationInfoReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetChapterCompensationInfoRsp(betterproto.Message):
    retcode: "GetChapterCompensationInfoRspRetcode" = betterproto.enum_field(1)
    is_all: bool = betterproto.bool_field(2)
    compensate_list: List["ChapterCompensationInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetChatgroupHistoryChatMsgReq(betterproto.Message):
    chatgroup_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetChatgroupHistoryChatMsgRsp(betterproto.Message):
    retcode: "GetChatgroupHistoryChatMsgRspRetcode" = betterproto.enum_field(1)
    chatgroup_id: int = betterproto.uint32_field(2)
    chat_msg_list: List["ChatMsg"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetChatgroupListReq(betterproto.Message):
    is_all: bool = betterproto.bool_field(1)
    chatgroup_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetChatgroupListRsp(betterproto.Message):
    retcode: "GetChatgroupListRspRetcode" = betterproto.enum_field(1)
    is_all: bool = betterproto.bool_field(2)
    chatgroup_list: List["Chatgroup"] = betterproto.message_field(3)
    invite_list: List["ChatgroupInvite"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetChatRedEnvelopeInfoReq(betterproto.Message):
    sender_uid: int = betterproto.uint32_field(1)
    red_envelope_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetChatRedEnvelopeInfoRsp(betterproto.Message):
    retcode: "GetChatRedEnvelopeInfoRspRetcode" = betterproto.enum_field(1)
    sender_uid: int = betterproto.uint32_field(2)
    red_envelope_id: int = betterproto.uint32_field(3)
    taken_num: int = betterproto.uint32_field(4)
    expire_time: int = betterproto.uint32_field(5)
    take_red_envelope_list: List[
        "TakeChatRedEnvelopePlayer"
    ] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class GetChatReportInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetChatReportInfoRsp(betterproto.Message):
    retcode: "GetChatReportInfoRspRetcode" = betterproto.enum_field(1)
    chat_forbid_finish_time: int = betterproto.uint32_field(2)
    chat_forbid_times: int = betterproto.uint32_field(3)
    lost_chat_credit: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetChatworldListReq(betterproto.Message):
    start_id: int = betterproto.uint32_field(1)
    end_id: int = betterproto.uint32_field(2)
    scene_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetChatworldListRsp(betterproto.Message):
    retcode: "GetChatworldListRspRetcode" = betterproto.enum_field(1)
    chatworld_list: List["ChatworldBrief"] = betterproto.message_field(2)
    show_max_id: int = betterproto.uint32_field(3)
    scene_id: int = betterproto.uint32_field(4)
    redis_chatworld_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetChatworldTreasureDataReq(betterproto.Message):
    chatworld_id: int = betterproto.uint32_field(1)
    cur_treasure_schedule_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetChatworldTreasureDataRsp(betterproto.Message):
    retcode: "GetChatworldTreasureDataRspRetcode" = betterproto.enum_field(1)
    chatworld_id: int = betterproto.uint32_field(2)
    chatworld_treasure_list: List["ChatworldTreasure"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetClearStageActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetClearStageActivityRsp(betterproto.Message):
    retcode: "GetClearStageActivityRspRetcode" = betterproto.enum_field(1)
    activity: "ClearStageActivity" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetClientDataReq(betterproto.Message):
    type: "ClientDataType" = betterproto.enum_field(1)
    id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetClientDataRsp(betterproto.Message):
    retcode: "GetClientDataRspRetcode" = betterproto.enum_field(1)
    type: "ClientDataType" = betterproto.enum_field(2)
    id: int = betterproto.uint32_field(3)
    client_data_list: List["ClientData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetClientMailDataReq(betterproto.Message):
    start: int = betterproto.uint32_field(1)
    stop: int = betterproto.uint32_field(2)
    filter_type: "ClientMailFilterType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class GetClientMailDataRsp(betterproto.Message):
    retcode: "GetClientMailDataRspRetcode" = betterproto.enum_field(1)
    mail_list: List["ClientMail"] = betterproto.message_field(2)
    is_end: bool = betterproto.bool_field(3)
    start: int = betterproto.uint32_field(5)
    notice_mail_list: List["ClientMail"] = betterproto.message_field(6)
    filter_type: "ClientMailFilterType" = betterproto.enum_field(7)
    client_mail_info: "ClientMailInfo" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class GetClientSettingReq(betterproto.Message):
    client_setting_type: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetClientSettingRsp(betterproto.Message):
    retcode: "GetClientSettingRspRetcode" = betterproto.enum_field(1)
    client_setting_type: int = betterproto.uint32_field(2)
    is_weekly_guide_switch_on: bool = betterproto.bool_field(3)
    sns_show_priviledge_list: List["SnsShowPriviledge"] = betterproto.message_field(4)
    avatar_artifact_switch_list: List[
        "AvatarArtifactSwitch"
    ] = betterproto.message_field(5)
    master_pupil_tag_switch_list: List[
        "MasterPupilTagSwitch"
    ] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class GetCollaborationScheduleReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetCollaborationScheduleRsp(betterproto.Message):
    retcode: "GetCollaborationScheduleRspRetcode" = betterproto.enum_field(1)
    schedule_list: List[
        "GetCollaborationScheduleRspSchedule"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetCollaborationScheduleRspSchedule(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetConfigReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetConfigRsp(betterproto.Message):
    retcode: "GetConfigRspRetcode" = betterproto.enum_field(1)
    stamina_recover_config_time: int = betterproto.uint32_field(2)
    avatar_revive_hcoin_cost: int = betterproto.uint32_field(4)
    same_type_power_up_rate: int = betterproto.uint32_field(5)
    day_time_offset: int = betterproto.uint32_field(6)
    server_cur_time: int = betterproto.uint32_field(7)
    power_up_scoin_cost_rate: int = betterproto.uint32_field(8)
    max_friend_num: int = betterproto.uint32_field(9)
    endless_min_player_level: int = betterproto.uint32_field(10)
    avatar_max_add_goodfeel: int = betterproto.uint32_field(12)
    avatar_cost_plus_config_list: List[
        "AvatarCostPlusConfig"
    ] = betterproto.message_field(13)
    endless_use_item_cd_time: int = betterproto.uint32_field(14)
    disjoin_equipment_back_exp_percent: int = betterproto.uint32_field(15)
    gacha_ticket_list: List["GetConfigRspGachaTicket"] = betterproto.message_field(31)
    region_name: str = betterproto.string_field(32)
    min_invite_level: int = betterproto.uint32_field(33)
    discount_schedule_config_list: List[
        "GetConfigRspDiscountScheduleConfig"
    ] = betterproto.message_field(35)
    island_event_refresh_interval: int = betterproto.uint32_field(36)
    spaceship_begin_time: int = betterproto.uint32_field(37)
    spaceship_end_time: int = betterproto.uint32_field(38)
    spaceship_id: int = betterproto.uint32_field(39)
    is_random_box_product_open: bool = betterproto.bool_field(40)
    scoin_limit: int = betterproto.uint32_field(41)
    friends_point_limit: int = betterproto.uint32_field(42)
    product_random_box_begin_time: int = betterproto.uint32_field(43)
    product_random_box_end_time: int = betterproto.uint32_field(44)
    week_day_activity_coin_item_id: int = betterproto.uint32_field(45)
    island_visit_max_help_num: int = betterproto.uint32_field(46)
    cost_senior_equip_after_cancel_protect_min_time_diff: int = (
        betterproto.uint32_field(47)
    )
    rogue_stage_cost_item_id: int = betterproto.uint32_field(48)
    rogue_stage_max_progress: int = betterproto.uint32_field(49)
    bulletin_activity_list: List["BulletinActivityConfig"] = betterproto.message_field(
        50
    )
    armada_discovery_reward_list: List[
        "ArmadaDiscoveryRewardConfig"
    ] = betterproto.message_field(51)
    rogue_stage_open_level: int = betterproto.uint32_field(52)
    armada_begin_time: int = betterproto.uint32_field(53)
    armada_end_time: int = betterproto.uint32_field(54)
    armada_custom_content: str = betterproto.string_field(55)
    stigmata_rune_open_level: int = betterproto.uint32_field(56)
    stigmata_title_open_level: int = betterproto.uint32_field(57)
    stigmata_disjoin_title_back_exp_percent: int = betterproto.uint32_field(58)
    stigmata_promote_max_times: int = betterproto.uint32_field(59)
    stigmata_rune_combat_ratio: int = betterproto.uint32_field(60)
    stigmata_disjoin_back_exp_percent: int = betterproto.uint32_field(61)
    stigmata_refine_value_back_percent: int = betterproto.uint32_field(62)
    stigmata_title_exp_material_list: List[int] = betterproto.uint32_field(63)
    scoin_convert_per_exp: int = betterproto.uint32_field(64)
    mp_reset_skill_hcoin_cost: int = betterproto.uint32_field(65)
    mp_member_max_times_for_all_act: int = betterproto.uint32_field(66)
    mp_member_exhausted_drop_ratio: int = betterproto.uint32_field(67)
    friend_bond_level_config_list: List[
        "GetConfigRspFriendBondLevelConfig"
    ] = betterproto.message_field(68)
    mp_punish_mp_exp_reduce_rate: int = betterproto.uint32_field(69)
    friend_assistant_add_bond: int = betterproto.uint32_field(70)
    armada_manage_mail_length: int = betterproto.uint32_field(72)
    armada_contact_length: int = betterproto.uint32_field(73)
    armada_manage_mail_cd: int = betterproto.uint32_field(74)
    armada_bulletin_length: int = betterproto.uint32_field(75)
    openworld_judge_para_type1: int = betterproto.uint32_field(76)
    openworld_judge_para_type2: int = betterproto.uint32_field(77)
    openworld_judge_para_type3: int = betterproto.uint32_field(78)
    openworld_judge_para_type4: int = betterproto.uint32_field(79)
    trial_avatar_player_min_level: int = betterproto.uint32_field(80)
    disjoin_equipment_max_batch_num: int = betterproto.uint32_field(81)
    equip_disjoint_unlock_level: int = betterproto.uint32_field(82)
    stage_type_limit_avatar_fight_in_venture_list: List[int] = betterproto.uint32_field(
        83
    )
    armada_boss_stage_open_level: int = betterproto.uint32_field(84)
    anti_cheat_stage_check_config: "GetConfigRspAntiCheatStageCheckConfig" = (
        betterproto.message_field(85)
    )
    is_can_gal_touch: bool = betterproto.bool_field(87)
    is_resistance_open: bool = betterproto.bool_field(88)
    next_day_begin_time: int = betterproto.uint32_field(90)


@dataclass(eq=False, repr=False)
class GetConfigRspGachaTicket(betterproto.Message):
    material_id: int = betterproto.uint32_field(1)
    hcoin_cost: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetConfigRspDiscountScheduleConfig(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    discount: int = betterproto.uint32_field(2)
    begin_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)
    para_int_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetConfigRspFriendBondLevelConfig(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    min_bond: int = betterproto.uint32_field(2)
    assist_cd_reduce_rate: int = betterproto.uint32_field(3)
    invite_add_friends_point: int = betterproto.uint32_field(4)
    extra_add_mp_exp_rate: int = betterproto.uint32_field(5)
    extra_mp_add_friends_point: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GetConfigRspAntiCheatStageCheckConfig(betterproto.Message):
    check_stage_id_list: List[int] = betterproto.uint32_field(1)
    check_stage_type_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetConsignedOrderDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetConsignedOrderDataRsp(betterproto.Message):
    retcode: "GetConsignedOrderDataRspRetcode" = betterproto.enum_field(1)
    progress: int = betterproto.uint32_field(2)
    order_list: List["ConsignedOrder"] = betterproto.message_field(3)
    cd_finish_time: int = betterproto.uint32_field(4)
    finish_order_times: int = betterproto.uint32_field(5)
    total_order_times: int = betterproto.uint32_field(6)
    armada_finish_times: int = betterproto.uint32_field(7)
    apply_order_times: int = betterproto.uint32_field(8)
    total_apply_times: int = betterproto.uint32_field(9)
    my_credit: int = betterproto.uint32_field(10)
    is_reward_taken: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class GetConsignedRewardLogReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetConsignedRewardLogRsp(betterproto.Message):
    retcode: "GetConsignedRewardLogRspRetcode" = betterproto.enum_field(1)
    reward_log_list: List["ConsignedRewardLog"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetConsignedRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetConsignedRewardRsp(betterproto.Message):
    retcode: "GetConsignedRewardRspRetcode" = betterproto.enum_field(1)
    required_reward_list: List["RewardData"] = betterproto.message_field(2)
    optional_reward_list: List["RewardData"] = betterproto.message_field(3)
    my_credit: int = betterproto.uint32_field(4)
    total_credit: int = betterproto.uint32_field(5)
    my_optional_reward_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GetContinuousRechargeActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetContinuousRechargeActivityRsp(betterproto.Message):
    retcode: "GetContinuousRechargeActivityRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    progress: int = betterproto.uint32_field(3)
    today_vip_point: int = betterproto.uint32_field(4)
    has_take_reward_progress_list: List[int] = betterproto.uint32_field(5)
    last_refresh_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GetCurrencyExchangeInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetCurrencyExchangeInfoRsp(betterproto.Message):
    retcode: "GetCurrencyExchangeInfoRspRetcode" = betterproto.enum_field(1)
    purple_jade_exchanged_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetCustomHeadDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetCustomHeadDataRsp(betterproto.Message):
    retcode: "GetCustomHeadDataRspRetcode" = betterproto.enum_field(1)
    is_all: bool = betterproto.bool_field(2)
    custom_head_list: List["CustomHead"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetDanmakuBriefInfoReq(betterproto.Message):
    danmaku_slot: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetDanmakuBriefInfoRsp(betterproto.Message):
    retcode: "GetDanmakuBriefInfoRspRetcode" = betterproto.enum_field(1)
    danmaku_slot: int = betterproto.uint32_field(2)
    brief_info: "DanmakuSlotBriefInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetDanmakuListReq(betterproto.Message):
    danmaku_slot: int = betterproto.uint32_field(1)
    start_idx: int = betterproto.uint32_field(2)
    end_idx: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetDanmakuListRsp(betterproto.Message):
    retcode: "GetDanmakuListRspRetcode" = betterproto.enum_field(1)
    danmaku_slot: int = betterproto.uint32_field(2)
    danmaku_slot_status: int = betterproto.uint32_field(3)
    start_idx: int = betterproto.uint32_field(4)
    end_idx: int = betterproto.uint32_field(5)
    danmaku_list: List["DanmakuContent"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class GetDeleteMaterialReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetDeleteMaterialRsp(betterproto.Message):
    retcode: "GetDeleteMaterialRspRetcode" = betterproto.enum_field(1)
    materials: List["Material"] = betterproto.message_field(2)
    return_item_list: List["GenericItemNum"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetDepotFurnitureReq(betterproto.Message):
    furniture_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetDepotFurnitureRsp(betterproto.Message):
    retcode: "GetDepotFurnitureRspRetcode" = betterproto.enum_field(1)
    depot_furniture_list: List["DepotFurniture"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetDispatchReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetDispatchRsp(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetDlcAvatarReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetDlcAvatarRsp(betterproto.Message):
    retcode: "GetDlcAvatarRspRetcode" = betterproto.enum_field(1)
    avatar_list: List["DlcAvatar"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetDlcReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetDlcRsp(betterproto.Message):
    retcode: "GetDlcRspRetcode" = betterproto.enum_field(1)
    name: str = betterproto.string_field(2)
    level: int = betterproto.uint32_field(3)
    exp: int = betterproto.uint32_field(4)
    has_take_reward_level: int = betterproto.uint32_field(5)
    support_npc_list: List["DlcSupportNpc"] = betterproto.message_field(6)
    finished_dialog_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GetDlcTowerRankReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetDlcTowerRankRsp(betterproto.Message):
    retcode: "GetDlcTowerRankRspRetcode" = betterproto.enum_field(1)
    rank_data: "RankShowData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetDlcTowerReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetDlcTowerRsp(betterproto.Message):
    retcode: "GetDlcTowerRspRetcode" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    progress: int = betterproto.uint32_field(3)
    avatar_info_list: List["DlcTowerAvatarInfo"] = betterproto.message_field(4)
    tower_cost_time: int = betterproto.uint32_field(5)
    max_progress: int = betterproto.uint32_field(6)
    avatar_revive_times: int = betterproto.uint32_field(7)
    floor_max_score_list: List["DlcTowerFloorMaxScore"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class GetDormDataReq(betterproto.Message):
    data_type: "DormDataType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class GetDormDataRsp(betterproto.Message):
    retcode: "GetDormDataRspRetcode" = betterproto.enum_field(1)
    data_type: "DormDataType" = betterproto.enum_field(2)
    house_list: List["DormHouse"] = betterproto.message_field(3)
    finish_talk_plot_id_list: List[int] = betterproto.uint32_field(4)
    depot_furniture_list: List["DepotFurniture"] = betterproto.message_field(5)
    level_up_house_id: int = betterproto.uint32_field(6)
    level_up_end_time: int = betterproto.uint32_field(7)
    level_up_end_house_id: int = betterproto.uint32_field(8)
    facility_data: "DormFacilityData" = betterproto.message_field(9)
    event_list: List["DormEvent"] = betterproto.message_field(10)
    show_house: int = betterproto.uint32_field(11)
    show_room: int = betterproto.uint32_field(12)
    visit_avatar: int = betterproto.uint32_field(13)
    is_allow_visit: bool = betterproto.bool_field(14)
    last_take_dorm_daily_stamina_time: int = betterproto.uint32_field(15)
    unlock_avatar_list: List[int] = betterproto.uint32_field(16)


@dataclass(eq=False, repr=False)
class GetDormHouseReq(betterproto.Message):
    house_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetDormHouseRsp(betterproto.Message):
    retcode: "GetDormHouseRspRetcode" = betterproto.enum_field(1)
    house_list: List["DormHouse"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetDormSnsDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetDormSnsDataRsp(betterproto.Message):
    retcode: "GetDormSnsDataRspRetcode" = betterproto.enum_field(1)
    be_liked_num: int = betterproto.uint32_field(2)
    record_list: List["DormVisitRecord"] = betterproto.message_field(3)
    be_visit_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetDormVoteDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetDormVoteDataRsp(betterproto.Message):
    retcode: "GetDormVoteDataRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    status: "GetDormVoteDataRspStatus" = betterproto.enum_field(3)
    end_time: int = betterproto.uint32_field(4)
    url: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class GetDropLimitActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetDropLimitActivityRsp(betterproto.Message):
    retcode: "GetDropLimitActivityRspRetcode" = betterproto.enum_field(1)
    drop_limit_activity_list: List["DropLimitActivity"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetElfDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetElfDataRsp(betterproto.Message):
    retcode: "GetElfDataRspRetcode" = betterproto.enum_field(1)
    elf_list: List["Elf"] = betterproto.message_field(2)
    elf_fragment_list: List["ElfFragment"] = betterproto.message_field(3)
    elf_talent_list: List["ElfTalent"] = betterproto.message_field(4)
    is_take_compensation: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class GetEliteChapterCompensationInfoReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetEliteChapterCompensationInfoRsp(betterproto.Message):
    retcode: "GetEliteChapterCompensationInfoRspRetcode" = betterproto.enum_field(1)
    chapter_list: List["EliteChapterCompensationInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetEmojiDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetEmojiDataRsp(betterproto.Message):
    retcode: "GetEmojiDataRspRetcode" = betterproto.enum_field(1)
    emoji_id_list: List[int] = betterproto.uint32_field(2)
    is_all: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GetEndlessDataReq(betterproto.Message):
    level: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetEndlessDataRsp(betterproto.Message):
    retcode: "GetEndlessDataRspRetcode" = betterproto.enum_field(1)
    group_id: int = betterproto.uint32_field(2)
    group_level: int = betterproto.uint32_field(3)
    begin_time: int = betterproto.uint32_field(4)
    end_time: int = betterproto.uint32_field(5)
    close_time: int = betterproto.uint32_field(6)
    endless_data_list: List["EndlessPlayerData"] = betterproto.message_field(7)
    brief_data_list: List["PlayerFriendBriefData"] = betterproto.message_field(8)
    item_list: List["EndlessItem"] = betterproto.message_field(9)
    item_frozen_list: List["EndlessItemFrozenInfo"] = betterproto.message_field(10)
    war_info_list: List["EndlessWarInfo"] = betterproto.message_field(11)
    uid: int = betterproto.uint32_field(12)
    nodeserver_session_id: int = betterproto.uint32_field(13)
    is_just_join: int = betterproto.uint32_field(14)
    cur_progress_avatar_id_list: List[int] = betterproto.uint32_field(15)
    cur_progress_item_id_list: List[int] = betterproto.uint32_field(16)
    random_seed: int = betterproto.uint32_field(17)
    cur_top_group_level: int = betterproto.uint32_field(18)
    top_group_player_num: int = betterproto.uint32_field(19)
    top_group_promote_unlock_player_num: int = betterproto.uint32_field(20)
    sin_type: int = betterproto.uint32_field(21)
    burst_bomb_num: int = betterproto.uint32_field(22)
    bombed_num: int = betterproto.uint32_field(23)
    target_item_list: List["EndlessItem"] = betterproto.message_field(24)
    avg_player_level: int = betterproto.uint32_field(25)
    hard_level: int = betterproto.uint32_field(26)


@dataclass(eq=False, repr=False)
class GetEndlessStatusReq(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    is_finish_front: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class GetEndlessStatusRsp(betterproto.Message):
    retcode: "GetEndlessStatusRspRetcode" = betterproto.enum_field(1)
    cur_status: "EndlessStatus" = betterproto.message_field(2)
    next_status_list: List["EndlessStatus"] = betterproto.message_field(3)
    selected_endless_type: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetEquipmentBackReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetEquipmentBackRsp(betterproto.Message):
    retcode: "GetEquipmentBackRspRetcode" = betterproto.enum_field(1)
    consume_equip_list: List["EquipmentForgeConsume"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetEquipmentDataReq(betterproto.Message):
    weapon_unique_id_list: List[int] = betterproto.uint32_field(1)
    stigmata_unique_id_list: List[int] = betterproto.uint32_field(2)
    material_id_list: List[int] = betterproto.uint32_field(3)
    mecha_unique_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetEquipmentDataRsp(betterproto.Message):
    retcode: "GetEquipmentDataRspRetcode" = betterproto.enum_field(1)
    weapon_list: List["Weapon"] = betterproto.message_field(2)
    stigmata_list: List["Stigmata"] = betterproto.message_field(3)
    material_list: List["Material"] = betterproto.message_field(4)
    is_all: bool = betterproto.bool_field(5)
    mecha_list: List["Mecha"] = betterproto.message_field(6)
    vitality_value: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GetEquipmentForgeDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetEquipmentForgeDataRsp(betterproto.Message):
    retcode: "GetEquipmentForgeDataRspRetcode" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    has_forge_list: List["EquipmentForge"] = betterproto.message_field(3)
    forge_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetExaminationActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetExaminationActivityRsp(betterproto.Message):
    retcode: "GetExaminationActivityRspRetcode" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    cur_examination_idx: int = betterproto.uint32_field(3)
    finished_round: int = betterproto.uint32_field(4)
    examination_list: List["Examination"] = betterproto.message_field(5)
    examination_stage_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GetExBossInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetExBossInfoRsp(betterproto.Message):
    retcode: "GetExBossInfoRspRetcode" = betterproto.enum_field(1)
    boss_info: "ExBossInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetExBossRankReq(betterproto.Message):
    rank_id: int = betterproto.uint32_field(1)
    boss_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetExBossRankRsp(betterproto.Message):
    retcode: "GetExBossRankRspRetcode" = betterproto.enum_field(1)
    rank_data: "RankShowData" = betterproto.message_field(2)
    rank_id: int = betterproto.uint32_field(3)
    is_filtered: bool = betterproto.bool_field(4)
    boss_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetExBossScheduleReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetExBossScheduleRsp(betterproto.Message):
    retcode: "GetExBossScheduleRspRetcode" = betterproto.enum_field(1)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)
    min_level: int = betterproto.uint32_field(4)
    image_path: str = betterproto.string_field(5)
    schedule_id: int = betterproto.uint32_field(6)
    rank_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GetExtractReforgeActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetExtractReforgeActivityRsp(betterproto.Message):
    retcode: "GetExtractReforgeActivityRspRetcode" = betterproto.enum_field(1)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)
    extract_equipment_activity: "ExtractEquipmentActivity" = betterproto.message_field(
        4
    )
    back_equipment_activity: "BackEquipmentActivity" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GetExtraStoryAchieveDataReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetExtraStoryAchieveDataRsp(betterproto.Message):
    retcode: "GetExtraStoryAchieveDataRspRetcode" = betterproto.enum_field(1)
    achieve_list: List["ExtraStoryAchieve"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetExtraStoryAchieveRewardReq(betterproto.Message):
    achieve_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetExtraStoryAchieveRewardRsp(betterproto.Message):
    retcode: "GetExtraStoryAchieveRewardRspRetcode" = betterproto.enum_field(1)
    achieve_id: int = betterproto.uint32_field(2)
    reward_list: List["RewardData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetExtraStoryActivityActReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetExtraStoryActivityActRsp(betterproto.Message):
    retcode: "GetExtraStoryActivityActRspRetcode" = betterproto.enum_field(1)
    act_list: List["ExtraStoryAct"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetExtraStoryChallengeModeDataReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetExtraStoryChallengeModeDataRsp(betterproto.Message):
    retcode: "GetExtraStoryChallengeModeDataRspRetcode" = betterproto.enum_field(1)
    choose_difficulty: int = betterproto.uint32_field(2)
    is_can_reset: bool = betterproto.bool_field(3)
    challenge_area_list: List["ChallengeModeArea"] = betterproto.message_field(4)
    chapter_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetExtraStoryDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetExtraStoryDataRsp(betterproto.Message):
    retcode: "GetExtraStoryDataRspRetcode" = betterproto.enum_field(1)
    chapter_list: List["ExtraStoryChapter"] = betterproto.message_field(2)
    is_dynamic_hard_lv: bool = betterproto.bool_field(3)
    chapter_key_list: List[int] = betterproto.uint32_field(4)
    taken_reward_line_id_list: List[int] = betterproto.uint32_field(5)
    is_open_enhance: bool = betterproto.bool_field(6)
    taken_enhance_reward_act_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GetFarmActivityDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetFarmActivityDataRsp(betterproto.Message):
    retcode: "GetFarmActivityDataRspRetcode" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    farm_level: int = betterproto.uint32_field(3)
    farm_exp: int = betterproto.uint32_field(4)
    slot_detail_list: List["FarmSlotDetail"] = betterproto.message_field(5)
    produce_material_list: List[
        "FarmProduceMaterialDetail"
    ] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class GetFastPassDataReq(betterproto.Message):
    fast_pass_type: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetFastPassDataRsp(betterproto.Message):
    retcode: "GetFastPassDataRspRetcode" = betterproto.enum_field(1)
    fast_pass_type: int = betterproto.uint32_field(2)
    use_times: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetFinishGuideDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetFinishGuideDataRsp(betterproto.Message):
    retcode: "GetFinishGuideDataRspRetcode" = betterproto.enum_field(1)
    guide_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetFlopActivityDataReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetFlopActivityDataRsp(betterproto.Message):
    retcode: "GetFlopActivityDataRspRetcode" = betterproto.enum_field(1)
    activity_data: "FlopActivityData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetFrameDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetFrameDataRsp(betterproto.Message):
    retcode: "GetFrameDataRspRetcode" = betterproto.enum_field(1)
    frame_list: List["FrameData"] = betterproto.message_field(2)
    is_all: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GetFriendListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetFriendListRsp(betterproto.Message):
    retcode: "GetFriendListRspRetcode" = betterproto.enum_field(1)
    friend_list: List["PlayerFriendBriefData"] = betterproto.message_field(2)
    is_whole_data: bool = betterproto.bool_field(3)
    assistant_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetFriendRemarkListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetFriendRemarkListRsp(betterproto.Message):
    retcode: "GetFriendRemarkListRspRetcode" = betterproto.enum_field(1)
    friend_remark_list: List["FriendRemark"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetGalInteractTriggerEventReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    event_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetGalInteractTriggerEventRsp(betterproto.Message):
    retcode: "GetGalInteractTriggerEventRspRetcode" = betterproto.enum_field(1)
    event_id: int = betterproto.uint32_field(2)
    avatar_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetGameserverReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetGameserverRsp(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetGardenActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetGardenActivityRsp(betterproto.Message):
    retcode: "GetGardenActivityRspRetcode" = betterproto.enum_field(1)
    garden: "GardenActivityData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetGardenScheduleReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetGardenScheduleRsp(betterproto.Message):
    retcode: "GetGardenScheduleRspRetcode" = betterproto.enum_field(1)
    garden_id: int = betterproto.uint32_field(2)
    begin_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)
    is_garden_opened: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class GetGlobalWarActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetGlobalWarActivityRsp(betterproto.Message):
    retcode: "GetGlobalWarActivityRspRetcode" = betterproto.enum_field(1)
    global_war_activity: "GlobalWarActivity" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetGobackReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetGobackRsp(betterproto.Message):
    retcode: "GetGobackRspRetcode" = betterproto.enum_field(1)
    goback_end_time: int = betterproto.uint32_field(2)
    login_days: int = betterproto.uint32_field(3)
    has_take_days_reward_list: List[int] = betterproto.uint32_field(4)
    has_take_days_bonus_reward_list: List[int] = betterproto.uint32_field(5)
    goback_activity_list: List["GobackActivity"] = betterproto.message_field(6)
    score: int = betterproto.uint32_field(7)
    has_take_score_reward_list: List[int] = betterproto.uint32_field(8)
    schedule_id: int = betterproto.uint32_field(9)
    login_reward_list: List["GobackActivityLoginReward"] = betterproto.message_field(10)
    fund: "GobackFund" = betterproto.message_field(11)
    goback_grow_up_activity: "GobackGrowUpActivity" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class GetGodWarReq(betterproto.Message):
    god_war_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetGodWarRsp(betterproto.Message):
    retcode: "GetGodWarRspRetcode" = betterproto.enum_field(1)
    god_war_list: List["GodWar"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetGrandKeyReq(betterproto.Message):
    key_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetGrandKeyRsp(betterproto.Message):
    retcode: "GetGrandKeyRspRetcode" = betterproto.enum_field(1)
    key_list: List["GrandKey"] = betterproto.message_field(2)
    is_all: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GetGratuityActivityReq(betterproto.Message):
    stage_unique_id_list: List[int] = betterproto.uint32_field(1)
    invite_stage_unique_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetGratuityActivityRsp(betterproto.Message):
    retcode: "GetGratuityActivityRspRetcode" = betterproto.enum_field(1)
    cur_schedule_id: int = betterproto.uint32_field(2)
    stage_list: List["GratuityStage"] = betterproto.message_field(3)
    today_left_free_stage_num: int = betterproto.uint32_field(4)
    invite_stage_list: List["GratuityStage"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GetGratuityBattleHistoryReq(betterproto.Message):
    stage_unique_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetGratuityBattleHistoryRsp(betterproto.Message):
    retcode: "GetGratuityBattleHistoryRspRetcode" = betterproto.enum_field(1)
    battle_list: List["GratuityBattle"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetGratuityStageListReq(betterproto.Message):
    stage_unique_id_list: List[int] = betterproto.uint32_field(1)
    stage_group_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetGratuityStageListRsp(betterproto.Message):
    retcode: "GetGratuityStageListRspRetcode" = betterproto.enum_field(1)
    stage_list: List["GratuityStage"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetGuideRewardReq(betterproto.Message):
    guide_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetGuideRewardRsp(betterproto.Message):
    retcode: "GetGuideRewardRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetHasGotFurnitureIdListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetHasGotFurnitureIdListRsp(betterproto.Message):
    retcode: "GetHasGotFurnitureIdListRspRetcode" = betterproto.enum_field(1)
    furniture_id_list: List[int] = betterproto.uint32_field(2)
    has_unlock_furniture_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetHasGotItemIdListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetHasGotItemIdListRsp(betterproto.Message):
    retcode: "GetHasGotItemIdListRspRetcode" = betterproto.enum_field(1)
    item_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetHaveTakenShareRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetHaveTakenShareRewardRsp(betterproto.Message):
    retcode: "GetHaveTakenShareRewardRspRetcode" = betterproto.enum_field(1)
    share_reward_record_list: List["ShareRewardRecord"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetInviteActivityInviteeDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetInviteActivityInviteeDataRsp(betterproto.Message):
    retcode: "GetInviteActivityInviteeDataRspRetcode" = betterproto.enum_field(1)
    invitee_activity_info_list: List["InviteeActivity"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetInviteActivityInviterDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetInviteActivityInviterDataRsp(betterproto.Message):
    retcode: "GetInviteActivityInviterDataRspRetcode" = betterproto.enum_field(1)
    my_invite_code: str = betterproto.string_field(2)
    inviter_activity_info_list: List["InviterActivity"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetInviteeFriendReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetInviteeFriendRsp(betterproto.Message):
    retcode: "GetInviteeFriendRspRetcode" = betterproto.enum_field(1)
    invitee_code: str = betterproto.string_field(2)
    invitee_reward_list: List["InviteeFriendRewardData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetInviteFriendReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetInviteFriendRsp(betterproto.Message):
    retcode: "GetInviteFriendRspRetcode" = betterproto.enum_field(1)
    my_invite_code: str = betterproto.string_field(2)
    has_invite_num: int = betterproto.uint32_field(3)
    my_invite_reward_list: List["InviteFriendRewardData"] = betterproto.message_field(4)
    invite_activity: "InviteActivityData" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GetIslandEventReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetIslandEventRsp(betterproto.Message):
    retcode: "GetIslandEventRspRetcode" = betterproto.enum_field(1)
    avatar_pos_list: List["IslandAvatarPos"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetJigsawActivityReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetJigsawActivityRsp(betterproto.Message):
    retcode: "GetJigsawActivityRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    jigsaw_list: List["JigsawData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetKingdomWarReq(betterproto.Message):
    join_data: "KingdomWarJoinData" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GetKingdomWarRsp(betterproto.Message):
    retcode: "GetKingdomWarRspRetcode" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    display_begin_time: int = betterproto.uint32_field(3)
    display_end_time: int = betterproto.uint32_field(4)
    begin_time: int = betterproto.uint32_field(5)
    end_time: int = betterproto.uint32_field(6)
    kingdom_war: "KingdomWarData" = betterproto.message_field(7)
    kingdom_id: int = betterproto.uint32_field(8)
    activity_stamina: int = betterproto.uint32_field(9)
    last_recover_stamina_time: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GetLastEndlessRewardDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetLastEndlessRewardDataRsp(betterproto.Message):
    retcode: "GetLastEndlessRewardDataRspRetcode" = betterproto.enum_field(1)
    begin_time: int = betterproto.uint32_field(2)
    group_level: int = betterproto.uint32_field(3)
    rank: int = betterproto.uint32_field(4)
    progress_or_score: int = betterproto.uint32_field(5)
    reward_type: "EndlessRewardType" = betterproto.enum_field(6)
    reward_id: int = betterproto.uint32_field(7)
    reward_list: List["RewardData"] = betterproto.message_field(8)
    cur_group_level: int = betterproto.uint32_field(9)
    type: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GetLobbyStatReq(betterproto.Message):
    stage_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetLobbyStatRsp(betterproto.Message):
    retcode: "GetLobbyStatRspRetcode" = betterproto.enum_field(1)
    lobby_stat_list: List["LobbyStat"] = betterproto.message_field(2)
    lobby_total_stat: "LobbyStat" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetLoginActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetLoginActivityRsp(betterproto.Message):
    retcode: "GetLoginActivityRspRetcode" = betterproto.enum_field(1)
    login_list: List["LoginActivityData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetLoginMissionActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetLoginMissionActivityRsp(betterproto.Message):
    retcode: "GetLoginMissionActivityRspRetcode" = betterproto.enum_field(1)
    has_finished_activity_list: List[int] = betterproto.uint32_field(2)
    activity_list: List["LoginMissionActivity"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetLotteryActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetLotteryActivityRsp(betterproto.Message):
    retcode: "GetLotteryActivityRspRetcode" = betterproto.enum_field(1)
    cur_group_id: int = betterproto.uint32_field(2)
    lottery_data_list: List["LotteryData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetMailAttachmentReq(betterproto.Message):
    mail_key_list: List["MailKey"] = betterproto.message_field(1)
    is_show_attachment: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class GetMailAttachmentRsp(betterproto.Message):
    retcode: "GetMailAttachmentRspRetcode" = betterproto.enum_field(1)
    succ_mail_key_list: List["MailKey"] = betterproto.message_field(2)
    is_show_attachment: bool = betterproto.bool_field(3)
    mail_attachment: "MailAttachment" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetMailDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetMailDataRsp(betterproto.Message):
    retcode: "GetMailDataRspRetcode" = betterproto.enum_field(1)
    mail_list: List["Mail"] = betterproto.message_field(2)
    is_all: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GetMainDataReq(betterproto.Message):
    type_list: List["GetMainDataReqDataType"] = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class GetMainDataRsp(betterproto.Message):
    retcode: "GetMainDataRspRetcode" = betterproto.enum_field(1)
    nickname: str = betterproto.string_field(2)
    level: int = betterproto.uint32_field(3)
    exp: int = betterproto.uint32_field(4)
    hcoin: int = betterproto.uint32_field(5)
    scoin: int = betterproto.uint32_field(6)
    stamina: int = betterproto.uint32_field(7)
    stamina_recover_left_time: int = betterproto.uint32_field(8)
    stamina_recover_config_time: int = betterproto.uint32_field(9)
    equipment_size_limit: int = betterproto.uint32_field(14)
    self_desc: str = betterproto.string_field(16)
    pay_hcoin: int = betterproto.uint32_field(17)
    free_hcoin: int = betterproto.uint32_field(18)
    assistant_avatar_id: int = betterproto.uint32_field(19)
    is_allow_cost_senior_equip_on_cur_device: bool = betterproto.bool_field(20)
    birthday: int = betterproto.uint32_field(21)
    month_recharge_price: int = betterproto.uint32_field(22)
    wait_del_hcoin: int = betterproto.uint32_field(23)
    on_medal_id: int = betterproto.uint32_field(24)
    anti_addict: "AntiAddict" = betterproto.message_field(25)
    today_recharge_price: int = betterproto.uint32_field(26)
    use_frame_id: int = betterproto.uint32_field(27)
    is_all: bool = betterproto.bool_field(28)
    mcoin: int = betterproto.uint32_field(29)
    open_panel_activity_list: List[int] = betterproto.uint32_field(30)
    video_popup_list: List["VideoPopupData"] = betterproto.message_field(31)
    on_phone_pendant_id: int = betterproto.uint32_field(32)
    next_evaluate_time: int = betterproto.uint32_field(33)
    chatworld_activity_info: "ChatworldActivityInfo" = betterproto.message_field(34)
    level_lock_id: int = betterproto.uint32_field(35)
    warship_avatar: "WarshipAvatarData" = betterproto.message_field(37)
    custom_head_id: int = betterproto.uint32_field(38)
    total_login_days: int = betterproto.uint32_field(39)
    register_time: int = betterproto.uint32_field(40)
    warship_theme: "WarshipThemeData" = betterproto.message_field(41)
    wait_del_material_list: List["WaitDelMaterialData"] = betterproto.message_field(42)
    on_medal: "Medal" = betterproto.message_field(43)


@dataclass(eq=False, repr=False)
class GetMasterFameRewardReq(betterproto.Message):
    level: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetMasterFameRewardRsp(betterproto.Message):
    retcode: "MasterPupilRetcodeRetcode" = betterproto.enum_field(1)
    level: int = betterproto.uint32_field(2)
    reward_list: List["RewardData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetMasterPupilApplyReq(betterproto.Message):
    type: "MasterPupilType" = betterproto.enum_field(1)
    time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetMasterPupilApplyRsp(betterproto.Message):
    retcode: "MasterPupilRetcodeRetcode" = betterproto.enum_field(1)
    type: "MasterPupilType" = betterproto.enum_field(2)
    msg_list: List["MasterPupilApplyMsg"] = betterproto.message_field(3)
    send_msg_list: List["MasterPupilApplyMsg"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetMasterPupilCardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetMasterPupilCardRsp(betterproto.Message):
    retcode: "MasterPupilRetcodeRetcode" = betterproto.enum_field(1)
    card: "MasterPupilCard" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetMasterPupilDataReq(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetMasterPupilDataRsp(betterproto.Message):
    retcode: "MasterPupilRetcodeRetcode" = betterproto.enum_field(1)
    type: int = betterproto.uint32_field(2)
    data_list: List["MasterPupilData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetMasterPupilMainDataReq(betterproto.Message):
    type: "MasterPupilType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class GetMasterPupilMainDataRsp(betterproto.Message):
    retcode: "MasterPupilRetcodeRetcode" = betterproto.enum_field(1)
    type: "MasterPupilType" = betterproto.enum_field(2)
    master: "MasterMainData" = betterproto.message_field(3)
    pupil: "PupilMainData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetMasterRankReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetMasterRankRsp(betterproto.Message):
    retcode: "MasterPupilRetcodeRetcode" = betterproto.enum_field(1)
    rank_data: "RankShowData" = betterproto.message_field(2)
    refresh_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetMatrixFloorReq(betterproto.Message):
    floor_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetMatrixFloorRsp(betterproto.Message):
    retcode: "GetMatrixFloorRspRetcode" = betterproto.enum_field(1)
    floor_brief_info: "MatrixFloorBriefInfo" = betterproto.message_field(2)
    floor_map_info: "MatrixFloorMapInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetMatrixReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetMatrixRsp(betterproto.Message):
    retcode: "GetMatrixRspRetcode" = betterproto.enum_field(1)
    floor_brief_info_list: List["MatrixFloorBriefInfo"] = betterproto.message_field(2)
    cur_floor_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetMedalDataReq(betterproto.Message):
    medal_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetMedalDataRsp(betterproto.Message):
    retcode: "GetMedalDataRspRetcode" = betterproto.enum_field(1)
    medal_list: List["Medal"] = betterproto.message_field(2)
    is_all: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GetMiniRankReq(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(2)
    activity_id: int = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(4)
    rank_id: int = betterproto.uint32_field(5)
    challenge_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GetMiniRankRsp(betterproto.Message):
    retcode: "GetMiniRankRspRetcode" = betterproto.enum_field(1)
    type: int = betterproto.uint32_field(2)
    stage_id: int = betterproto.uint32_field(3)
    rank_data: "RankShowData" = betterproto.message_field(4)
    activity_id: int = betterproto.uint32_field(5)
    avatar_id: int = betterproto.uint32_field(6)
    challenge_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GetMinuteStageReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetMinuteStageRsp(betterproto.Message):
    retcode: "GetMinuteStageRspRetcode" = betterproto.enum_field(1)
    is_open: bool = betterproto.bool_field(2)
    stage_list: List["MinuteStage"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetMinuteTimesReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetMinuteTimesRsp(betterproto.Message):
    retcode: "GetMinuteTimesRspRetcode" = betterproto.enum_field(1)
    left_times: int = betterproto.uint32_field(2)
    recover_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetMissionDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetMissionDataRsp(betterproto.Message):
    retcode: "GetMissionDataRspRetcode" = betterproto.enum_field(1)
    mission_list: List["Mission"] = betterproto.message_field(2)
    is_all: bool = betterproto.bool_field(7)
    is_in_activity: bool = betterproto.bool_field(8)
    challenge_mission: "ChallengeMissionData" = betterproto.message_field(9)
    close_mission_list: List[int] = betterproto.uint32_field(10)
    mainline_step: "MainlineStepMission" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class GetMissionGroupMainInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetMissionGroupMainInfoRsp(betterproto.Message):
    retcode: "GetMissionGroupMainInfoRspRetcode" = betterproto.enum_field(1)
    has_take_reward_mission_group_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetMissionRewardReq(betterproto.Message):
    mission_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetMissionRewardRsp(betterproto.Message):
    retcode: "GetMissionRewardRspRetcode" = betterproto.enum_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)
    mission_id_list: List[int] = betterproto.uint32_field(3)
    reward_unlock_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetMissionStepCompensationInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetMissionStepCompensationInfoRsp(betterproto.Message):
    retcode: "GetMissionStepCompensationInfoRspRetcode" = betterproto.enum_field(1)
    challenge_mission_compensation_list: List[
        "MissionStepCompensation"
    ] = betterproto.message_field(2)
    mainline_misssion_compensation: "MissionStepCompensation" = (
        betterproto.message_field(3)
    )
    has_take_reward: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class GetMissionThemeDataReq(betterproto.Message):
    theme_id: int = betterproto.uint32_field(1)
    is_get_all: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class GetMissionThemeDataRsp(betterproto.Message):
    retcode: "GetMissionThemeDataRspRetcode" = betterproto.enum_field(1)
    theme_id: int = betterproto.uint32_field(2)
    is_get_all: bool = betterproto.bool_field(3)
    mission_theme_list: List["MissionThemeData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetMonopolyActivityReq(betterproto.Message):
    monopoly_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetMonopolyActivityRsp(betterproto.Message):
    retcode: "GetMonopolyActivityRspRetcode" = betterproto.enum_field(1)
    monopoly_id: int = betterproto.uint32_field(2)
    area_list: List["MonopolyArea"] = betterproto.message_field(3)
    goods_list: List["MonopolyShopGoods"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetMosaicActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetMosaicActivityRsp(betterproto.Message):
    retcode: "GetMosaicActivityRspRetcode" = betterproto.enum_field(1)
    activity_list: List["MosaicActivity"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetMpDataReq(betterproto.Message):
    data_type: "MpDataType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class GetMpDataRsp(betterproto.Message):
    retcode: "GetMpDataRspRetcode" = betterproto.enum_field(1)
    data_type: "MpDataType" = betterproto.enum_field(2)
    op_type: "GetMpDataRspOpType" = betterproto.enum_field(3)
    mp_level: int = betterproto.uint32_field(4)
    mp_exp: int = betterproto.uint32_field(5)
    skill_point_list: List["MpSkillPoint"] = betterproto.message_field(6)
    skill_list: List["MpSkill"] = betterproto.message_field(7)
    team_avatar_id: int = betterproto.uint32_field(8)
    punish_end_time: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GetMpRaidRankReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetMpRaidRankRsp(betterproto.Message):
    retcode: "GetMpRaidRankRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    rank_data: "RankShowData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetMpRaidSpecialRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetMpRaidSpecialRewardRsp(betterproto.Message):
    retcode: "GetMpRaidSpecialRewardRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    reward_list: List["RewardData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetMpStageRecordReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetMpStageRecordRsp(betterproto.Message):
    retcode: "GetMpStageRecordRspRetcode" = betterproto.enum_field(1)
    record_list: List["MpStageRecord"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetMyCardAuthCodeReq(betterproto.Message):
    fac_trade_seq: str = betterproto.string_field(1)
    product_name: str = betterproto.string_field(2)
    amount: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class GetMyCardAuthCodeRsp(betterproto.Message):
    retcode: "GetMyCardAuthCodeRspRetcode" = betterproto.enum_field(1)
    auth_code: str = betterproto.string_field(2)
    trade_seq: str = betterproto.string_field(3)
    product_name: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class GetNewbieActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetNewbieActivityRsp(betterproto.Message):
    retcode: "GetNewbieActivityRspRetcode" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)
    taken_reward_level_list: List[int] = betterproto.uint32_field(4)
    challenge: "NewbieActivityChallenge" = betterproto.message_field(5)
    privilege: "NewbiePrivilegeInfo" = betterproto.message_field(6)
    level_rush: "NewbieLevelRush" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class GetNewConsignedOrderDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetNewConsignedOrderDataRsp(betterproto.Message):
    retcode: "GetNewConsignedOrderDataRspRetcode" = betterproto.enum_field(1)
    progress: int = betterproto.uint32_field(2)
    order_list: List["ConsignedOrder"] = betterproto.message_field(3)
    cd_finish_time: int = betterproto.uint32_field(4)
    finish_order_times: int = betterproto.uint32_field(5)
    total_order_times: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GetNinjaActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetNinjaActivityRsp(betterproto.Message):
    retcode: "GetNinjaActivityRspRetcode" = betterproto.enum_field(1)
    ninja_data: "NinjaActivityData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetOfflineFriendsPointNotify(betterproto.Message):
    friends_point: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetOfflineResourceDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetOfflineResourceDataRsp(betterproto.Message):
    retcode: "GetOfflineResourceDataRspRetcode" = betterproto.enum_field(1)
    cur_schedule_id: int = betterproto.uint32_field(2)
    offline_resource_list: List["OfflineResource"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetOnlineRewardActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetOnlineRewardActivityRsp(betterproto.Message):
    retcode: "GetOnlineRewardActivityRspRetcode" = betterproto.enum_field(1)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)
    min_level: int = betterproto.uint32_field(4)
    reward_list: List[
        "GetOnlineRewardActivityRspOnlineReward"
    ] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GetOnlineRewardActivityRspOnlineReward(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    take_time: int = betterproto.uint32_field(2)
    is_taken: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GetOpenworldEndlessDataReq(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    type: "EndlessType" = betterproto.enum_field(2)
    is_finish_front: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GetOpenworldEndlessDataRsp(betterproto.Message):
    retcode: "GetOpenworldEndlessDataRspRetcode" = betterproto.enum_field(1)
    group_id: int = betterproto.uint32_field(3)
    group_level: int = betterproto.uint32_field(4)
    begin_time: int = betterproto.uint32_field(5)
    end_time: int = betterproto.uint32_field(6)
    close_time: int = betterproto.uint32_field(7)
    endless_data_list: List["OpenworldEndlessPlayer"] = betterproto.message_field(8)
    brief_data_list: List["PlayerFriendBriefData"] = betterproto.message_field(9)
    random_seed: int = betterproto.uint32_field(10)
    item_list: List["OpenworldEndlessItem"] = betterproto.message_field(11)
    finish_monster_group_list: List[int] = betterproto.uint32_field(12)
    battle_config_id: int = betterproto.uint32_field(13)
    effect_item_list: List["OpenworldEndlessItem"] = betterproto.message_field(14)
    trap_add_item_list: List["OpenworldEndlessItem"] = betterproto.message_field(15)
    boss_extra_score: int = betterproto.uint32_field(16)
    is_just_join: int = betterproto.uint32_field(17)
    cur_top_group_level: int = betterproto.uint32_field(18)
    top_group_player_num: int = betterproto.uint32_field(19)
    top_group_promote_unlock_player_num: int = betterproto.uint32_field(20)
    invasion_id: int = betterproto.uint32_field(21)
    hard_level: int = betterproto.uint32_field(22)
    war_info_list: List["OpenworldEndlessWarInfo"] = betterproto.message_field(23)
    event_sub_type_id_list: List[int] = betterproto.uint32_field(24)
    trap_item_show_id_list: List[int] = betterproto.uint32_field(25)
    monster_group_list: List[
        "OpenworldEndlessMonsterGroup"
    ] = betterproto.message_field(26)
    type: "EndlessType" = betterproto.enum_field(27)
    quantum_endless: "QuantumEndless" = betterproto.message_field(28)
    greedy_endless: "GreedyEndless" = betterproto.message_field(29)


@dataclass(eq=False, repr=False)
class GetOpenworldEndlessPlayerWarInfoReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetOpenworldEndlessPlayerWarInfoRsp(betterproto.Message):
    retcode: "GetOpenworldEndlessPlayerWarInfoRspRetcode" = betterproto.enum_field(1)
    target_uid: int = betterproto.uint32_field(2)
    war_info_list: List["OpenworldEndlessWarInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetOpenworldEndlessStageInnerDataReq(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetOpenworldEndlessStageInnerDataRsp(betterproto.Message):
    retcode: "GetOpenworldEndlessStageInnerDataRspRetcode" = betterproto.enum_field(1)
    battle_list: List["OpenworldEndlessBattle"] = betterproto.message_field(2)
    effect_item_list: List["OpenworldEndlessItem"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetOpenworldEndlessTopGroupReq(betterproto.Message):
    type: "EndlessType" = betterproto.enum_field(9)


@dataclass(eq=False, repr=False)
class GetOpenworldEndlessTopGroupRsp(betterproto.Message):
    retcode: "GetOpenworldEndlessTopGroupRspRetcode" = betterproto.enum_field(1)
    endless_data_list: List["OpenworldEndlessPlayer"] = betterproto.message_field(2)
    brief_data_list: List["PlayerFriendBriefData"] = betterproto.message_field(3)
    war_info_list: List["OpenworldEndlessWarInfo"] = betterproto.message_field(4)
    hard_level: int = betterproto.uint32_field(5)
    type: "EndlessType" = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class GetOtherDormDataReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)
    visit_avatar: int = betterproto.uint32_field(2)
    level: int = betterproto.uint32_field(3)
    name: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class GetOtherDormDataRsp(betterproto.Message):
    retcode: "GetOtherDormDataRspRetcode" = betterproto.enum_field(1)
    target_uid: int = betterproto.uint32_field(2)
    house: "DormHouse" = betterproto.message_field(3)
    show_room: int = betterproto.uint32_field(4)
    visit_avatar: int = betterproto.uint32_field(5)
    be_liked_num: int = betterproto.uint32_field(6)
    record_list: List["DormVisitRecord"] = betterproto.message_field(7)
    be_visit_num: int = betterproto.uint32_field(8)
    is_receive_like_limit: bool = betterproto.bool_field(9)
    is_has_liked: bool = betterproto.bool_field(10)
    is_send_like_limit: bool = betterproto.bool_field(11)
    facility_list: List["DormFacility"] = betterproto.message_field(12)
    comfort_value: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GetOtherMasterPupilReq(betterproto.Message):
    uid_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetOtherMasterPupilRsp(betterproto.Message):
    retcode: "MasterPupilRetcodeRetcode" = betterproto.enum_field(1)
    uid_list: List[int] = betterproto.uint32_field(2)
    master_pupil_list: List["MasterPupilDetailData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetOtherPlayerCardDataReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetOtherPlayerCardDataRsp(betterproto.Message):
    retcode: "GetOtherPlayerCardDataRspRetcode" = betterproto.enum_field(1)
    target_uid: int = betterproto.uint32_field(2)
    card_data: "PlayerCardData" = betterproto.message_field(3)
    player_data: "PlayerDetailData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetOtherPlayerClientSettingReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)
    client_setting_type: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetOtherPlayerClientSettingRsp(betterproto.Message):
    retcode: "GetOtherPlayerClientSettingRspRetcode" = betterproto.enum_field(1)
    target_uid: int = betterproto.uint32_field(2)
    client_setting_type: int = betterproto.uint32_field(3)
    is_weekly_guide_switch_on: bool = betterproto.bool_field(4)
    sns_show_priviledge_list: List["SnsShowPriviledge"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GetOverlapActivityDataReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetOverlapActivityDataRsp(betterproto.Message):
    retcode: "GetOverlapActivityDataRspRetcode" = betterproto.enum_field(1)
    activity_data: "OverlapActivityData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetPediaReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetPediaRsp(betterproto.Message):
    retcode: "GetPediaRspRetcode" = betterproto.enum_field(1)
    black_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetPhonePendantDataReq(betterproto.Message):
    phone_pendant_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetPhonePendantDataRsp(betterproto.Message):
    retcode: "GetPhonePendantDataRspRetcode" = betterproto.enum_field(1)
    is_all: bool = betterproto.bool_field(2)
    phone_pendant_list: List["PhonePendant"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetPhotoDataReq(betterproto.Message):
    type: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetPhotoDataRsp(betterproto.Message):
    retcode: "GetPhotoDataRspRetcode" = betterproto.enum_field(1)
    type: int = betterproto.uint32_field(2)
    photo_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetPictureActivityReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetPictureActivityRsp(betterproto.Message):
    retcode: "GetPictureActivityRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    step_list: List["PictureStep"] = betterproto.message_field(3)
    is_share: bool = betterproto.bool_field(4)
    is_take_share_reward: bool = betterproto.bool_field(5)
    score: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GetPlayerCardReq(betterproto.Message):
    type: "PlayerCardType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class GetPlayerCardRsp(betterproto.Message):
    retcode: "GetPlayerCardRspRetcode" = betterproto.enum_field(1)
    type: "PlayerCardType" = betterproto.enum_field(2)
    avatar_id_list: List[int] = betterproto.uint32_field(3)
    medal_id_list: List[int] = betterproto.uint32_field(4)
    msg_config: int = betterproto.uint32_field(5)
    msg_data: "PlayerCardMsgData" = betterproto.message_field(6)
    last_read_msg_index: int = betterproto.uint32_field(7)
    mp_like_num: int = betterproto.uint32_field(8)
    island_like_num: int = betterproto.uint32_field(9)
    elf_id_list: List[int] = betterproto.uint32_field(10)
    campaign_like_num: int = betterproto.uint32_field(11)
    medal_list: List["Medal"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class GetPlayerDetailDataReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetPlayerDetailDataRsp(betterproto.Message):
    retcode: "GetPlayerDetailDataRspRetcode" = betterproto.enum_field(1)
    detail: "PlayerDetailData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetPlayerOnlineStatusReq(betterproto.Message):
    uid_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetPlayerOnlineStatusRsp(betterproto.Message):
    retcode: "GetPlayerOnlineStatusRspRetcode" = betterproto.enum_field(1)
    online_status_list: List["PlayerOnlineStatusInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetPlayerTokenReq(betterproto.Message):
    account_type: int = betterproto.uint32_field(1)
    account_uid: str = betterproto.string_field(2)
    account_token: str = betterproto.string_field(3)
    account_ext: str = betterproto.string_field(4)
    token: str = betterproto.string_field(5)
    version: str = betterproto.string_field(6)
    device: str = betterproto.string_field(7)
    tag: int = betterproto.int32_field(8)
    uid: int = betterproto.uint32_field(9)
    system_info: str = betterproto.string_field(10)
    ipv4_str: str = betterproto.string_field(11)
    ipv6_str: str = betterproto.string_field(12)
    cps: str = betterproto.string_field(13)
    device_uuid: str = betterproto.string_field(14)
    transfer_code: str = betterproto.string_field(15)
    transfer_pwd: str = betterproto.string_field(16)
    ip_info_str: str = betterproto.string_field(17)
    device_type: "DeviceType" = betterproto.enum_field(20)
    is_allow_device_register: bool = betterproto.bool_field(21)
    combo_channel_id: int = betterproto.uint32_field(22)
    combo_token: str = betterproto.string_field(23)
    user_ip_str: str = betterproto.string_field(24)


@dataclass(eq=False, repr=False)
class GetPlayerTokenRsp(betterproto.Message):
    retcode: "GetPlayerTokenRspRetcode" = betterproto.enum_field(1)
    uid: int = betterproto.uint32_field(2)
    token: str = betterproto.string_field(3)
    account_type: int = betterproto.uint32_field(4)
    account_uid: str = betterproto.string_field(5)
    tag: int = betterproto.int32_field(6)
    transfer_code: str = betterproto.string_field(15)
    transfer_pwd_expire_time: int = betterproto.uint32_field(16)
    is_bind_access: bool = betterproto.bool_field(17)
    fightserver_ip: int = betterproto.uint32_field(18)
    fightserver_port: int = betterproto.uint32_field(19)
    msg: str = betterproto.string_field(20)
    black_list_end_time: int = betterproto.uint32_field(21)
    user_type: int = betterproto.uint32_field(22)
    limit_level: int = betterproto.uint32_field(23)
    security_cmd_buffer: bytes = betterproto.bytes_field(24)
    hoyolab_account_uid: str = betterproto.string_field(26)


@dataclass(eq=False, repr=False)
class GetPlotListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetPlotListRsp(betterproto.Message):
    retcode: "GetPlotListRspRetcode" = betterproto.enum_field(1)
    plot_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetPrivateHistoryChatMsgReq(betterproto.Message):
    uid_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetPrivateHistoryChatMsgRsp(betterproto.Message):
    retcode: "GetPrivateHistoryChatMsgRspRetcode" = betterproto.enum_field(1)
    chat_list: List["HistoryPrivateChatMsg"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetPrivilegeInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetPrivilegeInfoRsp(betterproto.Message):
    retcode: "GetPrivilegeInfoRspRetcode" = betterproto.enum_field(1)
    privilege_list: List["PrivilegeInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetProductListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetProductListRsp(betterproto.Message):
    retcode: "GetProductListRspRetcode" = betterproto.enum_field(1)
    product_list: List["Product"] = betterproto.message_field(2)
    next_random_box_product_refresh_time: int = betterproto.uint32_field(3)
    next_limit_product_refresh_time: int = betterproto.uint32_field(4)
    foundation_list: List["FoundationData"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GetProductRecommendListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetProductRecommendListRsp(betterproto.Message):
    retcode: "GetProductRecommendListRspRetcode" = betterproto.enum_field(1)
    recommend_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetPupilEvalDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetPupilEvalDataRsp(betterproto.Message):
    retcode: "MasterPupilRetcodeRetcode" = betterproto.enum_field(1)
    eval_msg: "MasterPupilEvalMsg" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetPupilMissionReq(betterproto.Message):
    uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetPupilMissionRsp(betterproto.Message):
    retcode: "MasterPupilRetcodeRetcode" = betterproto.enum_field(1)
    uid: int = betterproto.uint32_field(2)
    step_id: int = betterproto.uint32_field(3)
    mission_list: List["Mission"] = betterproto.message_field(4)
    pool_reward: "MasterPoolData" = betterproto.message_field(5)
    time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GetQuestionActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetQuestionActivityRsp(betterproto.Message):
    retcode: "GetQuestionActivityRspRetcode" = betterproto.enum_field(1)
    cur_schedule_id: int = betterproto.uint32_field(2)
    question_list: List["Question"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetRaffleActivityReq(betterproto.Message):
    raffle_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetRaffleActivityRsp(betterproto.Message):
    retcode: "GetRaffleActivityRspRetcode" = betterproto.enum_field(1)
    raffle_activity: "RaffleActivity" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetRaidActiveInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetRaidActiveInfoRsp(betterproto.Message):
    retcode: "GetRaidActiveInfoRspRetcode" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    active_type: "RaidActiveType" = betterproto.enum_field(3)
    has_daily_raid_activity: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class GetRankScheduleDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetRankScheduleDataRsp(betterproto.Message):
    retcode: "GetRankScheduleDataRspRetcode" = betterproto.enum_field(1)
    rank_schedule_list: List["RankScheduleData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetRankScheduleRankReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetRankScheduleRankRsp(betterproto.Message):
    retcode: "GetRankScheduleRankRspRetcode" = betterproto.enum_field(1)
    rank_data: "RankShowData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetReclaimActivityDataReq(betterproto.Message):
    data_type: "ReclaimActivityDataType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class GetReclaimActivityDataRsp(betterproto.Message):
    retcode: "GetReclaimActivityDataRspRetcode" = betterproto.enum_field(1)
    data_type: "ReclaimActivityDataType" = betterproto.enum_field(2)
    id: int = betterproto.uint32_field(3)
    level: int = betterproto.uint32_field(4)
    has_take_reward_level_list: List[int] = betterproto.uint32_field(5)
    reclaim_avatar_list: List["ReclaimAvatar"] = betterproto.message_field(6)
    reclaim_weapon_id_list: List[int] = betterproto.uint32_field(7)
    reclaim_stigmata_id_list: List[int] = betterproto.uint32_field(8)
    reclaim_avatar_team_list: List[int] = betterproto.uint32_field(9)
    level_exp: int = betterproto.uint32_field(10)
    total_exp: int = betterproto.uint32_field(11)
    candidate_item_list: List[int] = betterproto.uint32_field(12)
    candidate_gacha_box_id: int = betterproto.uint32_field(13)
    boom_energy: int = betterproto.uint32_field(14)
    enter_boom_stage_times: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GetReclaimRankReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetReclaimRankRsp(betterproto.Message):
    retcode: "GetReclaimRankRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    rank_data: "RankShowData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetRecommendArmadaMemberListReq(betterproto.Message):
    uid_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetRecommendArmadaMemberListRsp(betterproto.Message):
    retcode: "GetRecommendArmadaMemberListRspRetcode" = betterproto.enum_field(1)
    recommend_list: List["PlayerFriendBriefData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetRecommendArmadaReq(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    friend_uid_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetRecommendArmadaRsp(betterproto.Message):
    retcode: "GetRecommendArmadaRspRetcode" = betterproto.enum_field(1)
    armada_list: List["ArmadaBriefData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetRecommendFriendListReq(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    filter_uid_list: List[int] = betterproto.uint32_field(2)
    recommend_uid_list: List[int] = betterproto.uint32_field(3)
    mp_recommend_uid_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetRecommendFriendListRsp(betterproto.Message):
    retcode: "GetRecommendFriendListRspRetcode" = betterproto.enum_field(1)
    recommend_list: List["PlayerFriendBriefData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetRecommendGoodsReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetRecommendGoodsRsp(betterproto.Message):
    retcode: "GetRecommendGoodsRspRetcode" = betterproto.enum_field(1)
    recommend_goods_list: List["RecommendGoods"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetRecommendMasterPupilReq(betterproto.Message):
    type: "MasterPupilType" = betterproto.enum_field(1)
    card: "MasterPupilCard" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetRecommendMasterPupilRsp(betterproto.Message):
    retcode: "MasterPupilRetcodeRetcode" = betterproto.enum_field(1)
    type: "MasterPupilType" = betterproto.enum_field(2)
    msg_list: List["MasterPupilApplyMsg"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetRecommendMissionPanelListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetRecommendMissionPanelListRsp(betterproto.Message):
    retcode: "GetRecommendMissionPanelListRspRetcode" = betterproto.enum_field(1)
    recommend_mission_panel_list: List[
        "RecommendMissionPanel"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetRedeemCodeInfoReq(betterproto.Message):
    redeem_code: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class GetRedeemCodeInfoRsp(betterproto.Message):
    retcode: "GetRedeemCodeInfoRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)
    desc: str = betterproto.string_field(3)
    redeem_code: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class GetRegionUidRangeReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetRegionUidRangeRsp(betterproto.Message):
    retcode: "GetRegionUidRangeRspRetcode" = betterproto.enum_field(1)
    local_region_name: str = betterproto.string_field(2)
    region_uid_range_list: List["RegionUidRange"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetRestaurantActivityReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetRestaurantActivityRsp(betterproto.Message):
    retcode: "GetRestaurantActivityRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    facility_level: int = betterproto.uint32_field(3)
    room_list: List["RestaurantRoom"] = betterproto.message_field(4)
    order_list: List["RestaurantOrder"] = betterproto.message_field(5)
    weather_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GetRewardLineActivityReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetRewardLineActivityRsp(betterproto.Message):
    retcode: "GetRewardLineActivityRspRetcode" = betterproto.enum_field(1)
    reward_line_activity_list: List["RewardLineActivity"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetRogueStageDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetRogueStageDataRsp(betterproto.Message):
    retcode: "GetRogueStageDataRspRetcode" = betterproto.enum_field(1)
    max_next_hard_level: int = betterproto.uint32_field(2)
    next_able_reset_time: int = betterproto.uint32_field(3)
    hard_level: int = betterproto.uint32_field(4)
    progress: int = betterproto.uint32_field(5)
    random_seed: int = betterproto.uint32_field(6)
    avatar_list: List["RogueStageAvatar"] = betterproto.message_field(7)
    cost_ratio: int = betterproto.uint32_field(8)
    drop_ratio: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GetRoomDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetRoomDataRsp(betterproto.Message):
    retcode: "GetRoomDataRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class GetRpgTaleFileReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetRpgTaleFileRsp(betterproto.Message):
    retcode: "GetRpgTaleFileRspRetcode" = betterproto.enum_field(1)
    tale_id: int = betterproto.uint32_field(2)
    file_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetRpgTaleReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)
    is_all: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class GetRpgTaleRsp(betterproto.Message):
    retcode: "GetRpgTaleRspRetcode" = betterproto.enum_field(1)
    tale_id: int = betterproto.uint32_field(2)
    is_all: bool = betterproto.bool_field(12)
    rpg_tale_list: List["RpgTaleData"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class GetScDlcReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetScDlcRsp(betterproto.Message):
    retcode: "GetScDlcRspRetcode" = betterproto.enum_field(1)
    fever: "ScDlcFever" = betterproto.message_field(2)
    avatar_list: List["ScDlcAvatar"] = betterproto.message_field(3)
    npc_list: List["ScDlcSupportNpc"] = betterproto.message_field(4)
    daily_quest_data: "ScDlcDailyQuestData" = betterproto.message_field(5)
    name: str = betterproto.string_field(6)
    achievement_list: List["ScDlcAchievement"] = betterproto.message_field(7)
    max_challenge_reward_take_progress: int = betterproto.uint32_field(8)
    active_fever_ability_group_id_list: List[int] = betterproto.uint32_field(9)
    max_active_fever_ability_group_num: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GetScDlcSelectDailyQuestReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetScDlcSelectDailyQuestRsp(betterproto.Message):
    retcode: "GetScDlcSelectDailyQuestRspRetcode" = betterproto.enum_field(1)
    quest_list: List["OpenworldQuest"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetScDlcTowerRankReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetScDlcTowerRankRsp(betterproto.Message):
    retcode: "GetScDlcTowerRankRspRetcode" = betterproto.enum_field(1)
    rank_percent: int = betterproto.uint32_field(2)
    rank: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetScDlcTowerReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetScDlcTowerRsp(betterproto.Message):
    retcode: "GetScDlcTowerRspRetcode" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    cur_floor: int = betterproto.uint32_field(3)
    max_floor: int = betterproto.uint32_field(4)
    avatar_info_list: List["ScDlcTowerAvatarInfo"] = betterproto.message_field(5)
    max_score: int = betterproto.uint32_field(6)
    avatar_revive_times: int = betterproto.uint32_field(7)
    sc_dlc_fever_score: int = betterproto.uint32_field(8)
    sc_dlc_climax_score: int = betterproto.uint32_field(9)
    max_can_sweep_floor: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GetScoinExchangeInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetScoinExchangeInfoRsp(betterproto.Message):
    retcode: "GetScoinExchangeInfoRspRetcode" = betterproto.enum_field(1)
    usable_times: int = betterproto.uint32_field(2)
    total_times: int = betterproto.uint32_field(3)
    hcoin_cost: int = betterproto.uint32_field(4)
    scoin_get: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetScratchTicketReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetScratchTicketRsp(betterproto.Message):
    retcode: "GetScratchTicketRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    plate_id: int = betterproto.uint32_field(3)
    point_list: List["ScratchTicketPoint"] = betterproto.message_field(4)
    reset_times: int = betterproto.uint32_field(5)
    round: int = betterproto.uint32_field(6)
    core_plate_end_round: int = betterproto.uint32_field(7)
    has_got_core_plate: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class GetSealedModeInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetSealedModeInfoRsp(betterproto.Message):
    retcode: "GetSealedModeInfoRspRetcode" = betterproto.enum_field(1)
    avatar_suite_list: List["AvatarSuite"] = betterproto.message_field(2)
    avatar_suite_selection: "AvatarSuiteSelection" = betterproto.message_field(3)
    left_times: int = betterproto.uint32_field(4)
    selection_suite: "SealedSuiteSelection" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GetSealedModeScheduleReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetSealedModeScheduleRsp(betterproto.Message):
    retcode: "GetSealedModeScheduleRspRetcode" = betterproto.enum_field(1)
    open_time: int = betterproto.uint32_field(2)
    close_time: int = betterproto.uint32_field(3)
    id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetSecurityPasswordReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetSecurityPasswordRsp(betterproto.Message):
    retcode: "GetSecurityPasswordRspRetcode" = betterproto.enum_field(1)
    status: "SecurityPasswordStatus" = betterproto.enum_field(2)
    device_status: "SecurityPasswordDeviceStatus" = betterproto.enum_field(3)
    reset_end_time: int = betterproto.uint32_field(4)
    salt: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class GetShopListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetShopListRsp(betterproto.Message):
    retcode: "GetShopListRspRetcode" = betterproto.enum_field(1)
    shop_list: List["Shop"] = betterproto.message_field(2)
    is_all: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GetShoppingMallListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetShoppingMallListRsp(betterproto.Message):
    retcode: "GetShoppingMallListRspRetcode" = betterproto.enum_field(1)
    shop_list: List["Shop"] = betterproto.message_field(2)
    effective_gift_goods_list: List[
        "EffectiveGiftGoodsData"
    ] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetSignInRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetSignInRewardRsp(betterproto.Message):
    retcode: "GetSignInRewardRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetSignInRewardStatusReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetSignInRewardStatusRsp(betterproto.Message):
    retcode: "GetSignInRewardStatusRspRetcode" = betterproto.enum_field(1)
    is_need_sign_in: bool = betterproto.bool_field(2)
    next_sign_in_day: int = betterproto.uint32_field(3)
    next_sign_in_reward_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetSimulateActivityReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetSimulateActivityRsp(betterproto.Message):
    retcode: "GetSimulateActivityRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    percent: int = betterproto.uint32_field(3)
    player_list: List["SimulatePlayerData"] = betterproto.message_field(4)
    best_avatar_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetSingleShopWithoutRefreshReq(betterproto.Message):
    shop_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetSingleShopWithoutRefreshRsp(betterproto.Message):
    retcode: "GetSingleShopWithoutRefreshRspRetcode" = betterproto.enum_field(1)
    shop: "Shop" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetSlotMachineMainInfoReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetSlotMachineMainInfoRsp(betterproto.Message):
    retcode: "GetSlotMachineMainInfoRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    cur_gacha_id: int = betterproto.uint32_field(3)
    gacha_times: int = betterproto.uint32_field(4)
    has_take_reward_progress: int = betterproto.uint32_field(5)
    is_next_super_gacha: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class GetSnsShowDataReq(betterproto.Message):
    sns_show_type: int = betterproto.uint32_field(1)
    target_uid: int = betterproto.uint32_field(2)
    is_friend: bool = betterproto.bool_field(3)
    ex_boss_schedule_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetSnsShowDataRsp(betterproto.Message):
    retcode: "GetSnsShowDataRspRetcode" = betterproto.enum_field(1)
    sns_show_type: int = betterproto.uint32_field(2)
    target_uid: int = betterproto.uint32_field(3)
    sns_show_endless_data: "SnsShowEndlessData" = betterproto.message_field(4)
    sns_show_ex_boss_data: "SnsShowExBossData" = betterproto.message_field(5)
    wiki_detail_data_list: List["WikiDetailData"] = betterproto.message_field(6)
    card_data: "PlayerCardData" = betterproto.message_field(7)
    player_data: "PlayerDetailData" = betterproto.message_field(8)
    target_uid_level: int = betterproto.uint32_field(9)
    sns_show_tower_raid_data: "SnsShowTowerRaidData" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class GetSpecificRankReq(betterproto.Message):
    type: "SpecificRankType" = betterproto.enum_field(1)
    param: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetSpecificRankRsp(betterproto.Message):
    retcode: "GetSpecificRankRspRetcode" = betterproto.enum_field(1)
    type: "SpecificRankType" = betterproto.enum_field(2)
    param: int = betterproto.uint32_field(3)
    rank_data: "RankShowData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetSpecificRecommendGoodsReq(betterproto.Message):
    goods_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetSpecificRecommendGoodsRsp(betterproto.Message):
    retcode: "GetSpecificRecommendGoodsRspRetcode" = betterproto.enum_field(1)
    recommend_goods_list: List["RecommendGoods"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetStageActDifficultyReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetStageActDifficultyRsp(betterproto.Message):
    retcode: "GetStageActDifficultyRspRetcode" = betterproto.enum_field(1)
    act_difficulty_list: List["StageActDifficultyInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetStageBuffReq(betterproto.Message):
    stage_id_list: List[int] = betterproto.uint32_field(1)
    activity_buff_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetStageBuffRsp(betterproto.Message):
    retcode: "GetStageBuffRspRetcode" = betterproto.enum_field(1)
    stage_buff_list: List["StageBuff"] = betterproto.message_field(2)
    activity_buff_list: List["ActivityBuff"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetStageChapterReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetStageChapterRsp(betterproto.Message):
    retcode: "GetStageChapterRspRetcode" = betterproto.enum_field(1)
    chapter_list: List["StageChapterInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetStageDataReq(betterproto.Message):
    stage_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetStageDataRsp(betterproto.Message):
    retcode: "GetStageDataRspRetcode" = betterproto.enum_field(1)
    stage_list: List["Stage"] = betterproto.message_field(2)
    finished_chapter_list: List[int] = betterproto.uint32_field(3)
    event_data_list: List["StageEventData"] = betterproto.message_field(4)
    is_all: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class GetStageDropDisplayReq(betterproto.Message):
    stage_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetStageDropDisplayRsp(betterproto.Message):
    retcode: "GetStageDropDisplayRspRetcode" = betterproto.enum_field(1)
    stage_drop_list: List["StageDropDisplayInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetStageRecommendAvatarCourseInfoReq(betterproto.Message):
    id: str = betterproto.string_field(1)
    type: "AvatarRecommendType" = betterproto.enum_field(2)
    recommend_style: int = betterproto.uint32_field(3)
    rank: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetStageRecommendAvatarCourseInfoRsp(betterproto.Message):
    retcode: "GetStageRecommendAvatarCourseInfoRspRetcode" = betterproto.enum_field(1)
    course_info: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class GetStageRecommendAvatarReq(betterproto.Message):
    id_list: List[str] = betterproto.string_field(1)
    type: "AvatarRecommendType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class GetStageRecommendAvatarRsp(betterproto.Message):
    retcode: "GetStageRecommendAvatarRspRetcode" = betterproto.enum_field(1)
    stage_recommend_avatar_list: List[
        "StageRecommendAvatar"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetStaminaExchangeInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetStaminaExchangeInfoRsp(betterproto.Message):
    retcode: "GetStaminaExchangeInfoRspRetcode" = betterproto.enum_field(1)
    usable_times: int = betterproto.uint32_field(2)
    total_times: int = betterproto.uint32_field(3)
    hcoin_cost: int = betterproto.uint32_field(4)
    stamina_get: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetSupportActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetSupportActivityRsp(betterproto.Message):
    retcode: "GetSupportActivityRspRetcode" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    support_data: "SupportData" = betterproto.message_field(3)
    is_take_global_reward: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class GetSurveyDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetSurveyDataRsp(betterproto.Message):
    retcode: "GetSurveyDataRspRetcode" = betterproto.enum_field(1)
    survey_data_list: List["SurveyData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetTeamBriefInfoReq(betterproto.Message):
    team_id: int = betterproto.uint32_field(1)
    is_friend_invitation: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class GetTeamBriefInfoRsp(betterproto.Message):
    retcode: "GetTeamBriefInfoRspRetcode" = betterproto.enum_field(1)
    team_id: int = betterproto.uint32_field(2)
    status: "MpTeamStatus" = betterproto.enum_field(3)
    stage_id: int = betterproto.uint32_field(4)
    is_friend_invitation: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class GetTeamListReq(betterproto.Message):
    stage_id_list: List[int] = betterproto.uint32_field(1)
    team_id_list: List[int] = betterproto.uint32_field(2)
    is_select_in_order: bool = betterproto.bool_field(3)
    level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetTeamListRsp(betterproto.Message):
    retcode: "GetTeamListRspRetcode" = betterproto.enum_field(1)
    team_data_list: List["MpTeamData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetTeamStatusReq(betterproto.Message):
    team_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetTeamStatusRsp(betterproto.Message):
    retcode: "GetTeamStatusRspRetcode" = betterproto.enum_field(1)
    team_data_list: List["MpTeamData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetThemeDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetThemeDataRsp(betterproto.Message):
    retcode: "GetThemeDataRspRetcode" = betterproto.enum_field(1)
    theme_list: List["ThemeData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetThemeWantedReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetThemeWantedRsp(betterproto.Message):
    retcode: "GetThemeWantedRspRetcode" = betterproto.enum_field(1)
    theme_wanted_activity: "ThemeWantedActivity" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetTileMapReq(betterproto.Message):
    tower_id: int = betterproto.uint32_field(1)
    floor_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetTileMapRsp(betterproto.Message):
    retcode: "GetTileMapRspRetcode" = betterproto.enum_field(1)
    tower_id: int = betterproto.uint32_field(2)
    floor_id: int = betterproto.uint32_field(3)
    map: "TileMap" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetTimeLimitAddUpDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetTimeLimitAddUpDataRsp(betterproto.Message):
    retcode: "GetTimeLimitAddUpDataRspRetcode" = betterproto.enum_field(1)
    type: "TimeLimitAddUpType" = betterproto.enum_field(2)
    begin_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)
    add_up_value: int = betterproto.uint32_field(5)
    reward_list: List["TimeLimitAddUpReward"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class GetTowerRaidActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetTowerRaidActivityRsp(betterproto.Message):
    retcode: "GetTowerRaidActivityRspRetcode" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    activity_id: int = betterproto.uint32_field(3)
    hard_level: int = betterproto.uint32_field(4)
    enter_times: int = betterproto.uint32_field(5)
    is_settled: bool = betterproto.bool_field(6)
    avatar_list: List["TowerRaidAvatar"] = betterproto.message_field(7)
    boss_stage_list: List["TowerRaidBossStage"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class GetTradingCardActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetTradingCardActivityRsp(betterproto.Message):
    retcode: "GetTradingCardActivityRspRetcode" = betterproto.enum_field(1)
    cur_schedule_id: int = betterproto.uint32_field(2)
    trade_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetTrialAvatarReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetTrialAvatarRsp(betterproto.Message):
    retcode: "GetTrialAvatarRspRetcode" = betterproto.enum_field(1)
    avatar_list: List["TrialAvatar"] = betterproto.message_field(2)
    is_all_update: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GetTvtActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetTvtActivityRsp(betterproto.Message):
    retcode: "GetTvtActivityRspRetcode" = betterproto.enum_field(1)
    tvt_activity_list: List["TvtActivity"] = betterproto.message_field(2)
    cur_season_id: int = betterproto.uint32_field(3)
    season_begin_time: int = betterproto.uint32_field(4)
    season_end_time: int = betterproto.uint32_field(5)
    punish_end_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GetTvtBattleHistoryReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetTvtBattleHistoryRsp(betterproto.Message):
    retcode: "GetTvtBattleHistoryRspRetcode" = betterproto.enum_field(1)
    battle_history_list: List["TvtBattleHistory"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetVersionActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetVersionActivityRsp(betterproto.Message):
    retcode: "GetVersionActivityRspRetcode" = betterproto.enum_field(1)
    id: int = betterproto.uint32_field(2)
    begin_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)
    score: int = betterproto.uint32_field(5)
    reward_score: int = betterproto.uint32_field(6)
    version_activity_list: List["VersionActivityData"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class GetVipRewardDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetVipRewardDataRsp(betterproto.Message):
    retcode: "GetVipRewardDataRspRetcode" = betterproto.enum_field(1)
    total_pay_hcoin: int = betterproto.uint32_field(2)
    vip_reward_list: List["VipReward"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GetVipRewardReq(betterproto.Message):
    vip_level_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetVipRewardRsp(betterproto.Message):
    retcode: "GetVipRewardRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetVirtualAvatarGroupDetailReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetVirtualAvatarGroupDetailRsp(betterproto.Message):
    retcode: "GetVirtualAvatarGroupDetailRspRetcode" = betterproto.enum_field(1)
    virtual_avatar_group: "VirtualAvatarGroup" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetVirtualGachaStatusReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetVirtualGachaStatusRsp(betterproto.Message):
    retcode: "GetVirtualGachaStatusRspRetcode" = betterproto.enum_field(1)
    gacha_list: List["VirtualGacha"] = betterproto.message_field(2)
    group_id: int = betterproto.uint32_field(3)
    candidate_gacha_box_id: int = betterproto.uint32_field(4)
    candidate_item_id_list: List[int] = betterproto.uint32_field(5)
    candidate_gacha_pool_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GetWareHouseDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetWareHouseDataRsp(betterproto.Message):
    retcode: "GetWareHouseDataRspRetcode" = betterproto.enum_field(1)
    demand_list: List["WareHouseDemand"] = betterproto.message_field(2)
    status: "WareHouseStatus" = betterproto.enum_field(3)
    my_demand: "WareHouseDemand" = betterproto.message_field(4)
    donate_uid: int = betterproto.uint32_field(5)
    cd_finish_time: int = betterproto.uint32_field(6)
    day_donate_times: int = betterproto.uint32_field(7)
    max_donate_times: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GetWareHouseItemReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetWareHouseItemRsp(betterproto.Message):
    retcode: "GetWareHouseItemRspRetcode" = betterproto.enum_field(1)
    demand_id: int = betterproto.uint32_field(2)
    status: "WareHouseStatus" = betterproto.enum_field(3)
    cd_finish_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetWarshipDataReq(betterproto.Message):
    warship_id_list: List[int] = betterproto.uint32_field(1)
    is_all: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class GetWarshipDataRsp(betterproto.Message):
    retcode: "GetWarshipDataRspRetcode" = betterproto.enum_field(1)
    warship_list: List["WarshipThemeData"] = betterproto.message_field(2)
    is_all: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GetWarshipItemDataReq(betterproto.Message):
    warship_item_id_list: List[int] = betterproto.uint32_field(1)
    is_all: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class GetWarshipItemDataRsp(betterproto.Message):
    retcode: "GetWarshipItemDataRspRetcode" = betterproto.enum_field(1)
    warship_item_id_list: List[int] = betterproto.uint32_field(2)
    is_all: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GetWarshipTrialDataReq(betterproto.Message):
    sample_id_list: List[int] = betterproto.uint32_field(1)
    is_all: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class GetWarshipTrialDataRsp(betterproto.Message):
    retcode: "GetWarshipTrialDataRspRetcode" = betterproto.enum_field(1)
    trial_warship_list: List["TrialWarship"] = betterproto.message_field(2)
    is_all: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GetWebActivityInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetWebActivityInfoRsp(betterproto.Message):
    retcode: "GetWebActivityInfoRspRetcode" = betterproto.enum_field(1)
    web_activity_list: List["WebActivity"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetWeekDayActivityCompensationInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetWeekDayActivityCompensationInfoRsp(betterproto.Message):
    retcode: "GetWeekDayActivityCompensationInfoRspRetcode" = betterproto.enum_field(1)
    stage_compensation_list: List[
        "WeekDayActivityStageCompensation"
    ] = betterproto.message_field(2)
    has_taken_compensation: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GetWeekDayActivityDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetWeekDayActivityDataRsp(betterproto.Message):
    retcode: "GetWeekDayActivityDataRspRetcode" = betterproto.enum_field(1)
    activity_list: List["WeekDayActivity"] = betterproto.message_field(2)
    is_whole_data: bool = betterproto.bool_field(3)
    series_list: List["ActivitySeries"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GetWeeklyReportEndlessRecommendPlayerReq(betterproto.Message):
    begin_time: int = betterproto.uint32_field(1)
    group_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetWeeklyReportEndlessRecommendPlayerRsp(betterproto.Message):
    retcode: "GetWeeklyReportEndlessRecommendPlayerRspRetcode" = betterproto.enum_field(
        1
    )
    begin_time: int = betterproto.uint32_field(2)
    group_level: int = betterproto.uint32_field(3)
    rank_data: "RankShowData" = betterproto.message_field(4)
    endless_type: "EndlessType" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class GetWeeklyReportExBossRecommendPlayerReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    rank_reward_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetWeeklyReportExBossRecommendPlayerRsp(betterproto.Message):
    retcode: "GetWeeklyReportExBossRecommendPlayerRspRetcode" = betterproto.enum_field(
        1
    )
    schedule_id: int = betterproto.uint32_field(2)
    rank_reward_id: int = betterproto.uint32_field(3)
    rank_data: "RankShowData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetWeeklyReportReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetWeeklyReportRsp(betterproto.Message):
    retcode: "GetWeeklyReportRspRetcode" = betterproto.enum_field(1)
    ex_boss_data_list: List["WeeklyReportExBoss"] = betterproto.message_field(2)
    endless_data_list: List["WeeklyReportEndless"] = betterproto.message_field(3)
    ultra_endless_list: List["WeeklyReportUltraEndless"] = betterproto.message_field(4)
    block_zone: "WeeklyReportBlockZone" = betterproto.message_field(5)
    target_uid: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GetWeeklyReportUltraEndlessRecommendPlayerReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    group_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetWeeklyReportUltraEndlessRecommendPlayerRsp(betterproto.Message):
    retcode: "GetWeeklyReportUltraEndlessRecommendPlayerRspRetcode" = (
        betterproto.enum_field(1)
    )
    schedule_id: int = betterproto.uint32_field(2)
    group_id: int = betterproto.uint32_field(3)
    rank_data: "RankShowData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetWeeklyRoutineActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetWeeklyRoutineActivityRsp(betterproto.Message):
    retcode: "GetWeeklyRoutineActivityRspRetcode" = betterproto.enum_field(1)
    cur_schedule_id: int = betterproto.uint32_field(2)
    weekly_routine_mission_list: List[
        "WeeklyRoutineMission"
    ] = betterproto.message_field(3)
    has_take_routine_reward_id_list: List[int] = betterproto.uint32_field(4)
    weekly_routine_contribution: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetWikiDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetWikiDataRsp(betterproto.Message):
    retcode: "GetWikiDataRspRetcode" = betterproto.enum_field(1)
    has_take_rating_reward_list: List[int] = betterproto.uint32_field(2)
    has_take_activity_suit_reward_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetWorldMapDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetWorldMapDataRsp(betterproto.Message):
    retcode: "GetWorldMapDataRspRetcode" = betterproto.enum_field(1)
    world_map_list: List["WorldMapData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GlobalPollingGetDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GlobalPollingGetDataRsp(betterproto.Message):
    retcode: "GlobalPollingGetDataRspRetcode" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    last_support_time: int = betterproto.uint32_field(3)
    support_target_id: int = betterproto.uint32_field(4)
    vote_begin_time: int = betterproto.uint32_field(5)
    target_data_list: List["GlobalPollingTargetData"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class GlobalPollingSupportReq(betterproto.Message):
    target_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GlobalPollingSupportRsp(betterproto.Message):
    retcode: "GlobalPollingSupportRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class GlobalPollingTargetData(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    score_u64: int = betterproto.uint64_field(2)
    vote_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GlobalPollingVoteReq(betterproto.Message):
    target_id: int = betterproto.uint32_field(1)
    num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GlobalPollingVoteRsp(betterproto.Message):
    retcode: "GlobalPollingVoteRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class GlobalShopGoodsInfoNotify(betterproto.Message):
    shop_goods_list: List["ShopGoodsInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GlobalWarActivity(betterproto.Message):
    cur_schedule_id: int = betterproto.uint32_field(1)
    display_begin_time: int = betterproto.uint32_field(2)
    display_end_time: int = betterproto.uint32_field(3)
    begin_time: int = betterproto.uint32_field(4)
    end_time: int = betterproto.uint32_field(5)
    total_get_currency: int = betterproto.uint32_field(6)
    last_daily_get_currency: int = betterproto.uint32_field(7)
    total_cost_ticket_num: int = betterproto.uint32_field(8)
    take_point_reward_list: List[int] = betterproto.uint32_field(9)
    global_war_point_list: List["GlobalWarPoint"] = betterproto.message_field(10)
    member_list: List["GlobalWarMember"] = betterproto.message_field(11)
    buff_level: int = betterproto.uint32_field(13)
    global_war_isolate_point_list: List[
        "GlobalWarIsolatePoint"
    ] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class GlobalWarAddCurrencyNotify(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)
    global_war_member: "GlobalWarMember" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GlobalWarExchangeCurrencyReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GlobalWarExchangeCurrencyRsp(betterproto.Message):
    retcode: "GlobalWarExchangeCurrencyRspRetcode" = betterproto.enum_field(1)
    add_currency_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GlobalWarGetRankReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GlobalWarGetRankRsp(betterproto.Message):
    retcode: "GlobalWarGetRankRspRetcode" = betterproto.enum_field(1)
    point_id: int = betterproto.uint32_field(2)
    rank_data: "RankShowData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GlobalWarIsolatePoint(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)
    point_status: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GlobalWarMember(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    level: int = betterproto.uint32_field(3)
    head_avatar_id: int = betterproto.uint32_field(4)
    frame_id: int = betterproto.uint32_field(5)
    dress_id: int = betterproto.uint32_field(6)
    custom_head_id: int = betterproto.uint32_field(7)
    global_war_point_id: int = betterproto.uint32_field(8)
    global_war_add_currency: int = betterproto.uint32_field(9)
    global_war_add_time: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GlobalWarPoint(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)
    cur_hp: int = betterproto.uint32_field(2)
    point_status: int = betterproto.uint32_field(3)
    last_refresh_member_num: int = betterproto.uint32_field(4)
    point_finish_time: int = betterproto.uint32_field(5)
    last_take_sweep_reward_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GlobalWarTakePointRewardReq(betterproto.Message):
    point_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GlobalWarTakePointRewardRsp(betterproto.Message):
    retcode: "GlobalWarTakePointRewardRspRetcode" = betterproto.enum_field(1)
    point_id_list: List[int] = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GlobalWarTakeSweepRewardReq(betterproto.Message):
    point_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GlobalWarTakeSweepRewardRsp(betterproto.Message):
    retcode: "GlobalWarTakeSweepRewardRspRetcode" = betterproto.enum_field(1)
    sweep_currency_list: List["SweepCurrency"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GmTalkReq(betterproto.Message):
    msg: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class GmTalkRsp(betterproto.Message):
    retcode: "GmTalkRspRetcode" = betterproto.enum_field(1)
    msg: str = betterproto.string_field(2)
    retmsg: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class GobackActivity(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GobackActivityLoginReward(betterproto.Message):
    take_days: int = betterproto.uint32_field(1)
    take_reward_list: List[int] = betterproto.uint32_field(2)
    take_bonus_reward_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GobackFund(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    is_unlocked: bool = betterproto.bool_field(2)
    has_take_reward_progress_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GobackGrowUpActivity(betterproto.Message):
    joined_rank_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GodWar(betterproto.Message):
    god_war_id: int = betterproto.uint32_field(1)
    tale_list: List["GodWarTale"] = betterproto.message_field(2)
    begin_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)
    talent_list: List["GodWarTalent"] = betterproto.message_field(5)
    max_support_point: int = betterproto.uint32_field(6)
    lobby_id: int = betterproto.uint32_field(9)
    chapter_list: List["GodWarChapter"] = betterproto.message_field(14)
    cur_chapter_id: int = betterproto.uint32_field(15)
    role_info: "GodWarRoleInfo" = betterproto.message_field(16)


@dataclass(eq=False, repr=False)
class GodWarAvatarExpUp(betterproto.Message):
    begin_time: int = betterproto.uint32_field(1)
    end_time: int = betterproto.uint32_field(2)
    avatar_id_list: List[int] = betterproto.uint32_field(3)
    up_ratio: int = betterproto.uint32_field(4)
    schedule_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GodWarBonus(betterproto.Message):
    bonus_id: int = betterproto.uint32_field(1)
    count_down: int = betterproto.uint32_field(2)
    buff: "GodWarBuff" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GodWarBuff(betterproto.Message):
    buff_id: int = betterproto.uint32_field(1)
    buff_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GodWarChallenge(betterproto.Message):
    is_challenge_fail: bool = betterproto.bool_field(1)
    avatar_list: List["GodWarChallengeAvatar"] = betterproto.message_field(2)
    support_avatar_id_list: List[int] = betterproto.uint32_field(3)
    elf_id: int = betterproto.uint32_field(4)
    extra_item_id: int = betterproto.uint32_field(5)
    refresh_teleport_times: int = betterproto.uint32_field(6)
    punish_buff_list: List["GodWarPunishBuff"] = betterproto.message_field(7)
    challenge_score: int = betterproto.uint32_field(8)
    random_seed: int = betterproto.uint32_field(9)
    step_level: int = betterproto.uint32_field(10)
    punish_buff_id_list: List[int] = betterproto.uint32_field(11)
    is_use_virtual_avatar: bool = betterproto.bool_field(12)
    boon_buff_id_list: List[int] = betterproto.uint32_field(13)
    gain_coin_num: int = betterproto.uint32_field(14)
    refresh_teleport_times_limit: int = betterproto.uint32_field(15)
    assistant_extra_item_id: int = betterproto.uint32_field(16)
    bonus_list: List["GodWarBonus"] = betterproto.message_field(17)


@dataclass(eq=False, repr=False)
class GodWarChallengeAvatar(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    hp_percent: int = betterproto.uint32_field(2)
    is_virtual: bool = betterproto.bool_field(3)
    weapon_id: int = betterproto.uint32_field(4)
    weapon_level: int = betterproto.uint32_field(5)
    stigmata_1: "GodWarChallengeStigmata" = betterproto.message_field(6)
    stigmata_2: "GodWarChallengeStigmata" = betterproto.message_field(7)
    stigmata_3: "GodWarChallengeStigmata" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class GodWarChallengeHistory(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    is_challenge_succ: bool = betterproto.bool_field(2)
    max_punish_level: int = betterproto.uint32_field(3)
    pass_step_level_list: List[int] = betterproto.uint32_field(4)
    max_challenge_score: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GodWarChallengeStigmata(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    rune_list: List["StigmataRune"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GodWarChapter(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)
    is_locked: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class GodWarOverall(betterproto.Message):
    overall_id: int = betterproto.uint32_field(1)
    overall_val: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GodWarPunishBuff(betterproto.Message):
    buff_id: int = betterproto.uint32_field(1)
    buff_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GodWarRoleInfo(betterproto.Message):
    role_relation_list: List["GodWarRoleRelation"] = betterproto.message_field(1)
    avatar_exp_up: "GodWarAvatarExpUp" = betterproto.message_field(2)
    main_avatar_id_list: List[int] = betterproto.uint32_field(3)
    support_avatar_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GodWarRoleRelation(betterproto.Message):
    role_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    exp: int = betterproto.uint32_field(3)
    reward_has_take_level: int = betterproto.uint32_field(4)
    reward_has_take_story_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GodWarSite(betterproto.Message):
    site_id: int = betterproto.uint32_field(1)
    site_status: "GodWarSiteStatus" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class GodWarStatus(betterproto.Message):
    teleport_id: int = betterproto.uint32_field(1)
    is_abandon: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GodWarSwitchData(betterproto.Message):
    god_war_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GodWarTale(betterproto.Message):
    """import "GodWarSite.proto";"""

    tale_id: int = betterproto.uint32_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    # repeated GodWarSite site_list = 3;
    cur_site_id: int = betterproto.uint32_field(4)
    begin_time: int = betterproto.uint32_field(5)
    end_time: int = betterproto.uint32_field(6)
    challenge: "GodWarChallenge" = betterproto.message_field(7)
    buff_list: List["GodWarBuff"] = betterproto.message_field(8)
    avatar_schedule_id: int = betterproto.uint32_field(9)
    challenge_history_list: List["GodWarChallengeHistory"] = betterproto.message_field(
        10
    )
    is_locked: bool = betterproto.bool_field(11)
    overall_list: List["GodWarOverall"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class GodWarTalent(betterproto.Message):
    talent_id: int = betterproto.uint32_field(1)
    talent_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class Goods(betterproto.Message):
    goods_id: int = betterproto.uint32_field(1)
    buy_times: int = betterproto.uint32_field(2)
    can_be_refresh: bool = betterproto.bool_field(3)
    refresh_time_type: "GoodsRefreshTimeType" = betterproto.enum_field(4)
    is_backpack_restrict: bool = betterproto.bool_field(5)
    begin_time: int = betterproto.uint32_field(6)
    end_time: int = betterproto.uint32_field(7)
    show_type: "GoodsShowType" = betterproto.enum_field(8)
    unlock_tips: str = betterproto.string_field(9)
    prepare_time: int = betterproto.uint32_field(10)
    sort_id: int = betterproto.uint32_field(11)
    product_name: str = betterproto.string_field(12)
    product_id: int = betterproto.uint32_field(13)
    product_price: int = betterproto.uint32_field(14)
    show_setting_str: str = betterproto.string_field(15)
    show_new_tag: int = betterproto.uint32_field(16)
    mall_anchor_list: List[int] = betterproto.uint32_field(17)
    is_ignore: bool = betterproto.bool_field(18)
    unlock_type: int = betterproto.uint32_field(19)
    unlock_para_int: int = betterproto.uint32_field(20)
    unlock_para_str: str = betterproto.string_field(21)
    prepare_level: int = betterproto.uint32_field(22)
    min_level: int = betterproto.uint32_field(23)
    max_level: int = betterproto.uint32_field(24)
    discount: "GoodsDiscount" = betterproto.message_field(25)
    is_popup: bool = betterproto.bool_field(26)
    is_hide_price: bool = betterproto.bool_field(27)


@dataclass(eq=False, repr=False)
class GoodsDiscount(betterproto.Message):
    begin_time: int = betterproto.uint32_field(1)
    end_time: int = betterproto.uint32_field(2)
    discount: int = betterproto.uint32_field(3)
    goods_cost: "BuyGoodsCost" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GrandKey(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    end_time: int = betterproto.uint32_field(2)
    unlock_level: int = betterproto.uint32_field(3)
    scoin_num: int = betterproto.uint32_field(4)
    level: int = betterproto.uint32_field(5)
    breach_level: int = betterproto.uint32_field(6)
    activate_level: int = betterproto.uint32_field(7)
    skill: "GrandKeySkill" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class GrandKeyActivateSkillReq(betterproto.Message):
    key_list: List["GrandKeySkill"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GrandKeyActivateSkillRsp(betterproto.Message):
    retcode: "GrandKeyActivateSkillRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class GrandKeyBreachReq(betterproto.Message):
    key_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GrandKeyBreachRsp(betterproto.Message):
    retcode: "GrandKeyBreachRspRetcode" = betterproto.enum_field(1)
    key_id: int = betterproto.uint32_field(2)
    breach_level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GrandKeyContrastReq(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GrandKeyContrastRsp(betterproto.Message):
    retcode: "GrandKeyContrastRspRetcode" = betterproto.enum_field(1)
    unique_id: int = betterproto.uint32_field(2)
    unique_id_after: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GrandKeyLevelUpReq(betterproto.Message):
    key_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GrandKeyLevelUpRsp(betterproto.Message):
    retcode: "GrandKeyLevelUpRspRetcode" = betterproto.enum_field(1)
    key_id: int = betterproto.uint32_field(2)
    level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GrandKeyResetReq(betterproto.Message):
    key_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GrandKeyResetRsp(betterproto.Message):
    retcode: "GrandKeyResetRspRetcode" = betterproto.enum_field(1)
    key_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GrandKeySetSkillReq(betterproto.Message):
    key_list: List["GrandKeySkill"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GrandKeySetSkillRsp(betterproto.Message):
    retcode: "GrandKeySetSkillRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class GrandKeySkill(betterproto.Message):
    key_id: int = betterproto.uint32_field(1)
    skill_id: int = betterproto.uint32_field(2)
    last_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GrantOuterRewardNotify(betterproto.Message):
    event_type: int = betterproto.uint32_field(1)
    event_id: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)
    ticket: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class GratuityBattle(betterproto.Message):
    stage_unique_id: int = betterproto.uint32_field(1)
    player_info: "GratuityPlayer" = betterproto.message_field(2)
    damage: int = betterproto.uint32_field(3)
    stage_begin_time: int = betterproto.uint32_field(4)
    is_bonus: bool = betterproto.bool_field(5)
    stage_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GratuityMonster(betterproto.Message):
    monster_id: int = betterproto.uint32_field(1)
    left_hp: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GratuityPlayer(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    cost_hp: int = betterproto.uint32_field(3)
    frame_id: int = betterproto.uint32_field(4)
    custom_head_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GratuityPlayerInfo(betterproto.Message):
    nickname: str = betterproto.string_field(1)
    level: int = betterproto.uint32_field(2)
    frame_id: int = betterproto.uint32_field(3)
    custom_head_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GratuityStage(betterproto.Message):
    stage_unique_id: int = betterproto.uint32_field(1)
    expire_time: int = betterproto.uint32_field(2)
    accept_uid: int = betterproto.uint32_field(3)
    stage_id: int = betterproto.uint32_field(4)
    stage_group: int = betterproto.uint32_field(5)
    monster_list: List["GratuityMonster"] = betterproto.message_field(6)
    player_list: List["GratuityPlayer"] = betterproto.message_field(7)
    publish_time: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GratuityStageFinishNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    stage: "GratuityStage" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GratuityStageInviteNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    stage: "GratuityStage" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GratuityStageMessage(betterproto.Message):
    message_type: "GratuityStageMessageMessageType" = betterproto.enum_field(1)
    from_uid: int = betterproto.uint32_field(2)
    monster_damage_list: List[
        "GratuityStageMessageMonsterDamage"
    ] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GratuityStageMessageMonsterDamage(betterproto.Message):
    monster_id: int = betterproto.uint32_field(1)
    cost_hp: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GratuityStageMeta(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    stage_group: int = betterproto.uint32_field(2)
    expire_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GreedyEndless(betterproto.Message):
    is_need_enroll: bool = betterproto.bool_field(1)
    floor_config_id: int = betterproto.uint32_field(2)
    reward_config_id: int = betterproto.uint32_field(3)
    cur_floor: int = betterproto.uint32_field(4)
    max_finish_floor: int = betterproto.uint32_field(5)
    finish_challenge_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GreedyEndlessEnrollReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GreedyEndlessEnrollRsp(betterproto.Message):
    retcode: "GreedyEndlessEnrollRspRetcode" = betterproto.enum_field(1)
    new_group_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GreedyEndlessFloorRewardNotify(betterproto.Message):
    reward_data: "RewardData" = betterproto.message_field(1)
    max_finish_floor: int = betterproto.uint32_field(2)
    finish_challenge_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GreedyEndlessGetRankReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GreedyEndlessGetRankRsp(betterproto.Message):
    retcode: "GreedyEndlessGetRankRspRetcode" = betterproto.enum_field(1)
    rank_data: "RankShowData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GreedyEndlessReportFloorBeginReq(betterproto.Message):
    floor: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GreedyEndlessReportFloorBeginRsp(betterproto.Message):
    retcode: "GreedyEndlessReportFloorBeginRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class GreedyEndlessReportFloorEndReq(betterproto.Message):
    floor: int = betterproto.uint32_field(1)
    finish_challenge_id_list: List[int] = betterproto.uint32_field(3)
    score: int = betterproto.uint32_field(4)
    extra_score: int = betterproto.uint32_field(5)
    lineup_info: "LineupBriefInfo" = betterproto.message_field(6)
    stage_cost_time: int = betterproto.uint32_field(7)
    end_status: "StageEndStatus" = betterproto.enum_field(8)
    cheat_data_list: List["StageCheatData"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class GreedyEndlessReportFloorEndRsp(betterproto.Message):
    retcode: "GreedyEndlessReportFloorEndRspRetcode" = betterproto.enum_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)
    next_floor: int = betterproto.uint32_field(3)
    max_finish_floor: int = betterproto.uint32_field(4)
    total_score: int = betterproto.uint32_field(5)
    finish_challenge_id_list: List[int] = betterproto.uint32_field(6)
    max_score_lineup_info: "LineupBriefInfo" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class GreedyEndlessTakeRankRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GreedyEndlessTakeRankRewardRsp(betterproto.Message):
    retcode: "GreedyEndlessTakeRankRewardRspRetcode" = betterproto.enum_field(1)
    group_level: int = betterproto.uint32_field(2)
    rank_percent: int = betterproto.uint32_field(3)
    reward_data: "RewardData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GroupChatParam(betterproto.Message):
    chatgroup_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class HcoinGachaData(betterproto.Message):
    ticket_hcoin_cost: int = betterproto.uint32_field(2)
    ticket_material_id: int = betterproto.uint32_field(3)
    wish_well_data: "WishWellData" = betterproto.message_field(7)
    shining_type: int = betterproto.uint32_field(8)
    gacha_panel_type: int = betterproto.uint32_field(9)
    protect_type_id: int = betterproto.uint32_field(10)
    protect_left_times: int = betterproto.uint32_field(11)
    protect_display_info: "GachaProtectDisplayInfo" = betterproto.message_field(12)
    display_max_times: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class HexieSwitchData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HistoryPrivateChatMsg(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    chat_msg_list: List["ChatMsg"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ImpeachDanmakuReq(betterproto.Message):
    danmaku_slot: int = betterproto.uint32_field(1)
    sender_uid: int = betterproto.uint32_field(2)
    danmaku_id: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class ImpeachDanmakuRsp(betterproto.Message):
    retcode: "ImpeachDanmakuRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class InheritStigmataTitleReq(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class InheritStigmataTitleRsp(betterproto.Message):
    retcode: "InheritStigmataTitleRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class InitRogueStageReq(betterproto.Message):
    hard_level: int = betterproto.uint32_field(1)
    avatar_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class InitRogueStageRsp(betterproto.Message):
    retcode: "InitRogueStageRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class InLevelActorSnapshot(betterproto.Message):
    avatar_snapshot: "InLevelAvatarActorSnapshot" = betterproto.message_field(1)
    monster_snapshot: "InLevelMonsterActorSnapshot" = betterproto.message_field(2)
    base_snapshot: "InLevelBaseActorSnapshot" = betterproto.message_field(3)
    property_list: List["InLevelEntityProperty"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class InLevelAttackDataSnapshot(betterproto.Message):
    attacker_ani_damage_ratio: float = betterproto.float_field(1)
    attacker_class: int = betterproto.uint32_field(2)
    attacker_nature: int = betterproto.uint32_field(3)
    attacker_category: int = betterproto.uint32_field(4)
    attacker_crit_chance: float = betterproto.float_field(5)
    attacker_crit_damage_ratio: float = betterproto.float_field(6)
    attacker_level: int = betterproto.uint32_field(7)
    attacker_shield_damage_ratio: float = betterproto.float_field(8)
    attacker_shield_damage_delta: float = betterproto.float_field(9)
    attacker_attack_percentage: float = betterproto.float_field(10)
    attacker_attack_value: float = betterproto.float_field(11)
    added_attack_ratio: float = betterproto.float_field(12)
    added_damage_ratio: float = betterproto.float_field(13)
    added_damage_ratio2: float = betterproto.float_field(14)
    attacker_added_attack_value: float = betterproto.float_field(15)
    attacker_all_damage_reduce_ratio: float = betterproto.float_field(16)
    attacker_fire_damage: float = betterproto.float_field(17)
    attacker_fire_damage_percentage: float = betterproto.float_field(18)
    added_attacker_fire_damage_ratio: float = betterproto.float_field(19)
    attacker_thunder_damage: float = betterproto.float_field(20)
    attacker_thunder_damage_percentage: float = betterproto.float_field(21)
    added_attacker_thunder_damage_ratio: float = betterproto.float_field(22)
    attacker_ice_damage: float = betterproto.float_field(23)
    attacker_ice_damage_percentage: float = betterproto.float_field(24)
    added_attacker_ice_damage_ratio: float = betterproto.float_field(25)
    attackee_ani_defence_ratio: float = betterproto.float_field(26)
    attackee_nature: int = betterproto.uint32_field(27)
    attackee_class: int = betterproto.uint32_field(28)
    attackee_added_damage_take_ratio: float = betterproto.float_field(29)
    attackee_normal_damage_taken_ratio: float = betterproto.float_field(30)
    attackee_fire_damage_taken_ratio: float = betterproto.float_field(31)
    attackee_ice_damage_taken_ratio: float = betterproto.float_field(32)
    attackee_thunder_damage_taken_ratio: float = betterproto.float_field(33)
    fire_damage: float = betterproto.float_field(34)
    thunder_damage: float = betterproto.float_field(35)
    ice_damage: float = betterproto.float_field(36)
    ani_damage_ratio: float = betterproto.float_field(37)
    retreat_velocity: float = betterproto.float_field(38)
    frame_halt: int = betterproto.uint32_field(39)
    is_anim_event_attack: bool = betterproto.bool_field(40)
    is_in_combo_count: bool = betterproto.bool_field(41)
    attack_category_tag: int = betterproto.uint32_field(42)
    hit_type: int = betterproto.uint32_field(43)
    hit_flag: int = betterproto.uint32_field(44)
    hit_level: int = betterproto.uint32_field(45)
    hit_effect: int = betterproto.uint32_field(46)
    hit_effect_aux: int = betterproto.uint32_field(47)
    added_attack_ratio2: float = betterproto.float_field(48)
    added_attacker_fire_damage_ratio2: float = betterproto.float_field(49)
    added_attacker_thunder_damage_ratio2: float = betterproto.float_field(50)
    added_attacker_ice_damage_ratio2: float = betterproto.float_field(51)
    added_attacker_burn_damage_ratio: float = betterproto.float_field(52)
    added_attacker_burn_damage_ratio2: float = betterproto.float_field(53)
    added_attacker_burn_damage_delta: float = betterproto.float_field(54)
    added_attacker_bleed_damage_ratio: float = betterproto.float_field(55)
    added_attacker_bleed_damage_ratio2: float = betterproto.float_field(56)
    added_attacker_bleed_damage_delta: float = betterproto.float_field(57)


@dataclass(eq=False, repr=False)
class InLevelAttackSnapshot(betterproto.Message):
    time: int = betterproto.uint32_field(1)
    attack_data_created: "InLevelAttackDataSnapshot" = betterproto.message_field(2)
    attack_data_resoved: "InLevelAttackDataSnapshot" = betterproto.message_field(3)
    actor_list: List["InLevelActorSnapshot"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class InLevelAttackSnapshotInfo(betterproto.Message):
    context: "InLevelContext" = betterproto.message_field(1)
    snapshot_list: List["InLevelAttackSnapshot"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class InLevelAvatarActorSnapshot(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    skill_list: List["InLevelAvatarSkillInfo"] = betterproto.message_field(2)
    weapon_id: int = betterproto.uint32_field(3)
    weapon_level: int = betterproto.uint32_field(4)
    stigmata_1_id: int = betterproto.uint32_field(5)
    stigmata_1_level: int = betterproto.uint32_field(6)
    stigmata_2_id: int = betterproto.uint32_field(7)
    stigmata_2_level: int = betterproto.uint32_field(8)
    stigmata_3_id: int = betterproto.uint32_field(9)
    stigmata_3_level: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class InLevelAvatarSkillInfo(betterproto.Message):
    skill_name: str = betterproto.string_field(1)
    cd: float = betterproto.float_field(2)
    cost_sp: float = betterproto.float_field(3)
    need_sp: float = betterproto.float_field(4)
    cd_timer: float = betterproto.float_field(5)
    max_charges_count: int = betterproto.uint32_field(6)
    charges_counter: int = betterproto.uint32_field(7)
    can_hold: bool = betterproto.bool_field(8)
    instant_trigger_anim_event_id: str = betterproto.string_field(9)


@dataclass(eq=False, repr=False)
class InLevelBaseActorSnapshot(betterproto.Message):
    base_max_hp: float = betterproto.float_field(1)
    base_max_sp: float = betterproto.float_field(2)
    max_hp: float = betterproto.float_field(3)
    max_sp: float = betterproto.float_field(4)
    hp: float = betterproto.float_field(5)
    sp: float = betterproto.float_field(6)
    level: int = betterproto.uint32_field(7)
    attack: float = betterproto.float_field(8)
    defense: float = betterproto.float_field(9)
    is_alive: bool = betterproto.bool_field(10)
    total_overkill_damage: float = betterproto.float_field(11)


@dataclass(eq=False, repr=False)
class InLevelContext(betterproto.Message):
    type: "InLevelContextContextType" = betterproto.enum_field(1)
    context_string: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class InLevelEntityProperty(betterproto.Message):
    name: str = betterproto.string_field(1)
    value: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class InLevelMonsterActorSnapshot(betterproto.Message):
    monster_name: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class InviteActivityAcceptInviteReq(betterproto.Message):
    invite_code: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class InviteActivityAcceptInviteRsp(betterproto.Message):
    retcode: "InviteActivityAcceptInviteRspRetcode" = betterproto.enum_field(1)
    invite_uid: int = betterproto.uint32_field(2)
    invite_type: "InviteeActivityType" = betterproto.enum_field(3)
    reward_data: "RewardData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class InviteActivityData(betterproto.Message):
    begin_time: int = betterproto.uint32_field(1)
    end_time: int = betterproto.uint32_field(2)
    has_invite_num: int = betterproto.uint32_field(3)
    my_invite_reward_list: List["InviteFriendRewardData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class InviteActivitySwitchData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class InviteChatgroupReq(betterproto.Message):
    chatgroup_id: int = betterproto.uint32_field(1)
    friend_list: List[int] = betterproto.uint32_field(2)
    master_pupil_list: List[int] = betterproto.uint32_field(3)
    stranger_uid_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class InviteChatgroupRsp(betterproto.Message):
    retcode: "InviteChatgroupRspRetcode" = betterproto.enum_field(1)
    succ_uid_list: List[int] = betterproto.uint32_field(2)
    succ_stranger_uid_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class InviteeActivity(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    activity_type: "InviteeActivityType" = betterproto.enum_field(2)
    taken_invitee_reward_id: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class InviteeFriendRewardData(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class InviteFriendRewardData(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    cur_num: int = betterproto.uint32_field(2)
    max_num: int = betterproto.uint32_field(3)
    reward_list: List["RewardData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class InviterActivity(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    invite_num: int = betterproto.uint32_field(2)
    taken_reward_progress: int = betterproto.uint32_field(3)
    accept_invite_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class InviteRoomReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class InviteRoomRsp(betterproto.Message):
    retcode: "InviteRoomRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class InviteToMultiChatgroupReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)
    chatgroup_id_list: List[int] = betterproto.uint32_field(2)
    is_has_relation: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class InviteToMultiChatgroupRsp(betterproto.Message):
    retcode: "InviteToMultiChatgroupRspRetcode" = betterproto.enum_field(1)
    target_uid: int = betterproto.uint32_field(2)
    chatgroup_id_list: List[int] = betterproto.uint32_field(3)
    is_stranger: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class IslandAvatarPos(betterproto.Message):
    avatar_class: int = betterproto.uint32_field(1)
    pos_type: int = betterproto.uint32_field(2)
    event_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class IslandDisjoinEquipmentReq(betterproto.Message):
    type: "EquipmentType" = betterproto.enum_field(1)
    unique_id_list: List[int] = betterproto.uint32_field(2)
    disjoin_type: "DisjoinType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class IslandDisjoinEquipmentRsp(betterproto.Message):
    retcode: "IslandDisjoinEquipmentRspRetcode" = betterproto.enum_field(1)
    disjoin_unique_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class IslandStorySweepData(betterproto.Message):
    sweep_id: int = betterproto.uint32_field(1)
    over_time: int = betterproto.uint32_field(2)
    is_finished: bool = betterproto.bool_field(3)
    is_sieged: bool = betterproto.bool_field(4)
    avatar_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class IslandVenture(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    end_time: int = betterproto.uint32_field(2)
    avatar_id: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class IslandVisitRecord(betterproto.Message):
    record_type: "IslandVisitRecordType" = betterproto.enum_field(1)
    visit_time: int = betterproto.uint32_field(2)
    visit_uid: int = betterproto.uint32_field(3)
    visit_event_id: int = betterproto.uint32_field(4)
    reward_list: List["RewardData"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ItemUseSwitchData(betterproto.Message):
    use_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class JigsawBlockData(betterproto.Message):
    block_id: int = betterproto.uint32_field(1)
    piece_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class JigsawData(betterproto.Message):
    jigsaw_id: int = betterproto.uint32_field(1)
    block_list: List["JigsawBlockData"] = betterproto.message_field(2)
    waiting_piece_id_list: List[int] = betterproto.uint32_field(3)
    taken_reward_group_id_list: List[int] = betterproto.uint32_field(4)
    is_finish_reward_taken: bool = betterproto.bool_field(5)
    is_finished: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class JigsawExchangePieceReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    jigsaw_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class JigsawExchangePieceRsp(betterproto.Message):
    retcode: "JigsawExchangePieceRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    jigsaw_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class JigsawMovePieceInJigsawAreaReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    jigsaw_id: int = betterproto.uint32_field(2)
    source_x: int = betterproto.uint32_field(3)
    source_y: int = betterproto.uint32_field(4)
    target_x: int = betterproto.uint32_field(5)
    target_y: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class JigsawMovePieceInJigsawAreaRsp(betterproto.Message):
    retcode: "JigsawMovePieceInJigsawAreaRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    jigsaw_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class JigsawMoveWaitingPieceReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    jigsaw_id: int = betterproto.uint32_field(2)
    target_x: int = betterproto.uint32_field(3)
    target_y: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class JigsawMoveWaitingPieceRsp(betterproto.Message):
    retcode: "JigsawMoveWaitingPieceRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    jigsaw_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class JigsawTakeFinishRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    jigsaw_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class JigsawTakeFinishRewardRsp(betterproto.Message):
    retcode: "JigsawTakeFinishRewardRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    jigsaw_id: int = betterproto.uint32_field(3)
    reward: "RewardData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class JigsawTakeGroupRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    jigsaw_id: int = betterproto.uint32_field(2)
    group_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class JigsawTakeGroupRewardRsp(betterproto.Message):
    retcode: "JigsawTakeGroupRewardRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    jigsaw_id: int = betterproto.uint32_field(3)
    group_id: int = betterproto.uint32_field(4)
    reward: "RewardData" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class JiguangClientTag(betterproto.Message):
    tag_type: "JiguangTagType" = betterproto.enum_field(1)
    para_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class JiguangUpdateTagReq(betterproto.Message):
    add_tag_list: List["JiguangClientTag"] = betterproto.message_field(1)
    del_tag_list: List["JiguangClientTag"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class JiguangUpdateTagRsp(betterproto.Message):
    retcode: "JiguangUpdateTagRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class JoinArmadaElectionReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class JoinArmadaElectionRsp(betterproto.Message):
    retcode: "JoinArmadaElectionRspRetcode" = betterproto.enum_field(1)
    impeach_data: "ArmadaImpeachData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class JoinQuitArmadaNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    armada_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class KeepAliveNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class KickArmadaMemberReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class KickArmadaMemberRsp(betterproto.Message):
    retcode: "KickArmadaMemberRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class KickChatgroupMemberReq(betterproto.Message):
    chatgroup_id: int = betterproto.uint32_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class KickChatgroupMemberRsp(betterproto.Message):
    retcode: "KickChatgroupMemberRspRetcode" = betterproto.enum_field(1)
    chatgroup_id: int = betterproto.uint32_field(2)
    target_uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class KickLobbyMemberReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class KickLobbyMemberRsp(betterproto.Message):
    retcode: "KickLobbyMemberRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class KickOutPlayerNotify(betterproto.Message):
    reason: "KickOutPlayerNotifyKickOutReason" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class KingdomWarData(betterproto.Message):
    phase_list: List["KingdomWarPhase"] = betterproto.message_field(1)
    kingdom_list: List["KingdomWarKingdom"] = betterproto.message_field(2)
    cur_phase: int = betterproto.uint32_field(3)
    is_over: bool = betterproto.bool_field(4)
    has_take_max_score: int = betterproto.uint32_field(5)
    has_get_currency_num: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class KingdomWarExchangeCurrencyReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class KingdomWarExchangeCurrencyRsp(betterproto.Message):
    retcode: "KingdomWarExchangeCurrencyRspRetcode" = betterproto.enum_field(1)
    point_id: int = betterproto.uint32_field(2)
    currency_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class KingdomWarGetPointRankReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)
    kingdom_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class KingdomWarGetPointRankRsp(betterproto.Message):
    retcode: "KingdomWarGetPointRankRspRetcode" = betterproto.enum_field(1)
    point_id: int = betterproto.uint32_field(2)
    kingdom_id: int = betterproto.uint32_field(3)
    rank_data_list: "RankShowData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class KingdomWarGetRankReq(betterproto.Message):
    kingdom_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class KingdomWarGetRankRsp(betterproto.Message):
    retcode: "KingdomWarGetRankRspRetcode" = betterproto.enum_field(1)
    rank_data: "RankShowData" = betterproto.message_field(2)
    kingdom_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class KingdomWarJoinData(betterproto.Message):
    combat_power: int = betterproto.uint32_field(1)
    last_kingdom_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class KingdomWarKingdom(betterproto.Message):
    kingdom_id: int = betterproto.uint32_field(1)
    player_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class KingdomWarMoveReq(betterproto.Message):
    target_point: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class KingdomWarMoveRsp(betterproto.Message):
    retcode: "KingdomWarMoveRspRetcode" = betterproto.enum_field(1)
    cur_point_id: int = betterproto.uint32_field(2)
    today_step: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class KingdomWarOccupyRecord(betterproto.Message):
    begin_time: int = betterproto.uint32_field(1)
    occupy_point_list: List[int] = betterproto.uint32_field(2)
    player_score: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class KingdomWarPhase(betterproto.Message):
    phase_id: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)
    today_begin_time: int = betterproto.uint32_field(4)
    today_end_time: int = betterproto.uint32_field(5)
    point_list: List["KingdomWarPoint"] = betterproto.message_field(6)
    kingdom_list: List["KingdomWarPhaseKingdomData"] = betterproto.message_field(7)
    player_data: "KingdomWarPhasePlayerData" = betterproto.message_field(8)
    assist_point: int = betterproto.uint32_field(9)
    last_refresh_time: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class KingdomWarPhaseKingdomData(betterproto.Message):
    kingdom_id: int = betterproto.uint32_field(1)
    fame: int = betterproto.uint32_field(2)
    score_u64: int = betterproto.uint64_field(3)
    rank: int = betterproto.uint32_field(4)
    status: int = betterproto.uint32_field(5)
    bonus_point: int = betterproto.uint32_field(6)
    last_fame: int = betterproto.uint32_field(7)
    record_list: List["KingdomWarOccupyRecord"] = betterproto.message_field(8)
    belief: int = betterproto.uint32_field(9)
    last_belief: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class KingdomWarPhasePlayerData(betterproto.Message):
    cur_point_id: int = betterproto.uint32_field(1)
    today_step: int = betterproto.uint32_field(2)
    is_take_phase_reward: bool = betterproto.bool_field(3)
    vote_point: int = betterproto.uint32_field(4)
    yesterday_score: int = betterproto.uint32_field(5)
    today_finish_stage_num: int = betterproto.uint32_field(6)
    last_point_id: int = betterproto.uint32_field(7)
    today_score: int = betterproto.uint32_field(8)
    change_stage_num: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class KingdomWarPoint(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)
    cur_kingdom_id: int = betterproto.uint32_field(2)
    kingdom_list: List["KingdomWarPointKingdomData"] = betterproto.message_field(3)
    score: int = betterproto.uint32_field(4)
    last_kingdom_id: int = betterproto.uint32_field(5)
    finished_num: int = betterproto.uint32_field(6)
    stage_id: int = betterproto.uint32_field(7)
    today_score: int = betterproto.uint32_field(8)
    is_open: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class KingdomWarPointKingdomData(betterproto.Message):
    kingdom_id: int = betterproto.uint32_field(1)
    score_u64: int = betterproto.uint64_field(2)
    vote_score_u64: int = betterproto.uint64_field(3)
    last_score_u64: int = betterproto.uint64_field(4)
    player_num: int = betterproto.uint32_field(5)
    recent_player_list: List[
        "KingdomWarPointKingdomDataKingdomPlayer"
    ] = betterproto.message_field(6)
    last_score_time: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class KingdomWarPointKingdomDataKingdomPlayer(betterproto.Message):
    nick_name: str = betterproto.string_field(1)
    score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class KingdomWarSwitchData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class KingdomWarTakeDailyRewardReq(betterproto.Message):
    kingdom_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class KingdomWarTakeDailyRewardRsp(betterproto.Message):
    retcode: "KingdomWarTakeDailyRewardRspRetcode" = betterproto.enum_field(1)
    record_list: List["KingdomWarOccupyRecord"] = betterproto.message_field(2)
    reward_list: List["RewardData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class KingdomWarVoteReq(betterproto.Message):
    target_point: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class KingdomWarVoteRsp(betterproto.Message):
    retcode: "KingdomWarVoteRspRetcode" = betterproto.enum_field(1)
    target_point: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LeaveChatgroupReq(betterproto.Message):
    chatgroup_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class LeaveChatgroupRsp(betterproto.Message):
    retcode: "LeaveChatgroupRspRetcode" = betterproto.enum_field(1)
    chatgroup_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LeaveChatroomNotify(betterproto.Message):
    new_chatroom_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class LeaveCommonChatworldReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LeaveCommonChatworldRsp(betterproto.Message):
    retcode: "LeaveCommonChatworldRspRetcode" = betterproto.enum_field(1)
    is_kicked: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class LeaveTeamReq(betterproto.Message):
    team_id: int = betterproto.uint32_field(1)
    is_logout: bool = betterproto.bool_field(2)
    is_squeeze: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class LeaveTeamRsp(betterproto.Message):
    retcode: "LeaveTeamRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class LevelUpArmadaCabinReq(betterproto.Message):
    type: "ArmadaCabinType" = betterproto.enum_field(1)
    cabin_id: int = betterproto.uint32_field(2)
    grid_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class LevelUpArmadaCabinRsp(betterproto.Message):
    retcode: "LevelUpArmadaCabinRspRetcode" = betterproto.enum_field(1)
    type: "ArmadaCabinType" = betterproto.enum_field(2)
    cabin_id: int = betterproto.uint32_field(3)
    grid_id: int = betterproto.uint32_field(4)
    level_up_end_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class LevelUpDlcAvatarTalentReq(betterproto.Message):
    talent_id: int = betterproto.uint32_field(1)
    target_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LevelUpDlcAvatarTalentRsp(betterproto.Message):
    retcode: "LevelUpDlcAvatarTalentRspRetcode" = betterproto.enum_field(1)
    talent_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LevelUpDormReq(betterproto.Message):
    house_id: int = betterproto.uint32_field(1)
    target_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LevelUpDormRsp(betterproto.Message):
    retcode: "LevelUpDormRspRetcode" = betterproto.enum_field(1)
    level_up_house_id: int = betterproto.uint32_field(2)
    level_up_end_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class LevelUpRestaurantFacilityReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class LevelUpRestaurantFacilityRsp(betterproto.Message):
    retcode: "LevelUpRestaurantFacilityRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LevelUpScDlcAvatarReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class LevelUpScDlcAvatarRsp(betterproto.Message):
    retcode: "LevelUpScDlcAvatarRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class LevelUpScDlcTalentReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    talent_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LevelUpScDlcTalentRsp(betterproto.Message):
    retcode: "LevelUpScDlcTalentRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class LevelUpStigmataTitleReq(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    consume_item_list: "EquipmentItemList" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class LevelUpStigmataTitleRsp(betterproto.Message):
    retcode: "LevelUpStigmataTitleRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class LikeDormReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class LikeDormRsp(betterproto.Message):
    retcode: "LikeDormRspRetcode" = betterproto.enum_field(1)
    target_uid: int = betterproto.uint32_field(2)
    friends_point: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class LineupBriefInfo(betterproto.Message):
    avatar_info_list: List["AvatarBriefInfo"] = betterproto.message_field(1)
    elf_info_list: List["ElfBriefInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class LobbyEnterFightErrorNotify(betterproto.Message):
    lobby_id: int = betterproto.uint32_field(1)
    retcode: "LobbyEnterFightErrorNotifyRetcode" = betterproto.enum_field(2)
    uid_list: List[int] = betterproto.uint32_field(3)
    sub_retcode: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class LobbyPrepareCountDownNotify(betterproto.Message):
    count_down_time: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class LobbySetClientStatusReq(betterproto.Message):
    status: "LobbyClientStatus" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class LobbySetClientStatusRsp(betterproto.Message):
    retcode: "LobbySetClientStatusRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class LobbyStageBeginReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LobbyStageBeginRsp(betterproto.Message):
    retcode: "LobbyStageBeginRspRetcode" = betterproto.enum_field(1)
    fight_server_ip: str = betterproto.string_field(2)
    fight_server_port: int = betterproto.uint32_field(3)
    lobby_id: int = betterproto.uint32_field(4)
    uid_list: List[int] = betterproto.uint32_field(5)
    leader_uid: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class LobbyStageEndReq(betterproto.Message):
    lobby_id: int = betterproto.uint32_field(1)
    client_data: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LobbyStageEndRsp(betterproto.Message):
    retcode: "LobbyStageEndRspRetcode" = betterproto.enum_field(1)
    lobby_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LobbyStat(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    in_team_player_num_list: List["LobbyTeamPlayerNum"] = betterproto.message_field(2)
    wait_player_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class LobbyTeamPlayerNum(betterproto.Message):
    status: "LobbyStatus" = betterproto.enum_field(1)
    player_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LobbyTimeoutNoLeaderNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LoginActivityData(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    login_days: int = betterproto.uint32_field(2)
    has_take_days_reward_list: List[int] = betterproto.uint32_field(3)
    has_take_days_bonus_reward_list: List[int] = betterproto.uint32_field(4)
    accept_time: int = betterproto.uint32_field(5)
    duration_end_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class LoginMissionActivity(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    has_finished_mission_list: List[int] = betterproto.uint32_field(2)
    unlock_days: int = betterproto.uint32_field(3)
    login_days: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class LoginWish(betterproto.Message):
    login_day: int = betterproto.uint32_field(1)
    wish_id: int = betterproto.uint32_field(2)
    choose_reward_id: int = betterproto.uint32_field(3)
    is_reward_taken: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class LoginWishActivity(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    show_begin_time: int = betterproto.uint32_field(2)
    show_end_time: int = betterproto.uint32_field(3)
    begin_time: int = betterproto.uint32_field(4)
    end_time: int = betterproto.uint32_field(5)
    login_days: int = betterproto.uint32_field(6)
    has_take_reward_login_day_list: List[int] = betterproto.uint32_field(7)
    has_take_reward_special_day_list: List[int] = betterproto.uint32_field(8)
    has_made_wish_list: List["LoginWish"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class LoginWishGetMainDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LoginWishGetMainDataRsp(betterproto.Message):
    retcode: "LoginWishGetMainDataRspRetcode" = betterproto.enum_field(1)
    activity_list: List["LoginWishActivity"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class LoginWishMakeWishReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    login_day: int = betterproto.uint32_field(2)
    choose_reward_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class LoginWishMakeWishRsp(betterproto.Message):
    retcode: "LoginWishMakeWishRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    login_day: int = betterproto.uint32_field(3)
    choose_reward_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class LoginWishTakeLoginRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    login_day: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LoginWishTakeLoginRewardRsp(betterproto.Message):
    retcode: "LoginWishTakeLoginRewardRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    login_day: int = betterproto.uint32_field(3)
    reward_data: "RewardData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class LoginWishTakeSpecialRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    login_day: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LoginWishTakeSpecialRewardRsp(betterproto.Message):
    retcode: "LoginWishTakeSpecialRewardRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    login_day: int = betterproto.uint32_field(3)
    reward_data: "RewardData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class LoginWishTakeWishRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class LoginWishTakeWishRewardRsp(betterproto.Message):
    retcode: "LoginWishTakeWishRewardRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class LotteryData(betterproto.Message):
    lottery_id: int = betterproto.uint32_field(1)
    lottery_number: List[int] = betterproto.uint32_field(2)
    reward_taken_lottery_number: List[int] = betterproto.uint32_field(3)
    draw_number_begin_time: int = betterproto.uint32_field(4)
    draw_number_end_time: int = betterproto.uint32_field(5)
    take_reward_begin_time: int = betterproto.uint32_field(6)
    first_reward_id: int = betterproto.uint32_field(7)
    first_reward_number_str: str = betterproto.string_field(8)
    second_reward_id: int = betterproto.uint32_field(9)
    second_reward_number_str: str = betterproto.string_field(10)
    third_reward_id: int = betterproto.uint32_field(11)
    max_draw_times: int = betterproto.uint32_field(12)
    special_number: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class LotteryDrawNumberReq(betterproto.Message):
    lottery_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class LotteryDrawNumberRsp(betterproto.Message):
    retcode: "LotteryDrawNumberRspRetcode" = betterproto.enum_field(1)
    lottery_id: int = betterproto.uint32_field(2)
    lottery_number: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class LotteryPlayerInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    vip_point: int = betterproto.uint32_field(3)
    vip_level: int = betterproto.uint32_field(4)
    account_type: int = betterproto.uint32_field(5)
    tag: int = betterproto.uint32_field(6)
    first_reward_num: int = betterproto.uint32_field(7)
    is_last_schedule_get_rare_reward: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class LotteryReward(betterproto.Message):
    lottery_id: int = betterproto.uint32_field(1)
    lottery_number: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)
    reward_type: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class LotteryTakeRewardReq(betterproto.Message):
    lottery_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class LotteryTakeRewardRsp(betterproto.Message):
    retcode: "LotteryTakeRewardRspRetcode" = betterproto.enum_field(1)
    lottery_reward_list: List["LotteryReward"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class LotteryUseBoxReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LotteryUseBoxRsp(betterproto.Message):
    retcode: "LotteryUseBoxRspRetcode" = betterproto.enum_field(1)
    get_material_list: List["Material"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class Mail(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    type: "MailType" = betterproto.enum_field(2)
    title: str = betterproto.string_field(3)
    content: str = betterproto.string_field(4)
    sender: str = betterproto.string_field(5)
    time: int = betterproto.uint32_field(6)
    attachment: "MailAttachment" = betterproto.message_field(7)
    is_attachment_got: bool = betterproto.bool_field(8)
    expire_time: int = betterproto.uint32_field(9)
    content_param_list: List[str] = betterproto.string_field(10)


@dataclass(eq=False, repr=False)
class MailAttachment(betterproto.Message):
    item_list: List["MailItem"] = betterproto.message_field(1)
    hcoin: int = betterproto.uint32_field(2)
    scoin: int = betterproto.uint32_field(3)
    stamina: int = betterproto.uint32_field(4)
    exp: int = betterproto.uint32_field(5)
    exp_convert_scoin: int = betterproto.uint32_field(6)
    mcoin: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MailAttachmentTakeSwitchData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MailItem(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    num: int = betterproto.uint32_field(3)
    split_fragment_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MailKey(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    type: "MailType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class MainlineStepMission(betterproto.Message):
    is_update: bool = betterproto.bool_field(1)
    cur_mainline_step_list: List[int] = betterproto.uint32_field(2)
    finished_mainline_step_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ManualRefreshShopReq(betterproto.Message):
    shop_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ManualRefreshShopRsp(betterproto.Message):
    retcode: "ManualRefreshShopRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MapQuestSettleData(betterproto.Message):
    map_id: int = betterproto.uint32_field(1)
    old_level: int = betterproto.uint32_field(2)
    old_star: int = betterproto.uint32_field(3)
    cur_level: int = betterproto.uint32_field(4)
    cur_star: int = betterproto.uint32_field(5)
    sub_star: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class MarkReadClientMailReq(betterproto.Message):
    mail_key: "ClientMailKey" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MarkReadClientMailRsp(betterproto.Message):
    retcode: "MarkReadClientMailRspRetcode" = betterproto.enum_field(1)
    mail_key: "ClientMailKey" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MassiveWarActivity(betterproto.Message):
    cur_schedule_id: int = betterproto.uint32_field(1)
    start_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)
    open_day_time: int = betterproto.uint32_field(4)
    close_day_time: int = betterproto.uint32_field(5)
    battle_times: int = betterproto.uint32_field(6)
    cur_battle_uniq_id: int = betterproto.uint32_field(7)
    stage_info_list: List["MassiveWarStageInfo"] = betterproto.message_field(8)
    player_group_id: int = betterproto.uint32_field(9)
    last_settle_reward_score: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class MassiveWarBattleBeginNotify(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    battle_uniq_id: int = betterproto.uint32_field(2)
    transaction_str: str = betterproto.string_field(3)
    battle_info: "MassiveWarBattleInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class MassiveWarBattleEndNotify(betterproto.Message):
    battle_uniq_id: int = betterproto.uint32_field(1)
    transaction_str: str = betterproto.string_field(2)
    total_damage: int = betterproto.uint32_field(3)
    damage_level: int = betterproto.uint32_field(4)
    rank: int = betterproto.uint32_field(5)
    total_damage_score: int = betterproto.uint32_field(6)
    rank_score: int = betterproto.uint32_field(7)
    basic_damage_score: int = betterproto.uint32_field(8)
    total_member_num: int = betterproto.uint32_field(9)
    battle_cost_time: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class MassiveWarBattleInfo(betterproto.Message):
    battle_begin_time: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(2)
    battle_uniq_id: int = betterproto.uint32_field(3)
    auto_lose_hp_time_id: int = betterproto.uint32_field(4)
    battle_status: int = betterproto.uint32_field(5)
    total_member: int = betterproto.uint32_field(6)
    self_rank: int = betterproto.uint32_field(7)
    self_monster_damage_list: List[
        "MassiveWarMonsterDamage"
    ] = betterproto.message_field(8)
    monster_list: List["MassiveWarBattleMonster"] = betterproto.message_field(9)
    top_member_list: List["MassiveWarBattleMember"] = betterproto.message_field(10)
    monster_hard_level: int = betterproto.uint32_field(11)
    self_buff_progress: int = betterproto.uint32_field(12)
    field_progress: "MassiveWarFieldProgress" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class MassiveWarBattleMember(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    total_damage: int = betterproto.uint32_field(3)
    rank: int = betterproto.uint32_field(4)
    lineup_info: "LineupBriefInfo" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class MassiveWarBattleMessage(betterproto.Message):
    message_id: int = betterproto.uint32_field(1)
    damage_msg: "MassiveWarBattleMessageDamageMessage" = betterproto.message_field(11)
    field_msg: "MassiveWarBattleMessageFieldMessage" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class MassiveWarBattleMessageDamageMessage(betterproto.Message):
    add_damage: int = betterproto.uint64_field(1)
    total_damage: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class MassiveWarBattleMessageFieldMessage(betterproto.Message):
    action_type: "MassiveWarFieldActionType" = betterproto.enum_field(1)
    buff_progress: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MassiveWarBattleMonster(betterproto.Message):
    message_id: int = betterproto.uint32_field(1)
    monster_id: int = betterproto.uint32_field(2)
    total_hp: int = betterproto.uint32_field(3)
    left_hp: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MassiveWarExitBattleReq(betterproto.Message):
    battle_uniq_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MassiveWarExitBattleRsp(betterproto.Message):
    retcode: "MassiveWarExitBattleRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MassiveWarFieldProgress(betterproto.Message):
    field_progress_ratio: int = betterproto.uint32_field(1)
    in_field_member_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MassiveWarGetActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MassiveWarGetActivityRsp(betterproto.Message):
    retcode: "MassiveWarGetActivityRspRetcode" = betterproto.enum_field(1)
    massive_war_activity: "MassiveWarActivity" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MassiveWarGetBattleInfoReq(betterproto.Message):
    battle_uniq_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MassiveWarGetBattleInfoRsp(betterproto.Message):
    retcode: "MassiveWarGetBattleInfoRspRetcode" = betterproto.enum_field(1)
    battle_uniq_id: int = betterproto.uint32_field(2)
    battle_info: "MassiveWarBattleInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class MassiveWarGetRankReq(betterproto.Message):
    battle_uniq_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MassiveWarGetRankRsp(betterproto.Message):
    retcode: "MassiveWarGetRankRspRetcode" = betterproto.enum_field(1)
    battle_uniq_id: int = betterproto.uint32_field(2)
    member_list: List["MassiveWarBattleMember"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class MassiveWarLineupInfoNotify(betterproto.Message):
    battle_uniq_id: int = betterproto.uint32_field(1)
    lineup_info: "LineupBriefInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MassiveWarMonsterDamage(betterproto.Message):
    message_id: int = betterproto.uint32_field(1)
    total_damage: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MassiveWarReportBattleMessageNotify(betterproto.Message):
    message_list: List["MassiveWarBattleMessage"] = betterproto.message_field(1)
    battle_uniq_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MassiveWarRoomMember(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    score_rank: int = betterproto.uint32_field(3)
    player_group_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MassiveWarStageInfo(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    sub_schedule_id: int = betterproto.uint32_field(2)
    begin_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)
    max_damage_level_score: int = betterproto.uint32_field(5)
    max_rank_score: int = betterproto.uint32_field(6)
    basic_damage_score: int = betterproto.uint32_field(7)
    min_rank_ratio: int = betterproto.uint32_field(8)
    min_damage_level: int = betterproto.uint32_field(9)
    max_total_damage: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class MassiveWarTakeScoreRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MassiveWarTakeScoreRewardRsp(betterproto.Message):
    retcode: "MassiveWarTakeScoreRewardRspRetcode" = betterproto.enum_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MasterDetailData(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    level: int = betterproto.uint32_field(3)
    card: "MasterPupilCard" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class MasterMainData(betterproto.Message):
    exp: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    reward_level: List[int] = betterproto.uint32_field(3)
    last_dismiss_time: int = betterproto.uint32_field(4)
    score: int = betterproto.uint32_field(5)
    period_master_medal_num: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class MasterPoolData(betterproto.Message):
    material_list: List["Material"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MasterPupilApplyMsg(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    type: "MasterPupilType" = betterproto.enum_field(2)
    card: "MasterPupilCard" = betterproto.message_field(3)
    level: int = betterproto.uint32_field(4)
    nickname: str = betterproto.string_field(5)
    teacher_rank: int = betterproto.uint32_field(6)
    last_online_time: int = betterproto.uint32_field(7)
    avatar_id: int = betterproto.uint32_field(8)
    dress_id: int = betterproto.uint32_field(9)
    score: int = betterproto.uint32_field(10)
    frame_id: int = betterproto.uint32_field(11)
    custom_head_id: int = betterproto.uint32_field(12)
    last_logout_time: int = betterproto.uint32_field(13)
    online_status: int = betterproto.uint32_field(14)
    is_logoff: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class MasterPupilCard(betterproto.Message):
    type: "MasterPupilType" = betterproto.enum_field(1)
    gender: "PlayerGenderType" = betterproto.enum_field(2)
    area: "PlayerAreaType" = betterproto.enum_field(3)
    interest: "PlayerInterestType" = betterproto.enum_field(4)
    declaration: str = betterproto.string_field(5)
    uid: int = betterproto.uint32_field(6)
    is_recommend: bool = betterproto.bool_field(7)
    score: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class MasterPupilCardReportReq(betterproto.Message):
    card: "MasterPupilCard" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MasterPupilData(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    type: "MasterPupilType" = betterproto.enum_field(2)
    card: "MasterPupilCard" = betterproto.message_field(3)
    level: int = betterproto.uint32_field(4)
    nickname: str = betterproto.string_field(5)
    teacher_rank: int = betterproto.uint32_field(6)
    last_online_time: int = betterproto.uint32_field(7)
    avatar_id: int = betterproto.uint32_field(8)
    dress_id: int = betterproto.uint32_field(9)
    status: "MasterPupilStatus" = betterproto.enum_field(10)
    relation_time: int = betterproto.uint32_field(11)
    brief_data: "PlayerFriendBriefData" = betterproto.message_field(12)
    score: int = betterproto.uint32_field(13)
    is_logoff: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class MasterPupilDealMsg(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)
    type: "MasterPupilType" = betterproto.enum_field(2)
    op: "MasterPupilOpType" = betterproto.enum_field(3)
    nickname: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class MasterPupilDetailData(betterproto.Message):
    master: "MasterPupilData" = betterproto.message_field(1)
    pupil_list: List["MasterPupilData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MasterPupilEvalMsg(betterproto.Message):
    pupil_list: List["PupilMainData"] = betterproto.message_field(1)
    score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MasterPupilEvalReq(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    star: int = betterproto.uint32_field(2)
    step_id: int = betterproto.uint32_field(3)
    comment: str = betterproto.string_field(4)
    level: int = betterproto.uint32_field(5)
    nickname: str = betterproto.string_field(6)
    pool_reward: "MasterPoolData" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class MasterPupilEvalRsp(betterproto.Message):
    retcode: "MasterPupilRetcodeRetcode" = betterproto.enum_field(1)
    uid: int = betterproto.uint32_field(2)
    star: int = betterproto.uint32_field(3)
    step_id: int = betterproto.uint32_field(4)
    comment: str = betterproto.string_field(5)
    pool_reward: "MasterPoolData" = betterproto.message_field(6)
    master_score: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MasterPupilEventData(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    mission: "MasterPupilMission" = betterproto.message_field(3)
    apply: "MasterPupilApplyMsg" = betterproto.message_field(4)
    deal: "MasterPupilDealMsg" = betterproto.message_field(5)
    eval: "MasterPupilEvalMsg" = betterproto.message_field(6)
    company_mission_list: List[
        "MasterPupilEventDataCompanyMission"
    ] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class MasterPupilEventDataCompanyMission(betterproto.Message):
    mission_id: int = betterproto.uint32_field(1)
    time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MasterPupilMission(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    status: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MasterPupilMsgNotify(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)
    event: "MasterPupilEventType" = betterproto.enum_field(2)
    data: "MasterPupilEventData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class MasterPupilRetcode(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MasterPupilTagSwitch(betterproto.Message):
    type: "MasterPupilType" = betterproto.enum_field(1)
    is_open: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class Material(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MaterialDeleteReturnReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MaterialEvoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MaterialEvoRsp(betterproto.Message):
    retcode: "MaterialEvoRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MaterialHideSwitchData(betterproto.Message):
    material_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MatrixAdvancePath(betterproto.Message):
    path_from: "MatrixGridPos" = betterproto.message_field(1)
    path_to: "MatrixGridPos" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MatrixAdvanceReq(betterproto.Message):
    from_pos: "MatrixGridPos" = betterproto.message_field(1)
    to_pos: "MatrixGridPos" = betterproto.message_field(2)
    path_list: List["MatrixAdvancePath"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class MatrixAdvanceRsp(betterproto.Message):
    retcode: "MatrixAdvanceRspRetcode" = betterproto.enum_field(1)
    cur_pos: "MatrixGridPos" = betterproto.message_field(2)
    pos_list: List["MatrixGridPos"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class MatrixBuff(betterproto.Message):
    buff_id: int = betterproto.uint32_field(1)
    buff_type: int = betterproto.uint32_field(2)
    buff_para_int: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MatrixCancelEventReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MatrixCancelEventRsp(betterproto.Message):
    retcode: "MatrixCancelEventRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MatrixEnterReq(betterproto.Message):
    floor_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MatrixEnterRsp(betterproto.Message):
    retcode: "MatrixEnterRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MatrixEventFinishNotify(betterproto.Message):
    pos: "MatrixGridPos" = betterproto.message_field(1)
    event_id: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)
    display_type: "MatrixEventType" = betterproto.enum_field(4)
    display_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class MatrixFloorBriefInfo(betterproto.Message):
    floor_id: int = betterproto.uint32_field(1)
    floor_status: "MatrixFloorStatus" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class MatrixFloorMapInfo(betterproto.Message):
    floor_id: int = betterproto.uint32_field(1)
    grid_list: List["MatrixGrid"] = betterproto.message_field(2)
    width: int = betterproto.uint32_field(3)
    height: int = betterproto.uint32_field(4)
    map_id: int = betterproto.uint32_field(5)
    current_pos: "MatrixGridPos" = betterproto.message_field(6)
    event_grid_list: List["MatrixGrid"] = betterproto.message_field(7)
    step_num: int = betterproto.uint32_field(8)
    dice_point: int = betterproto.uint32_field(9)
    lottery_list: List["MatrixLottery"] = betterproto.message_field(10)
    buff_list: List["MatrixBuff"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class MatrixGrid(betterproto.Message):
    pos: "MatrixGridPos" = betterproto.message_field(1)
    type: "MatrixGridType" = betterproto.enum_field(2)
    grid_id: int = betterproto.uint32_field(3)
    event_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MatrixGridPos(betterproto.Message):
    x: int = betterproto.uint32_field(1)
    y: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MatrixGuessFingerReq(betterproto.Message):
    finger_type: "MatrixFingerType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MatrixGuessFingerRsp(betterproto.Message):
    retcode: "MatrixGuessFingerRspRetcode" = betterproto.enum_field(1)
    player_finger_type: "MatrixFingerType" = betterproto.enum_field(2)
    robot_finger_type: "MatrixFingerType" = betterproto.enum_field(3)
    reward_data: "RewardData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class MatrixLottery(betterproto.Message):
    lottery_id: int = betterproto.uint32_field(1)
    lottery_num: int = betterproto.uint32_field(2)
    left_step: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MatrixLotteryDrawNotify(betterproto.Message):
    lottery: "MatrixLottery" = betterproto.message_field(1)
    win_num: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class MatrixMoveObjectReq(betterproto.Message):
    pos: "MatrixGridPos" = betterproto.message_field(1)
    event_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MatrixMoveObjectRsp(betterproto.Message):
    retcode: "MatrixMoveObjectRspRetcode" = betterproto.enum_field(1)
    pos_list: List["MatrixGridPos"] = betterproto.message_field(2)
    event_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MatrixResetFloorReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MatrixResetFloorRsp(betterproto.Message):
    retcode: "MatrixResetFloorRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MatrixSetDiceDestinationReq(betterproto.Message):
    target_pos: "MatrixGridPos" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MatrixSetDiceDestinationRsp(betterproto.Message):
    retcode: "MatrixSetDiceDestinationRspRetcode" = betterproto.enum_field(1)
    target_pos: "MatrixGridPos" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MatrixSetLotteryNumReq(betterproto.Message):
    lottery_num: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MatrixSetLotteryNumRsp(betterproto.Message):
    retcode: "MatrixSetLotteryNumRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MatrixSettleFloorEventReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MatrixSettleFloorEventRsp(betterproto.Message):
    retcode: "MatrixSettleFloorEventRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MatrixTeleportNotify(betterproto.Message):
    from_pos: "MatrixGridPos" = betterproto.message_field(1)
    to_pos: "MatrixGridPos" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MatrixThrowDiceReq(betterproto.Message):
    dice_type: "DiceType" = betterproto.enum_field(1)
    dice_point: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MatrixThrowDiceRsp(betterproto.Message):
    retcode: "MatrixThrowDiceRspRetcode" = betterproto.enum_field(1)
    dice_type: "DiceType" = betterproto.enum_field(2)
    dice_point: int = betterproto.uint32_field(3)
    bonus_dice_point: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MatrixTriggerEventReq(betterproto.Message):
    pos: "MatrixGridPos" = betterproto.message_field(1)
    event_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MatrixTriggerEventRsp(betterproto.Message):
    retcode: "MatrixTriggerEventRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class McoinBuySwitchData(betterproto.Message):
    account_type: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class Mecha(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class Medal(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    end_time: int = betterproto.uint32_field(2)
    extra_param: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class MedalOpReq(betterproto.Message):
    op: "MedalOpType" = betterproto.enum_field(1)
    on_id: int = betterproto.uint32_field(2)
    off_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MedalOpRsp(betterproto.Message):
    retcode: "MedalOpRspRetcode" = betterproto.enum_field(1)
    op: "MedalOpType" = betterproto.enum_field(2)
    on_id: int = betterproto.uint32_field(3)
    off_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MinuteStage(betterproto.Message):
    minute_id: int = betterproto.uint32_field(1)
    state: "MinuteStageStageState" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class Mission(betterproto.Message):
    mission_id: int = betterproto.uint32_field(1)
    status: "MissionStatus" = betterproto.enum_field(2)
    progress: int = betterproto.uint32_field(3)
    begin_time: int = betterproto.uint32_field(4)
    end_time: int = betterproto.uint32_field(5)
    priority: int = betterproto.uint32_field(6)
    finished_times: int = betterproto.uint32_field(7)
    finished_times_limit: int = betterproto.uint32_field(8)
    cycle_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class MissionCompensationReward(betterproto.Message):
    mission_id: int = betterproto.uint32_field(1)
    mission_compensation_reward_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MissionHideSwitchData(betterproto.Message):
    mission_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MissionRewardSwitchData(betterproto.Message):
    mission_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MissionStepCompensation(betterproto.Message):
    type_id: int = betterproto.uint32_field(1)
    old_step_id: int = betterproto.uint32_field(2)
    new_step_id: int = betterproto.uint32_field(3)
    old_step_compensation_reward_id: int = betterproto.uint32_field(4)
    old_step_reward_id: int = betterproto.uint32_field(5)
    mission_compensation_list: List[
        "MissionCompensationReward"
    ] = betterproto.message_field(6)
    old_step_compensation_reward_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MissionThemeData(betterproto.Message):
    theme_id: int = betterproto.uint32_field(1)
    is_theme_upgrade: bool = betterproto.bool_field(2)
    has_take_extra_reward_mission_list: List[int] = betterproto.uint32_field(3)
    is_has_take_all_extra_reward: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class ModifyDlcNameReq(betterproto.Message):
    name: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class ModifyDlcNameRsp(betterproto.Message):
    retcode: "ModifyDlcNameRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ModifyScDlcNameReq(betterproto.Message):
    name: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class ModifyScDlcNameRsp(betterproto.Message):
    retcode: "ModifyScDlcNameRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MonopolyAddMonsterReq(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)
    floor_id: int = betterproto.uint32_field(2)
    monster_id: int = betterproto.uint32_field(3)
    position: int = betterproto.uint32_field(4)
    direction: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class MonopolyAddMonsterRsp(betterproto.Message):
    retcode: "MonopolyAddMonsterRspRetcode" = betterproto.enum_field(1)
    monster_id: int = betterproto.uint32_field(2)
    position: int = betterproto.uint32_field(3)
    direction: int = betterproto.uint32_field(4)
    unique_id: int = betterproto.uint32_field(5)
    entity_type: int = betterproto.uint32_field(6)
    tile_entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MonopolyArea(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)
    status: "MonopolyAreaStatus" = betterproto.enum_field(2)
    floor_list: List["MonopolyFloor"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class MonopolyBuildingConstructReq(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)
    building_type: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MonopolyBuildingConstructRsp(betterproto.Message):
    retcode: "MonopolyBuildingConstructRspRetcode" = betterproto.enum_field(1)
    area_id: int = betterproto.uint32_field(2)
    building_type: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MonopolyBuyGoodsReq(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)
    goods_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MonopolyBuyGoodsRsp(betterproto.Message):
    retcode: "MonopolyBuyGoodsRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MonopolyEndRoundReq(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MonopolyEndRoundRsp(betterproto.Message):
    retcode: "MonopolyEndRoundRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MonopolyFloor(betterproto.Message):
    floor_id: int = betterproto.uint32_field(1)
    building_list: List["MonopolyFloorBuilding"] = betterproto.message_field(2)
    monster_list: List["MonopolyMonster"] = betterproto.message_field(3)
    round_status: "MonopolyRoundStatus" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class MonopolyFloorBuilding(betterproto.Message):
    location: int = betterproto.uint32_field(1)
    type: int = betterproto.uint32_field(2)
    level: int = betterproto.uint32_field(3)
    product_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MonopolyMonster(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    monster_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MonopolyResetFloorReq(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)
    floor_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MonopolyResetFloorRsp(betterproto.Message):
    retcode: "MonopolyResetFloorRspRetcode" = betterproto.enum_field(1)
    area_id: int = betterproto.uint32_field(2)
    floor_id: int = betterproto.uint32_field(3)
    tile_tower_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MonopolyRewardNotify(betterproto.Message):
    behavior_id: int = betterproto.uint32_field(1)
    reward: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MonopolyShopGoods(betterproto.Message):
    goods_id: int = betterproto.uint32_field(1)
    buy_times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MonopolySkipBattleReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MonopolySkipBattleRsp(betterproto.Message):
    retcode: "MonopolySkipBattleRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MonopolyThrowDiceReq(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MonopolyThrowDiceRsp(betterproto.Message):
    retcode: "MonopolyThrowDiceRspRetcode" = betterproto.enum_field(1)
    area_id: int = betterproto.uint32_field(2)
    dice_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MonopolyUseItemReq(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)
    item_id: int = betterproto.uint32_field(2)
    para: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MonopolyUseItemRsp(betterproto.Message):
    retcode: "MonopolyUseItemRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MonsterCard(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    star: int = betterproto.uint32_field(3)
    fragment_num: int = betterproto.uint32_field(4)
    talent_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class MonsterCardActivityRankInfo(betterproto.Message):
    team_brief_data_list: List["MonsterCardCardBriefData"] = betterproto.message_field(
        1
    )
    collection_level: int = betterproto.uint32_field(2)
    floor: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MonsterCardCardBriefData(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    star: int = betterproto.uint32_field(2)
    level: int = betterproto.uint32_field(3)
    talent_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MonsterCardConfirmRandomTalentReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    type: "MonsterCardRandomTalentConfirmType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class MonsterCardConfirmRandomTalentRsp(betterproto.Message):
    retcode: "MonsterCardConfirmRandomTalentRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    type: "MonsterCardRandomTalentConfirmType" = betterproto.enum_field(3)
    confirm_data: "MonsterCardRandomTalentConfirmData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class MonsterCardFragmentOverflowNotify(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    overflow_cost_material: "Material" = betterproto.message_field(2)
    return_material_list: List["Material"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class MonsterCardGetActivityReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MonsterCardGetActivityRsp(betterproto.Message):
    retcode: "MonsterCardGetActivityRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    card_list: List["MonsterCard"] = betterproto.message_field(3)
    has_take_daily_reward_times: int = betterproto.uint32_field(4)
    random_talent_confirm_data: "MonsterCardRandomTalentConfirmData" = (
        betterproto.message_field(5)
    )


@dataclass(eq=False, repr=False)
class MonsterCardGetBossRankReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MonsterCardGetBossRankRsp(betterproto.Message):
    retcode: "MonsterCardGetBossRankRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    stage_id: int = betterproto.uint32_field(3)
    num: int = betterproto.uint32_field(4)
    rank_data: "RankShowData" = betterproto.message_field(5)
    rank_percent: int = betterproto.uint32_field(6)
    self_rank_data: "MonsterCardActivityRankInfo" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class MonsterCardGetTowerRankReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MonsterCardGetTowerRankRsp(betterproto.Message):
    retcode: "MonsterCardGetTowerRankRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    num: int = betterproto.uint32_field(3)
    rank_data: "RankShowData" = betterproto.message_field(4)
    rank_percent: int = betterproto.uint32_field(5)
    self_rank_data: "MonsterCardActivityRankInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class MonsterCardLearnRandomTalentReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    unique_id: int = betterproto.uint32_field(2)
    cost_material_id: int = betterproto.uint32_field(3)
    talent_index: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MonsterCardLearnRandomTalentRsp(betterproto.Message):
    retcode: "MonsterCardLearnRandomTalentRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    unique_id: int = betterproto.uint32_field(3)
    cost_material_id: int = betterproto.uint32_field(4)
    talent_index: int = betterproto.uint32_field(5)
    old_talent_id: int = betterproto.uint32_field(6)
    new_talent_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MonsterCardLevelUpReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    unique_id: int = betterproto.uint32_field(2)
    target_level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MonsterCardLevelUpRsp(betterproto.Message):
    retcode: "MonsterCardLevelUpRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    unique_id: int = betterproto.uint32_field(3)
    target_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MonsterCardRandomTalentConfirmData(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    cost_material_id: int = betterproto.uint32_field(2)
    talent_index: int = betterproto.uint32_field(3)
    old_talent_id: int = betterproto.uint32_field(4)
    new_talent_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class MonsterCardStarUpReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    unique_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MonsterCardStarUpRsp(betterproto.Message):
    retcode: "MonsterCardStarUpRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    unique_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MonsterCardSyncCardNotify(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    is_all: bool = betterproto.bool_field(2)
    card_list: List["MonsterCard"] = betterproto.message_field(3)
    type: "MonsterCardSyncType" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class MosaicActivity(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)
    is_take_reward: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class MoveArmadaCabinReq(betterproto.Message):
    grid_list: List["ArmadaGrid"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MoveArmadaCabinRsp(betterproto.Message):
    retcode: "MoveArmadaCabinRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MpBadge(betterproto.Message):
    unique_id_u64: int = betterproto.uint64_field(1)
    badge_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MpBadgeData(betterproto.Message):
    equiped_badge_uid_u64: int = betterproto.uint64_field(1)
    badge_list: List["MpBadge"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MpCancelMatchReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MpCancelMatchRsp(betterproto.Message):
    retcode: "MpCancelMatchRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MpCreateTeamReq(betterproto.Message):
    member: "MpTeamMember" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MpCreateTeamRsp(betterproto.Message):
    retcode: "MpCreateTeamRspRetcode" = betterproto.enum_field(1)
    team_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MpEnterTeamReq(betterproto.Message):
    team_id: int = betterproto.uint32_field(1)
    member: "MpTeamMember" = betterproto.message_field(2)
    uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MpEnterTeamRsp(betterproto.Message):
    retcode: "MpEnterTeamRspRetcode" = betterproto.enum_field(1)
    team_id: int = betterproto.uint32_field(2)
    stage_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MpFastMatchReq(betterproto.Message):
    stage_id_list: List[int] = betterproto.uint32_field(1)
    device_score: int = betterproto.uint32_field(2)
    match_stage_list: List["MpMatchStage"] = betterproto.message_field(3)
    level: int = betterproto.uint32_field(4)
    client_rtt: int = betterproto.uint32_field(5)
    member: "MpTeamMember" = betterproto.message_field(6)
    report_num: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MpFastMatchRsp(betterproto.Message):
    retcode: "MpFastMatchRspRetcode" = betterproto.enum_field(1)
    stage_id_list: List[int] = betterproto.uint32_field(2)
    lobby_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MpGetLobbyRecommendReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MpGetLobbyRecommendRsp(betterproto.Message):
    retcode: "MpGetLobbyRecommendRspRetcode" = betterproto.enum_field(1)
    stage_id: int = betterproto.uint32_field(2)
    recommend_type: "MpGetLobbyRecommendRspRecommendType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class MpGetMatchInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MpGetMatchInfoRsp(betterproto.Message):
    retcode: "MpGetMatchInfoRspRetcode" = betterproto.enum_field(1)
    match_info_list: List["MpMatchInfo"] = betterproto.message_field(2)
    battle_begin_time: int = betterproto.uint32_field(3)
    lobby_idx: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MpGetTeamReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MpGetTeamRsp(betterproto.Message):
    retcode: "MpGetTeamRspRetcode" = betterproto.enum_field(1)
    team_data: "MpTeamData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MpKickFromTeamReq(betterproto.Message):
    member_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MpKickFromTeamRsp(betterproto.Message):
    retcode: "MpKickFromTeamRspRetcode" = betterproto.enum_field(1)
    member_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MpLeaveTeamNotify(betterproto.Message):
    reason: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MpLikePlayerReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MpLikePlayerRsp(betterproto.Message):
    retcode: "MpLikePlayerRspRetcode" = betterproto.enum_field(1)
    target_uid: int = betterproto.uint32_field(2)
    from_uid: int = betterproto.uint32_field(3)
    target_like_num: int = betterproto.uint32_field(4)
    add_friends_point: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class MpMatchInfo(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    start_match_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MpMatchStage(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    has_leader_stamina: bool = betterproto.bool_field(2)
    has_leader_enter_times: bool = betterproto.bool_field(3)
    avatar_detail: "AvatarDetailData" = betterproto.message_field(4)
    backup_avatar_list: List["AvatarDetailData"] = betterproto.message_field(5)
    has_leader_theme_wanted_ticket: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class MpMemberSetClientStatusReq(betterproto.Message):
    status: "MpMemberClientStatus" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MpMemberSetClientStatusRsp(betterproto.Message):
    retcode: "MpMemberSetClientStatusRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MpRaidRankData(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)
    rank: int = betterproto.uint32_field(3)
    nickname: str = betterproto.string_field(4)
    armada_id: int = betterproto.uint32_field(5)
    armada_name: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class MpRaidResetCycleReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MpRaidResetCycleRsp(betterproto.Message):
    retcode: "MpRaidResetCycleRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MpRecordMember(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    avatar_id: int = betterproto.uint32_field(2)
    dress_id: int = betterproto.uint32_field(3)
    is_mvp: bool = betterproto.bool_field(4)
    is_leader: bool = betterproto.bool_field(5)
    nick_name: str = betterproto.string_field(6)
    avatar_level: int = betterproto.uint32_field(7)
    avatar_star_level: int = betterproto.uint32_field(8)
    region_name: str = betterproto.string_field(9)


@dataclass(eq=False, repr=False)
class MpReportPlayerReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MpReportPlayerRsp(betterproto.Message):
    retcode: "MpReportPlayerRspRetcode" = betterproto.enum_field(1)
    target_uid: int = betterproto.uint32_field(2)
    report_success: bool = betterproto.bool_field(3)
    judge_term: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MpResetSkillPointReq(betterproto.Message):
    type: "MpSkillType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MpResetSkillPointRsp(betterproto.Message):
    retcode: "MpResetSkillPointRspRetcode" = betterproto.enum_field(1)
    type: "MpSkillType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class MpSetExtraSkillReq(betterproto.Message):
    extra_skill_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MpSetExtraSkillRsp(betterproto.Message):
    retcode: "MpSetExtraSkillRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MpSkill(betterproto.Message):
    skill_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MpSkillPoint(betterproto.Message):
    type: "MpSkillType" = betterproto.enum_field(1)
    value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MpStageDamageInfo(betterproto.Message):
    hit_damage_1: int = betterproto.uint32_field(1)
    hit_damage_2: int = betterproto.uint32_field(2)
    hit_damage_3: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MpStageGetVoteInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MpStageGetVoteInfoRsp(betterproto.Message):
    retcode: "MpStageGetVoteInfoRspRetcode" = betterproto.enum_field(1)
    vote_info_list: List["MpStageVoteInfo"] = betterproto.message_field(2)
    vote_end_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MpStageMemberVoteNotify(betterproto.Message):
    vote_info_list: List["MpStageVoteInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MpStageMvpReward(betterproto.Message):
    extra_coin: int = betterproto.uint32_field(1)
    extra_avatar_exp: int = betterproto.uint32_field(2)
    extra_mp_exp: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MpStageRecord(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(2)
    duration: int = betterproto.uint32_field(3)
    member_list: List["MpRecordMember"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class MpStageSettle(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)
    damage: int = betterproto.uint32_field(3)
    mvp_score: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MpStageSettleNotify(betterproto.Message):
    team_id: int = betterproto.uint32_field(1)
    settle_list: List["MpStageSettle"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MpStageVoteCountDownNotify(betterproto.Message):
    count_down_time: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MpStageVoteInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    option: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MpStageVoteReq(betterproto.Message):
    option: "MpStageVoteOption" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MpStageVoteResultNotify(betterproto.Message):
    option: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MpStageVoteRsp(betterproto.Message):
    retcode: "MpStageVoteRspRetcode" = betterproto.enum_field(1)
    option: "MpStageVoteOption" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class MpSyncActionFromPlayerNotify(betterproto.Message):
    action: "MpAction" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MpSyncActionFromServerNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    action: "MpAction" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class MpTeamChangeLeaderReq(betterproto.Message):
    new_leader_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MpTeamChangeLeaderRsp(betterproto.Message):
    retcode: "MpTeamChangeLeaderRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MpTeamData(betterproto.Message):
    team_id: int = betterproto.uint32_field(1)
    leader_uid: int = betterproto.uint32_field(2)
    status: "MpTeamStatus" = betterproto.enum_field(3)
    lobby_status: "LobbyStatus" = betterproto.enum_field(4)
    member_list: List["MpTeamMember"] = betterproto.message_field(5)
    min_level: int = betterproto.uint32_field(6)
    lobby_enter_type: "LobbyEnterType" = betterproto.enum_field(7)
    stage_id: int = betterproto.uint32_field(8)
    team_name: str = betterproto.string_field(9)
    team_description: str = betterproto.string_field(10)
    max_level: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class MpTeamEnterLobbyReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    lobby_enter_type: "LobbyEnterType" = betterproto.enum_field(2)
    min_level: int = betterproto.uint32_field(3)
    team_name: str = betterproto.string_field(4)
    team_description: str = betterproto.string_field(5)
    is_team_name_default: bool = betterproto.bool_field(6)
    max_level: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MpTeamEnterLobbyRsp(betterproto.Message):
    retcode: "MpTeamEnterLobbyRspRetcode" = betterproto.enum_field(1)
    sub_retcode: int = betterproto.int32_field(2)
    error_uid: int = betterproto.uint32_field(3)
    stage_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MpTeamLeaveLobbyReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MpTeamLeaveLobbyRsp(betterproto.Message):
    retcode: "MpTeamLeaveLobbyRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MpTeamMember(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    uid: int = betterproto.uint32_field(2)
    mp_exp: int = betterproto.uint32_field(3)
    stamina: int = betterproto.uint32_field(4)
    skill_list: List["MpSkill"] = betterproto.message_field(5)
    head_avatar_id: int = betterproto.uint32_field(6)
    dress_id: int = betterproto.uint32_field(7)
    punish_end_time: int = betterproto.uint32_field(8)
    voice_id: int = betterproto.uint32_field(9)
    member_info: "MpTeamMemberInfo" = betterproto.message_field(11)
    status: "LobbyMemberStatus" = betterproto.enum_field(12)
    client_status: "LobbyClientStatus" = betterproto.enum_field(13)
    avatar_trial_id: int = betterproto.uint32_field(14)
    is_wild: bool = betterproto.bool_field(15)
    reclaim_avatar_info: "ReclaimMpAvatar" = betterproto.message_field(17)
    region_name: str = betterproto.string_field(18)
    openworld_boss_info: "OpenworldBossMp" = betterproto.message_field(19)
    frame_id: int = betterproto.uint32_field(20)
    enter_type: int = betterproto.uint32_field(21)
    custom_head_id: int = betterproto.uint32_field(22)
    newbie_id: int = betterproto.uint32_field(23)
    data_version: int = betterproto.uint32_field(24)
    season_id: int = betterproto.uint32_field(25)
    season_group_id: int = betterproto.uint32_field(26)
    season_level: int = betterproto.uint32_field(27)
    extra_skill_id: int = betterproto.uint32_field(28)
    sc_dlc_avatar_info: "ScDlcMpAvatar" = betterproto.message_field(29)


@dataclass(eq=False, repr=False)
class MpTeamMemberInfo(betterproto.Message):
    detail: "PlayerDetailData" = betterproto.message_field(1)
    card: "PlayerCardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class MpTeamMemberSetVoiceIdReq(betterproto.Message):
    voice_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MpTeamMemberSetVoiceIdRsp(betterproto.Message):
    retcode: "MpTeamMemberSetVoiceIdRspRetcode" = betterproto.enum_field(1)
    uid: int = betterproto.uint32_field(2)
    voice_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MpTeamSyncNotify(betterproto.Message):
    team_data: "MpTeamData" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MpUpgradeSkillReq(betterproto.Message):
    skill_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MpUpgradeSkillRsp(betterproto.Message):
    retcode: "MpUpgradeSkillRspRetcode" = betterproto.enum_field(1)
    skill_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class NewbieActivityChallenge(betterproto.Message):
    is_take_challenge_reward: bool = betterproto.bool_field(1)
    has_finished_stage_list: List[int] = betterproto.uint32_field(2)
    enter_times: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class NewbieLevelRush(betterproto.Message):
    is_purchased: bool = betterproto.bool_field(1)
    free_reward_max_take_level: int = betterproto.uint32_field(2)
    purchase_reward_max_take_level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class NewbieLevelRushPurchaseReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class NewbieLevelRushPurchaseRsp(betterproto.Message):
    retcode: "NewbieLevelRushPurchaseRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class NewbieLevelRushTakeRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class NewbieLevelRushTakeRewardRsp(betterproto.Message):
    retcode: "NewbieLevelRushTakeRewardRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class NewbiePrivilegeInfo(betterproto.Message):
    end_time: int = betterproto.uint32_field(1)
    has_take_daily_reward: bool = betterproto.bool_field(2)
    daily_free_gacha_times: int = betterproto.uint32_field(3)
    buy_times: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class NewClientMailNotify(betterproto.Message):
    type: "ClientMailType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class NicknameModifyReq(betterproto.Message):
    nickname: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class NicknameModifyRsp(betterproto.Message):
    retcode: "NicknameModifyRspRetcode" = betterproto.enum_field(1)
    cd_end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class NinjaActivityData(betterproto.Message):
    ninja_id: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)
    slot_list: List["NinjaSlot"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class NinjaActivityNotify(betterproto.Message):
    slot_list: List["NinjaSlot"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class NinjaSlot(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    exp: int = betterproto.uint32_field(3)
    choosed_effect_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class NinjaSlotChooseEffectReq(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    effect_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class NinjaSlotChooseEffectRsp(betterproto.Message):
    retcode: "NinjaSlotChooseEffectRspRetcode" = betterproto.enum_field(1)
    slot: "NinjaSlot" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class NinjaSlotStrengthenReq(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    material_id: int = betterproto.uint32_field(2)
    cost_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class NinjaSlotStrengthenRsp(betterproto.Message):
    retcode: "NinjaSlotStrengthenRspRetcode" = betterproto.enum_field(1)
    slot: "NinjaSlot" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ObjSelected(betterproto.Message):
    id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class OfflineResource(betterproto.Message):
    resource_type: int = betterproto.uint32_field(1)
    has_take_box_num: int = betterproto.uint32_field(2)
    available_box_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class OldEndlessPlayerSettle(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(2)
    endless_type: int = betterproto.uint32_field(3)
    group_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class OpenArmadaStageReq(betterproto.Message):
    hard_level: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class OpenArmadaStageRsp(betterproto.Message):
    retcode: "OpenArmadaStageRspRetcode" = betterproto.enum_field(1)
    hard_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class OpenChatworldTreasureReq(betterproto.Message):
    chatworld_id: int = betterproto.uint32_field(1)
    treasure_id: int = betterproto.uint32_field(2)
    cur_treasure_schedule_id: int = betterproto.uint32_field(3)
    is_gs_check: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class OpenChatworldTreasureRsp(betterproto.Message):
    retcode: "OpenChatworldTreasureRspRetcode" = betterproto.enum_field(1)
    chatworld_id: int = betterproto.uint32_field(2)
    treasure_id: int = betterproto.uint32_field(3)
    drop_item_list: List["DropItem"] = betterproto.message_field(4)
    is_take_reward: bool = betterproto.bool_field(5)
    cur_treasure_schedule_id: int = betterproto.uint32_field(6)
    open_uid_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class OpenWeekDayActivityReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class OpenWeekDayActivityRsp(betterproto.Message):
    retcode: "OpenWeekDayActivityRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class OpenworldActivity(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    phase_id: int = betterproto.uint32_field(2)
    activity_level: int = betterproto.uint32_field(3)
    activity_exp: int = betterproto.uint32_field(4)
    activity_reward_taken_level_list: List[int] = betterproto.uint32_field(5)
    activity_treasure_taken_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class OpenworldBoss(betterproto.Message):
    boss_id: int = betterproto.uint32_field(1)
    left_hp: int = betterproto.uint32_field(2)
    clue_progress: int = betterproto.uint32_field(3)
    search_time: int = betterproto.uint32_field(4)
    battle_time: int = betterproto.uint32_field(5)
    is_take_kill_reward: bool = betterproto.bool_field(6)
    location_idx: int = betterproto.uint32_field(7)
    boss_killed_avatar_list: List[int] = betterproto.uint32_field(9)
    mp_left_hp: int = betterproto.uint32_field(10)
    min_kill_time: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class OpenworldBossHunt(betterproto.Message):
    map_id: int = betterproto.uint32_field(1)
    cur_boss_id: int = betterproto.uint32_field(2)
    boss_list: List["OpenworldBoss"] = betterproto.message_field(3)
    last_choose_boss_time: int = betterproto.uint32_field(4)
    have_take_rating_reward_list: List[int] = betterproto.uint32_field(5)
    is_call_boss: bool = betterproto.bool_field(6)
    killed_boss_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class OpenworldBossMp(betterproto.Message):
    boss_id: int = betterproto.uint32_field(1)
    left_hp: int = betterproto.uint32_field(2)
    mp_left_hp: int = betterproto.uint32_field(3)
    buff_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class OpenworldCook(betterproto.Message):
    cook_id: int = betterproto.uint32_field(1)
    eat_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class OpenworldEndlessBattle(betterproto.Message):
    battle_id: int = betterproto.uint32_field(1)
    trap_list: List["OpenworldEndlessTrap"] = betterproto.message_field(2)
    scene_gear: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class OpenworldEndlessBattleBeginReq(betterproto.Message):
    battle_id: int = betterproto.uint32_field(1)
    group_level: int = betterproto.uint32_field(2)
    monster_group_id: int = betterproto.uint32_field(3)
    layer_number: int = betterproto.uint32_field(4)
    transaction_str: str = betterproto.string_field(5)
    type: "EndlessType" = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class OpenworldEndlessBattleBeginRsp(betterproto.Message):
    retcode: "OpenworldEndlessBattleBeginRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class OpenworldEndlessBattleEndReq(betterproto.Message):
    battle_id: int = betterproto.uint32_field(1)
    group_level: int = betterproto.uint32_field(2)
    invasion_id: int = betterproto.uint32_field(3)
    invasion_buff_num: int = betterproto.uint32_field(4)
    cost_time: int = betterproto.uint32_field(5)
    end_status: "StageEndStatus" = betterproto.enum_field(6)
    avatar_list: List["StageInnerAvatarData"] = betterproto.message_field(7)
    monster_group_id: int = betterproto.uint32_field(8)
    environment_id: int = betterproto.uint32_field(9)
    layer_number: int = betterproto.uint32_field(10)
    transaction_str: str = betterproto.string_field(11)
    monster_str: str = betterproto.string_field(12)
    elf_list: List["StageInnerElfData"] = betterproto.message_field(13)
    type: "EndlessType" = betterproto.enum_field(14)
    quantum_string: str = betterproto.string_field(15)
    wave_string: str = betterproto.string_field(16)
    aoe_string: str = betterproto.string_field(17)


@dataclass(eq=False, repr=False)
class OpenworldEndlessBattleEndRsp(betterproto.Message):
    retcode: "OpenworldEndlessBattleEndRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class OpenworldEndlessChangeAvatarReq(betterproto.Message):
    avatar_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class OpenworldEndlessChangeAvatarRsp(betterproto.Message):
    retcode: "OpenworldEndlessChangeAvatarRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class OpenworldEndlessItem(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class OpenworldEndlessItemUpdateNotify(betterproto.Message):
    item_list: List["OpenworldEndlessItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class OpenworldEndlessMonsterGroup(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)
    old_progress: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class OpenworldEndlessPlayer(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)
    score_time: int = betterproto.uint32_field(3)
    invasion_list: List[
        "OpenworldEndlessPlayerInvasionData"
    ] = betterproto.message_field(4)
    last_lineup_info: "LineupBriefInfo" = betterproto.message_field(5)
    effect_item_list: List["OpenworldEndlessItem"] = betterproto.message_field(6)
    max_score: int = betterproto.uint32_field(7)
    reward_progress: int = betterproto.uint32_field(8)
    group_level: int = betterproto.uint32_field(9)
    unfinished_monster_max_progress: int = betterproto.uint32_field(10)
    max_score_lineup_info: "LineupBriefInfo" = betterproto.message_field(11)
    greedy_max_finish_floor: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class OpenworldEndlessPlayerInvasionData(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    invader_id: int = betterproto.uint32_field(2)
    active_time: int = betterproto.uint32_field(3)
    buff_list: List[int] = betterproto.uint32_field(4)
    sub_score: int = betterproto.uint32_field(5)
    battle_id: int = betterproto.uint32_field(6)
    invasion_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class OpenworldEndlessPlayerUpdateNotify(betterproto.Message):
    player_data: "OpenworldEndlessPlayer" = betterproto.message_field(1)
    brief_data: "PlayerFriendBriefData" = betterproto.message_field(2)
    type: "EndlessType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class OpenworldEndlessReprotBattle(betterproto.Message):
    battle_id: int = betterproto.uint32_field(1)
    scene_gear: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class OpenworldEndlessReprotInvasion(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    battle_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class OpenworldEndlessTrap(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    battle_id: int = betterproto.uint32_field(2)
    unique_id: int = betterproto.uint32_field(3)
    set_uid: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class OpenworldEndlessWarInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    type: "OpenworldEndlessWarInfoType" = betterproto.enum_field(2)
    item_id: int = betterproto.uint32_field(3)
    battle_id: int = betterproto.uint32_field(4)
    target_id: int = betterproto.uint32_field(5)
    from_who: int = betterproto.uint32_field(6)
    invasion_id: int = betterproto.uint32_field(7)
    score: int = betterproto.uint32_field(8)
    scene_gear: int = betterproto.uint32_field(9)
    time: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class OpenworldEndlessWarInfoNotify(betterproto.Message):
    war_info: "OpenworldEndlessWarInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class OpenworldEvent(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    drop_item_list: List["DropItem"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class OpenworldInvasionItem(betterproto.Message):
    invasion_id: int = betterproto.uint32_field(1)
    avatar_list: List[int] = betterproto.uint32_field(2)
    buff_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class OpenworldMapBriefData(betterproto.Message):
    map_id: int = betterproto.uint32_field(1)
    status: int = betterproto.uint32_field(2)
    stat_list: List["OpenworldStat"] = betterproto.message_field(3)
    cycle: int = betterproto.uint32_field(4)
    quest_level: int = betterproto.uint32_field(5)
    has_take_finish_reward_cycle: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class OpenworldOverView(betterproto.Message):
    mission_id: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class OpenworldQuest(betterproto.Message):
    id: int = betterproto.uint32_field(2)
    status: "OpenworldQuestStatus" = betterproto.enum_field(3)
    buff_id: int = betterproto.uint32_field(4)
    debuff_id: int = betterproto.uint32_field(5)
    position: int = betterproto.uint32_field(6)
    finish_challenge_list: List[int] = betterproto.uint32_field(7)
    progress: int = betterproto.uint32_field(8)
    rarity_reward_id: int = betterproto.uint32_field(9)
    quest_activity_id: int = betterproto.uint32_field(10)
    special_timeout_sec: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class OpenworldQuestData(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    star: int = betterproto.uint32_field(2)
    is_open: bool = betterproto.bool_field(3)
    day_open_times: int = betterproto.uint32_field(4)
    quest_list: List["OpenworldQuest"] = betterproto.message_field(5)
    refresh_left_times: int = betterproto.uint32_field(6)
    next_refresh_cost: int = betterproto.uint32_field(7)
    key_quest: "OpenworldQuest" = betterproto.message_field(8)
    max_quest_level: int = betterproto.uint32_field(9)
    is_can_abandon: bool = betterproto.bool_field(10)
    challenge_score: int = betterproto.uint32_field(11)
    finish_key_quest_list: List[int] = betterproto.uint32_field(12)
    is_quest_finish: bool = betterproto.bool_field(13)
    open_quest_time: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class OpenworldStageArea(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)
    avatar_list: List[int] = betterproto.uint32_field(2)
    weapon_uid_list: List[int] = betterproto.uint32_field(3)
    stigmata_uid_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class OpenworldStageAvatarInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    hp_percent: int = betterproto.uint32_field(2)
    sp_percent: int = betterproto.uint32_field(3)
    revive_time: int = betterproto.uint32_field(4)
    last_hp_recover_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class OpenworldStageInner(betterproto.Message):
    condition_type: int = betterproto.uint32_field(1)
    condition_value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class OpenworldStat(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    max_num: int = betterproto.uint32_field(2)
    finish_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class OpenworldStory(betterproto.Message):
    story_id: int = betterproto.uint32_field(1)
    story_progress: int = betterproto.uint32_field(2)
    accept_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class OpenworldTalent(betterproto.Message):
    talent_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class OpenworldTechData(betterproto.Message):
    map_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    exp: int = betterproto.uint32_field(3)
    next_collect_time: int = betterproto.uint32_field(4)
    skill_point: int = betterproto.uint32_field(5)
    unlock_skill_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class OptionalBuffActivity(betterproto.Message):
    buff_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class OptionalBuffActivityChooseBuffReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    buff_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class OptionalBuffActivityChooseBuffRsp(betterproto.Message):
    retcode: "OptionalBuffActivityChooseBuffRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class OverlapActivityData(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    grid_list: List["OverlapGrid"] = betterproto.message_field(2)
    has_take_reward_id_list: List[int] = betterproto.uint32_field(3)
    overlap_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class OverlapActivityMoveReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    from_grid_id: int = betterproto.uint32_field(2)
    to_grid_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class OverlapActivityMoveRsp(betterproto.Message):
    retcode: "OverlapActivityMoveRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    from_grid: "OverlapGrid" = betterproto.message_field(3)
    to_grid: "OverlapGrid" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class OverlapActivitySummonReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class OverlapActivitySummonRsp(betterproto.Message):
    retcode: "OverlapActivitySummonRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    grid: "OverlapGrid" = betterproto.message_field(3)
    reward_data: "RewardData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class OverlapGrid(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    summon_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PhonePendant(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PhonePendantOpReq(betterproto.Message):
    op: "PhonePendantOpType" = betterproto.enum_field(1)
    on_id: int = betterproto.uint32_field(2)
    off_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PhonePendantOpRsp(betterproto.Message):
    retcode: "PhonePendantOpRspRetcode" = betterproto.enum_field(1)
    op: "PhonePendantOpType" = betterproto.enum_field(2)
    on_id: int = betterproto.uint32_field(3)
    off_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PictureActivityChooseReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    step_id: int = betterproto.uint32_field(2)
    choice_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PictureActivityChooseRsp(betterproto.Message):
    retcode: "PictureActivityChooseRspRetcode" = betterproto.enum_field(1)
    reward: "RewardData" = betterproto.message_field(2)
    step: "PictureStep" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PictureActivityShareReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    is_take_reward: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class PictureActivityShareRsp(betterproto.Message):
    retcode: "PictureActivityShareRspRetcode" = betterproto.enum_field(1)
    reward: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PictureStep(betterproto.Message):
    step_id: int = betterproto.uint32_field(1)
    choice_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerAdventureData(betterproto.Message):
    adventure_group_level: int = betterproto.uint32_field(1)
    adventure_avatar_list: List["AdventureAvatar"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlayerCardAvatarData(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    avatar: "AvatarDetailData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlayerCardData(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    avatar_list: List["PlayerCardAvatarData"] = betterproto.message_field(2)
    medal_list: List["PlayerCardMedalData"] = betterproto.message_field(3)
    msg_data: "PlayerCardMsgData" = betterproto.message_field(4)
    island_like_num: int = betterproto.uint32_field(5)
    on_phone_pendant_id: int = betterproto.uint32_field(6)
    elf_list: List["PlayerCardElfData"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class PlayerCardDataChangeNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    msg_config: int = betterproto.uint32_field(2)
    medal: "PlayerCardMedalData" = betterproto.message_field(3)
    avatar: "PlayerCardAvatarData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class PlayerCardElfData(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    elf: "ElfDetailData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlayerCardMedalData(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    medal_id: int = betterproto.uint32_field(2)
    extra_param: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class PlayerCardMsg(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    msg: "ChatMsg" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlayerCardMsgData(betterproto.Message):
    msg_index: int = betterproto.uint32_field(1)
    msg_config: int = betterproto.uint32_field(2)
    msg_list: List["PlayerCardMsg"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PlayerCardSlot(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    target_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerDetailData(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    level: int = betterproto.uint32_field(3)
    leader_avatar: "AvatarDetailData" = betterproto.message_field(4)
    self_desc: str = betterproto.string_field(5)
    armada_id: int = betterproto.uint32_field(6)
    armada_name: str = betterproto.string_field(7)
    mp_level: int = betterproto.uint32_field(8)
    on_medal_id: int = betterproto.uint32_field(9)
    is_newbie: bool = betterproto.bool_field(10)
    is_goback: bool = betterproto.bool_field(11)
    mp_like_num: int = betterproto.uint32_field(12)
    grand_key_list: List["GrandKey"] = betterproto.message_field(13)
    leader_elf: "ElfDetailData" = betterproto.message_field(14)
    custom_head_id: int = betterproto.uint32_field(15)
    frame_id: int = betterproto.uint32_field(16)
    adventure: "PlayerAdventureData" = betterproto.message_field(17)
    backup_avatar_list: List["AvatarDetailData"] = betterproto.message_field(18)
    on_medal: "Medal" = betterproto.message_field(19)
    is_allow_visit: bool = betterproto.bool_field(30)
    visit_avatar: int = betterproto.uint32_field(31)
    be_liked_num: int = betterproto.uint32_field(32)
    show_house: int = betterproto.uint32_field(33)
    comfort_value: int = betterproto.uint32_field(34)
    house_level: int = betterproto.uint32_field(35)
    house_name: str = betterproto.string_field(36)
    total_wiki_score: int = betterproto.uint32_field(37)
    total_achievement_num_get: int = betterproto.uint32_field(38)
    total_achievement_num: int = betterproto.uint32_field(39)
    chat_forbid_finish_time: int = betterproto.uint32_field(40)
    master_uid: int = betterproto.uint32_field(41)
    master_pupil_tag: "MasterPupilType" = betterproto.enum_field(42)
    season_id: int = betterproto.uint32_field(43)
    season_group_id: int = betterproto.uint32_field(44)
    season_level: int = betterproto.uint32_field(45)
    is_logoff: bool = betterproto.bool_field(46)


@dataclass(eq=False, repr=False)
class PlayerFriendBriefData(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    level: int = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(4)
    avatar_star: int = betterproto.uint32_field(5)
    avatar_combat: int = betterproto.uint32_field(6)
    avatar_level: int = betterproto.uint32_field(7)
    main_sub_skill_list: List["AvatarSubSkillDetailData"] = betterproto.message_field(8)
    last_login_time: int = betterproto.uint32_field(10)
    dress_id: int = betterproto.uint32_field(11)
    armada_id: int = betterproto.uint32_field(12)
    armada_name: str = betterproto.string_field(13)
    bond: int = betterproto.uint32_field(14)
    on_medal_id: int = betterproto.uint32_field(15)
    on_medal: "Medal" = betterproto.message_field(19)
    frame_id: int = betterproto.uint32_field(16)
    mp_level: int = betterproto.uint32_field(17)
    custom_head_id: int = betterproto.uint32_field(18)
    is_allow_visit: bool = betterproto.bool_field(30)
    visit_avatar: int = betterproto.uint32_field(31)
    be_liked_num: int = betterproto.uint32_field(32)
    show_house: int = betterproto.uint32_field(33)
    comfort_value: int = betterproto.uint32_field(34)
    house_level: int = betterproto.uint32_field(35)
    house_name: str = betterproto.string_field(36)
    is_goback: bool = betterproto.bool_field(37)
    avatar_sub_star: int = betterproto.uint32_field(38)
    last_logout_time: int = betterproto.uint32_field(39)
    online_status: int = betterproto.uint32_field(40)
    season_id: int = betterproto.uint32_field(41)
    season_group_id: int = betterproto.uint32_field(42)
    season_level: int = betterproto.uint32_field(43)
    is_logoff: bool = betterproto.bool_field(44)


@dataclass(eq=False, repr=False)
class PlayerLevelUpNotify(betterproto.Message):
    old_level: int = betterproto.uint32_field(1)
    new_level: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PlayerLoginReq(betterproto.Message):
    last_server_packet_id: int = betterproto.uint32_field(2)
    cps: str = betterproto.string_field(3)
    check_sum: str = betterproto.string_field(4)
    device_uuid: str = betterproto.string_field(5)
    android_signatures: str = betterproto.string_field(6)
    language: str = betterproto.string_field(7)
    advertiser_id: str = betterproto.string_field(8)
    security_cmd_reply: bytes = betterproto.bytes_field(9)
    last_login_version: int = betterproto.uint32_field(10)
    account_type: int = betterproto.uint32_field(11)
    account_uid: str = betterproto.string_field(12)
    device_type: "DeviceType" = betterproto.enum_field(13)
    user_type: int = betterproto.uint32_field(14)
    user_ip: str = betterproto.string_field(15)
    tag: int = betterproto.uint32_field(16)
    client_version: str = betterproto.string_field(17)
    client_device: str = betterproto.string_field(18)
    system_info: str = betterproto.string_field(19)
    android_sign: str = betterproto.string_field(20)
    limit_level: int = betterproto.uint32_field(21)
    black_list_end_time: int = betterproto.uint32_field(22)
    is_bind_access: bool = betterproto.bool_field(23)
    login_session_token: int = betterproto.uint32_field(25)
    hoyolab_account_uid: str = betterproto.string_field(26)
    user_port: int = betterproto.uint32_field(27)


@dataclass(eq=False, repr=False)
class PlayerLoginRsp(betterproto.Message):
    retcode: "PlayerLoginRspRetcode" = betterproto.enum_field(1)
    msg: str = betterproto.string_field(3)
    is_first_login: bool = betterproto.bool_field(4)
    last_client_packet_id: int = betterproto.uint32_field(5)
    region_name: str = betterproto.string_field(6)
    cg_type: "CgType" = betterproto.enum_field(9)
    last_logout_time: int = betterproto.uint32_field(10)
    region_id: int = betterproto.uint32_field(11)
    is_valid_reconnect: bool = betterproto.bool_field(12)
    account_type: int = betterproto.uint32_field(13)
    account_uid: str = betterproto.string_field(14)
    login_session_token: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class PlayerLogoutReq(betterproto.Message):
    is_kick: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class PlayerMatrixShop(betterproto.Message):
    shop_id: int = betterproto.uint32_field(1)
    goods_list: List["PlayerMatrixShopMatrixGoods"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlayerMatrixShopMatrixGoods(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    num: int = betterproto.uint32_field(2)
    is_sold: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class PlayerOnlineStatusInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    online_status: int = betterproto.uint32_field(2)
    last_login_time: int = betterproto.uint32_field(3)
    last_logout_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PlayerRoomStatus(betterproto.Message):
    room_mode: "RoomMode" = betterproto.enum_field(1)
    room_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerSkill(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    skill_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PostWareHouseDemandReq(betterproto.Message):
    demand_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PostWareHouseDemandRsp(betterproto.Message):
    retcode: "PostWareHouseDemandRspRetcode" = betterproto.enum_field(1)
    demand_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PrayGachaData(betterproto.Message):
    ticket_hcoin_cost: int = betterproto.uint32_field(2)
    ticket_material_id: int = betterproto.uint32_field(3)
    cost_material_id: int = betterproto.uint32_field(4)
    cost_material_num: int = betterproto.uint32_field(5)
    max_gacha_times: int = betterproto.uint32_field(8)
    gacha_times: int = betterproto.uint32_field(9)
    is_finished: bool = betterproto.bool_field(10)
    protect_item_list: List["GachaItem"] = betterproto.message_field(11)
    pool_item_list: List["PrayGachaItemData"] = betterproto.message_field(12)
    gacha_id: int = betterproto.uint32_field(13)
    pray_value_per_gacha: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class PrayGachaItemData(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    total_num: int = betterproto.uint32_field(2)
    gacha_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PrivateChatParam(betterproto.Message):
    relation_type: "ChatRelationType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class PrivilegeInfo(betterproto.Message):
    privilege_id: int = betterproto.uint32_field(1)
    expire_time: int = betterproto.uint32_field(2)
    right_info_list: List["PrivilegeRightInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PrivilegeRightInfo(betterproto.Message):
    right_id: int = betterproto.uint32_field(1)
    type: int = betterproto.uint32_field(2)
    total_used_times: int = betterproto.uint32_field(3)
    max_use_times: int = betterproto.uint32_field(4)
    use_times: int = betterproto.uint32_field(5)
    next_auto_refresh_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class Product(betterproto.Message):
    name: str = betterproto.string_field(1)
    desc: str = betterproto.string_field(2)
    type: "ProductType" = betterproto.enum_field(3)
    pay_hcoin: int = betterproto.uint32_field(4)
    free_hcoin: int = betterproto.uint32_field(5)
    price: int = betterproto.uint32_field(6)
    left_buy_times: int = betterproto.uint32_field(7)
    card_daily_hcoin: int = betterproto.uint32_field(8)
    card_left_days: int = betterproto.uint32_field(9)
    is_forbid_by_itunes_small_order: bool = betterproto.bool_field(10)
    box_reward_list: List["RewardData"] = betterproto.message_field(11)
    is_itunes_box_subscription: bool = betterproto.bool_field(12)
    card_activity_daily_hcoin: int = betterproto.uint32_field(13)
    is_add_hcoin: bool = betterproto.bool_field(14)
    end_time: int = betterproto.uint32_field(15)
    sort_priority: int = betterproto.uint32_field(16)
    is_show_pic: bool = betterproto.bool_field(17)
    pic_path: str = betterproto.string_field(18)
    detail: str = betterproto.string_field(19)
    id: int = betterproto.uint32_field(20)
    mcoin: int = betterproto.uint32_field(21)
    product_goods_id: int = betterproto.uint32_field(22)
    price_tier: str = betterproto.string_field(23)


@dataclass(eq=False, repr=False)
class PromoteStigmataRuneReq(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PromoteStigmataRuneRsp(betterproto.Message):
    retcode: "PromoteStigmataRuneRspRetcode" = betterproto.enum_field(1)
    wait_select_stgimata_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ProtectEntry(betterproto.Message):
    possible_item_list: List["DropItem"] = betterproto.message_field(1)
    total_times: int = betterproto.uint32_field(2)
    drop_times: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PublishGratuityStageReq(betterproto.Message):
    stage_unique_id: int = betterproto.uint32_field(1)
    target_uid: int = betterproto.uint32_field(2)
    relation_tag: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PublishGratuityStageRsp(betterproto.Message):
    retcode: "PublishGratuityStageRspRetcode" = betterproto.enum_field(1)
    target_uid: int = betterproto.uint32_field(2)
    stage_unique_id: int = betterproto.uint32_field(3)
    relation_tag: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PupilDetailData(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    status: "MasterPupilStatus" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class PupilFinishExamMissionMsg(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    mission: "MasterPupilMission" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PupilMainData(betterproto.Message):
    step_list: List["PupilStep"] = betterproto.message_field(1)
    last_dismiss_time: int = betterproto.uint32_field(2)
    pupil_id: int = betterproto.uint32_field(3)
    nickname: str = betterproto.string_field(4)
    cur_step_id: int = betterproto.uint32_field(5)
    left_assistant_times: int = betterproto.uint32_field(6)
    left_frozen_time: int = betterproto.uint32_field(7)
    master_brief: "PlayerFriendBriefData" = betterproto.message_field(8)
    pool_fame_num: int = betterproto.uint32_field(9)
    is_graduated: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class PupilStep(betterproto.Message):
    step_id: int = betterproto.uint32_field(1)
    master_id: int = betterproto.uint32_field(2)
    star: int = betterproto.uint32_field(3)
    comment: str = betterproto.string_field(4)
    level: int = betterproto.uint32_field(5)
    pool_reward: "MasterPoolData" = betterproto.message_field(6)
    exam_mission_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class PushClientMsgNotify(betterproto.Message):
    platform_list: List[str] = betterproto.string_field(1)
    uid_list: List[str] = betterproto.string_field(2)
    tag_list: List[str] = betterproto.string_field(3)
    tag_and_list: List[str] = betterproto.string_field(4)
    tag_not_list: List[str] = betterproto.string_field(5)
    content: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class PushTowerActivityInfo(betterproto.Message):
    enter_times: int = betterproto.uint32_field(1)
    stage_reward_taken_list: List[int] = betterproto.uint32_field(2)
    is_clear_reward_taken: bool = betterproto.bool_field(3)
    grow_buff_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PushTowerActivityTakeClearRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PushTowerActivityTakeClearRewardRsp(betterproto.Message):
    retcode: "PushTowerActivityTakeClearRewardRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    reward_data_list: List["RewardData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PushTowerActivityTakeStageRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    stage_config_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PushTowerActivityTakeStageRewardRsp(betterproto.Message):
    retcode: "PushTowerActivityTakeStageRewardRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    stage_config_id: int = betterproto.uint32_field(3)
    reward_data_list: List["RewardData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class PvzActivity(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    unlocked_qavatar_list: List["PvzQAvatar"] = betterproto.message_field(2)
    site_info_list: List["PvzSiteInfo"] = betterproto.message_field(3)
    challenge_max_finish_wave: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PvzBattleBeginReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    tower_id: int = betterproto.uint32_field(2)
    floor_id: int = betterproto.uint32_field(3)
    qavatar_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PvzBattleBeginRsp(betterproto.Message):
    retcode: "PvzBattleBeginRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    tower_id: int = betterproto.uint32_field(3)
    floor_id: int = betterproto.uint32_field(4)
    qavatar_list: List["PvzQAvatar"] = betterproto.message_field(5)
    game_type: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class PvzBattleEndReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    end_status: "PvzBattleEndStatus" = betterproto.enum_field(2)
    finish_wave: int = betterproto.uint32_field(3)
    tower_id: int = betterproto.uint32_field(4)
    floor_id: int = betterproto.uint32_field(5)
    cost_time: int = betterproto.uint32_field(6)
    left_hp: int = betterproto.uint32_field(7)
    used_coin_num: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class PvzBattleEndRsp(betterproto.Message):
    retcode: "PvzBattleEndRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    tower_id: int = betterproto.uint32_field(3)
    floor_id: int = betterproto.uint32_field(4)
    end_status: "PvzBattleEndStatus" = betterproto.enum_field(5)
    finish_wave: int = betterproto.uint32_field(6)
    max_finish_wave: int = betterproto.uint32_field(7)
    reward_data: "RewardData" = betterproto.message_field(8)
    qavatar_list: List["PvzQAvatar"] = betterproto.message_field(9)
    site_id: int = betterproto.uint32_field(10)
    cost_time: int = betterproto.uint32_field(11)
    left_hp: int = betterproto.uint32_field(12)
    used_coin_num: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class PvzGetActivityReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PvzGetActivityRsp(betterproto.Message):
    retcode: "PvzGetActivityRspRetcode" = betterproto.enum_field(1)
    pvz_activity: "PvzActivity" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PvzQAvatar(betterproto.Message):
    qavatar_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    is_special_material_unlocked: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class PvzQAvatarLevelUpReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    qavatar_id: int = betterproto.uint32_field(2)
    target_level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PvzQAvatarLevelUpRsp(betterproto.Message):
    retcode: "PvzQAvatarLevelUpRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    qavatar_id: int = betterproto.uint32_field(3)
    target_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PvzSiteDropMaterial(betterproto.Message):
    material_id: int = betterproto.uint32_field(1)
    has_drop_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PvzSiteInfo(betterproto.Message):
    site_id: int = betterproto.uint32_field(1)
    tower_id: int = betterproto.uint32_field(2)
    site_type: "PvzSiteType" = betterproto.enum_field(4)
    has_drop_material_list: List["PvzSiteDropMaterial"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class QAvatarBattleBeginNotify(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)
    site_id: int = betterproto.uint32_field(2)
    fightserver_ip: int = betterproto.uint32_field(3)
    fightserver_port: int = betterproto.uint32_field(4)
    chatworld_id: int = betterproto.uint32_field(5)
    scene_id: int = betterproto.uint32_field(6)
    lobby_id: int = betterproto.uint32_field(10)
    battle_id: int = betterproto.uint32_field(11)
    battle_start_time: int = betterproto.uint32_field(12)
    member_list: List["QAvatarBattleMember"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class QAvatarBattleBuff(betterproto.Message):
    buff_id: int = betterproto.uint32_field(1)
    buff_type: "QAvatarBuffType" = betterproto.enum_field(2)
    expire_time_ms_u64: int = betterproto.uint64_field(4)
    num: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class QAvatarBattleBuffComponent(betterproto.Message):
    buff_list: List["QAvatarBattleBuff"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class QAvatarBattleComponentOpNotify(betterproto.Message):
    trigger_entity_id: int = betterproto.uint32_field(1)
    component_type: int = betterproto.uint32_field(2)
    op_type: "QAvatarBattleComponentOpNotifyComponentOpType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class QAvatarBattleComponentSet(betterproto.Message):
    position_component: "QAvatarBattlePositionComponent" = betterproto.message_field(1)
    speed_component: "QAvatarBattleSpeedComponent" = betterproto.message_field(2)
    skill_component: "QAvatarBattleSkillComponent" = betterproto.message_field(3)
    evade_component: "QAvatarBattleEvadeComponent" = betterproto.message_field(4)
    buff_component: "QAvatarBattleBuffComponent" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class QAvatarBattleDataNotify(betterproto.Message):
    update_entity_list: List["QAvatarBattleEntity"] = betterproto.message_field(1)
    cur_time_ms_u64: int = betterproto.uint64_field(3)
    delete_entity_list: List["QAvatarBattleDeleteEntity"] = betterproto.message_field(4)
    is_all: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class QAvatarBattleDeleteEntity(betterproto.Message):
    delete_reason: "QAvatarBattleEntityDeleteReasonType" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class QAvatarBattleDiscardStigmataReq(betterproto.Message):
    stigmata_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class QAvatarBattleDiscardStigmataRsp(betterproto.Message):
    retcode: "QAvatarBattleDiscardStigmataRspRetcode" = betterproto.enum_field(1)
    stigmata_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class QAvatarBattleEndBattleNotify(betterproto.Message):
    end_reason: "QAvatarBattleEndReason" = betterproto.enum_field(1)
    is_win: bool = betterproto.bool_field(2)
    is_mvp: bool = betterproto.bool_field(3)
    fight_info_list: List["QAvatarBattleFightInfo"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class QAvatarBattleEndSkillNotify(betterproto.Message):
    src_entity_id: int = betterproto.uint32_field(1)
    skill_type: int = betterproto.uint32_field(2)
    skill_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QAvatarBattleEndSkillReq(betterproto.Message):
    skill_type: int = betterproto.uint32_field(1)
    rotation_x: float = betterproto.float_field(2)
    rotation_y: float = betterproto.float_field(3)
    dst_position_x: float = betterproto.float_field(4)
    dst_position_y: float = betterproto.float_field(5)


@dataclass(eq=False, repr=False)
class QAvatarBattleEndSkillRsp(betterproto.Message):
    retcode: "QAvatarBattleEndSkillRspRetcode" = betterproto.enum_field(1)
    skill_type: int = betterproto.uint32_field(2)
    skill_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QAvatarBattleEnterBattleReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class QAvatarBattleEnterBattleRsp(betterproto.Message):
    retcode: "QAvatarBattleEnterBattleRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class QAvatarBattleEntity(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    type: "QAvatarBattleEntityType" = betterproto.enum_field(2)
    entity_name_id: int = betterproto.uint32_field(3)
    entity_expire_time_ms_u64: int = betterproto.uint64_field(4)
    component_set: "QAvatarBattleComponentSet" = betterproto.message_field(5)
    fight_info: "QAvatarBattleFightInfo" = betterproto.message_field(7)
    owner_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class QAvatarBattleEvadeComponent(betterproto.Message):
    speed_x: float = betterproto.float_field(1)
    speed_y: float = betterproto.float_field(2)
    expire_time_ms_u64: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class QAvatarBattleFightInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    kill_num: int = betterproto.uint32_field(2)
    dead_num: int = betterproto.uint32_field(3)
    rank: int = betterproto.uint32_field(4)
    is_mvp: bool = betterproto.bool_field(5)
    is_win: bool = betterproto.bool_field(6)
    max_hp: int = betterproto.uint32_field(11)
    cur_hp: int = betterproto.uint32_field(12)
    reborn_time_ms_u64: int = betterproto.uint64_field(13)
    max_sp: int = betterproto.uint32_field(14)
    cur_sp: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class QAvatarBattleGetDataNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class QAvatarBattleGetLobbyInfoReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)
    lobby_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QAvatarBattleGetLobbyInfoRsp(betterproto.Message):
    retcode: "QAvatarBattleGetLobbyInfoRspRetcode" = betterproto.enum_field(1)
    tale_id: int = betterproto.uint32_field(2)
    lobby_id: int = betterproto.uint32_field(3)
    lobby_status: int = betterproto.uint32_field(4)
    fightserver_ip: int = betterproto.uint32_field(5)
    fightserver_port: int = betterproto.uint32_field(6)
    battle_id: int = betterproto.uint32_field(7)
    member_list: List["QAvatarBattleMember"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class QAvatarBattleKillNotify(betterproto.Message):
    killer_uid: int = betterproto.uint32_field(1)
    killed_uid: int = betterproto.uint32_field(2)
    killer_streak_num: int = betterproto.uint32_field(3)
    battle_total_kill_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class QAvatarBattleMember(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    region_name: str = betterproto.string_field(2)
    nickname: str = betterproto.string_field(3)
    level: int = betterproto.uint32_field(4)
    frame_id: int = betterproto.uint32_field(5)
    custom_head_id: int = betterproto.uint32_field(6)
    division: int = betterproto.uint32_field(7)
    elo_score: int = betterproto.uint32_field(8)
    choose_virtual_avatar: "VirtualAvatar" = betterproto.message_field(9)
    camp_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class QAvatarBattleMoveNotify(betterproto.Message):
    speed_x: float = betterproto.float_field(1)
    speed_y: float = betterproto.float_field(2)
    rotation_x: float = betterproto.float_field(3)
    rotation_y: float = betterproto.float_field(4)


@dataclass(eq=False, repr=False)
class QAvatarBattlePositionComponent(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)
    rotation_x: float = betterproto.float_field(3)
    rotation_y: float = betterproto.float_field(4)


@dataclass(eq=False, repr=False)
class QAvatarBattleRefreshGadget(betterproto.Message):
    gadget_id: int = betterproto.uint32_field(1)
    spawn_point_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class QAvatarBattleRefreshGadgetForecastNotify(betterproto.Message):
    refresh_id: int = betterproto.uint32_field(1)
    refresh_time_ms_u64: int = betterproto.uint64_field(2)
    spawn_point_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QAvatarBattleRefreshGadgetGenerateNotify(betterproto.Message):
    refresh_id: int = betterproto.uint32_field(1)
    refresh_gadget_list: List["QAvatarBattleRefreshGadget"] = betterproto.message_field(
        2
    )


@dataclass(eq=False, repr=False)
class QAvatarBattleSettleNotify(betterproto.Message):
    end_reason: "QAvatarBattleEndReason" = betterproto.enum_field(1)
    tale_id: int = betterproto.uint32_field(2)
    site_id: int = betterproto.uint32_field(3)
    lobby_id: int = betterproto.uint32_field(4)
    battle_start_time: int = betterproto.uint32_field(5)
    previous_score: int = betterproto.uint32_field(6)
    cur_score: int = betterproto.uint32_field(8)
    fight_info_list: List["QAvatarBattleFightInfo"] = betterproto.message_field(9)
    get_material_list: List["Material"] = betterproto.message_field(10)
    member_list: List["QAvatarBattleMember"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class QAvatarBattleSkillComponent(betterproto.Message):
    skill_info_list: List["QAvatarBattleSkillInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class QAvatarBattleSkillInfo(betterproto.Message):
    skill_id: int = betterproto.uint32_field(1)
    skill_type: int = betterproto.uint32_field(2)
    btn_holdup_time_ms_u64: int = betterproto.uint64_field(4)
    combo_num: int = betterproto.uint32_field(5)
    max_bullet_num: int = betterproto.uint32_field(6)
    cur_bullet_num: int = betterproto.uint32_field(7)
    max_charge_num: int = betterproto.uint32_field(8)
    cur_charge_num: int = betterproto.uint32_field(9)
    skill_cd_ms_u64: int = betterproto.uint64_field(10)


@dataclass(eq=False, repr=False)
class QAvatarBattleSkillTriggerNotify(betterproto.Message):
    trigger_entity_id: int = betterproto.uint32_field(1)
    trigger_entity: "QAvatarBattleEntity" = betterproto.message_field(2)
    skill_info: "QAvatarBattleSkillInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class QAvatarBattleSpeedComponent(betterproto.Message):
    speed_x: float = betterproto.float_field(1)
    speed_y: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class QAvatarBattleStartSkillNotify(betterproto.Message):
    src_entity_id: int = betterproto.uint32_field(1)
    skill_type: int = betterproto.uint32_field(2)
    skill_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QAvatarBattleStartSkillReq(betterproto.Message):
    skill_type: int = betterproto.uint32_field(1)
    rotation_x: float = betterproto.float_field(2)
    rotation_y: float = betterproto.float_field(3)


@dataclass(eq=False, repr=False)
class QAvatarBattleStartSkillRsp(betterproto.Message):
    retcode: "QAvatarBattleStartSkillRspRetcode" = betterproto.enum_field(1)
    skill_type: int = betterproto.uint32_field(2)
    skill_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QAvatarBattleStigmata(betterproto.Message):
    stigmata_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class QAvatarBattleStigmataComponent(betterproto.Message):
    stigmata_list: List["QAvatarBattleStigmata"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class QCandyBattleArriveReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class QCandyBattleArriveRsp(betterproto.Message):
    retcode: "QCandyBattleArriveRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class QCandyBattleAvatarLifeTimesChangeNotify(betterproto.Message):
    life_times: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class QCandyBattleAvatarStateClientNotify(betterproto.Message):
    state: "QCandyBattleAvatarState" = betterproto.enum_field(1)
    is_move: bool = betterproto.bool_field(2)
    sub_state: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QCandyBattleAvatarStateServerNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    state: "QCandyBattleAvatarState" = betterproto.enum_field(2)
    is_move: bool = betterproto.bool_field(3)
    sub_state: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class QCandyBattleBeginNotify(betterproto.Message):
    lobby_id: int = betterproto.uint32_field(1)
    battle_id: int = betterproto.uint32_field(2)
    map_id: int = betterproto.uint32_field(3)
    fightserver_ip: int = betterproto.uint32_field(4)
    fightserver_port: int = betterproto.uint32_field(5)
    battle_begin_time: int = betterproto.uint32_field(6)
    battle_end_time: int = betterproto.uint32_field(7)
    member_list: List["QCandyBattleMember"] = betterproto.message_field(8)
    activity_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class QCandyBattleChooseAvatarReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    old_avatar_id: int = betterproto.uint32_field(2)
    new_avatar_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QCandyBattleChooseAvatarRsp(betterproto.Message):
    retcode: "QCandyBattleChooseAvatarRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    old_avatar_id: int = betterproto.uint32_field(3)
    new_avatar_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class QCandyBattleComponentPosition(betterproto.Message):
    postion: "QCandyBattleVector3" = betterproto.message_field(1)
    forward: "QCandyBattleVector3" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class QCandyBattleComponentSet(betterproto.Message):
    position_component: "QCandyBattleComponentPosition" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class QCandyBattleCreateEntityReq(betterproto.Message):
    prop_id: int = betterproto.uint32_field(1)
    type: "QCandyBattleEntityType" = betterproto.enum_field(2)
    init_pos: "QCandyBattleVector3" = betterproto.message_field(3)
    init_forward: "QCandyBattleVector3" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class QCandyBattleCreateEntityRsp(betterproto.Message):
    retcode: "QCandyBattleCreateEntityRspRetcode" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)
    prop_id: int = betterproto.uint32_field(3)
    owner_entity_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class QCandyBattleDataNotify(betterproto.Message):
    cur_time_ms_u64: int = betterproto.uint64_field(1)
    update_entity_list: List["QCandyBattleEntity"] = betterproto.message_field(2)
    delete_entity_list: List["QCandyBattleEntity"] = betterproto.message_field(3)
    battle_info: "QCandyBattleInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class QCandyBattleDeleteEntityReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class QCandyBattleDeleteEntityRsp(betterproto.Message):
    retcode: "QCandyBattleDeleteEntityRspRetcode" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class QCandyBattleEndNotify(betterproto.Message):
    battle_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class QCandyBattleEnterBattleReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class QCandyBattleEnterBattleRsp(betterproto.Message):
    retcode: "QCandyBattleEnterBattleRspRetcode" = betterproto.enum_field(1)
    battle_type: "QCandyBattleType" = betterproto.enum_field(2)
    battle_begin_time: int = betterproto.uint32_field(3)
    battle_end_time: int = betterproto.uint32_field(4)
    member_list: List["QCandyBattleMember"] = betterproto.message_field(5)
    member_brief_list: List["QCandyBattleMemberBrief"] = betterproto.message_field(6)
    prop_data_list: List["QCandyBattlePropData"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class QCandyBattleEntity(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    type: "QCandyBattleEntityType" = betterproto.enum_field(2)
    component_set: "QCandyBattleComponentSet" = betterproto.message_field(3)
    prop_id: int = betterproto.uint32_field(4)
    owner_entity_id: int = betterproto.uint32_field(5)
    state: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class QCandyBattleFinishBattleNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    rank_num: int = betterproto.uint32_field(2)
    is_over: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class QCandyBattleGetActivityReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class QCandyBattleGetActivityRsp(betterproto.Message):
    retcode: "QCandyBattleGetActivityRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    today_currency_got_num: int = betterproto.uint32_field(3)
    rank_score: int = betterproto.uint32_field(4)
    max_rank_score: int = betterproto.uint32_field(5)
    last_avatar_id: int = betterproto.uint32_field(6)
    unlocked_avatar_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class QCandyBattleInfo(betterproto.Message):
    battle_id: int = betterproto.uint32_field(1)
    remain_life_times: int = betterproto.uint32_field(2)
    score: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QCandyBattleLeaveBattleNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class QCandyBattleLeaveBattleReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class QCandyBattleLeaveBattleRsp(betterproto.Message):
    retcode: "QCandyBattleLeaveBattleRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class QCandyBattleMember(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    rank_score: int = betterproto.uint32_field(3)
    team_id: int = betterproto.uint32_field(4)
    avatar_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class QCandyBattleMemberBrief(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    entity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class QCandyBattleMemberSettleInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    avatar_id: int = betterproto.uint32_field(3)
    cur_rank_score: int = betterproto.uint32_field(4)
    is_abandoned: bool = betterproto.bool_field(5)
    rank: int = betterproto.uint32_field(6)
    progress: int = betterproto.uint32_field(7)
    cost_time: int = betterproto.uint32_field(8)
    life_times: int = betterproto.uint32_field(9)
    score: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class QCandyBattleMoveNotify(betterproto.Message):
    pos: "QCandyBattleVector3" = betterproto.message_field(1)
    forward: "QCandyBattleVector3" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class QCandyBattlePropData(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    prop_id: int = betterproto.uint32_field(2)
    postion: "QCandyBattleVector3" = betterproto.message_field(3)
    rotation: "QCandyBattleVector3" = betterproto.message_field(4)
    scale: "QCandyBattleVector3" = betterproto.message_field(5)
    parent_name: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class QCandyBattleSettleBattleNotify(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    lobby_id: int = betterproto.uint32_field(2)
    map_id: int = betterproto.uint32_field(3)
    settle_info_list: List["QCandyBattleMemberSettleInfo"] = betterproto.message_field(
        4
    )


@dataclass(eq=False, repr=False)
class QCandyBattleSkillEndNotify(betterproto.Message):
    player_skill_end: "PlayerSkill" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class QCandyBattleTriggerEntityReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    cur_state: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class QCandyBattleTriggerEntityRsp(betterproto.Message):
    retcode: "QCandyBattleTriggerEntityRspRetcode" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)
    cur_state: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QCandyBattleUnlockAvatarReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    avatar_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class QCandyBattleUnlockAvatarRsp(betterproto.Message):
    retcode: "QCandyBattleUnlockAvatarRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    avatar_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QCandyBattleUseSkillNotify(betterproto.Message):
    player_use_skill: "PlayerSkill" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class QCandyBattleUseSkillReq(betterproto.Message):
    skill_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class QCandyBattleUseSkillRsp(betterproto.Message):
    retcode: "QCandyBattleUseSkillRspRetcode" = betterproto.enum_field(1)
    skill_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class QCandyBattleVector3(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)
    z: float = betterproto.float_field(3)


@dataclass(eq=False, repr=False)
class QuantumEndless(betterproto.Message):
    cur_monster_group: int = betterproto.uint32_field(1)
    monster_progress: int = betterproto.uint32_field(2)
    finish_monster_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QuantumEndlessBattleAoe(betterproto.Message):
    aoe_num: int = betterproto.uint32_field(1)
    evade_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class QuantumEndlessBattleWave(betterproto.Message):
    wave_id: int = betterproto.uint32_field(1)
    end_status: "StageEndStatus" = betterproto.enum_field(2)
    cost_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class Question(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    answer_list: List[int] = betterproto.uint32_field(2)
    right_answer_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QuickApplyJoinArmadaReq(betterproto.Message):
    level: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class QuickApplyJoinArmadaRsp(betterproto.Message):
    retcode: "QuickApplyJoinArmadaRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class QuitArmadaReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class QuitArmadaRsp(betterproto.Message):
    retcode: "QuitArmadaRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class Raffle(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    draw_begin_time: int = betterproto.uint32_field(3)
    draw_end_time: int = betterproto.uint32_field(4)
    reward_begin_time: int = betterproto.uint32_field(5)
    mission_id: int = betterproto.uint32_field(6)
    total_ticket_num: int = betterproto.uint32_field(7)
    ticket_list: List["RaffleTicket"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class RaffleActivity(betterproto.Message):
    cur_schedule_id: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)
    raffle_list: List["Raffle"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class RaffleTicket(betterproto.Message):
    ticket_num: int = betterproto.uint32_field(1)
    draw_idx: int = betterproto.uint32_field(2)
    reward_grade: "RaffleRewardGrade" = betterproto.enum_field(3)
    is_reward_taken: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class RanchArea(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)
    cur_product_num: int = betterproto.uint32_field(2)
    monster_unique_id_list: List[int] = betterproto.uint32_field(3)
    production_efficiency: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RanchAssignMonsterReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    unique_id_list: List[int] = betterproto.uint32_field(2)
    area_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RanchAssignMonsterRsp(betterproto.Message):
    retcode: "RanchAssignMonsterRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    unique_id_list: List[int] = betterproto.uint32_field(3)
    area_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RanchDelMonsterNotify(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    del_monster_unique_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RanchFireMonsterReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    unique_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RanchFireMonsterRsp(betterproto.Message):
    retcode: "RanchFireMonsterRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    unique_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RanchFreeMonsterReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    unique_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RanchFreeMonsterRsp(betterproto.Message):
    retcode: "RanchFreeMonsterRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    unique_id_list: List[int] = betterproto.uint32_field(3)
    return_material_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RanchGetActivityReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RanchGetActivityRsp(betterproto.Message):
    retcode: "RanchGetActivityRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    monster_list: List["RanchMonster"] = betterproto.message_field(3)
    area_list: List["RanchArea"] = betterproto.message_field(4)
    next_refresh_time: int = betterproto.uint32_field(5)
    stage_list: List["RanchStage"] = betterproto.message_field(6)
    battle_unique_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class RanchGetMonsterWikiReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RanchGetMonsterWikiRsp(betterproto.Message):
    retcode: "RanchGetMonsterWikiRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    monster_wiki_list: List["RanchMonsterWiki"] = betterproto.message_field(3)
    skill_wiki_list: List["RanchSkillWiki"] = betterproto.message_field(4)
    collection_point: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class RanchLockMonsterSkillReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    unique_id: int = betterproto.uint32_field(2)
    lock_skill_idx_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RanchLockMonsterSkillRsp(betterproto.Message):
    retcode: "RanchLockMonsterSkillRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    unique_id: int = betterproto.uint32_field(3)
    lock_skill_idx_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RanchMonster(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    monster_id: int = betterproto.uint32_field(2)
    skill_list: List["RanchMonsterSkill"] = betterproto.message_field(3)
    ranch_area_id: int = betterproto.uint32_field(4)
    ranch_last_settle_time: int = betterproto.uint32_field(5)
    monster_level: int = betterproto.uint32_field(6)
    monster_exp: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class RanchMonsterBriefInfo(betterproto.Message):
    monster_id: int = betterproto.uint32_field(1)
    skill_id_list: List[int] = betterproto.uint32_field(2)
    monster_level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RanchMonsterSkill(betterproto.Message):
    skill_id: int = betterproto.uint32_field(1)
    is_locked: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class RanchMonsterWiki(betterproto.Message):
    monster_id: int = betterproto.uint32_field(1)
    unlock_time: int = betterproto.uint32_field(2)
    battle_times: int = betterproto.uint32_field(3)
    catch_times: int = betterproto.uint32_field(4)
    skill_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class RanchSetBattleMonsterReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    unique_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RanchSetBattleMonsterRsp(betterproto.Message):
    retcode: "RanchSetBattleMonsterRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    unique_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RanchSkillWiki(betterproto.Message):
    skill_type: int = betterproto.uint32_field(1)
    skill_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RanchStage(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    take_challenge_reward_times: int = betterproto.uint32_field(2)
    max_challenge_score: int = betterproto.uint32_field(3)
    drop_monster_list: List["RanchMonster"] = betterproto.message_field(4)
    unique_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class RanchSyncMonsterNotify(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    monster_list: List["RanchMonster"] = betterproto.message_field(2)
    del_monster_unique_id_list: List[int] = betterproto.uint32_field(3)
    notify_type: "RanchNotifyType" = betterproto.enum_field(4)
    stage_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class RanchSynthesisMonsterReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    synthesis_id: int = betterproto.uint32_field(2)
    main_unique_id: int = betterproto.uint32_field(3)
    assist_unique_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RanchSynthesisMonsterRsp(betterproto.Message):
    retcode: "RanchSynthesisMonsterRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    synthesis_id: int = betterproto.uint32_field(3)
    main_unique_id: int = betterproto.uint32_field(4)
    assist_unique_id: int = betterproto.uint32_field(5)
    output_unique_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class RanchTakeProductReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RanchTakeProductRsp(betterproto.Message):
    retcode: "RanchTakeProductRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    unique_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RankScheduleData(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    type: int = betterproto.uint32_field(2)
    begin_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RankShowData(betterproto.Message):
    my_rank_type: int = betterproto.uint32_field(1)
    my_rank: int = betterproto.uint32_field(2)
    rank_list: List["UserRankData"] = betterproto.message_field(3)
    my_score: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RecallMasterPupilApplicationReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)
    self_nickname: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class RecallMasterPupilApplicationRsp(betterproto.Message):
    retcode: "MasterPupilRetcodeRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class RechargeFinishNotify(betterproto.Message):
    retcode: "RechargeFinishNotifyRetcode" = betterproto.enum_field(1)
    product_name: str = betterproto.string_field(2)
    pay_hcoin: int = betterproto.uint32_field(3)
    free_hcoin: int = betterproto.uint32_field(4)
    product_desc: str = betterproto.string_field(5)
    box_reward_list: List["RewardData"] = betterproto.message_field(6)
    product_price: int = betterproto.uint32_field(7)
    channel_name: str = betterproto.string_field(8)
    channel_order_no: str = betterproto.string_field(9)
    is_add_hcoin: bool = betterproto.bool_field(10)
    mcoin: int = betterproto.uint32_field(11)
    goods_id: int = betterproto.uint32_field(12)
    pay_currency: str = betterproto.string_field(13)
    pay_price: str = betterproto.string_field(14)


@dataclass(eq=False, repr=False)
class ReclaimAvatar(betterproto.Message):
    reclaim_avatar_id: int = betterproto.uint32_field(1)
    reclaim_weapon_id: int = betterproto.uint32_field(2)
    reclaim_stigmata_id_1: int = betterproto.uint32_field(3)
    reclaim_stigmata_id_2: int = betterproto.uint32_field(4)
    reclaim_stigmata_id_3: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ReclaimGachaReq(betterproto.Message):
    box_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ReclaimGachaRsp(betterproto.Message):
    retcode: "ReclaimGachaRspRetcode" = betterproto.enum_field(1)
    candidate_item_list: List[int] = betterproto.uint32_field(2)
    reward_list: List["RewardData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ReclaimMpAvatar(betterproto.Message):
    reclaim_avatar: "ReclaimAvatar" = betterproto.message_field(1)
    reclaim_level: int = betterproto.uint32_field(2)
    reclaim_avatar_id_list: List[int] = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RecommendAvatar(betterproto.Message):
    lineup_info: "LineupBriefInfo" = betterproto.message_field(1)
    battle_times: int = betterproto.uint32_field(2)
    battle_rate: float = betterproto.float_field(3)
    source: "AvatarRecommendSource" = betterproto.enum_field(5)
    ext_info: str = betterproto.string_field(8)
    recommend_style: int = betterproto.uint32_field(9)
    rank: int = betterproto.uint32_field(10)
    is_has_course_info: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class RecommendGoods(betterproto.Message):
    shop_id: int = betterproto.uint32_field(1)
    goods: "Goods" = betterproto.message_field(2)
    banner_bg: str = betterproto.string_field(3)
    accurate_deliver_schedule_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RecommendMissionPanel(betterproto.Message):
    panel_id: int = betterproto.uint32_field(1)
    is_panel_show: bool = betterproto.bool_field(2)
    mission_begin_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RecoverChatCreditNotify(betterproto.Message):
    lost_chat_credit: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RecvArmadaSystemChatMsgNotify(betterproto.Message):
    chat_msg: "ArmadaSystemChatMsg" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RecvChatMsgNotify(betterproto.Message):
    chat_msg_list: List["ChatMsg"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RecvCommonChatworldMsgNotify(betterproto.Message):
    chat_msg_list: List["ChatworldMsg"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RecvOfflinePrivateChatMsgNotify(betterproto.Message):
    chat_msg_list: List["ChatMsg"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RecvPlayerCardMsgNotify(betterproto.Message):
    msg_list: List["PlayerCardMsg"] = betterproto.message_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RecvRoomChatMsgNotify(betterproto.Message):
    room_mode: "RoomMode" = betterproto.enum_field(1)
    chat_msg: "ChatMsg" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class RefineRuneSwitchData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class RefineStigmataRuneReq(betterproto.Message):
    type: "StigmataRefineType" = betterproto.enum_field(1)
    unique_id: int = betterproto.uint32_field(2)
    consume_item_list: "EquipmentItemList" = betterproto.message_field(3)
    special_id: int = betterproto.uint32_field(4)
    lock_rune_index: int = betterproto.uint32_field(5)
    is_retry: bool = betterproto.bool_field(6)
    times_type: "StigmataRefineTimesType" = betterproto.enum_field(7)


@dataclass(eq=False, repr=False)
class RefineStigmataRuneRsp(betterproto.Message):
    retcode: "RefineStigmataRuneRspRetcode" = betterproto.enum_field(1)
    rune_list: List["StigmataRune"] = betterproto.message_field(2)
    times_type: "StigmataRefineTimesType" = betterproto.enum_field(3)
    rune_group_list: List["StigmataRuneGroup"] = betterproto.message_field(4)
    wait_select_stgimata_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ReforgeEquipmentReq(betterproto.Message):
    type: "EquipmentType" = betterproto.enum_field(1)
    unique_id: int = betterproto.uint32_field(2)
    target_equip_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ReforgeEquipmentRsp(betterproto.Message):
    retcode: "ReforgeEquipmentRspRetcode" = betterproto.enum_field(1)
    unique_id: int = betterproto.uint32_field(2)
    remain_reforge_times: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RefreshAndSyncMissionNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class RefreshDlcTalentAffixReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    talent_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RefreshDlcTalentAffixRsp(betterproto.Message):
    retcode: "RefreshDlcTalentAffixRspRetcode" = betterproto.enum_field(1)
    new_affix_set_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RefreshScDlcDailyQuestReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class RefreshScDlcDailyQuestRsp(betterproto.Message):
    retcode: "RefreshScDlcDailyQuestRspRetcode" = betterproto.enum_field(1)
    quest_list: List["OpenworldQuest"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class RegionUidRange(betterproto.Message):
    region_name: str = betterproto.string_field(1)
    start_uid: int = betterproto.uint32_field(2)
    end_uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RejectGratuityStageReq(betterproto.Message):
    stage_unique_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RejectGratuityStageRsp(betterproto.Message):
    retcode: "RejectGratuityStageRspRetcode" = betterproto.enum_field(1)
    stage_unique_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RelationActivityDataNotify(betterproto.Message):
    limit_type: int = betterproto.uint32_field(1)
    limit_num: int = betterproto.uint32_field(2)
    got_material_num: int = betterproto.uint32_field(3)
    relation_type: int = betterproto.uint32_field(4)
    drop_material_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ReleaseArmadaBuildOwnershipReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ReleaseArmadaBuildOwnershipRsp(betterproto.Message):
    retcode: "ReleaseArmadaBuildOwnershipRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class Replay(betterproto.Message):
    replay_id_u64: int = betterproto.uint64_field(1)
    replay_type: "ReplayType" = betterproto.enum_field(2)
    common_info: "ReplayCommonInfo" = betterproto.message_field(3)
    ext_info: "ReplayExtInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ReplayBeginReq(betterproto.Message):
    key: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class ReplayBeginRsp(betterproto.Message):
    retcode: "ReplayBeginRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ReplayCommonInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    create_time: int = betterproto.uint32_field(3)
    stage_id: int = betterproto.uint32_field(4)
    file_md5: str = betterproto.string_field(5)
    download_url: str = betterproto.string_field(6)
    version: str = betterproto.string_field(7)
    timespan: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ReplayEndReq(betterproto.Message):
    key: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class ReplayEndRsp(betterproto.Message):
    retcode: "ReplayEndRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ReplayExBossInfo(betterproto.Message):
    rank_id: int = betterproto.uint32_field(1)
    finished_boss_info: "FinishedExBossInfo" = betterproto.message_field(2)
    raw_score: int = betterproto.uint32_field(3)
    is_event_boss: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class ReplayExtInfo(betterproto.Message):
    ex_boss_info: "ReplayExBossInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ReplayFrame(betterproto.Message):
    seq: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)
    frame: bytes = betterproto.bytes_field(3)


@dataclass(eq=False, repr=False)
class ReplayFrameEndNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ReplayFrameNotify(betterproto.Message):
    replay_frame_list: List["ReplayFrame"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ReplayGetFileTokenReq(betterproto.Message):
    op: "ReplayOp" = betterproto.enum_field(1)
    replay: "Replay" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ReplayGetFileTokenRsp(betterproto.Message):
    retcode: "ReplayGetFileTokenRspRetcode" = betterproto.enum_field(1)
    token: str = betterproto.string_field(2)
    token_url: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class ReplayGetRecommendBriefReq(betterproto.Message):
    key_list: List["ReplayRecommendBriefKey"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ReplayGetRecommendBriefRsp(betterproto.Message):
    retcode: "ReplayGetRecommendBriefRspRetcode" = betterproto.enum_field(1)
    brief_list: List["ReplayRecommendBrief"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ReplayGetRecommendListReq(betterproto.Message):
    type: "ReplayType" = betterproto.enum_field(1)
    stage_or_boss_id: int = betterproto.uint32_field(2)
    rank: int = betterproto.uint32_field(3)
    start_idx: int = betterproto.uint32_field(4)
    end_idx: int = betterproto.uint32_field(5)
    is_random: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class ReplayGetRecommendListRsp(betterproto.Message):
    retcode: "ReplayGetRecommendListRspRetcode" = betterproto.enum_field(1)
    type: "ReplayType" = betterproto.enum_field(2)
    stage_or_boss_id: int = betterproto.uint32_field(3)
    rank: int = betterproto.uint32_field(4)
    start_idx: int = betterproto.uint32_field(5)
    end_idx: int = betterproto.uint32_field(6)
    replay_list: List["Replay"] = betterproto.message_field(7)
    is_random: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class ReplayGetUploadListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ReplayGetUploadListRsp(betterproto.Message):
    retcode: "ReplayGetUploadListRspRetcode" = betterproto.enum_field(1)
    replay_list: List["Replay"] = betterproto.message_field(2)
    today_upload_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ReplayRecommendBrief(betterproto.Message):
    key: "ReplayRecommendBriefKey" = betterproto.message_field(1)
    num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ReplayRecommendBriefKey(betterproto.Message):
    type: "ReplayType" = betterproto.enum_field(1)
    stage_or_boss_id: int = betterproto.uint32_field(2)
    rank: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ReplayReportFileResultReq(betterproto.Message):
    token: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class ReplayReportFileResultRsp(betterproto.Message):
    retcode: "ReplayReportFileResultRspRetcode" = betterproto.enum_field(1)
    replay_id_u64: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class ReportBirthdayReq(betterproto.Message):
    birthday: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ReportBirthdayRsp(betterproto.Message):
    retcode: "ReportBirthdayRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ReportChapterActivityStageReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(2)
    floor: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ReportChapterActivityStageRsp(betterproto.Message):
    retcode: "ReportChapterActivityStageRspRetcode" = betterproto.enum_field(1)
    chapter_id: int = betterproto.uint32_field(2)
    stage_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ReportClickRechargeButtonNotify(betterproto.Message):
    product_name: str = betterproto.string_field(1)
    currency_code: str = betterproto.string_field(2)
    price: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class ReportClientDataVersionReq(betterproto.Message):
    version: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ReportClientDataVersionRsp(betterproto.Message):
    server_version: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ReportDlcDropItemReq(betterproto.Message):
    drop_item_list: List["DropItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ReportDlcDropItemRsp(betterproto.Message):
    retcode: "ReportDlcDropItemRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ReportOpenworldEndlessDataReq(betterproto.Message):
    type: "OpenworldEndlessDataType" = betterproto.enum_field(1)
    invasion: "OpenworldEndlessReprotInvasion" = betterproto.message_field(2)
    battle: "OpenworldEndlessReprotBattle" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ReportOpenworldEndlessDataRsp(betterproto.Message):
    retcode: "ReportOpenworldEndlessDataRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ReportReplayFrameReq(betterproto.Message):
    key: str = betterproto.string_field(1)
    replay_frame: "ReplayFrame" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ReportReplayFrameRsp(betterproto.Message):
    retcode: "ReportReplayFrameRspRetcode" = betterproto.enum_field(1)
    key: str = betterproto.string_field(2)
    seq: int = betterproto.uint32_field(3)
    count: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ReportRpgTaleStageReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    cur_floor: int = betterproto.uint32_field(2)
    client_data: str = betterproto.string_field(3)
    tale_id: int = betterproto.uint32_field(4)
    score: int = betterproto.uint32_field(5)
    monster_unique_id_list: List[int] = betterproto.uint32_field(6)
    monster_card_unique_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ReportRpgTaleStageRsp(betterproto.Message):
    retcode: "ReportRpgTaleStageRspRetcode" = betterproto.enum_field(1)
    stage_id: int = betterproto.uint32_field(2)
    cur_floor: int = betterproto.uint32_field(3)
    tale_id: int = betterproto.uint32_field(4)
    score: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ReportTvtBattleStageMessageNotify(betterproto.Message):
    message_list: List["TvtBattleStageMessage"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RequestLogoffReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class RequestLogoffRsp(betterproto.Message):
    retcode: "RequestLogoffRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ResetAdventureQuestReq(betterproto.Message):
    pool_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ResetAdventureQuestRsp(betterproto.Message):
    retcode: "ResetAdventureQuestRspRetcode" = betterproto.enum_field(1)
    pool_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ResetAvatarMissionAvatarReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ResetAvatarMissionAvatarRsp(betterproto.Message):
    retcode: "ResetAvatarMissionAvatarRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ResetChapterActivityExclusiveStageReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)
    group_id: int = betterproto.uint32_field(2)
    stage_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ResetChapterActivityExclusiveStageRsp(betterproto.Message):
    retcode: "ResetChapterActivityExclusiveStageRspRetcode" = betterproto.enum_field(1)
    chapter_id: int = betterproto.uint32_field(2)
    group_id: int = betterproto.uint32_field(3)
    stage_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ResetChapterActivityTalentReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ResetChapterActivityTalentRsp(betterproto.Message):
    retcode: "ResetChapterActivityTalentRspRetcode" = betterproto.enum_field(1)
    chapter_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ResetConsignedOrderReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ResetConsignedOrderRsp(betterproto.Message):
    retcode: "ResetConsignedOrderRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ResetDlcTowerProgressReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ResetDlcTowerProgressRsp(betterproto.Message):
    retcode: "ResetDlcTowerProgressRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ResetExtraStoryChallengeModeReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)
    difficulty: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ResetExtraStoryChallengeModeRsp(betterproto.Message):
    retcode: "ResetExtraStoryChallengeModeRspRetcode" = betterproto.enum_field(1)
    chapter_id: int = betterproto.uint32_field(2)
    difficulty: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ResetRogueStageReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ResetRogueStageRsp(betterproto.Message):
    retcode: "ResetRogueStageRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ResetScratchTicketPlateReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ResetScratchTicketPlateRsp(betterproto.Message):
    retcode: "ResetScratchTicketPlateRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ResetSecurityPasswordReq(betterproto.Message):
    is_withdraw: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class ResetSecurityPasswordRsp(betterproto.Message):
    retcode: "ResetSecurityPasswordRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ResetStageEnterTimesReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ResetStageEnterTimesRsp(betterproto.Message):
    retcode: "ResetStageEnterTimesRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ResetStigmataTitleReq(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ResetStigmataTitleRsp(betterproto.Message):
    retcode: "ResetStigmataTitleRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class RestaurantOrder(betterproto.Message):
    material_id: int = betterproto.uint32_field(1)
    price: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RestaurantRoom(betterproto.Message):
    room_id: int = betterproto.uint32_field(1)
    avatar_id: int = betterproto.uint32_field(2)
    material_id: int = betterproto.uint32_field(3)
    speed: float = betterproto.double_field(4)
    progress: float = betterproto.double_field(5)
    status: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ReunionCookActivity(betterproto.Message):
    cur_schedule_id: int = betterproto.uint32_field(1)
    start_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)
    cook_score: int = betterproto.uint32_field(4)
    last_settle_reward_score: int = betterproto.uint32_field(5)
    cook_history: List["ReunionCookHistory"] = betterproto.message_field(6)
    score_reward_group: int = betterproto.uint32_field(7)
    group_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ReunionCookData(betterproto.Message):
    book_id: int = betterproto.uint32_field(1)
    cook_times: int = betterproto.uint32_field(2)
    recycle_material_list: List["Material"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ReunionCookGetActivityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ReunionCookGetActivityRsp(betterproto.Message):
    retcode: "ReunionCookGetActivityRspRetcode" = betterproto.enum_field(1)
    reunion_cook_activity: "ReunionCookActivity" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ReunionCookHistory(betterproto.Message):
    book_id: int = betterproto.uint32_field(1)
    daily_num: int = betterproto.uint32_field(2)
    total_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ReunionCookMakeDinnerReq(betterproto.Message):
    book_id: int = betterproto.uint32_field(1)
    recycle_material_list: List["Material"] = betterproto.message_field(2)
    book_type: "ReunionCookBookType" = betterproto.enum_field(3)
    cook_data: List["ReunionCookData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ReunionCookMakeDinnerRsp(betterproto.Message):
    retcode: "ReunionCookMakeDinnerRspRetcode" = betterproto.enum_field(1)
    book_id: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ReunionCookTakeScoreRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ReunionCookTakeScoreRewardRsp(betterproto.Message):
    retcode: "ReunionCookTakeScoreRewardRspRetcode" = betterproto.enum_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class RewardData(betterproto.Message):
    exp: int = betterproto.uint32_field(1)
    scoin: int = betterproto.uint32_field(2)
    hcoin: int = betterproto.uint32_field(3)
    stamina: int = betterproto.uint32_field(4)
    friends_point: int = betterproto.uint32_field(6)
    item_list: List["RewardItemData"] = betterproto.message_field(7)
    exp_convert_scoin: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class RewardItemData(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    num: int = betterproto.uint32_field(3)
    split_fragment_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RewardLineActivity(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    score: int = betterproto.uint32_field(3)
    last_taken_reward_score: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RogueBuff(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    type: "RogueBuffType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class RogueStageAvatar(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    position: int = betterproto.uint32_field(2)
    hp_percent: int = betterproto.uint32_field(3)
    sp_percent: int = betterproto.uint32_field(4)
    prop_list: List["RogueStageAvatarProp"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class RogueStageAvatarProp(betterproto.Message):
    prop_id: int = betterproto.uint32_field(1)
    value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RogueStageBeginReq(betterproto.Message):
    avatar_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RogueStageBeginRsp(betterproto.Message):
    retcode: "RogueStageBeginRspRetcode" = betterproto.enum_field(1)
    energy: int = betterproto.uint32_field(2)
    random_seed: int = betterproto.uint32_field(3)
    drop_item_list: List["DropItem"] = betterproto.message_field(4)
    hard_level: int = betterproto.uint32_field(5)
    progress: int = betterproto.uint32_field(6)
    buff_list: List["RogueStageBuff"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class RogueStageBuff(betterproto.Message):
    buff_id: int = betterproto.uint32_field(1)
    value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RogueStageEndReq(betterproto.Message):
    end_status: "StageEndStatus" = betterproto.enum_field(1)
    avatar_list: List["RogueStageAvatar"] = betterproto.message_field(2)
    drop_item_list: List["DropItem"] = betterproto.message_field(3)
    energy: int = betterproto.uint32_field(4)
    buff_list: List["RogueStageBuff"] = betterproto.message_field(5)
    stage_pass_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class RogueStageEndRsp(betterproto.Message):
    retcode: "RogueStageEndRspRetcode" = betterproto.enum_field(1)
    end_status: "StageEndStatus" = betterproto.enum_field(2)
    drop_item_list: List["DropItem"] = betterproto.message_field(3)
    progress: int = betterproto.uint32_field(4)
    max_next_hard_level: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class RogueTowerGetActivityReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RogueTowerGetActivityRsp(betterproto.Message):
    retcode: "RogueTowerGetActivityRspRetcode" = betterproto.enum_field(1)
    id: int = betterproto.uint32_field(2)
    challenge_status: "RogueTowerGetActivityRspRogueTowerChallengeStatus" = (
        betterproto.message_field(3)
    )
    buff_status: "RogueTowerGetActivityRspRogueTowerBuffStatus" = (
        betterproto.message_field(4)
    )
    buff_candidate: "RogueTowerGetActivityRspRogueTowerCandidate" = (
        betterproto.message_field(5)
    )
    endless_status: "RogueTowerGetActivityRspRogueTowerEndlessStatus" = (
        betterproto.message_field(6)
    )
    save_list: List[
        "RogueTowerGetActivityRspRogueTowerSnapshot"
    ] = betterproto.message_field(7)
    left_support_avatar_levelup_times: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class RogueTowerGetActivityRspWaitPool(betterproto.Message):
    pool_id: int = betterproto.uint32_field(1)
    left_times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RogueTowerGetActivityRspRandomSiteStage(betterproto.Message):
    site_id: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RogueTowerGetActivityRspRogueTowerCandidate(betterproto.Message):
    cur_pool_id: int = betterproto.uint32_field(1)
    cur_candidate_id_list: List[int] = betterproto.uint32_field(3)
    wait_pool_list: List[
        "RogueTowerGetActivityRspWaitPool"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class RogueTowerGetActivityRspRogueTowerBuffStatus(betterproto.Message):
    refresh_buff_times: int = betterproto.uint32_field(1)
    buff_list: List["RogueBuff"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class RogueTowerGetActivityRspRogueTowerChallengeStatus(betterproto.Message):
    avatar_list: List["ChallengeModeAvatar"] = betterproto.message_field(1)
    is_challenge_fail: bool = betterproto.bool_field(2)
    cur_area_id: int = betterproto.uint32_field(3)
    site_stage_list: List[
        "RogueTowerGetActivityRspRandomSiteStage"
    ] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class RogueTowerGetActivityRspRogueTowerEndlessScore(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RogueTowerGetActivityRspRogueTowerEndlessStatus(betterproto.Message):
    endless_score: int = betterproto.uint32_field(1)
    last_settle_reward_score: int = betterproto.uint32_field(2)
    endless_floor: int = betterproto.uint32_field(3)
    avatar_max_score_list: List[
        "RogueTowerGetActivityRspRogueTowerEndlessScore"
    ] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class RogueTowerGetActivityRspRogueTowerSnapshot(betterproto.Message):
    stage_pass_count: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)
    avatar_id_list: List[int] = betterproto.uint32_field(3)
    selected_buff_list: List["RogueBuff"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class RogueTowerGetCandidateBuffReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    pool_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RogueTowerGetCandidateBuffRsp(betterproto.Message):
    retcode: "RogueTowerGetCandidateBuffRspRetcode" = betterproto.enum_field(1)
    id: int = betterproto.uint32_field(2)
    pool_id: int = betterproto.uint32_field(3)
    buff_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RogueTowerGetRankReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    avatar_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RogueTowerGetRankRsp(betterproto.Message):
    retcode: "RogueTowerGetRankRspRetcode" = betterproto.enum_field(1)
    id: int = betterproto.uint32_field(2)
    avatar_id: int = betterproto.uint32_field(3)
    rank_data: "RankShowData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class RogueTowerLevelUpBuffReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    buff_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RogueTowerLevelUpBuffRsp(betterproto.Message):
    retcode: "RogueTowerLevelUpBuffRspRetcode" = betterproto.enum_field(1)
    id: int = betterproto.uint32_field(2)
    buff_id: int = betterproto.uint32_field(3)
    buff_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RogueTowerLevelupSupportAvatarReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    support_avatar_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RogueTowerLevelupSupportAvatarRsp(betterproto.Message):
    retcode: "RogueTowerLevelupSupportAvatarRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class RogueTowerRefreshBuffReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RogueTowerRefreshBuffRsp(betterproto.Message):
    retcode: "RogueTowerRefreshBuffRspRetcode" = betterproto.enum_field(1)
    id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RogueTowerSaveReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    index: int = betterproto.uint32_field(2)
    stage_pass_count: int = betterproto.uint32_field(3)
    score: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RogueTowerSaveRsp(betterproto.Message):
    retcode: "RogueTowerSaveRspRetcode" = betterproto.enum_field(1)
    id: int = betterproto.uint32_field(2)
    index: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RogueTowerSelectBuffReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    buff_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RogueTowerSelectBuffRsp(betterproto.Message):
    retcode: "RogueTowerSelectBuffRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class RogueTowerSelectChallengeAvatarReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    avatar_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RogueTowerSelectChallengeAvatarRsp(betterproto.Message):
    retcode: "RogueTowerSelectChallengeAvatarRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class RoomChatParam(betterproto.Message):
    is_broadcast_msg: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class RoomGetStatusReq(betterproto.Message):
    room_id: int = betterproto.uint32_field(1)
    member_data: "RoomMember" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class RoomGetStatusRsp(betterproto.Message):
    retcode: "RoomGetStatusRspRetcode" = betterproto.enum_field(1)
    player_room_status: "PlayerRoomStatus" = betterproto.message_field(2)
    member_list: List["RoomMember"] = betterproto.message_field(3)
    room_info: "RoomInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class RoomInfo(betterproto.Message):
    sub_type: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RoomInvitationNotify(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)
    room_mode: "RoomMode" = betterproto.enum_field(2)
    room_id: int = betterproto.uint32_field(3)
    from_player: "RoomMember" = betterproto.message_field(4)
    room_info: "RoomInfo" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class RoomKickMemberReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RoomKickMemberRsp(betterproto.Message):
    retcode: "RoomKickMemberRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class RoomMatchTimeoutNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class RoomMember(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    region_name: str = betterproto.string_field(2)
    nickname: str = betterproto.string_field(3)
    level: int = betterproto.uint32_field(4)
    head_avatar_id: int = betterproto.uint32_field(5)
    frame_id: int = betterproto.uint32_field(6)
    dress_id: int = betterproto.uint32_field(7)
    status: "RoomMemberStatus" = betterproto.enum_field(8)
    position: "RoomMemberMemberPosition" = betterproto.enum_field(9)
    mode_bytes: bytes = betterproto.bytes_field(10)
    custom_head_id: int = betterproto.uint32_field(11)
    client_status: "RoomClientStatus" = betterproto.enum_field(12)
    voice_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class RoomMemberSetVoiceIdReq(betterproto.Message):
    voice_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RoomMemberSetVoiceIdRsp(betterproto.Message):
    retcode: "RoomMemberSetVoiceIdRspRetcode" = betterproto.enum_field(1)
    uid: int = betterproto.uint32_field(2)
    voice_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RoomSwitchMemberStatusReq(betterproto.Message):
    status: "RoomMemberStatus" = betterproto.enum_field(1)
    client_status: "RoomClientStatus" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class RoomSwitchMemberStatusRsp(betterproto.Message):
    retcode: "RoomSwitchMemberStatusRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class RoomTransferLeaderReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RoomTransferLeaderRsp(betterproto.Message):
    retcode: "RoomTransferLeaderRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class RpgDungeonActivity(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    quest_list: List["RpgDungeonQuest"] = betterproto.message_field(2)
    candidate_buff_id_list: List[int] = betterproto.uint32_field(3)
    buff_list: List["RpgDungeonBuff"] = betterproto.message_field(4)
    pool_list: List["RpgDungeonBuffPool"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class RpgDungeonBuff(betterproto.Message):
    buff_id: int = betterproto.uint32_field(1)
    buff_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RpgDungeonBuffPool(betterproto.Message):
    pool_id: int = betterproto.uint32_field(1)
    left_times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RpgDungeonGetActivityReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RpgDungeonGetActivityRsp(betterproto.Message):
    retcode: "RpgDungeonGetActivityRspRetcode" = betterproto.enum_field(1)
    activity: "RpgDungeonActivity" = betterproto.message_field(2)
    dungeon_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RpgDungeonGetCandidateBuffReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(1)
    pool_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RpgDungeonGetCandidateBuffRsp(betterproto.Message):
    retcode: "RpgDungeonGetCandidateBuffRspRetcode" = betterproto.enum_field(1)
    dungeon_id: int = betterproto.uint32_field(2)
    pool_id: int = betterproto.uint32_field(3)
    buff_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RpgDungeonQuest(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    avatar_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RpgDungeonSelectBuffReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(1)
    buff_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RpgDungeonSelectBuffRsp(betterproto.Message):
    retcode: "RpgDungeonSelectBuffRspRetcode" = betterproto.enum_field(1)
    dungeon_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RpgDungeonSelectQuestReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(1)
    quest_id: int = betterproto.uint32_field(2)
    avatar_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RpgDungeonSelectQuestRsp(betterproto.Message):
    retcode: "RpgDungeonSelectQuestRspRetcode" = betterproto.enum_field(1)
    dungeon_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RpgTaleAbility(betterproto.Message):
    ability_id: int = betterproto.uint32_field(1)
    ability_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RpgTaleArea(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RpgTaleData(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)
    site_list: List["RpgTaleSite"] = betterproto.message_field(2)
    cur_site_id: int = betterproto.uint32_field(3)
    reward_taken_collection_count_list: List[int] = betterproto.uint32_field(4)
    end_time: int = betterproto.uint32_field(5)
    finished_event_id_list: List[int] = betterproto.uint32_field(8)
    area_list: List["RpgTaleArea"] = betterproto.message_field(9)
    overall_list: List["RpgTaleOverall"] = betterproto.message_field(10)
    schedule_id: int = betterproto.uint32_field(11)
    stage_list: List["RpgTaleStage"] = betterproto.message_field(12)
    total_score_drop_list: List["RpgTaleTotalScoreDrop"] = betterproto.message_field(13)
    ability_list: List["RpgTaleAbility"] = betterproto.message_field(14)
    site_refresh_num: int = betterproto.uint32_field(15)
    last_reset_site_refresh_num_time: int = betterproto.uint32_field(16)
    qavatar_battle: "RpgTaleQAvatarBattle" = betterproto.message_field(17)
    stage_enter_times_limit_list: List[
        "RpgTaleStageEnterTimesLimit"
    ] = betterproto.message_field(18)


@dataclass(eq=False, repr=False)
class RpgTaleEvent(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    event_type: int = betterproto.uint32_field(2)
    event_param_list: List[int] = betterproto.uint32_field(3)
    reward_data: "RewardData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class RpgTaleEventNotify(betterproto.Message):
    event_data: "RpgTaleEvent" = betterproto.message_field(1)
    tale_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RpgTaleFlag(betterproto.Message):
    type: "RpgTaleFlagType" = betterproto.enum_field(1)
    param_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RpgTaleGetPvpDivisionRewardReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RpgTaleGetPvpDivisionRewardRsp(betterproto.Message):
    retcode: "RpgTaleGetPvpDivisionRewardRspRetcode" = betterproto.enum_field(1)
    tale_id: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class RpgTaleLevelUpAbilityReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)
    ability_id: int = betterproto.uint32_field(2)
    target_level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RpgTaleLevelUpAbilityRsp(betterproto.Message):
    retcode: "RpgTaleLevelUpAbilityRspRetcode" = betterproto.enum_field(1)
    tale_id: int = betterproto.uint32_field(2)
    ability_id: int = betterproto.uint32_field(3)
    limit_flag_list: List["RpgTaleFlag"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class RpgTaleOverall(betterproto.Message):
    overall_id: int = betterproto.uint32_field(1)
    value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RpgTaleProgress(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RpgTaleQAvatarBattle(betterproto.Message):
    cur_score: int = betterproto.uint32_field(1)
    has_take_reward_score: int = betterproto.uint32_field(2)
    choose_virtual_avatar_id: int = betterproto.uint32_field(3)
    win_num: int = betterproto.uint32_field(4)
    win_streak: int = betterproto.uint32_field(5)
    virtual_avatar_drop_num: int = betterproto.uint32_field(6)
    got_material_list: List[
        "RpgTaleQAvatarSettleGotMaterial"
    ] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class RpgTaleQAvatarSettleGotMaterial(betterproto.Message):
    material_id: int = betterproto.uint32_field(1)
    material_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RpgTaleRefreshSiteReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RpgTaleRefreshSiteRsp(betterproto.Message):
    retcode: "RpgTaleRefreshSiteRspRetcode" = betterproto.enum_field(1)
    tale_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RpgTaleRefreshTicketReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RpgTaleRefreshTicketRsp(betterproto.Message):
    retcode: "RpgTaleRefreshTicketRspRetcode" = betterproto.enum_field(1)
    tale_id: int = betterproto.uint32_field(2)
    ticket_refresh_list: List["RpgTaleTicketRefreshInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class RpgTaleResetTowerReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RpgTaleResetTowerRsp(betterproto.Message):
    retcode: "RpgTaleResetTowerRspRetcode" = betterproto.enum_field(1)
    tale_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RpgTaleSetOverallReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)
    overall_id: int = betterproto.uint32_field(2)
    value: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RpgTaleSetOverallRsp(betterproto.Message):
    retcode: "RpgTaleSetOverallRspRetcode" = betterproto.enum_field(1)
    tale_id: int = betterproto.uint32_field(2)
    overall_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RpgTaleSetPvpVirtualAvatarReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)
    virtual_avatar_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RpgTaleSetPvpVirtualAvatarRsp(betterproto.Message):
    retcode: "RpgTaleSetPvpVirtualAvatarRspRetcode" = betterproto.enum_field(1)
    tale_id: int = betterproto.uint32_field(2)
    virtual_avatar_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RpgTaleSite(betterproto.Message):
    site_id: int = betterproto.uint32_field(1)
    area_id: int = betterproto.uint32_field(2)
    status: "RpgTaleSiteStatus" = betterproto.enum_field(3)
    content_type: "RpgTaleSiteContentType" = betterproto.enum_field(4)
    content_param: str = betterproto.string_field(5)
    finished_matrix_event_id_list: List[int] = betterproto.uint32_field(6)
    event_type: int = betterproto.uint32_field(7)
    event_param: int = betterproto.uint32_field(8)
    cur_progress: "RpgTaleProgress" = betterproto.message_field(9)
    pass_times: int = betterproto.uint32_field(10)
    status_end_time: int = betterproto.uint32_field(11)
    close_time: int = betterproto.uint32_field(12)
    unlock_limit_flag_list: List["RpgTaleFlag"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class RpgTaleStage(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    max_floor: int = betterproto.uint32_field(2)
    max_score: int = betterproto.uint32_field(3)
    score_drop: "RpgTaleStageScoreDrop" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class RpgTaleStageEnterTimesLimit(betterproto.Message):
    limit_id: int = betterproto.uint32_field(1)
    enter_times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RpgTaleStageScoreDrop(betterproto.Message):
    total_num: int = betterproto.uint32_field(1)
    daily_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RpgTaleSweepReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    times: int = betterproto.uint32_field(2)
    tale_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RpgTaleSweepRsp(betterproto.Message):
    retcode: "RpgTaleSweepRspRetcode" = betterproto.enum_field(1)
    stage_id: int = betterproto.uint32_field(2)
    times: int = betterproto.uint32_field(3)
    reward_data: "RewardData" = betterproto.message_field(4)
    tale_id: int = betterproto.uint32_field(5)
    max_floor: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class RpgTaleSwitchData(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)
    site_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RpgTaleTicketRefreshInfo(betterproto.Message):
    ticket_id: int = betterproto.uint32_field(1)
    material_id: int = betterproto.uint32_field(2)
    add_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RpgTaleTotalScoreDrop(betterproto.Message):
    material_id: int = betterproto.uint32_field(1)
    daily_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SanctuaryActivityData(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    exp: int = betterproto.uint32_field(3)
    has_take_reward_level: int = betterproto.uint32_field(4)
    product_counter_time: int = betterproto.uint32_field(5)
    product_storage_num: int = betterproto.uint32_field(6)
    is_init: bool = betterproto.bool_field(7)
    player_level_group_id: int = betterproto.uint32_field(8)
    stage_id_list: List[int] = betterproto.uint32_field(9)
    is_new_stage: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class SanctuaryGetMainInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SanctuaryGetMainInfoRsp(betterproto.Message):
    retcode: "SanctuaryGetMainInfoRspRetcode" = betterproto.enum_field(1)
    activity_data: "SanctuaryActivityData" = betterproto.message_field(2)
    begin_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SanctuaryStageEndNotify(betterproto.Message):
    total_add_exp: int = betterproto.uint32_field(1)
    bonus_add_exp: int = betterproto.uint32_field(2)
    old_level: int = betterproto.uint32_field(3)
    old_exp: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SanctuaryStartNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SanctuaryTakeLevelRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SanctuaryTakeLevelRewardRsp(betterproto.Message):
    retcode: "SanctuaryTakeLevelRewardRspRetcode" = betterproto.enum_field(1)
    has_take_reward_level: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SanctuaryTakeProductReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SanctuaryTakeProductRsp(betterproto.Message):
    retcode: "SanctuaryTakeProductRspRetcode" = betterproto.enum_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ScDlcAchievement(betterproto.Message):
    mission_id: int = betterproto.uint32_field(1)
    finish_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ScDlcActiveFeverAbilityReq(betterproto.Message):
    ability_group_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ScDlcActiveFeverAbilityRsp(betterproto.Message):
    retcode: "ScDlcActiveFeverAbilityRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ScDlcAvatar(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    talent_list: List["ScDlcTalent"] = betterproto.message_field(3)
    equip_talent_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ScDlcDailyQuestData(betterproto.Message):
    quest_list: List["OpenworldQuest"] = betterproto.message_field(1)
    left_accept_times: int = betterproto.uint32_field(2)
    refresh_left_times: int = betterproto.uint32_field(3)
    refresh_cost_material_id: int = betterproto.uint32_field(4)
    refresh_cost_material_num: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ScDlcFever(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    exp: int = betterproto.uint32_field(2)
    fever_slot_num: int = betterproto.uint32_field(3)
    has_take_reward_level: int = betterproto.uint32_field(4)
    skill_suite_list: List["FeverSkillSuite"] = betterproto.message_field(5)
    active_suite_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ScDlcMpAvatar(betterproto.Message):
    sc_dlc_avatar_id: int = betterproto.uint32_field(1)
    talent_list: List["ScDlcMpTalent"] = betterproto.message_field(2)
    equip_talent_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ScDlcMpTalent(betterproto.Message):
    talent_id: int = betterproto.uint32_field(1)
    talent_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ScDlcReviveAvatarReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ScDlcReviveAvatarRsp(betterproto.Message):
    retcode: "ScDlcReviveAvatarRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ScDlcStatus(betterproto.Message):
    sc_dlc_fever_score: int = betterproto.uint32_field(1)
    sc_dlc_climax_score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ScDlcSupportNpc(betterproto.Message):
    npc_id: int = betterproto.uint32_field(1)
    exp: int = betterproto.uint32_field(2)
    level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ScDlcSweepTowerReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ScDlcSweepTowerRsp(betterproto.Message):
    retcode: "ScDlcSweepTowerRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ScDlcTalent(betterproto.Message):
    talent_id: int = betterproto.uint32_field(1)
    talent_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ScDlcTowerAvatarInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    hp_percent: int = betterproto.uint32_field(2)
    sp_percent: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ScDlcTowerReviveAvatarReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ScDlcTowerReviveAvatarRsp(betterproto.Message):
    retcode: "ScDlcTowerReviveAvatarRspRetcode" = betterproto.enum_field(1)
    revive_times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ScDlcTowerScheduleRewardNotify(betterproto.Message):
    score: int = betterproto.uint32_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ScDlcTowerStageBeginReq(betterproto.Message):
    avatar_id_list: List[int] = betterproto.uint32_field(1)
    support_avatar_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ScDlcTowerStageBeginRsp(betterproto.Message):
    retcode: "ScDlcTowerStageBeginRspRetcode" = betterproto.enum_field(1)
    cur_floor: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ScDlcTowerStageEndReq(betterproto.Message):
    end_status: "StageEndStatus" = betterproto.enum_field(1)
    floor: int = betterproto.uint32_field(2)
    score: int = betterproto.uint32_field(3)
    avatar_info_list: List["ScDlcTowerAvatarInfo"] = betterproto.message_field(4)
    drop_item_list: List["DropItem"] = betterproto.message_field(5)
    sc_dlc_fever_score: int = betterproto.uint32_field(6)
    sc_dlc_climax_score: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ScDlcTowerStageEndRsp(betterproto.Message):
    retcode: "ScDlcTowerStageEndRspRetcode" = betterproto.enum_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)
    score: int = betterproto.uint32_field(3)
    floor: int = betterproto.uint32_field(4)
    settle_floor: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ScheduledMapSiteActivity(betterproto.Message):
    stage_group_schedule_list: List[
        "GeneralActivityStageGroupScheduleInfo"
    ] = betterproto.message_field(1)
    enter_times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ScoinExchangeReq(betterproto.Message):
    purple_jade_num: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ScoinExchangeRsp(betterproto.Message):
    retcode: "ScoinExchangeRspRetcode" = betterproto.enum_field(1)
    hcoin_cost: int = betterproto.uint32_field(2)
    scoin_get: int = betterproto.uint32_field(3)
    boost_rate: int = betterproto.uint32_field(4)
    purple_jade_cost: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ScratchReq(betterproto.Message):
    x_pos: int = betterproto.uint32_field(1)
    y_pos: int = betterproto.uint32_field(2)
    activity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ScratchRsp(betterproto.Message):
    retcode: "ScratchRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ScratchTicketPoint(betterproto.Message):
    x_pos: int = betterproto.uint32_field(1)
    y_pos: int = betterproto.uint32_field(2)
    ticket_item_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SealedMatchPlayer(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    player_level: int = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(4)
    rank_level: "SealedPlayerRankLevel" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class SealedModeAbandonTicketReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SealedModeAbandonTicketRsp(betterproto.Message):
    retcode: "SealedModeAbandonTicketRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SealedModeBattleBeginNotify(betterproto.Message):
    begin_time: int = betterproto.uint32_field(1)
    round: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SealedModeCancelMatchReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SealedModeCancelMatchRsp(betterproto.Message):
    retcode: "SealedModeCancelMatchRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SealedModeEvent(betterproto.Message):
    open_time: int = betterproto.uint32_field(1)
    close_time: int = betterproto.uint32_field(2)
    event_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SealedModeExchangeAvatarReq(betterproto.Message):
    index_lhs: int = betterproto.uint32_field(1)
    index_rhs: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SealedModeExchangeAvatarRsp(betterproto.Message):
    retcode: "SealedModeExchangeAvatarRspRetcode" = betterproto.enum_field(1)
    avatar_suite_list: List["AvatarSuite"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SealedModeExchangeEquipReq(betterproto.Message):
    equip_from: "SealedModeExchangeEquipReqSealedModeEquip" = betterproto.message_field(
        1
    )
    equip_to: "SealedModeExchangeEquipReqSealedModeEquip" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SealedModeExchangeEquipReqSealedModeEquip(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    avatar_object_id: int = betterproto.uint32_field(2)
    slot: "EquipmentSlot" = betterproto.enum_field(3)
    equip_object_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SealedModeExchangeEquipRsp(betterproto.Message):
    retcode: "SealedModeExchangeEquipRspRetcode" = betterproto.enum_field(1)
    avatar_suite_list: List["AvatarSuite"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SealedModeGetMatchInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SealedModeGetMatchInfoRsp(betterproto.Message):
    retcode: "SealedModeGetMatchInfoRspRetcode" = betterproto.enum_field(1)
    match_info: "SealedModeMatchInfo" = betterproto.message_field(2)
    match_player_list: List["SealedMatchPlayer"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SealedModeGetPlayerStatusReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SealedModeGetPlayerStatusRsp(betterproto.Message):
    retcode: "SealedModeGetPlayerStatusRspRetcode" = betterproto.enum_field(1)
    status: "SealedModePlayerStatus" = betterproto.enum_field(2)
    match_info: "SealedModeMatchInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SealedModeGetRankInfoReq(betterproto.Message):
    unique_ticket_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SealedModeGetRankInfoRsp(betterproto.Message):
    retcode: "SealedModeGetRankInfoRspRetcode" = betterproto.enum_field(1)
    rank_level: "SealedPlayerRankLevel" = betterproto.message_field(2)
    round_rank_list: List["SealedModeRoundRank"] = betterproto.message_field(3)
    reward_taken_level_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SealedModeGetTotalRewardScoreInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SealedModeGetTotalRewardScoreInfoRsp(betterproto.Message):
    retcode: "SealedModeGetTotalRewardScoreInfoRspRetcode" = betterproto.enum_field(1)
    total_reward_score: int = betterproto.uint32_field(2)
    reward_taken_total_score_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SealedModeMatchInfo(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    match_begin_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SealedModePlayerScoreNotify(betterproto.Message):
    player_list: List["SealedRoomPlayer"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SealedModeRankLevelRewardNotify(betterproto.Message):
    rank_level: int = betterproto.uint32_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SealedModeReceiveItemNotify(betterproto.Message):
    item: "SealedModeUseItem" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SealedModeRoundRank(betterproto.Message):
    round: int = betterproto.uint32_field(1)
    rank: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SealedModeSelectionNotify(betterproto.Message):
    selection_suite: "SealedSuiteSelection" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SealedModeSelectReq(betterproto.Message):
    step: "SealedSuiteSelectionStep" = betterproto.enum_field(1)
    index: int = betterproto.uint32_field(2)
    id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SealedModeSelectRsp(betterproto.Message):
    retcode: "SealedModeSelectRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SealedModeSettleNotify(betterproto.Message):
    settle_info_list: List["SealedSettleInfo"] = betterproto.message_field(1)
    round: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SealedModeStartMatchReq(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    player: "SealedMatchPlayer" = betterproto.message_field(2)
    elo_score: float = betterproto.double_field(3)
    ticket_id: int = betterproto.uint32_field(4)
    round: int = betterproto.uint32_field(5)
    rank_level: int = betterproto.uint32_field(6)
    rank_star: int = betterproto.uint32_field(7)
    ticket_time: int = betterproto.uint32_field(8)
    avatar_suite_list: List["AvatarSuite"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class SealedModeStartMatchRsp(betterproto.Message):
    retcode: "SealedModeStartMatchRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SealedModeStartNewSelectionReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SealedModeStartNewSelectionRsp(betterproto.Message):
    retcode: "SealedModeStartNewSelectionRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SealedModeStartSelectionReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SealedModeStartSelectionRsp(betterproto.Message):
    retcode: "SealedModeStartSelectionRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SealedModeSyncLevelInfoReq(betterproto.Message):
    seq: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    block_item_unique_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SealedModeSyncLevelInfoRsp(betterproto.Message):
    retcode: "SealedModeSyncLevelInfoRspRetcode" = betterproto.enum_field(1)
    level: int = betterproto.uint32_field(2)
    use_item_list: List["SealedModeUseItem"] = betterproto.message_field(3)
    seq: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SealedModeTakeTotalScoreRewardReq(betterproto.Message):
    total_score: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SealedModeTakeTotalScoreRewardRsp(betterproto.Message):
    retcode: "SealedModeTakeTotalScoreRewardRspRetcode" = betterproto.enum_field(1)
    total_score: int = betterproto.uint32_field(2)
    reward_data_list: List["RewardData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SealedModeUpdateCheatDataReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    event_id: int = betterproto.uint32_field(2)
    cheat_data_list: List["StageCheatData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SealedModeUpdateCheatDataRsp(betterproto.Message):
    retcode: "SealedModeUpdateCheatDataRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SealedModeUpdateScoreReq(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SealedModeUpdateScoreRsp(betterproto.Message):
    retcode: "SealedModeUpdateScoreRspRetcode" = betterproto.enum_field(1)
    level: int = betterproto.uint32_field(2)
    score: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SealedModeUseItem(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    item_id: int = betterproto.uint32_field(2)
    from_uid: int = betterproto.uint32_field(3)
    to_uid: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SealedModeUseItemReq(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    to_uid_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SealedModeUseItemRsp(betterproto.Message):
    retcode: "SealedModeUseItemRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SealedModeUseTicketReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SealedModeUseTicketRsp(betterproto.Message):
    retcode: "SealedModeUseTicketRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SealedModeWinBattleReq(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SealedModeWinBattleRsp(betterproto.Message):
    retcode: "SealedModeWinBattleRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SealedModeWinnerNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SealedPlayerRankLevel(betterproto.Message):
    rank_level: int = betterproto.uint32_field(1)
    rank_star: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SealedRoomPlayer(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    score: int = betterproto.uint32_field(3)
    rank: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SealedSettleInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    score: int = betterproto.uint32_field(3)
    time_cost: int = betterproto.uint32_field(4)
    bonus_points: int = betterproto.uint32_field(5)
    total_bonus_points: int = betterproto.uint32_field(6)
    avatar_suite_list: List["AvatarSuite"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class SealedSuiteSelection(betterproto.Message):
    status: "SealedSuiteSelectionStatus" = betterproto.enum_field(1)
    begin_time: int = betterproto.uint32_field(2)
    step: "SealedSuiteSelectionStep" = betterproto.enum_field(3)
    choice_list: List[int] = betterproto.uint32_field(4)
    avatar_suite_list: List["AvatarSuite"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class SearchArmadaReq(betterproto.Message):
    name: str = betterproto.string_field(1)
    label_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SearchArmadaRsp(betterproto.Message):
    retcode: "SearchArmadaRspRetcode" = betterproto.enum_field(1)
    armada_list: List["ArmadaBriefData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SecurityPasswordInfo(betterproto.Message):
    remain_fail_times: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class SecurityPasswordOpReq(betterproto.Message):
    password: str = betterproto.string_field(1)
    op_type: "SecurityPasswordOpType" = betterproto.enum_field(2)
    para_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SecurityPasswordOpRsp(betterproto.Message):
    retcode: "SecurityPasswordOpRspRetcode" = betterproto.enum_field(1)
    op_type: "SecurityPasswordOpType" = betterproto.enum_field(2)
    security_password_info: "SecurityPasswordInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SecurityPasswordRejectionNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SelectAdventureQuestReq(betterproto.Message):
    pool_id: int = betterproto.uint32_field(1)
    avatar_list: List[int] = betterproto.uint32_field(2)
    elf_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SelectAdventureQuestRsp(betterproto.Message):
    retcode: "SelectAdventureQuestRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SelectAvatarEquipSuiteReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    suite_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SelectAvatarEquipSuiteRsp(betterproto.Message):
    retcode: "SelectAvatarEquipSuiteRspRetcode" = betterproto.enum_field(1)
    succ_num: int = betterproto.uint32_field(2)
    suite_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SelectAvatarSuiteReq(betterproto.Message):
    sys_id: int = betterproto.uint32_field(1)
    step: int = betterproto.uint32_field(2)
    index: int = betterproto.uint32_field(3)
    id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SelectAvatarSuiteRsp(betterproto.Message):
    retcode: "SelectAvatarSuiteRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SelectDlcTalentAffixReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    talent_id: int = betterproto.uint32_field(2)
    is_select: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class SelectDlcTalentAffixRsp(betterproto.Message):
    retcode: "SelectDlcTalentAffixRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SelectGodWarChallengeAvatarReq(betterproto.Message):
    god_war_id: int = betterproto.uint32_field(1)
    tale_id: int = betterproto.uint32_field(2)
    avatar_id_list: List[int] = betterproto.uint32_field(3)
    support_avatar_id_list: List[int] = betterproto.uint32_field(4)
    elf_id: int = betterproto.uint32_field(5)
    extra_item_id: int = betterproto.uint32_field(6)
    is_use_virtual_avatar: bool = betterproto.bool_field(7)
    boon_buff_id_list: List[int] = betterproto.uint32_field(8)
    step_level: int = betterproto.uint32_field(9)
    assistant_extra_item_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SelectGodWarChallengeAvatarRsp(betterproto.Message):
    retcode: "SelectGodWarChallengeAvatarRspRetcode" = betterproto.enum_field(1)
    god_war_id: int = betterproto.uint32_field(2)
    tale_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SelectNewStigmataRuneReq(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    is_select: bool = betterproto.bool_field(2)
    times_type: "StigmataRefineTimesType" = betterproto.enum_field(3)
    select_unique_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SelectNewStigmataRuneRsp(betterproto.Message):
    retcode: "SelectNewStigmataRuneRspRetcode" = betterproto.enum_field(1)
    select_unique_id: int = betterproto.uint32_field(2)
    is_select: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class SellAvatarFragmentReq(betterproto.Message):
    fragment_list: List["AvatarFragment"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SellAvatarFragmentRsp(betterproto.Message):
    retcode: "SellAvatarFragmentRspRetcode" = betterproto.enum_field(1)
    scoin_add: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SendArmadaSystemChatMsgNotify(betterproto.Message):
    chat_msg: "ArmadaSystemChatMsg" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SendChatMsgNotify(betterproto.Message):
    chat_msg: "ChatMsg" = betterproto.message_field(1)
    target_uid_list: List[int] = betterproto.uint32_field(2)
    extra_chat_param: "ExtraChatParam" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SendChatRedEnvelopeReq(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    channel: int = betterproto.uint32_field(2)
    msg: str = betterproto.string_field(3)
    nickname: str = betterproto.string_field(4)
    armada_id: int = betterproto.uint32_field(5)
    red_envelope_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SendChatRedEnvelopeRsp(betterproto.Message):
    retcode: "SendChatRedEnvelopeRspRetcode" = betterproto.enum_field(1)
    item_id: int = betterproto.uint32_field(2)
    channel: int = betterproto.uint32_field(3)
    msg: str = betterproto.string_field(4)
    red_envelope_id: int = betterproto.uint32_field(5)
    expire_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SendCommonChatworldMsgNotify(betterproto.Message):
    msg: "ChatworldMsg" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SendDanmakuReq(betterproto.Message):
    danmaku_slot: int = betterproto.uint32_field(1)
    content: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class SendDanmakuRsp(betterproto.Message):
    retcode: "SendDanmakuRspRetcode" = betterproto.enum_field(1)
    danmaku_slot: int = betterproto.uint32_field(2)
    content: "DanmakuContent" = betterproto.message_field(3)
    blacklist_expire_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SendPlayerCardMsgReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)
    msg: str = betterproto.string_field(2)
    chat_msg: "ChatMsg" = betterproto.message_field(3)
    msg_num_limit: int = betterproto.uint32_field(4)
    is_friend: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class SendPlayerCardMsgRsp(betterproto.Message):
    retcode: "SendPlayerCardMsgRspRetcode" = betterproto.enum_field(1)
    target_uid: int = betterproto.uint32_field(2)
    msg_index: int = betterproto.uint32_field(3)
    forbidden_time: int = betterproto.uint32_field(4)
    chat_msg: "ChatMsg" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class SendRoomChatMsgNotify(betterproto.Message):
    chat_msg: "ChatMsg" = betterproto.message_field(1)
    is_broadcast_msg: bool = betterproto.bool_field(2)
    room_mode: "RoomMode" = betterproto.enum_field(3)
    target_uid_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SensitiveWordCheckReq(betterproto.Message):
    content: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class SensitiveWordCheckRsp(betterproto.Message):
    retcode: "SensitiveWordCheckRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ServerStopGachaMsgData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SetArmadaApplyReq(betterproto.Message):
    apply_level: int = betterproto.uint32_field(1)
    auto_pass: bool = betterproto.bool_field(2)
    auto_pass_level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SetArmadaApplyRsp(betterproto.Message):
    retcode: "SetArmadaApplyRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SetArmadaBulletinReq(betterproto.Message):
    bulletin: str = betterproto.string_field(1)
    contact: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class SetArmadaBulletinRsp(betterproto.Message):
    retcode: "SetArmadaBulletinRspRetcode" = betterproto.enum_field(1)
    bulletin: str = betterproto.string_field(2)
    old_bulletin: str = betterproto.string_field(3)
    audit_bulletin: str = betterproto.string_field(4)
    cd_end_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SetArmadaLabelReq(betterproto.Message):
    label: "ArmadaLabel" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SetArmadaLabelRsp(betterproto.Message):
    retcode: "SetArmadaLabelRspRetcode" = betterproto.enum_field(1)
    label: "ArmadaLabel" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SetArmadaPositionReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)
    position: "ArmadaPosition" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class SetArmadaPositionRsp(betterproto.Message):
    retcode: "SetArmadaPositionRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SetAvatarEquipSuiteReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    suite_id: int = betterproto.uint32_field(2)
    suite: "AvatarEquipSuite" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SetAvatarEquipSuiteRsp(betterproto.Message):
    retcode: "SetAvatarEquipSuiteRspRetcode" = betterproto.enum_field(1)
    suite_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SetChatgroupReq(betterproto.Message):
    chatgroup_id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    notice: str = betterproto.string_field(3)
    icon_id: int = betterproto.uint32_field(4)
    label_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SetChatgroupRsp(betterproto.Message):
    retcode: "SetChatgroupRspRetcode" = betterproto.enum_field(1)
    chatgroup_id: int = betterproto.uint32_field(2)
    name: str = betterproto.string_field(3)
    notice: str = betterproto.string_field(4)
    icon_id: int = betterproto.uint32_field(5)
    label_id_list: List[int] = betterproto.uint32_field(6)
    old_name: str = betterproto.string_field(7)
    old_notice: str = betterproto.string_field(8)
    audit_name: str = betterproto.string_field(9)
    audit_notice: str = betterproto.string_field(10)
    cd_end_time: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class SetClientDataReq(betterproto.Message):
    client_data: "ClientData" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SetClientDataRsp(betterproto.Message):
    retcode: "SetClientDataRspRetcode" = betterproto.enum_field(1)
    type: "ClientDataType" = betterproto.enum_field(2)
    id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SetCustomHeadReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SetCustomHeadRsp(betterproto.Message):
    retcode: "SetCustomHeadRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SetDormAvatarReq(betterproto.Message):
    house_id: int = betterproto.uint32_field(1)
    room_avatar_list: List["DormRoomAvatar"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SetDormAvatarRsp(betterproto.Message):
    retcode: "SetDormAvatarRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SetDormNameReq(betterproto.Message):
    house_id: int = betterproto.uint32_field(1)
    room_id: int = betterproto.uint32_field(2)
    name: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class SetDormNameRsp(betterproto.Message):
    retcode: "SetDormNameRspRetcode" = betterproto.enum_field(1)
    cd_end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SetDormSnsInfoReq(betterproto.Message):
    show_house: int = betterproto.uint32_field(1)
    show_room: int = betterproto.uint32_field(2)
    visit_avatar: int = betterproto.uint32_field(3)
    is_allow_visit: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class SetDormSnsInfoRsp(betterproto.Message):
    retcode: "SetDormSnsInfoRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SetDressReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    dress_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SetDressRsp(betterproto.Message):
    retcode: "SetDressRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SetFrameUseReq(betterproto.Message):
    frame_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SetFrameUseRsp(betterproto.Message):
    retcode: "SetFrameUseRspRetcode" = betterproto.enum_field(1)
    frame_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SetFriendRemarkReq(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    new_remark: str = betterproto.string_field(2)
    old_remark: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class SetFriendRemarkRsp(betterproto.Message):
    retcode: "SetFriendRemarkRspRetcode" = betterproto.enum_field(1)
    uid: int = betterproto.uint32_field(2)
    remark: str = betterproto.string_field(3)
    set_friend_remark_cd_end_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SetLevelLockReq(betterproto.Message):
    level_lock_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SetLevelLockRsp(betterproto.Message):
    retcode: "SetLevelLockRspRetcode" = betterproto.enum_field(1)
    level_lock_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SetLobbyFastEntranceReq(betterproto.Message):
    lobby_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class SetLobbyFastEntranceRsp(betterproto.Message):
    lobby_id: int = betterproto.uint32_field(1)
    retcode: "SetLobbyFastEntranceRspRetcode" = betterproto.enum_field(2)
    is_open: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class SetOpenworldEndlessMonsterGroupProgressReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)
    type: "EndlessType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class SetOpenworldEndlessMonsterGroupProgressRsp(betterproto.Message):
    retcode: "SetOpenworldEndlessMonsterGroupProgressRspRetcode" = (
        betterproto.enum_field(1)
    )
    monster_group_list: List[
        "OpenworldEndlessMonsterGroup"
    ] = betterproto.message_field(2)
    type: "EndlessType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class SetPlayerTagNotify(betterproto.Message):
    uid: str = betterproto.string_field(1)
    tag_list: List[str] = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class SetReclaimAvatarTeamReq(betterproto.Message):
    reclaim_avatar_team_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SetReclaimAvatarTeamRsp(betterproto.Message):
    retcode: "SetReclaimAvatarTeamRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SetSecurityPasswordReq(betterproto.Message):
    password: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class SetSecurityPasswordRsp(betterproto.Message):
    retcode: "SetSecurityPasswordRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SetSelfDescReq(betterproto.Message):
    self_desc: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class SetSelfDescRsp(betterproto.Message):
    retcode: "SetSelfDescRspRetcode" = betterproto.enum_field(1)
    cd_end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SettingDict(betterproto.Message):
    dict_item_list: List["SettingDictDictItem"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SettingDictDictItem(betterproto.Message):
    key: str = betterproto.string_field(1)
    type: "SettingDictValueType" = betterproto.enum_field(2)
    value: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class SetTransferPwdReq(betterproto.Message):
    transfer_pwd: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class SetTransferPwdRsp(betterproto.Message):
    retcode: "SetTransferPwdRspRetcode" = betterproto.enum_field(1)
    transfer_code: str = betterproto.string_field(2)
    transfer_pwd_expire_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SetVirtualAvatarTeamReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    avatar_team_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SetVirtualAvatarTeamRsp(betterproto.Message):
    retcode: "SetVirtualAvatarTeamRspRetcode" = betterproto.enum_field(1)
    group_id: int = betterproto.uint32_field(2)
    avatar_team_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SetWarshipAvatarReq(betterproto.Message):
    first_avatar_id: int = betterproto.uint32_field(1)
    second_avatar_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SetWarshipAvatarRsp(betterproto.Message):
    retcode: "SetWarshipAvatarRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SetWarshipComponentReq(betterproto.Message):
    warship_id: int = betterproto.uint32_field(1)
    component_list: List["WarshipComponent"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SetWarshipComponentRsp(betterproto.Message):
    retcode: "SetWarshipComponentRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SetWarshipReq(betterproto.Message):
    warship_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SetWarshipRsp(betterproto.Message):
    retcode: "SetWarshipRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SetWarshipSettingReq(betterproto.Message):
    warship_id: int = betterproto.uint32_field(1)
    setting_type: "WarshipSettingType" = betterproto.enum_field(2)
    bgm_play_mode: "WarshipBgmPlayMode" = betterproto.enum_field(3)
    is_weather_fixed: bool = betterproto.bool_field(4)
    weather_idx: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SetWarshipSettingRsp(betterproto.Message):
    retcode: "SetWarshipSettingRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ShareRewardRecord(betterproto.Message):
    share_id: int = betterproto.uint32_field(1)
    last_take_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class Shop(betterproto.Message):
    shop_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    text_map_name: str = betterproto.string_field(3)
    shop_icon_path: str = betterproto.string_field(4)
    goods_list: List["Goods"] = betterproto.message_field(5)
    next_auto_refresh_time: int = betterproto.uint32_field(6)
    manual_refresh_times: int = betterproto.uint32_field(7)
    refresh_item: int = betterproto.uint32_field(8)
    next_refresh_cost: int = betterproto.uint32_field(9)
    max_manual_refresh_times: int = betterproto.uint32_field(10)
    shop_type: int = betterproto.uint32_field(11)
    currency_list: List[int] = betterproto.uint32_field(12)
    schedule_change_time: int = betterproto.uint32_field(13)
    shop_name: str = betterproto.string_field(14)
    unlock_level: int = betterproto.uint32_field(15)
    all_goods_id_list: List[int] = betterproto.uint32_field(16)
    begin_time: int = betterproto.uint32_field(17)
    end_time: int = betterproto.uint32_field(18)
    is_hot: bool = betterproto.bool_field(19)
    multi_currency: int = betterproto.uint32_field(20)
    is_double_confirm: bool = betterproto.bool_field(21)
    is_show: bool = betterproto.bool_field(22)
    sort_priority: int = betterproto.uint32_field(23)
    toolbar_currency_list: List[int] = betterproto.uint32_field(24)
    new_currency_list: List[int] = betterproto.uint32_field(25)
    free_manual_refresh_times: int = betterproto.uint32_field(26)


@dataclass(eq=False, repr=False)
class ShopGoodsInfo(betterproto.Message):
    goods_id: int = betterproto.uint32_field(1)
    sell_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ShopGoodsPoolHideSwitchData(betterproto.Message):
    shop_id: int = betterproto.uint32_field(1)
    pool_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ShopGoodsPoolSwitchData(betterproto.Message):
    pool_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ShopGoodsSwitchData(betterproto.Message):
    goods_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ShopSwitchData(betterproto.Message):
    shop_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SimulatePlayerData(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    nickname: str = betterproto.string_field(3)
    avatar_trial_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SingleRaidActivity(betterproto.Message):
    cur_step_stage_id: int = betterproto.uint32_field(1)
    last_done_challenge_stage_id: int = betterproto.uint32_field(2)
    step_stage_remain_enter_times: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SlgBattleAddScoreFailNotify(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SlgBattleBriefCountryData(betterproto.Message):
    country_id: int = betterproto.uint32_field(1)
    country_score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SlgBattleBroadcast(betterproto.Message):
    broadcast_id: int = betterproto.uint32_field(1)
    trigger_time: int = betterproto.uint32_field(2)
    point_id: int = betterproto.uint32_field(3)
    para: int = betterproto.uint32_field(4)
    trigger_player: "SlgBroadcastPlayer" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class SlgBattleBuffData(betterproto.Message):
    buff_id: int = betterproto.uint32_field(1)
    type: "SlgBuffType" = betterproto.enum_field(2)
    num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SlgBattleCountryData(betterproto.Message):
    country_id: int = betterproto.uint32_field(1)
    take_down_boss_num: int = betterproto.uint32_field(2)
    buff_list: List["SlgBattleBuffData"] = betterproto.message_field(3)
    country_score: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SlgBattleData(betterproto.Message):
    battle_id: int = betterproto.uint32_field(1)
    battle_schedule_id: int = betterproto.uint32_field(2)
    country_data_list: List["SlgBattleCountryData"] = betterproto.message_field(3)
    point_data_list: List["SlgBattlePointData"] = betterproto.message_field(4)
    begin_time: int = betterproto.uint32_field(5)
    end_time: int = betterproto.uint32_field(6)
    today_begin_time: int = betterproto.uint32_field(7)
    today_end_time: int = betterproto.uint32_field(8)
    player_data: "SlgBattlePlayerData" = betterproto.message_field(9)
    adjoining_point_list: List[int] = betterproto.uint32_field(10)
    last_settle_time: int = betterproto.uint32_field(11)
    is_settled: bool = betterproto.bool_field(12)
    level_group_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SlgBattleInSettleNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SlgBattleMatchRsp(betterproto.Message):
    retcode: "SlgBattleMatchRspRetcode" = betterproto.enum_field(1)
    battle_id: int = betterproto.uint32_field(2)
    battle_schedule_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SlgBattlePlayerData(betterproto.Message):
    country_id: int = betterproto.uint32_field(1)
    buff_list: List[int] = betterproto.uint32_field(2)
    score: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SlgBattlePointBossData(betterproto.Message):
    boss_id: int = betterproto.uint32_field(1)
    type: "SlgBossType" = betterproto.enum_field(2)
    is_alive: bool = betterproto.bool_field(3)
    boss_schedule_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SlgBattlePointCountryData(betterproto.Message):
    country_id: int = betterproto.uint32_field(1)
    point_score_u64: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class SlgBattlePointData(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)
    occupy_country_id: int = betterproto.uint32_field(2)
    point_country_data_list: List[
        "SlgBattlePointCountryData"
    ] = betterproto.message_field(3)
    boss_data: "SlgBattlePointBossData" = betterproto.message_field(4)
    occupied_country_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SlgBattleRank(betterproto.Message):
    is_all: bool = betterproto.bool_field(1)
    country_id: int = betterproto.uint32_field(2)
    total_num: int = betterproto.uint32_field(3)
    rank_data: "RankShowData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class SlgBattleSettleNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    battle_schedule_id: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)
    rank: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SlgBriefBattleData(betterproto.Message):
    battle_id: int = betterproto.uint32_field(1)
    battle_schedule_id: int = betterproto.uint32_field(2)
    country_id: int = betterproto.uint32_field(3)
    country_data_list: List["SlgBattleBriefCountryData"] = betterproto.message_field(4)
    is_settled: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class SlgBroadcastNotify(betterproto.Message):
    broadcast_list: List["SlgBattleBroadcast"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SlgBroadcastPlayer(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    country_id: int = betterproto.uint32_field(2)
    nickname: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class SlgEnrollData(betterproto.Message):
    enroll_battle_schedule_id: int = betterproto.uint32_field(1)
    enroll_begin_time: int = betterproto.uint32_field(2)
    enroll_end_time: int = betterproto.uint32_field(3)
    is_enrolled: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class SlgEnrollReq(betterproto.Message):
    battle_schedule_id: int = betterproto.uint32_field(1)
    group_id: int = betterproto.uint32_field(2)
    match_score: int = betterproto.uint32_field(3)
    region_name: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class SlgEnrollRsp(betterproto.Message):
    retcode: "SlgEnrollRspRetcode" = betterproto.enum_field(1)
    battle_schedule_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SlgGetActivityStaminaReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SlgGetActivityStaminaRsp(betterproto.Message):
    retcode: "SlgGetActivityStaminaRspRetcode" = betterproto.enum_field(1)
    activity_stamina_num: int = betterproto.uint32_field(2)
    last_recover_activity_stamina_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SlgGetBattleRankReq(betterproto.Message):
    country_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SlgGetBattleRankRsp(betterproto.Message):
    retcode: "SlgGetBattleRankRspRetcode" = betterproto.enum_field(1)
    rank: "SlgBattleRank" = betterproto.message_field(2)
    battle_schedule_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SlgGetBriefRankReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SlgGetBriefRankRsp(betterproto.Message):
    retcode: "SlgGetBriefRankRspRetcode" = betterproto.enum_field(1)
    all_country_rank: int = betterproto.uint32_field(2)
    self_country_rank: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SlgGetDataReq(betterproto.Message):
    country_id: int = betterproto.uint32_field(1)
    region: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class SlgGetDataRsp(betterproto.Message):
    retcode: "SlgGetDataRspRetcode" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    next_battle_begin_time: int = betterproto.uint32_field(3)
    battle_data: "SlgBattleData" = betterproto.message_field(4)
    activity_stamina_num: int = betterproto.uint32_field(5)
    last_recover_activity_stamina_time: int = betterproto.uint32_field(6)
    begin_time: int = betterproto.uint32_field(7)
    end_time: int = betterproto.uint32_field(8)
    unlock_story_id_list: List[int] = betterproto.uint32_field(9)
    history_battle_data_list: List["SlgBriefBattleData"] = betterproto.message_field(10)
    battle_schedule_id: int = betterproto.uint32_field(11)
    current_enroll_data: "SlgEnrollData" = betterproto.message_field(12)
    taken_score_reward_id_list: List[int] = betterproto.uint32_field(13)
    total_score: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SlgGetPointRankReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SlgGetPointRankRsp(betterproto.Message):
    retcode: "SlgGetPointRankRspRetcode" = betterproto.enum_field(1)
    battle_schedule_id: int = betterproto.uint32_field(2)
    point_id: int = betterproto.uint32_field(3)
    player_score: int = betterproto.uint32_field(4)
    rank_list: List["UserRankData"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class SlgMainPageReq(betterproto.Message):
    is_in_main_page: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class SlgPointSweepReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SlgPointSweepRsp(betterproto.Message):
    retcode: "SlgPointSweepRspRetcode" = betterproto.enum_field(1)
    point_id: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SlgTakeScoreRewardReq(betterproto.Message):
    score_reward_type: "SlgScoreRewardType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SlgTakeScoreRewardRsp(betterproto.Message):
    retcode: "SlgTakeScoreRewardRspRetcode" = betterproto.enum_field(1)
    has_taken_score_reward_id_list: List[int] = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SnsRequestSwitchData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SnsShowEndlessData(betterproto.Message):
    cur_type: "EndlessType" = betterproto.enum_field(1)
    endless_player_data: "EndlessPlayerData" = betterproto.message_field(2)
    openworld_endless_player_data: "OpenworldEndlessPlayer" = betterproto.message_field(
        3
    )


@dataclass(eq=False, repr=False)
class SnsShowExBossData(betterproto.Message):
    cur_rank: int = betterproto.uint32_field(1)
    total_score: int = betterproto.uint32_field(2)
    finished_boss_info_list: List["FinishedExBossInfo"] = betterproto.message_field(3)
    rank_id: int = betterproto.uint32_field(4)
    cur_rank_percent: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SnsShowPriviledge(betterproto.Message):
    sns_show_type: int = betterproto.uint32_field(1)
    sns_show_priviledge_state: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SnsShowTowerRaidData(betterproto.Message):
    hard_level: int = betterproto.uint32_field(1)
    max_hard_level: int = betterproto.uint32_field(2)
    total_enter_times: int = betterproto.uint32_field(3)
    total_battle_during_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SpeedUpFarmProduceReq(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    speed_up_material_id: int = betterproto.uint32_field(2)
    speed_up_material_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SpeedUpFarmProduceRsp(betterproto.Message):
    retcode: "SpeedUpFarmProduceRspRetcode" = betterproto.enum_field(1)
    slot_id: int = betterproto.uint32_field(2)
    speed_up_material_id: int = betterproto.uint32_field(3)
    speed_up_material_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class Stage(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)
    enter_times: int = betterproto.uint32_field(3)
    reset_times: int = betterproto.uint32_field(4)
    challenge_index_list: List[int] = betterproto.uint32_field(5)
    bonus_end_time: int = betterproto.uint32_field(6)
    bonus_enter_times: int = betterproto.uint32_field(7)
    bonus_total_times: int = betterproto.uint32_field(8)
    min_stage_time: int = betterproto.uint32_field(9)
    max_score: int = betterproto.uint32_field(10)
    stamina_discount: int = betterproto.uint32_field(11)
    total_score: int = betterproto.uint32_field(12)
    mp_raid_pass_avatar_uid: int = betterproto.uint32_field(13)
    mp_raid_weapon_uid: int = betterproto.uint32_field(14)
    mp_raid_stigmata_uid_set: List[int] = betterproto.uint32_field(15)
    is_done: bool = betterproto.bool_field(16)
    assist_enter_times: int = betterproto.uint32_field(17)
    backup_challenge_index_list: List[int] = betterproto.uint32_field(18)
    max_battle_score: int = betterproto.uint32_field(19)
    max_rank: int = betterproto.uint32_field(20)
    client_data: str = betterproto.string_field(21)
    first_stamina_discount: int = betterproto.uint32_field(22)


@dataclass(eq=False, repr=False)
class StageActDifficultyInfo(betterproto.Message):
    act_id: int = betterproto.uint32_field(1)
    difficulty: int = betterproto.uint32_field(2)
    has_take_challenge_num_index: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class StageBattleSaveClientDataReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    act_id: int = betterproto.uint32_field(2)
    client_data: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class StageBattleSaveClientDataRsp(betterproto.Message):
    retcode: "StageBattleSaveClientDataRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class StageBeginReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    avatar_id_list: List[int] = betterproto.uint32_field(2)
    avatar_team_type: "AvatarTeamType" = betterproto.enum_field(8)
    assistant_uid: int = betterproto.uint32_field(3)
    is_speed_up_stage: bool = betterproto.bool_field(4)
    avatar_trial_id_list: List[int] = betterproto.uint32_field(5)
    elf_id_list: List[int] = betterproto.uint32_field(6)
    target_wave: int = betterproto.uint32_field(7)
    gratuity_stage_unique_id: int = betterproto.uint32_field(9)
    is_gratuity_bonus: bool = betterproto.bool_field(10)
    mtp_report_type: str = betterproto.string_field(11)
    mtp_report_value: str = betterproto.string_field(12)
    is_re_begin: bool = betterproto.bool_field(13)
    avatar_restrict_list: List[int] = betterproto.uint32_field(14)
    is_theme_wanted_mp_assist_mode: bool = betterproto.bool_field(15)
    sc_dlc_support_avatar_id: int = betterproto.uint32_field(16)
    stage_begin_floor: int = betterproto.uint32_field(17)
    monster_card_unique_id_list: List[int] = betterproto.uint32_field(18)


@dataclass(eq=False, repr=False)
class StageBeginRsp(betterproto.Message):
    retcode: "StageBeginRspRetcode" = betterproto.enum_field(1)
    stage_id: int = betterproto.uint32_field(2)
    progress: int = betterproto.uint32_field(3)
    drop_item_list: List["DropItem"] = betterproto.message_field(4)
    is_collect_cheat_data: bool = betterproto.bool_field(5)
    sign_key: str = betterproto.string_field(6)
    tag: int = betterproto.uint32_field(7)
    equip_buff_list: List["AvatarEquipBuff"] = betterproto.message_field(8)
    battle_buff_list: List[str] = betterproto.string_field(9)
    battle_attr_list: List[str] = betterproto.string_field(10)
    is_trigger_baodi: bool = betterproto.bool_field(11)
    security_cmd_buffer: bytes = betterproto.bytes_field(12)
    stage_transaction_str: str = betterproto.string_field(13)
    god_war_skill_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class StageBuff(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    gen_buff_id_list: List[int] = betterproto.uint32_field(2)
    hold_buff_id_list: List[int] = betterproto.uint32_field(3)
    is_new: bool = betterproto.bool_field(4)
    carry_buff_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class StageChallengeData(betterproto.Message):
    challenge_index: int = betterproto.uint32_field(1)
    reward: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class StageChapterBoss(betterproto.Message):
    boss_stage_id: int = betterproto.uint32_field(1)
    left_hp: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class StageChapterExclusive(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class StageChapterInfo(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)
    has_take_challenge: int = betterproto.uint64_field(2)
    enter_player_level: int = betterproto.uint32_field(3)
    boss_list: List["StageChapterBoss"] = betterproto.message_field(4)
    exclusive_stage_list: List["StageChapterExclusive"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class StageCheatData(betterproto.Message):
    type: "StageCheatDataType" = betterproto.enum_field(1)
    value: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class StageDropDisplayInfo(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    drop_item_id_list: List[int] = betterproto.uint32_field(2)
    first_drop_item_id_list: List[int] = betterproto.uint32_field(3)
    double_drop: bool = betterproto.bool_field(4)
    bonus_drop_item_id_list: List[int] = betterproto.uint32_field(5)
    battle_buff_list: List[str] = betterproto.string_field(6)
    bonus_equip_need_list: List[int] = betterproto.uint32_field(7)
    battle_display_id: int = betterproto.uint32_field(8)
    battle_attr_list: List[str] = betterproto.string_field(9)
    first_drop_item_data_list: List["RewardItemData"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class StageEndReq(betterproto.Message):
    body: bytes = betterproto.bytes_field(1)
    sign: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class StageEndReqBody(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    end_status: "StageEndStatus" = betterproto.enum_field(2)
    is_mvp: bool = betterproto.bool_field(3)
    avatar_exp_reward: int = betterproto.uint32_field(4)
    scoin_reward: int = betterproto.uint32_field(5)
    challenge_index_list: List[int] = betterproto.uint32_field(6)
    drop_item_list: List["DropItem"] = betterproto.message_field(7)
    cheat_data_list: List["StageCheatData"] = betterproto.message_field(8)
    cheat_type: int = betterproto.uint32_field(9)
    stage_pass_time: int = betterproto.uint32_field(10)
    max_combo_num: int = betterproto.uint32_field(11)
    score: int = betterproto.uint32_field(12)
    client_average_rtt: int = betterproto.uint32_field(13)
    client_max_rtt: int = betterproto.uint32_field(14)
    be_hit_times: int = betterproto.uint32_field(15)
    team_id: int = betterproto.uint32_field(16)
    mvp_score: int = betterproto.uint32_field(17)
    avatar_list: List["ChallengeModeAvatar"] = betterproto.message_field(18)
    evade_times: int = betterproto.uint32_field(19)
    evade_success_times: int = betterproto.uint32_field(20)
    boss_damage: int = betterproto.uint32_field(21)
    battle_score: int = betterproto.uint32_field(23)
    rank: int = betterproto.uint32_field(24)
    mp_stage_record: "MpStageRecord" = betterproto.message_field(25)
    dungeons_evaluation: int = betterproto.uint32_field(26)
    fight_info: "StageFightInfo" = betterproto.message_field(27)
    mp_stage_damage_info: "MpStageDamageInfo" = betterproto.message_field(28)
    security_cmd_reply: bytes = betterproto.bytes_field(29)
    buff_id_list: List[int] = betterproto.uint32_field(30)
    stage_end_floor: int = betterproto.uint32_field(31)
    god_war_status: "GodWarStatus" = betterproto.message_field(32)
    sc_dlc_status: "ScDlcStatus" = betterproto.message_field(33)


@dataclass(eq=False, repr=False)
class StageEndRsp(betterproto.Message):
    retcode: "StageEndRspRetcode" = betterproto.enum_field(1)
    stage_id: int = betterproto.uint32_field(2)
    player_exp_reward: int = betterproto.uint32_field(3)
    avatar_exp_reward: int = betterproto.uint32_field(4)
    scoin_reward: int = betterproto.uint32_field(5)
    challenge_list: List["StageChallengeData"] = betterproto.message_field(6)
    friends_point_add: int = betterproto.uint32_field(7)
    progress: int = betterproto.uint32_field(8)
    special_challenge_list: List[
        "StageSpecialChallengeData"
    ] = betterproto.message_field(9)
    mvp_reward: "MpStageMvpReward" = betterproto.message_field(10)
    mp_drop_item_list: List["DropItem"] = betterproto.message_field(11)
    mp_exp_reward: int = betterproto.uint32_field(12)
    exp_convert_scoin: int = betterproto.uint32_field(13)
    bond_add_friends_point: int = betterproto.uint32_field(14)
    buff_reward: "AccountBuffReward" = betterproto.message_field(16)
    world_boss_score: int = betterproto.uint32_field(17)
    rank_scoin: int = betterproto.uint32_field(18)
    line_enhance_reward_data: "RewardData" = betterproto.message_field(19)
    dungeons_evaluation: int = betterproto.uint32_field(20)
    dungeons_drop_item_list: List["DropItem"] = betterproto.message_field(21)
    end_status: "StageEndStatus" = betterproto.enum_field(22)
    bonus_score: int = betterproto.uint32_field(24)
    bonus_drop_list: List["DropItem"] = betterproto.message_field(25)
    gratuity_drop_list: List["DropItem"] = betterproto.message_field(26)
    extra_reward_data_list: List["RewardData"] = betterproto.message_field(27)
    extra_drop_list: List["DropItem"] = betterproto.message_field(28)
    is_new_max_score: bool = betterproto.bool_field(29)
    theme_wanted_drop_item_list: List["DropItem"] = betterproto.message_field(31)
    theme_wanted_show_extra_drop_item_list: List[
        "DropItem"
    ] = betterproto.message_field(32)
    is_theme_wanted_extra_drop_taken_by_first_pass: bool = betterproto.bool_field(33)
    god_war_challenge_score: int = betterproto.uint32_field(34)


@dataclass(eq=False, repr=False)
class StageEventData(betterproto.Message):
    begin_time: int = betterproto.uint32_field(1)
    end_time: int = betterproto.uint32_field(2)
    chapter_id: int = betterproto.uint32_field(3)
    unlock_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class StageFightInfo(betterproto.Message):
    damage: int = betterproto.uint32_field(1)
    elf_damage: int = betterproto.uint32_field(2)
    score: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class StageInnerAvatarData(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    avatar_level: int = betterproto.uint32_field(2)
    avatar_star: int = betterproto.uint32_field(3)
    total_output: int = betterproto.uint32_field(4)
    no_restrict_output: int = betterproto.uint32_field(5)
    do_restrict_output: int = betterproto.uint32_field(6)
    be_restrict_output: int = betterproto.uint32_field(7)
    total_input: int = betterproto.uint32_field(8)
    battle_time: float = betterproto.float_field(9)
    total_time: float = betterproto.float_field(10)
    enter_times: int = betterproto.uint32_field(11)
    leave_times: int = betterproto.uint32_field(12)
    do_break_times: int = betterproto.uint32_field(13)
    be_break_times: int = betterproto.uint32_field(14)
    do_hit_times: int = betterproto.uint32_field(15)
    be_hit_times: int = betterproto.uint32_field(16)
    exskill_times: int = betterproto.uint32_field(17)
    evade_times: int = betterproto.uint32_field(18)
    evade_effect_times: int = betterproto.uint32_field(19)
    attack_sp_recover: int = betterproto.uint32_field(20)
    total_sp_recover: int = betterproto.uint32_field(21)
    dps: int = betterproto.uint32_field(22)
    special_attack_times: int = betterproto.uint32_field(23)
    evade_success_times: int = betterproto.uint32_field(24)
    weapon_active_skill: int = betterproto.uint32_field(25)
    stage_id: int = betterproto.uint32_field(26)
    normal_output: int = betterproto.uint32_field(27)
    ultra_output: int = betterproto.uint32_field(28)
    switchin_output: int = betterproto.uint32_field(29)
    branch_output: int = betterproto.uint32_field(30)
    charge_output: int = betterproto.uint32_field(31)
    hp_cost: int = betterproto.uint32_field(32)
    hp_recover: int = betterproto.uint32_field(33)
    sp_cost: int = betterproto.uint32_field(34)
    shield_damage: int = betterproto.uint32_field(35)
    avatar_sub_star: int = betterproto.uint32_field(36)
    is_player_avatar: bool = betterproto.bool_field(37)


@dataclass(eq=False, repr=False)
class StageInnerDataReportReq(betterproto.Message):
    avatar_list: List["StageInnerAvatarData"] = betterproto.message_field(1)
    monster_list: List["StageInnerMonsterData"] = betterproto.message_field(2)
    rotate_camera_times: int = betterproto.uint32_field(3)
    elf_list: List["StageInnerElfData"] = betterproto.message_field(4)
    stage_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class StageInnerDataReportRsp(betterproto.Message):
    retcode: "StageInnerDataReportRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class StageInnerElfData(betterproto.Message):
    elf_id: int = betterproto.uint32_field(1)
    elf_star: int = betterproto.uint32_field(2)
    elf_level: int = betterproto.uint32_field(3)
    attack_times: int = betterproto.uint32_field(4)
    hit_times: int = betterproto.uint32_field(5)
    total_output: int = betterproto.uint32_field(6)
    normal_output: int = betterproto.uint32_field(7)
    ultra_output: int = betterproto.uint32_field(8)
    total_sp_recover: int = betterproto.uint32_field(9)
    skill_use_times: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class StageInnerMonsterData(betterproto.Message):
    monster_name: str = betterproto.string_field(1)
    monster_type: str = betterproto.string_field(2)
    monster_level: int = betterproto.uint32_field(3)
    monster_num: int = betterproto.uint32_field(4)
    avg_output: int = betterproto.uint32_field(5)
    avg_live_time: int = betterproto.uint32_field(6)
    dps: int = betterproto.uint32_field(7)
    hit_avatar_times: int = betterproto.uint32_field(8)
    break_avatar_times: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class StageRecommendAvatar(betterproto.Message):
    id: str = betterproto.string_field(1)
    recommend_avatar_list: List["RecommendAvatar"] = betterproto.message_field(2)
    type: "AvatarRecommendType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class StageSpecialChallengeData(betterproto.Message):
    challenge_index: int = betterproto.uint32_field(1)
    drop_item: "DropItem" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class StageSwitchData(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class StaminaExchangeReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class StaminaExchangeRsp(betterproto.Message):
    retcode: "StaminaExchangeRspRetcode" = betterproto.enum_field(1)
    hcoin_cost: int = betterproto.uint32_field(2)
    stamina_get: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class StartFarmProduceReq(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    produce_material_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class StartFarmProduceRsp(betterproto.Message):
    retcode: "StartFarmProduceRspRetcode" = betterproto.enum_field(1)
    slot_id: int = betterproto.uint32_field(2)
    produce_material_id: int = betterproto.uint32_field(3)
    slot_detail: "FarmSlotDetail" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class StartNextRoundExaminationReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class StartNextRoundExaminationRsp(betterproto.Message):
    retcode: "StartNextRoundExaminationRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class StartRoomMatchReq(betterproto.Message):
    room_mode: "RoomMode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class StartRoomMatchRsp(betterproto.Message):
    retcode: "StartRoomMatchRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class StartSlotMachineReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class StartSlotMachineRsp(betterproto.Message):
    retcode: "StartSlotMachineRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    box_item_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class StepCompensation(betterproto.Message):
    step_id: int = betterproto.uint32_field(1)
    step_reward_id: int = betterproto.uint32_field(2)
    mission_list: List["StepMissionCompensation"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class StepMissionCompensation(betterproto.Message):
    mission_id: int = betterproto.uint32_field(1)
    reward_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class Stigmata(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    id: int = betterproto.uint32_field(2)
    level: int = betterproto.uint32_field(3)
    exp: int = betterproto.uint32_field(4)
    is_protected: bool = betterproto.bool_field(5)
    is_affix_identify: bool = betterproto.bool_field(6)
    cancel_protect_time: int = betterproto.uint32_field(7)
    slot_num: int = betterproto.uint32_field(8)
    rune_list: List["StigmataRune"] = betterproto.message_field(9)
    wait_select_rune_list: List["StigmataRune"] = betterproto.message_field(10)
    refine_value: int = betterproto.uint32_field(11)
    promote_times: int = betterproto.uint32_field(12)
    title_level: int = betterproto.uint32_field(13)
    title_exp: int = betterproto.uint32_field(14)
    title_id: int = betterproto.uint32_field(15)
    wait_select_rune_group_list: List["StigmataRuneGroup"] = betterproto.message_field(
        16
    )


@dataclass(eq=False, repr=False)
class StigmataDetailData(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    rune_list: List["StigmataRune"] = betterproto.message_field(3)
    title_level: int = betterproto.uint32_field(4)
    title_exp: int = betterproto.uint32_field(5)
    title_id: int = betterproto.uint32_field(6)
    unique_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class StigmataRune(betterproto.Message):
    rune_id: int = betterproto.uint32_field(1)
    strength_percent: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class StigmataRuneGroup(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    rune_list: List["StigmataRune"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class Subscription(betterproto.Message):
    subs_id: int = betterproto.uint32_field(1)
    expires_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SubscriptionStatusNotify(betterproto.Message):
    subs_list: List["Subscription"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SupportActivitySupportReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SupportActivitySupportRsp(betterproto.Message):
    retcode: "SupportActivitySupportRspRetcode" = betterproto.enum_field(1)
    support_index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SupportActivityTakeGlobalRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SupportActivityTakeGlobalRewardRsp(betterproto.Message):
    retcode: "SupportActivityTakeGlobalRewardRspRetcode" = betterproto.enum_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SupportActivityTakeShareRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SupportActivityTakeShareRewardRsp(betterproto.Message):
    retcode: "SupportActivityTakeShareRewardRspRetcode" = betterproto.enum_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SupportData(betterproto.Message):
    support_index: int = betterproto.uint32_field(1)
    is_take_share_reward: bool = betterproto.bool_field(2)
    support_end_time: int = betterproto.uint32_field(3)
    support_begin_time: int = betterproto.uint32_field(4)
    count_down_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SurveyData(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    url: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class SweepCurrency(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)
    add_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SwitchAvatarSubSkillReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    skill_id: int = betterproto.uint32_field(2)
    sub_skill_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SwitchAvatarSubSkillRsp(betterproto.Message):
    retcode: "SwitchAvatarSubSkillRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SwitchChangeDataNotify(betterproto.Message):
    op_type: "FeatureSwitchOpType" = betterproto.enum_field(1)
    data_list: List["SwitchData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SwitchData(betterproto.Message):
    type: "FeatureSwitchType" = betterproto.enum_field(1)
    data: bytes = betterproto.bytes_field(2)
    min_level: int = betterproto.uint32_field(3)
    max_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SwitchDataNotify(betterproto.Message):
    data_list: List["SwitchData"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SwitchDlcAvatarTalentReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    talent_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SwitchDlcAvatarTalentRsp(betterproto.Message):
    retcode: "SwitchDlcAvatarTalentRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SwitchDynamicHardLvReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SwitchDynamicHardLvRsp(betterproto.Message):
    retcode: "SwitchDynamicHardLvRspRetcode" = betterproto.enum_field(1)
    is_dynamic_hard_lv: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class SwitchExtraStoryLineEnhanceReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SwitchExtraStoryLineEnhanceRsp(betterproto.Message):
    retcode: "SwitchExtraStoryLineEnhanceRspRetcode" = betterproto.enum_field(1)
    is_open_enhance: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class SwitchExtraStoryLockedAvatarBindEquipReq(betterproto.Message):
    mode: "AvatarBindEquipMode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SwitchExtraStoryLockedAvatarBindEquipRsp(betterproto.Message):
    retcode: "SwitchExtraStoryLockedAvatarBindEquipRspRetcode" = betterproto.enum_field(
        1
    )
    succ_cnt: int = betterproto.uint32_field(2)
    mode: "AvatarBindEquipMode" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class SwitchMemberStatusReq(betterproto.Message):
    status: "LobbyMemberStatus" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SwitchMemberStatusRsp(betterproto.Message):
    retcode: "SwitchMemberStatusRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class SyncChapterActivityDataNotify(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)
    chapter_activity: "ChapterActivity" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SyncDlcAvatarNotify(betterproto.Message):
    avatar_list: List["DlcAvatar"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SyncDutyNotify(betterproto.Message):
    daily_duty_point: int = betterproto.uint32_field(1)
    has_take_daily_duty_id_list: List[int] = betterproto.uint32_field(2)
    weekly_duty_point: int = betterproto.uint32_field(3)
    has_take_weekly_duty_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SyncElfDataNotify(betterproto.Message):
    elf_list: List["Elf"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SyncElfFragmentNotify(betterproto.Message):
    elf_fragment_list: List["ElfFragment"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SyncElfTalentNotify(betterproto.Message):
    elf_talent_list: List["ElfTalent"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class SyncGratuityStageReq(betterproto.Message):
    stage_unique_id: int = betterproto.uint32_field(1)
    message_list: List["GratuityStageMessage"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SyncGratuityStageRsp(betterproto.Message):
    retcode: "SyncGratuityStageRspRetcode" = betterproto.enum_field(1)
    stage: "GratuityStage" = betterproto.message_field(2)
    message_list: List["GratuityStageMessage"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SyncMatrixCurEventNotify(betterproto.Message):
    pos: "MatrixGridPos" = betterproto.message_field(1)
    event_id: int = betterproto.uint32_field(2)
    real_event_param: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SyncMatrixFloorNotify(betterproto.Message):
    floor_id: int = betterproto.uint32_field(1)
    floor_brief_info: "MatrixFloorBriefInfo" = betterproto.message_field(2)
    floor_map_info: "MatrixFloorMapInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SyncMatrixNotify(betterproto.Message):
    floor_brief_info_list: List["MatrixFloorBriefInfo"] = betterproto.message_field(1)
    cur_floor_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SyncPictureActivityScoreNotify(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SyncRoomDataNotify(betterproto.Message):
    player_room_status: "PlayerRoomStatus" = betterproto.message_field(1)
    member_list: List["RoomMember"] = betterproto.message_field(2)
    room_info: "RoomInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SyncRoomMatchDataNotify(betterproto.Message):
    room_mode: "RoomMode" = betterproto.enum_field(1)
    is_in_matching: bool = betterproto.bool_field(2)
    match_start_time: int = betterproto.uint32_field(3)
    estimate_match_cost_time: int = betterproto.uint32_field(4)
    reason: "SyncRoomMatchDataNotifyReason" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class SyncRpgTaleSiteNotify(betterproto.Message):
    site_list: List["RpgTaleSite"] = betterproto.message_field(1)
    tale_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SyncThemeDataNotify(betterproto.Message):
    theme: "ThemeData" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SyncTimeReq(betterproto.Message):
    seq: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SyncTimeRsp(betterproto.Message):
    retcode: "SyncTimeRspRetcode" = betterproto.enum_field(1)
    cur_time: int = betterproto.uint32_field(2)
    seq: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SyncTvtBattleInfoNotify(betterproto.Message):
    battle_info: "TvtBattleInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SyncTvtBattleStageMessageNotify(betterproto.Message):
    message_list: List["TvtBattleStageMessage"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SyncTvtMemberInRoomNotify(betterproto.Message):
    member_list: List["TvtMember"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SyncVirtualGachaStatusNotify(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    gacha: "VirtualGacha" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeActivityChallengeRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    challenge_num_index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TakeActivityChallengeRewardRsp(betterproto.Message):
    retcode: "TakeActivityChallengeRewardRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    challenge_num_index: int = betterproto.uint32_field(3)
    reward_list: List["RewardData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class TakeAdventureCompensationReq(betterproto.Message):
    type_list: List["CompensationType"] = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class TakeAdventureCompensationRsp(betterproto.Message):
    retcode: "TakeAdventureCompensationRspRetcode" = betterproto.enum_field(1)
    type_list: List["CompensationType"] = betterproto.enum_field(2)
    item_list: List["RewardItemData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TakeAdventureLevelRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeAdventureLevelRewardRsp(betterproto.Message):
    retcode: "TakeAdventureLevelRewardRspRetcode" = betterproto.enum_field(1)
    has_take_reward_level: int = betterproto.uint32_field(2)
    reward_list: List["RewardData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TakeAdventureQuestRewardReq(betterproto.Message):
    pool_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeAdventureQuestRewardRsp(betterproto.Message):
    retcode: "TakeAdventureQuestRewardRspRetcode" = betterproto.enum_field(1)
    pool_id: int = betterproto.uint32_field(2)
    drop_item_list: List["DropItem"] = betterproto.message_field(3)
    quest_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TakeAdventureStorySweepRewardReq(betterproto.Message):
    sweep_id: int = betterproto.uint32_field(1)
    is_take_all: bool = betterproto.bool_field(2)
    sweep_group_type_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TakeAdventureStorySweepRewardRsp(betterproto.Message):
    retcode: "TakeAdventureStorySweepRewardRspRetcode" = betterproto.enum_field(1)
    sweep_id: int = betterproto.uint32_field(2)
    siege_stage_id: int = betterproto.uint32_field(3)
    drop_item_list: List["DropItem"] = betterproto.message_field(4)
    player_exp_reward: int = betterproto.uint32_field(5)
    exp_convert_scoin: int = betterproto.uint32_field(6)
    scoin_reward: int = betterproto.uint32_field(7)
    rank_scoin: int = betterproto.uint32_field(8)
    is_take_all: bool = betterproto.bool_field(9)
    sweep_group_type_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class TakeArmadaAchievementReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeArmadaAchievementRsp(betterproto.Message):
    retcode: "TakeArmadaAchievementRspRetcode" = betterproto.enum_field(1)
    id: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)
    take_achievement_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TakeArmadaReunionRewardReq(betterproto.Message):
    reward_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeArmadaReunionRewardRsp(betterproto.Message):
    retcode: "TakeArmadaReunionRewardRspRetcode" = betterproto.enum_field(1)
    reward_id: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)
    reward_list: List["ChatworldDishReward"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class TakeArmadaStageRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeArmadaStageRewardRsp(betterproto.Message):
    retcode: "TakeArmadaStageRewardRspRetcode" = betterproto.enum_field(1)
    reward_id_list: List[int] = betterproto.uint32_field(2)
    reward_list: List["RewardData"] = betterproto.message_field(3)
    kill_reward_material_id: int = betterproto.uint32_field(4)
    kill_reward_material_num: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TakeArmadaStageScoreActivityRewardReq(betterproto.Message):
    type: "ArmadaStageScoreActivityRewardType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class TakeArmadaStageScoreActivityRewardRsp(betterproto.Message):
    retcode: "TakeArmadaStageScoreActivityRewardRspRetcode" = betterproto.enum_field(1)
    type: "ArmadaStageScoreActivityRewardType" = betterproto.enum_field(2)
    reward_list: List["RewardData"] = betterproto.message_field(3)
    score_list: List["ArmadaStageScorePlayerScore"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class TakeAvatarMissionDailyRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeAvatarMissionDailyRewardRsp(betterproto.Message):
    retcode: "TakeAvatarMissionDailyRewardRspRetcode" = betterproto.enum_field(1)
    reward: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeAvatarMissionPhaseRewardReq(betterproto.Message):
    days: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeAvatarMissionPhaseRewardRsp(betterproto.Message):
    retcode: "TakeAvatarMissionPhaseRewardRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    days: int = betterproto.uint32_field(3)
    reward: "RewardData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class TakeBattlePassLevelRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeBattlePassLevelRewardRsp(betterproto.Message):
    retcode: "TakeBattlePassLevelRewardRspRetcode" = betterproto.enum_field(1)
    basic_reward_list: List["RewardData"] = betterproto.message_field(2)
    advanced_reward_list: List["RewardData"] = betterproto.message_field(3)
    luxury_reward_list: List["RewardData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class TakeBattlePassPhaseExpReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeBattlePassPhaseExpRsp(betterproto.Message):
    retcode: "TakeBattlePassPhaseExpRspRetcode" = betterproto.enum_field(1)
    add_exp: int = betterproto.uint32_field(2)
    add_theme_exp: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TakeBattlePassThemeLevelRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeBattlePassThemeLevelRewardRsp(betterproto.Message):
    retcode: "TakeBattlePassThemeLevelRewardRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeBulletinScoreActivityRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeBulletinScoreActivityRewardRsp(betterproto.Message):
    retcode: "TakeBulletinScoreActivityRewardRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    reward_list: List["RewardData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TakeCardProductBonusRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeCardProductBonusRewardRsp(betterproto.Message):
    retcode: "TakeCardProductBonusRewardRspRetcode" = betterproto.enum_field(1)
    card_product_reward_list: List["CardProductReward"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeCardProductDailyRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeCardProductDailyRewardRsp(betterproto.Message):
    retcode: "TakeCardProductDailyRewardRspRetcode" = betterproto.enum_field(1)
    card_product_reward_list: List["CardProductReward"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeChallengeStepCompensationReq(betterproto.Message):
    compensation_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeChallengeStepCompensationRsp(betterproto.Message):
    retcode: "TakeChallengeStepCompensationRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeChapterActivityLevelRewardReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    is_take_all: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class TakeChapterActivityLevelRewardRsp(betterproto.Message):
    retcode: "TakeChapterActivityLevelRewardRspRetcode" = betterproto.enum_field(1)
    chapter_id: int = betterproto.uint32_field(2)
    level_list: List[int] = betterproto.uint32_field(3)
    reward_list: List["RewardData"] = betterproto.message_field(4)
    is_take_all: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class TakeChapterChallengeRewardReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)
    challenge_num_index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TakeChapterChallengeRewardRsp(betterproto.Message):
    retcode: "TakeChapterChallengeRewardRspRetcode" = betterproto.enum_field(1)
    chapter_id: int = betterproto.uint32_field(2)
    challenge_num_index: int = betterproto.uint32_field(3)
    reward_list: List["RewardData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class TakeChapterCompensationReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeChapterCompensationRsp(betterproto.Message):
    retcode: "TakeChapterCompensationRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeChatRedEnvelopePlayer(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    scoin_num: int = betterproto.uint32_field(3)
    drop_item: "DropItem" = betterproto.message_field(4)
    material: "Material" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class TakeChatRedEnvelopeReq(betterproto.Message):
    channel: int = betterproto.uint32_field(1)
    sender_uid: int = betterproto.uint32_field(2)
    red_envelope_id: int = betterproto.uint32_field(3)
    item_id: int = betterproto.uint32_field(4)
    armada_id: int = betterproto.uint32_field(5)
    is_sender_npc: bool = betterproto.bool_field(6)
    nickname: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class TakeChatRedEnvelopeRsp(betterproto.Message):
    retcode: "TakeChatRedEnvelopeRspRetcode" = betterproto.enum_field(1)
    channel: int = betterproto.uint32_field(2)
    sender_uid: int = betterproto.uint32_field(3)
    sender_nickname: str = betterproto.string_field(4)
    item_id: int = betterproto.uint32_field(5)
    take_scoin: int = betterproto.uint32_field(6)
    drop_item_list: List["DropItem"] = betterproto.message_field(7)
    msg: str = betterproto.string_field(8)
    red_envelope_id: int = betterproto.uint32_field(9)
    drop_id: int = betterproto.uint32_field(10)
    take_hcoin: int = betterproto.uint32_field(11)
    is_sender_npc: bool = betterproto.bool_field(12)
    take_material: "Material" = betterproto.message_field(13)
    is_take_over: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class TakeClientMailAttachmentReq(betterproto.Message):
    mail_key_list: List["ClientMailKey"] = betterproto.message_field(1)
    is_show_attachment: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class TakeClientMailAttachmentRsp(betterproto.Message):
    retcode: "TakeClientMailAttachmentRspRetcode" = betterproto.enum_field(1)
    succ_mail_key_list: List["ClientMailKey"] = betterproto.message_field(2)
    is_show_attachment: bool = betterproto.bool_field(3)
    mail_attachment: "MailAttachment" = betterproto.message_field(4)
    is_take_all: bool = betterproto.bool_field(5)
    fail_mail_list: List["ClientMailAttachmentItem"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class TakeConsignedRewardReq(betterproto.Message):
    reliable_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeConsignedRewardRsp(betterproto.Message):
    retcode: "TakeConsignedRewardRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)
    reliable_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TakeContinuousRechargeRewardReq(betterproto.Message):
    progress: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeContinuousRechargeRewardRsp(betterproto.Message):
    retcode: "TakeContinuousRechargeRewardRspRetcode" = betterproto.enum_field(1)
    reward: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeDailyCompensationRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeDailyCompensationRewardRsp(betterproto.Message):
    retcode: "TakeDailyCompensationRewardRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeDlcLevelRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeDlcLevelRewardRsp(betterproto.Message):
    retcode: "TakeDlcLevelRewardRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeDlcTowerRankRewardNotify(betterproto.Message):
    reward_data: "RewardData" = betterproto.message_field(1)
    rank: int = betterproto.uint32_field(2)
    score: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TakeDormLikesDropReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeDormLikesDropRsp(betterproto.Message):
    retcode: "TakeDormLikesDropRspRetcode" = betterproto.enum_field(1)
    drop_item_list: List["DropItem"] = betterproto.message_field(2)
    yesterday_be_liked_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TakeDutyRewardReq(betterproto.Message):
    duty_type: "DutyType" = betterproto.enum_field(1)
    duty_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TakeDutyRewardRsp(betterproto.Message):
    retcode: "TakeDutyRewardRspRetcode" = betterproto.enum_field(1)
    duty_type: "DutyType" = betterproto.enum_field(2)
    reward_list: List["RewardData"] = betterproto.message_field(3)
    duty_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TakeEliteChapterCompensationReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeEliteChapterCompensationRsp(betterproto.Message):
    retcode: "TakeEliteChapterCompensationRspRetcode" = betterproto.enum_field(1)
    rn: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeEndlessBaseRewardReq(betterproto.Message):
    type: "EndlessType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class TakeEndlessBaseRewardRsp(betterproto.Message):
    retcode: "TakeEndlessBaseRewardRspRetcode" = betterproto.enum_field(1)
    reward_progress: int = betterproto.uint32_field(2)
    reward_list: List["RewardData"] = betterproto.message_field(3)
    reward_id_list: List[int] = betterproto.uint32_field(4)
    type: "EndlessType" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class TakeExBossRankRewardNotify(betterproto.Message):
    reward_list: List["RewardData"] = betterproto.message_field(1)
    rank: int = betterproto.uint32_field(2)
    score: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TakeExBossScoreRewardNotify(betterproto.Message):
    reward_list: List["RewardData"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class TakeExtraStoryChallengeModeChapterRewardReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)
    difficulty: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TakeExtraStoryChallengeModeChapterRewardRsp(betterproto.Message):
    retcode: "TakeExtraStoryChallengeModeChapterRewardRspRetcode" = (
        betterproto.enum_field(1)
    )
    chapter_reward: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeExtraStoryLineStoryFinishRewardReq(betterproto.Message):
    line_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeExtraStoryLineStoryFinishRewardRsp(betterproto.Message):
    retcode: "TakeExtraStoryLineStoryFinishRewardRspRetcode" = betterproto.enum_field(1)
    line_id: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TakeFlopRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    reward_index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TakeFlopRewardRsp(betterproto.Message):
    retcode: "TakeFlopRewardRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    reward_index: int = betterproto.uint32_field(3)
    reward_list: List["RewardData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class TakeFoundationRewardReq(betterproto.Message):
    product_name: str = betterproto.string_field(1)
    level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TakeFoundationRewardRsp(betterproto.Message):
    retcode: "TakeFoundationRewardRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)
    product_name: str = betterproto.string_field(3)
    has_take_reward_level_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TakeGalInteractTriggerEventReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    event_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TakeGalInteractTriggerEventRsp(betterproto.Message):
    retcode: "TakeGalInteractTriggerEventRspRetcode" = betterproto.enum_field(1)
    avatar_id: int = betterproto.uint32_field(2)
    event_id: int = betterproto.uint32_field(3)
    reward_data: "RewardData" = betterproto.message_field(4)
    drop_item: "DropItem" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class TakeGeneralActivityScoreRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    score_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TakeGeneralActivityScoreRewardRsp(betterproto.Message):
    retcode: "TakeGeneralActivityScoreRewardRspRetcode" = betterproto.enum_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)
    activity_id: int = betterproto.uint32_field(3)
    score_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TakeGobackFundRewardReq(betterproto.Message):
    progress_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeGobackFundRewardRsp(betterproto.Message):
    retcode: "TakeGobackFundRewardRspRetcode" = betterproto.enum_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeGobackLoginRewardReq(betterproto.Message):
    take_days: int = betterproto.uint32_field(1)
    reward_type: int = betterproto.uint32_field(2)
    reward_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TakeGobackLoginRewardRsp(betterproto.Message):
    retcode: "TakeGobackLoginRewardRspRetcode" = betterproto.enum_field(1)
    take_days: int = betterproto.uint32_field(2)
    reward_list: List["RewardData"] = betterproto.message_field(3)
    reward_type: int = betterproto.uint32_field(4)
    reward_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TakeGobackScoreRewardReq(betterproto.Message):
    score_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeGobackScoreRewardRsp(betterproto.Message):
    retcode: "TakeGobackScoreRewardRspRetcode" = betterproto.enum_field(1)
    score_id: int = betterproto.uint32_field(2)
    reward_list: List["RewardData"] = betterproto.message_field(3)
    score: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TakeInviteActivityInviterProgressRewardReq(betterproto.Message):
    activity_type: "InviterActivityType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class TakeInviteActivityInviterProgressRewardRsp(betterproto.Message):
    retcode: "TakeInviteActivityInviterProgressRewardRspRetcode" = (
        betterproto.enum_field(1)
    )
    activity_type: "InviterActivityType" = betterproto.enum_field(2)
    taken_reward_progress: int = betterproto.uint32_field(3)
    reward_data: "RewardData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class TakeLoginActivityRewardReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    take_days: int = betterproto.uint32_field(2)
    reward_type: "LoginActivityRewardType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class TakeLoginActivityRewardRsp(betterproto.Message):
    retcode: "TakeLoginActivityRewardRspRetcode" = betterproto.enum_field(1)
    id: int = betterproto.uint32_field(2)
    take_days: int = betterproto.uint32_field(3)
    reward_list: List["RewardData"] = betterproto.message_field(4)
    reward_type: "LoginActivityRewardType" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class TakeLoginMissionRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeLoginMissionRewardRsp(betterproto.Message):
    retcode: "TakeLoginMissionRewardRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    reward_list: List["RewardData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TakeMissionGroupRewardReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeMissionGroupRewardRsp(betterproto.Message):
    retcode: "TakeMissionGroupRewardRspRetcode" = betterproto.enum_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeMissionStepCompensationReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeMissionStepCompensationRsp(betterproto.Message):
    retcode: "TakeMissionStepCompensationRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeMissionThemeRewardReq(betterproto.Message):
    theme_id: int = betterproto.uint32_field(1)
    mission_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TakeMissionThemeRewardRsp(betterproto.Message):
    retcode: "TakeMissionThemeRewardRspRetcode" = betterproto.enum_field(1)
    theme_id: int = betterproto.uint32_field(2)
    mission_id: int = betterproto.uint32_field(3)
    reward_data: "RewardData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class TakeMosaicActivityRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeMosaicActivityRewardRsp(betterproto.Message):
    retcode: "TakeMosaicActivityRewardRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TakeNewbieActivityLevelRewardReq(betterproto.Message):
    level: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeNewbieActivityLevelRewardRsp(betterproto.Message):
    retcode: "TakeNewbieActivityLevelRewardRspRetcode" = betterproto.enum_field(1)
    level: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TakeNewbieChallengeRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeNewbieChallengeRewardRsp(betterproto.Message):
    retcode: "TakeNewbieChallengeRewardRspRetcode" = betterproto.enum_field(1)
    reward: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeNewbiePrivilegeRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeNewbiePrivilegeRewardRsp(betterproto.Message):
    retcode: "TakeNewbiePrivilegeRewardRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeOfflineResourceBoxReq(betterproto.Message):
    resource_type: int = betterproto.uint32_field(1)
    box_id: int = betterproto.uint32_field(2)
    box_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TakeOfflineResourceBoxRsp(betterproto.Message):
    retcode: "TakeOfflineResourceBoxRspRetcode" = betterproto.enum_field(1)
    reward_data_list: List["RewardData"] = betterproto.message_field(2)
    offline_resource_data: "OfflineResource" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TakeOnlineRewardReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeOnlineRewardRsp(betterproto.Message):
    retcode: "TakeOnlineRewardRspRetcode" = betterproto.enum_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)
    id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TakeOverlapActivityRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TakeOverlapActivityRewardRsp(betterproto.Message):
    retcode: "TakeOverlapActivityRewardRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    id: int = betterproto.uint32_field(3)
    reward_data: "RewardData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class TakeRaffleRewardReq(betterproto.Message):
    raffle_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeRaffleRewardRsp(betterproto.Message):
    retcode: "TakeRaffleRewardRspRetcode" = betterproto.enum_field(1)
    raffle_id_list: List[int] = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TakeReclaimLevelRewardReq(betterproto.Message):
    level: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeReclaimLevelRewardRsp(betterproto.Message):
    retcode: "TakeReclaimLevelRewardRspRetcode" = betterproto.enum_field(1)
    level: int = betterproto.uint32_field(2)
    reward_list: List["RewardData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TakeRestaurantOrderReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeRestaurantOrderRsp(betterproto.Message):
    retcode: "TakeRestaurantOrderRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TakeRewardLineActivityRewardReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeRewardLineActivityRewardRsp(betterproto.Message):
    retcode: "TakeRewardLineActivityRewardRspRetcode" = betterproto.enum_field(1)
    reward_data_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeRollRewardReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    reward_group_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TakeRollRewardRsp(betterproto.Message):
    retcode: "TakeRollRewardRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeRpgTaleCollectionRewardReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeRpgTaleCollectionRewardRsp(betterproto.Message):
    retcode: "TakeRpgTaleCollectionRewardRspRetcode" = betterproto.enum_field(1)
    collection_count_list: List[int] = betterproto.uint32_field(2)
    reward_data_list: List["RewardData"] = betterproto.message_field(3)
    reward_taken_collection_count_list: List[int] = betterproto.uint32_field(4)
    tale_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TakeScDlcChallengeRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeScDlcChallengeRewardRsp(betterproto.Message):
    retcode: "TakeScDlcChallengeRewardRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeScDlcDailyQuestRewardReq(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeScDlcDailyQuestRewardRsp(betterproto.Message):
    retcode: "TakeScDlcDailyQuestRewardRspRetcode" = betterproto.enum_field(1)
    quest_id: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TakeShareRewardReq(betterproto.Message):
    share_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeShareRewardRsp(betterproto.Message):
    retcode: "TakeShareRewardRspRetcode" = betterproto.enum_field(1)
    share_id: int = betterproto.uint32_field(2)
    reward_list: List["RewardData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TakeSlotMachineProgressRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeSlotMachineProgressRewardRsp(betterproto.Message):
    retcode: "TakeSlotMachineProgressRewardRspRetcode" = betterproto.enum_field(1)
    activity_id: int = betterproto.uint32_field(2)
    reward_list: List["RewardData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TakeStageActChallengeRewardReq(betterproto.Message):
    act_id: int = betterproto.uint32_field(1)
    difficulty: int = betterproto.uint32_field(2)
    challenge_num_index: int = betterproto.uint32_field(3)
    challenge_num_index_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TakeStageActChallengeRewardRsp(betterproto.Message):
    retcode: "TakeStageActChallengeRewardRspRetcode" = betterproto.enum_field(1)
    act_id: int = betterproto.uint32_field(2)
    difficulty: int = betterproto.uint32_field(3)
    challenge_num_index: int = betterproto.uint32_field(4)
    reward_list: List["RewardData"] = betterproto.message_field(5)
    succ_challenge_num_index_list: List[int] = betterproto.uint32_field(6)
    fail_challenge_num_index_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class TakeTechCollectRewardReq(betterproto.Message):
    map_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeTechCollectRewardRsp(betterproto.Message):
    retcode: "TakeTechCollectRewardRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)
    map_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TakeTowerRaidRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeTowerRaidRewardRsp(betterproto.Message):
    retcode: "TakeTowerRaidRewardRspRetcode" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    activity_id: int = betterproto.uint32_field(3)
    hard_level: int = betterproto.uint32_field(4)
    reward_list: List["RewardData"] = betterproto.message_field(5)
    rating: "TowerRaidRating" = betterproto.enum_field(6)
    drop_item_list: List["DropItem"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class TakeTradingCardRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeTradingCardRewardRsp(betterproto.Message):
    retcode: "TakeTradingCardRewardRspRetcode" = betterproto.enum_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)
    trade_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TakeVersionActivityMissionRewardReq(betterproto.Message):
    config_id: int = betterproto.uint32_field(1)
    module_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TakeVersionActivityMissionRewardRsp(betterproto.Message):
    retcode: "TakeVersionActivityMissionRewardRspRetcode" = betterproto.enum_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)
    config_id: int = betterproto.uint32_field(3)
    module_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TakeVersionActivityRewardReq(betterproto.Message):
    id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeVersionActivityRewardRsp(betterproto.Message):
    retcode: "TakeVersionActivityRewardRspRetcode" = betterproto.enum_field(1)
    reward_score: int = betterproto.uint32_field(2)
    reward_list: List["RewardData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TakeWeekDayActivityCompensationReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeWeekDayActivityCompensationRsp(betterproto.Message):
    retcode: "TakeWeekDayActivityCompensationRspRetcode" = betterproto.enum_field(1)
    reward_data_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeWeekDayActivityReturnCoinReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeWeekDayActivityReturnCoinRsp(betterproto.Message):
    retcode: "TakeWeekDayActivityReturnCoinRspRetcode" = betterproto.enum_field(1)
    num: int = betterproto.uint32_field(2)
    is_coin_full_after_taken: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class TakeWeeklyRoutineRewardReq(betterproto.Message):
    weekly_routine_reward_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeWeeklyRoutineRewardRsp(betterproto.Message):
    retcode: "TakeWeeklyRoutineRewardRspRetcode" = betterproto.enum_field(1)
    weekly_routine_reward_id: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TakeWikiRatingRewardReq(betterproto.Message):
    rating_id: int = betterproto.uint32_field(1)
    rating_score: int = betterproto.uint32_field(2)
    cg_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TakeWikiRatingRewardRsp(betterproto.Message):
    retcode: "TakeWikiRatingRewardRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)
    rating_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TeamAssaultActivityBeginReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    avatar_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TeamAssaultActivityBeginRsp(betterproto.Message):
    retcode: "TeamAssaultActivityBeginRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class TeamAssaultActivityBossBeginReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    boss_idx: int = betterproto.uint32_field(2)
    avatar_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TeamAssaultActivityBossBeginRsp(betterproto.Message):
    retcode: "TeamAssaultActivityBossBeginRspRetcode" = betterproto.enum_field(1)
    client_data: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class TeamAssaultActivityBossEndReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    boss_idx: int = betterproto.uint32_field(2)
    pass_time: int = betterproto.uint32_field(3)
    hp_percentage: float = betterproto.float_field(4)
    cheat_type: int = betterproto.uint32_field(5)
    cheat_data_list: List["StageCheatData"] = betterproto.message_field(6)
    client_data: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class TeamAssaultActivityBossEndRsp(betterproto.Message):
    retcode: "TeamAssaultActivityBossEndRspRetcode" = betterproto.enum_field(1)
    boss_idx: int = betterproto.uint32_field(2)
    score: int = betterproto.uint32_field(3)
    activity_score: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TeamAssaultActivityEndReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TeamAssaultActivityEndRsp(betterproto.Message):
    retcode: "TeamAssaultActivityEndRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class TeamAssaultActivityInfo(betterproto.Message):
    enter_times: int = betterproto.uint32_field(1)
    avatar_id_list: List[int] = betterproto.uint32_field(2)
    score_list: List[int] = betterproto.uint32_field(3)
    boss_idx: int = betterproto.uint32_field(4)
    pass_time_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TeamAssaultActivityResetReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TeamAssaultActivityResetRsp(betterproto.Message):
    retcode: "TeamAssaultActivityResetRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class TeamLeaderChangeNotify(betterproto.Message):
    team_id: int = betterproto.uint32_field(1)
    old_leader: int = betterproto.uint32_field(2)
    new_leader: int = betterproto.uint32_field(3)
    is_timeout: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class ThemeData(betterproto.Message):
    theme_id: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)
    bonus_drop_times: int = betterproto.uint32_field(4)
    total_bonus_score: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ThemeWantedActivity(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    activity_id: int = betterproto.uint32_field(2)
    open_stage_group_id_list: List[int] = betterproto.uint32_field(3)
    stage_group_info_list: List[
        "ThemeWantedStageGroupInfo"
    ] = betterproto.message_field(4)
    taken_weekly_assist_material_list: List["Material"] = betterproto.message_field(5)
    end_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ThemeWantedBuyExtraDropReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ThemeWantedBuyExtraDropRsp(betterproto.Message):
    retcode: "ThemeWantedBuyExtraDropRspRetcode" = betterproto.enum_field(1)
    drop_item_list: List["DropItem"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ThemeWantedRefreshTicketReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ThemeWantedRefreshTicketRsp(betterproto.Message):
    retcode: "ThemeWantedRefreshTicketRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class ThemeWantedStageGroupInfo(betterproto.Message):
    stage_group_id: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)
    not_pass_progress_list: List[int] = betterproto.uint32_field(3)
    unlock_mp_progress_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ThemeWantedSwitchData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TileEnterReq(betterproto.Message):
    tower_id: int = betterproto.uint32_field(1)
    floor_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TileEnterRsp(betterproto.Message):
    retcode: "TileEnterRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class TileEntity(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    entity_type: int = betterproto.uint32_field(2)
    position: int = betterproto.uint32_field(3)
    direction: int = betterproto.uint32_field(4)
    reset_tag: int = betterproto.uint32_field(5)
    player_info: "TilePlayerInfo" = betterproto.message_field(11)
    npc_info: "TileNpcInfo" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class TileEntityOpNotify(betterproto.Message):
    tower_id: int = betterproto.uint32_field(1)
    floor_id: int = betterproto.uint32_field(2)
    entity_op_list: List["TileEntityOpNotifyTileEntityOp"] = betterproto.message_field(
        3
    )


@dataclass(eq=False, repr=False)
class TileEntityOpNotifyStatusOp(betterproto.Message):
    status: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TileEntityOpNotifyMoveOp(betterproto.Message):
    path_cell_id_list: List[int] = betterproto.uint32_field(1)
    move_type: "TileMoveType" = betterproto.enum_field(2)
    direction: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TileEntityOpNotifyUpdateCellOp(betterproto.Message):
    cell_list: List["TileMapCell"] = betterproto.message_field(1)
    trigger_list: List["TileTrigger"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TileEntityOpNotifyUpdateEntityOp(betterproto.Message):
    create_entity_list: List["TileEntity"] = betterproto.message_field(1)
    delete_entity_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TileEntityOpNotifyTileEntityOp(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    move: "TileEntityOpNotifyMoveOp" = betterproto.message_field(2)
    wait_select_path: "TileWaitSelectPath" = betterproto.message_field(3)
    update_cell: "TileEntityOpNotifyUpdateCellOp" = betterproto.message_field(4)
    update_entity: "TileEntityOpNotifyUpdateEntityOp" = betterproto.message_field(5)
    status: "TileEntityOpNotifyStatusOp" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class TileFloor(betterproto.Message):
    floor_id: int = betterproto.uint32_field(1)
    floor_status: "TileFloorStatus" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class TileGetTowerReq(betterproto.Message):
    tower_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TileGetTowerRsp(betterproto.Message):
    retcode: "TileGetTowerRspRetcode" = betterproto.enum_field(1)
    cur_floor_id: int = betterproto.uint32_field(2)
    finished_dialog_id_list: List[int] = betterproto.uint32_field(3)
    settled_event_id_list: List[int] = betterproto.uint32_field(4)
    floor_list: List["TileFloor"] = betterproto.message_field(5)
    tower_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class TileLoadSavedPositionReq(betterproto.Message):
    tower_id: int = betterproto.uint32_field(1)
    floor_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TileLoadSavedPositionRsp(betterproto.Message):
    retcode: "TileLoadSavedPositionRspRetcode" = betterproto.enum_field(1)
    position: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TileMap(betterproto.Message):
    map_id: int = betterproto.uint32_field(1)
    width: int = betterproto.uint32_field(2)
    height: int = betterproto.uint32_field(3)
    cell_list: List["TileMapCell"] = betterproto.message_field(5)
    trigger_list: List["TileTrigger"] = betterproto.message_field(6)
    entity_list: List["TileEntity"] = betterproto.message_field(7)
    mark_list: List["TileMark"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class TileMapCell(betterproto.Message):
    cell_id: int = betterproto.uint32_field(1)
    ground: "TileMapCellCellLayer" = betterproto.message_field(2)
    decoration: "TileMapCellCellLayer" = betterproto.message_field(3)
    barrier: int = betterproto.uint32_field(4)
    fog: int = betterproto.uint32_field(5)
    terrain: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class TileMapCellCellLayer(betterproto.Message):
    model_id: int = betterproto.uint32_field(1)
    direction: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TileMapUpdateNotify(betterproto.Message):
    tower_id: int = betterproto.uint32_field(1)
    floor_id: int = betterproto.uint32_field(2)
    cell_list: List["TileMapCell"] = betterproto.message_field(3)
    entity_list: List["TileEntity"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class TileMark(betterproto.Message):
    mark_id: int = betterproto.uint32_field(1)
    mark_value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TileNpcInfo(betterproto.Message):
    id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TilePlayerInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    avatar_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TileReportSavedPositionReq(betterproto.Message):
    tower_id: int = betterproto.uint32_field(1)
    floor_id: int = betterproto.uint32_field(2)
    position: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TileReportSavedPositionRsp(betterproto.Message):
    retcode: "TileReportSavedPositionRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class TileResetFloorReq(betterproto.Message):
    tower_id: int = betterproto.uint32_field(1)
    floor_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TileResetFloorRsp(betterproto.Message):
    retcode: "TileResetFloorRspRetcode" = betterproto.enum_field(1)
    tower_id: int = betterproto.uint32_field(2)
    floor_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TileResetRegionReq(betterproto.Message):
    tower_id: int = betterproto.uint32_field(1)
    floor_id: int = betterproto.uint32_field(2)
    reset_tag: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TileResetRegionRsp(betterproto.Message):
    retcode: "TileResetRegionRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class TileSaveProgressReq(betterproto.Message):
    tower_id: int = betterproto.uint32_field(1)
    finished_dialog_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TileSaveProgressRsp(betterproto.Message):
    retcode: "TileSaveProgressRspRetcode" = betterproto.enum_field(1)
    finished_dialog_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TileSelectPathReq(betterproto.Message):
    tower_id: int = betterproto.uint32_field(1)
    next_path_cell_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TileSelectPathRsp(betterproto.Message):
    retcode: "TileSelectPathRspRetcode" = betterproto.enum_field(1)
    tower_id: int = betterproto.uint32_field(2)
    next_path_cell_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TileTrigger(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    is_active: bool = betterproto.bool_field(2)
    position: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TileUpdateMapReq(betterproto.Message):
    tower_id: int = betterproto.uint32_field(1)
    floor_id: int = betterproto.uint32_field(2)
    cell_list: List["TileMapCell"] = betterproto.message_field(3)
    trigger_list: List["TileTrigger"] = betterproto.message_field(4)
    create_entity_list: List["TileEntity"] = betterproto.message_field(5)
    move_entity_list: List["TileUpdateMapReqMoveEntity"] = betterproto.message_field(6)
    delete_entity_list: List[int] = betterproto.uint32_field(7)
    mark_list: List["TileMark"] = betterproto.message_field(8)
    outer_value_list: List["TileUpdateMapReqOuterValue"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class TileUpdateMapReqMoveEntity(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    to_position: int = betterproto.uint32_field(2)
    path_cell_id_list: List[int] = betterproto.uint32_field(3)
    direction: int = betterproto.uint32_field(4)
    saved_position: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TileUpdateMapReqOuterValue(betterproto.Message):
    type: "TileUpdateMapReqOuterValueType" = betterproto.enum_field(1)
    key: int = betterproto.uint32_field(2)
    value: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TileUpdateMapRsp(betterproto.Message):
    retcode: "TileUpdateMapRspRetcode" = betterproto.enum_field(1)
    created_entity_list: List["TileEntity"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TileWaitSelectPath(betterproto.Message):
    candidate_path_cell_id_list: List[int] = betterproto.uint32_field(1)
    left_step_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TimeLimitAddUpReward(betterproto.Message):
    add_up_value_need: int = betterproto.uint32_field(1)
    reward_id: int = betterproto.uint32_field(2)
    is_reward_get: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class TimeLimitAddUpRewardGrantNotify(betterproto.Message):
    type: "TimeLimitAddUpType" = betterproto.enum_field(1)
    add_up_value_need: int = betterproto.uint32_field(2)
    reward: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TimeLimitAddUpUpdateNotify(betterproto.Message):
    add_up_value: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TowerRaidAvatar(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    enter_times: int = betterproto.uint32_field(2)
    weapon_id: int = betterproto.uint32_field(3)
    stigmata_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TowerRaidBossStage(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    boss_left_hp: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TowerRaidLockAvatarNotify(betterproto.Message):
    avatar_list: List["TowerRaidAvatar"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class TownActivity(betterproto.Message):
    town_id: int = betterproto.uint32_field(1)
    tower_id: int = betterproto.uint32_field(2)
    game_round: int = betterproto.uint32_field(3)
    avatar_list: List["TownAvatar"] = betterproto.message_field(4)
    brick_id_list: List[int] = betterproto.uint32_field(5)
    next_brick_round: int = betterproto.uint32_field(6)
    building_list: List["TownBuilding"] = betterproto.message_field(7)
    valid_building_id_list: List[int] = betterproto.uint32_field(8)
    monster_list: List["TownMonster"] = betterproto.message_field(9)
    event_list: List["TownEvent"] = betterproto.message_field(10)
    boss: "TownBoss" = betterproto.message_field(11)
    buff_list: List["TownBuff"] = betterproto.message_field(12)
    trigger_list: List["TownPassByTrigger"] = betterproto.message_field(13)
    challenge_list: List["TownChallenge"] = betterproto.message_field(14)
    finished_tower_id_list: List[int] = betterproto.uint32_field(15)
    is_game_end: bool = betterproto.bool_field(16)
    path_list: List["TownPath"] = betterproto.message_field(17)
    transaction_str: str = betterproto.string_field(18)


@dataclass(eq=False, repr=False)
class TownActivityAlterPathReq(betterproto.Message):
    head: "TownCommonHead" = betterproto.message_field(1)
    position: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TownActivityAlterPathRsp(betterproto.Message):
    retcode: "TownActivityAlterPathRspRetcode" = betterproto.enum_field(1)
    head: "TownCommonHead" = betterproto.message_field(2)
    position: int = betterproto.uint32_field(3)
    next_position: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TownActivityAttackEnemyBuffNotify(betterproto.Message):
    head: "TownCommonHead" = betterproto.message_field(1)
    attack_list: List[
        "TownActivityAttackEnemyBuffNotifyAttack"
    ] = betterproto.message_field(2)
    drop_item_list: List["DropItem"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TownActivityAttackEnemyBuffNotifyAttack(betterproto.Message):
    building_unique_id: int = betterproto.uint32_field(1)
    skill_id: int = betterproto.uint32_field(2)
    attacked_unique_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TownActivityBattleReq(betterproto.Message):
    head: "TownCommonHead" = betterproto.message_field(1)
    end_status: "TownActivityBattleReqBattleEndStatus" = betterproto.enum_field(2)
    avatar_result_list: List[
        "TownActivityBattleReqAvatarBattleResult"
    ] = betterproto.message_field(3)
    monster_result: "TownActivityBattleReqMonsterBattleResult" = (
        betterproto.message_field(4)
    )


@dataclass(eq=False, repr=False)
class TownActivityBattleReqAvatarBattleResult(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    left_hp_ratio: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TownActivityBattleReqMonsterBattleResult(betterproto.Message):
    monster_unique_id: int = betterproto.uint32_field(1)
    left_hp_ratio: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TownActivityBattleRsp(betterproto.Message):
    retcode: "TownActivityBattleRspRetcode" = betterproto.enum_field(1)
    head: "TownCommonHead" = betterproto.message_field(2)
    drop_item_list: List["DropItem"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TownActivityBossAttackNotify(betterproto.Message):
    head: "TownCommonHead" = betterproto.message_field(1)
    attacked_position_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TownActivityBuildReq(betterproto.Message):
    head: "TownCommonHead" = betterproto.message_field(1)
    use_brick_index: int = betterproto.uint32_field(2)
    use_brick_position: int = betterproto.uint32_field(3)
    target_building_id: int = betterproto.uint32_field(4)
    target_building_position: int = betterproto.uint32_field(5)
    direction: int = betterproto.uint32_field(6)
    consume_building_unique_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class TownActivityBuildRsp(betterproto.Message):
    retcode: "TownActivityBuildRspRetcode" = betterproto.enum_field(1)
    head: "TownCommonHead" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TownActivityCheckInOptionalReq(betterproto.Message):
    head: "TownCommonHead" = betterproto.message_field(1)
    building_unique_id: int = betterproto.uint32_field(2)
    avatar_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TownActivityCheckInOptionalRsp(betterproto.Message):
    retcode: "TownActivityCheckInOptionalRspRetcode" = betterproto.enum_field(1)
    head: "TownCommonHead" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TownActivityEndNotify(betterproto.Message):
    head: "TownCommonHead" = betterproto.message_field(1)
    status: "TownActivityEndNotifyStatus" = betterproto.enum_field(2)
    challenge_list: List["TownChallenge"] = betterproto.message_field(3)
    challenge_reward_data: "RewardData" = betterproto.message_field(4)
    talent_point_item: "GenericItemNum" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class TownActivityGetDataReq(betterproto.Message):
    town_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TownActivityGetDataRsp(betterproto.Message):
    retcode: "TownActivityGetDataRspRetcode" = betterproto.enum_field(1)
    town: "TownActivity" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TownActivityGetShopReq(betterproto.Message):
    head: "TownCommonHead" = betterproto.message_field(1)
    building_unique_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TownActivityGetShopRsp(betterproto.Message):
    retcode: "TownActivityGetShopRspRetcode" = betterproto.enum_field(1)
    head: "TownCommonHead" = betterproto.message_field(2)
    building_unique_id: int = betterproto.uint32_field(3)
    goods_list: List["TownActivityGetShopRspShopGoods"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class TownActivityGetShopRspShopGoods(betterproto.Message):
    goods_id: int = betterproto.uint32_field(1)
    material_id: int = betterproto.uint32_field(2)
    left_buy_times: int = betterproto.uint32_field(3)
    cost_material_id: int = betterproto.uint32_field(4)
    cost_num: int = betterproto.uint32_field(5)
    limit_type: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class TownActivityHealAvatarReq(betterproto.Message):
    head: "TownCommonHead" = betterproto.message_field(1)
    avatar_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TownActivityHealAvatarRsp(betterproto.Message):
    retcode: "TownActivityHealAvatarRspRetcode" = betterproto.enum_field(1)
    head: "TownCommonHead" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TownActivityMaterialUseReq(betterproto.Message):
    head: "TownCommonHead" = betterproto.message_field(1)
    material_id: int = betterproto.uint32_field(2)
    target_param: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TownActivityMaterialUseRsp(betterproto.Message):
    retcode: "TownActivityMaterialUseRspRetcode" = betterproto.enum_field(1)
    head: "TownCommonHead" = betterproto.message_field(2)
    material_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TownActivityRefreshBrickReq(betterproto.Message):
    head: "TownCommonHead" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class TownActivityRefreshBrickRsp(betterproto.Message):
    retcode: "TownActivityRefreshBrickRspRetcode" = betterproto.enum_field(1)
    head: "TownCommonHead" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TownActivityResetReq(betterproto.Message):
    town_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TownActivityResetRsp(betterproto.Message):
    retcode: "TownActivityResetRspRetcode" = betterproto.enum_field(1)
    town_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TownActivitySaveReq(betterproto.Message):
    head: "TownCommonHead" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class TownActivitySaveRsp(betterproto.Message):
    retcode: "TownActivitySaveRspRetcode" = betterproto.enum_field(1)
    head: "TownCommonHead" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TownActivitySellBrickReq(betterproto.Message):
    head: "TownCommonHead" = betterproto.message_field(1)
    sell_brick_index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TownActivitySellBrickRsp(betterproto.Message):
    retcode: "TownActivitySellBrickRspRetcode" = betterproto.enum_field(1)
    head: "TownCommonHead" = betterproto.message_field(2)
    return_material_list: List["Material"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TownActivitySellBuildingReq(betterproto.Message):
    head: "TownCommonHead" = betterproto.message_field(1)
    sell_building_unique_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TownActivitySellBuildingRsp(betterproto.Message):
    retcode: "TownActivitySellBuildingRspRetcode" = betterproto.enum_field(1)
    head: "TownCommonHead" = betterproto.message_field(2)
    return_material_list: List["Material"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TownActivityShopBuyReq(betterproto.Message):
    head: "TownCommonHead" = betterproto.message_field(1)
    shop_building_unique_id: int = betterproto.uint32_field(2)
    goods_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TownActivityShopBuyRsp(betterproto.Message):
    retcode: "TownActivityShopBuyRspRetcode" = betterproto.enum_field(1)
    head: "TownCommonHead" = betterproto.message_field(2)
    goods_id: int = betterproto.uint32_field(3)
    left_buy_times: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TownActivitySpeedUpHealReq(betterproto.Message):
    head: "TownCommonHead" = betterproto.message_field(1)
    avatar_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TownActivitySpeedUpHealRsp(betterproto.Message):
    retcode: "TownActivitySpeedUpHealRspRetcode" = betterproto.enum_field(1)
    head: "TownCommonHead" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TownAvatar(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    tile_unique_id: int = betterproto.uint32_field(2)
    left_step: int = betterproto.uint32_field(3)
    tile_position: int = betterproto.uint32_field(4)
    left_hp_ratio: int = betterproto.uint32_field(5)
    status: "TownAvatarStatus" = betterproto.enum_field(6)
    status_begin_round: int = betterproto.uint32_field(7)
    check_in_building_unique_id: int = betterproto.uint32_field(8)
    buff_list: List["TownBuff"] = betterproto.message_field(9)
    speed_up_heal_times: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class TownBoss(betterproto.Message):
    monster_id: int = betterproto.uint32_field(1)
    unique_id: int = betterproto.uint32_field(2)
    strength: int = betterproto.uint32_field(3)
    left_hp_ratio: int = betterproto.uint32_field(4)
    born_round: int = betterproto.uint32_field(5)
    next_boss_born_round: int = betterproto.uint32_field(6)
    next_boss_monster_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class TownBuff(betterproto.Message):
    buff_id: int = betterproto.uint32_field(1)
    buff_num: int = betterproto.uint32_field(2)
    left_duration_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TownBuilding(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    building_id: int = betterproto.uint32_field(2)
    position: int = betterproto.uint32_field(3)
    occupy_position_list: List[int] = betterproto.uint32_field(4)
    skill_trigger_times_list: List[
        "TownBuildingSkillTriggerTimes"
    ] = betterproto.message_field(5)
    left_hp: int = betterproto.uint32_field(6)
    activated_duration_skill_id_list: List[int] = betterproto.uint32_field(7)
    waiting_avatar_id_list: List[int] = betterproto.uint32_field(8)
    next_interval_skill_round: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TownBuildingSkillTriggerTimes(betterproto.Message):
    skill_id: int = betterproto.uint32_field(1)
    trigger_times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TownChallenge(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(1)
    status: "TownChallengeStatus" = betterproto.enum_field(2)
    value: int = betterproto.uint32_field(3)
    tower_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TownCommonHead(betterproto.Message):
    town_id: int = betterproto.uint32_field(1)
    tower_id: int = betterproto.uint32_field(2)
    game_round: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TownEvent(betterproto.Message):
    position: int = betterproto.uint32_field(1)
    event_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TownMonster(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    monster_id: int = betterproto.uint32_field(2)
    position: int = betterproto.uint32_field(3)
    strength: int = betterproto.uint32_field(4)
    left_hp_ratio: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TownPassByTrigger(betterproto.Message):
    position: int = betterproto.uint32_field(1)
    skill_id: int = betterproto.uint32_field(2)
    building_unique_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TownPath(betterproto.Message):
    position: int = betterproto.uint32_field(1)
    next_position: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TransferArmadaLeaderReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TransferArmadaLeaderRsp(betterproto.Message):
    retcode: "TransferArmadaLeaderRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class TrialAvatar(betterproto.Message):
    sample_id: int = betterproto.uint32_field(1)
    end_time: int = betterproto.uint32_field(2)
    is_first_show: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class TrialWarship(betterproto.Message):
    sample_id: int = betterproto.uint32_field(1)
    end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TriggerBurdenAlleviationReq(betterproto.Message):
    alleviation_id: int = betterproto.uint32_field(1)
    para_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TriggerBurdenAlleviationRsp(betterproto.Message):
    retcode: "TriggerBurdenAlleviationRspRetcode" = betterproto.enum_field(1)
    alleviation_id: int = betterproto.uint32_field(2)
    para_list: List[int] = betterproto.uint32_field(3)
    reward_data: "RewardData" = betterproto.message_field(4)
    drop_item_list: List["DropItem"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class TriggerOpenworldEndlessTrapReq(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    item_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TriggerOpenworldEndlessTrapRsp(betterproto.Message):
    retcode: "TriggerOpenworldEndlessTrapRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class TriggerRecommendGoodsNotify(betterproto.Message):
    recommend_id: int = betterproto.uint32_field(1)
    shop_goods_schedule_id_list: List[int] = betterproto.uint32_field(2)
    trigger_recommend_goods_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TriggerRpgTaleEventReq(betterproto.Message):
    tale_id: int = betterproto.uint32_field(2)
    content_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TriggerRpgTaleEventRsp(betterproto.Message):
    retcode: "TriggerRpgTaleEventRspRetcode" = betterproto.enum_field(1)
    tale_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TriggerRpgTaleStageEventReq(betterproto.Message):
    trigger_id: int = betterproto.uint32_field(1)
    tale_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TriggerRpgTaleStageEventRsp(betterproto.Message):
    retcode: "TriggerRpgTaleStageEventRspRetcode" = betterproto.enum_field(1)
    event_data: "RpgTaleEvent" = betterproto.message_field(2)
    tale_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TvtActivity(betterproto.Message):
    cur_schedule_id: int = betterproto.uint32_field(1)
    open_time: int = betterproto.uint32_field(2)
    close_time: int = betterproto.uint32_field(3)
    tvt_division: int = betterproto.uint32_field(6)
    tvt_star: int = betterproto.uint32_field(7)
    win_streak: int = betterproto.uint32_field(8)
    has_take_division_up_reward_list: List[int] = betterproto.uint32_field(9)
    total_battle_num: int = betterproto.uint32_field(10)
    total_win: int = betterproto.uint32_field(11)
    max_win_streak: int = betterproto.uint32_field(12)
    mvp_num: int = betterproto.uint32_field(13)
    has_take_mission_group_reward_list: List[int] = betterproto.uint32_field(14)
    open_time_period_list: List[
        "TvtActivityOpenTimePeriod"
    ] = betterproto.message_field(15)
    type: int = betterproto.uint32_field(16)


@dataclass(eq=False, repr=False)
class TvtActivityOpenTimePeriod(betterproto.Message):
    open_day_time: int = betterproto.uint32_field(1)
    close_day_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TvtBattleBeginNotify(betterproto.Message):
    battle_id: int = betterproto.uint32_field(1)
    battle_stage_id: int = betterproto.uint32_field(2)
    transaction_str: str = betterproto.string_field(3)
    battle_info: "TvtBattleInfo" = betterproto.message_field(4)
    lhs_member_list: List["TvtMember"] = betterproto.message_field(5)
    rhs_member_list: List["TvtMember"] = betterproto.message_field(6)
    is_robot_match: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class TvtBattleClientReportNotify(betterproto.Message):
    report_type: str = betterproto.string_field(1)
    report_value: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class TvtBattleConfirmNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TvtBattleEndNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TvtBattleHistory(betterproto.Message):
    battle_result: "TvtBattleResult" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class TvtBattleInfo(betterproto.Message):
    battle_id: int = betterproto.uint32_field(1)
    battle_stage_id: int = betterproto.uint32_field(2)
    phase: "TvtBattleInfoBattlePhase" = betterproto.enum_field(3)
    phase_begin_time: int = betterproto.uint32_field(4)
    phase_end_time: int = betterproto.uint32_field(5)
    lhs_member_list: List["TvtBattleMember"] = betterproto.message_field(6)
    rhs_member_list: List["TvtBattleMember"] = betterproto.message_field(7)
    is_robot_match: bool = betterproto.bool_field(8)
    battle_type: int = betterproto.uint32_field(9)
    battle_hard_level_group: int = betterproto.uint32_field(10)
    battle_hard_level: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class TvtBattleMember(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    region_name: str = betterproto.string_field(2)
    is_prepared: bool = betterproto.bool_field(3)
    member_status: "TvtBattleMemberStatus" = betterproto.enum_field(4)
    is_confirmed: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class TvtBattleMemberPrepareNotify(betterproto.Message):
    is_cancel_prepare: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class TvtBattleResult(betterproto.Message):
    battle_stage_id: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(2)
    battle_status: "TvtBattleResultBattleStatus" = betterproto.enum_field(3)
    lhs_member_stat_list: List["TvtMemberStat"] = betterproto.message_field(4)
    rhs_member_stat_list: List["TvtMemberStat"] = betterproto.message_field(5)
    battle_type: int = betterproto.uint32_field(6)
    is_robot_match: bool = betterproto.bool_field(7)
    end_time: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class TvtBattleRobotSettleNotify(betterproto.Message):
    battle_result: "TvtBattleResult" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class TvtBattleSettleNotify(betterproto.Message):
    transaction_str: str = betterproto.string_field(1)
    battle_id: int = betterproto.uint32_field(2)
    battle_result: "TvtBattleResult" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TvtBattleStageMessage(betterproto.Message):
    message_id: int = betterproto.uint32_field(1)
    from_uid: int = betterproto.uint32_field(2)
    item_msg: "TvtBattleStageMessageItemMessage" = betterproto.message_field(11)
    avatar_hp_msg: "TvtBattleStageMessageAvatarHpMesssage" = betterproto.message_field(
        12
    )
    player_msg: "TvtBattleStageMessagePlayerMessage" = betterproto.message_field(13)
    boss_damage_msg: "TvtBattleStageMessageBossDamageMessage" = (
        betterproto.message_field(14)
    )
    stage_scoin_msg: "TvtBattleStageMessageStageScoinMessage" = (
        betterproto.message_field(15)
    )
    client_define_msg: "TvtBattleStageMessageClientDefineMessage" = (
        betterproto.message_field(16)
    )
    round_score_msg: "TvtBattleStageMessageRoundScoreMessage" = (
        betterproto.message_field(17)
    )


@dataclass(eq=False, repr=False)
class TvtBattleStageMessageItemMessage(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    target_uid_list: List[int] = betterproto.uint32_field(2)
    level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TvtBattleStageMessageAvatarHpMesssage(betterproto.Message):
    avatar_hp_list: List[int] = betterproto.uint32_field(1)
    avatar_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TvtBattleStageMessagePlayerMessage(betterproto.Message):
    player_value: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TvtBattleStageMessageBossDamageMessage(betterproto.Message):
    client_add_damage: int = betterproto.uint32_field(1)
    client_total_damage: int = betterproto.uint32_field(2)
    client_set_left_hp: int = betterproto.uint32_field(3)
    server_set_lhs_boss_hp: int = betterproto.uint32_field(4)
    server_set_rhs_boss_hp: int = betterproto.uint32_field(5)
    lhs_final_kill_player_uid: int = betterproto.uint32_field(6)
    rhs_final_kill_player_uid: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class TvtBattleStageMessageStageScoinMessage(betterproto.Message):
    client_add_scoin: int = betterproto.uint32_field(1)
    client_total_scoin: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TvtBattleStageMessageClientDefineMessage(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    para_uint_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TvtBattleStageMessageRoundScoreMessage(betterproto.Message):
    client_add_score: int = betterproto.uint32_field(1)
    left_total_score: int = betterproto.uint32_field(2)
    right_total_score: int = betterproto.uint32_field(3)
    left_win_times: int = betterproto.uint32_field(4)
    right_win_times: int = betterproto.uint32_field(5)
    round: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class TvtCard(betterproto.Message):
    card_id: int = betterproto.uint32_field(1)
    card_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TvtCardGetDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TvtCardGetDataRsp(betterproto.Message):
    retcode: "TvtCardGetDataRspRetcode" = betterproto.enum_field(1)
    card_list: List["TvtCard"] = betterproto.message_field(2)
    suite_list: List["TvtCardSuite"] = betterproto.message_field(3)
    selected_suite_idx: int = betterproto.uint32_field(4)
    is_take_season_return: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class TvtCardLevelUpReq(betterproto.Message):
    card_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TvtCardLevelUpRsp(betterproto.Message):
    retcode: "TvtCardLevelUpRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class TvtCardSuite(betterproto.Message):
    card_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TvtCardTakeSeasonReturnReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TvtCardTakeSeasonReturnRsp(betterproto.Message):
    retcode: "TvtCardTakeSeasonReturnRspRetcode" = betterproto.enum_field(1)
    return_item_list: List["RewardItemData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TvtCardTransformMaterialReq(betterproto.Message):
    material_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TvtCardTransformMaterialRsp(betterproto.Message):
    retcode: "TvtCardTransformMaterialRspRetcode" = betterproto.enum_field(1)
    transformed_material_list: List["Material"] = betterproto.message_field(2)
    item_list: List["GenericItemNum"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TvtCardUpdateSuiteReq(betterproto.Message):
    suite_list: List["TvtCardSuite"] = betterproto.message_field(1)
    selected_suite_idx: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TvtCardUpdateSuiteRsp(betterproto.Message):
    retcode: "TvtCardUpdateSuiteRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class TvtEnterShopReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TvtEnterShopRsp(betterproto.Message):
    retcode: "TvtEnterShopRspRetcode" = betterproto.enum_field(1)
    enter_shop_order: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TvtGetStageScheduleReq(betterproto.Message):
    type: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TvtGetStageScheduleRsp(betterproto.Message):
    retcode: "TvtGetStageScheduleRspRetcode" = betterproto.enum_field(1)
    type: int = betterproto.uint32_field(2)
    schedule_list: List["TvtStageSchedule"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class TvtMember(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    region_name: str = betterproto.string_field(2)
    nickname: str = betterproto.string_field(3)
    level: int = betterproto.uint32_field(4)
    head_avatar_id: int = betterproto.uint32_field(5)
    frame_id: int = betterproto.uint32_field(6)
    dress_id: int = betterproto.uint32_field(7)
    division: int = betterproto.uint32_field(8)
    division_star: int = betterproto.uint32_field(9)
    win_streak: int = betterproto.uint32_field(10)
    elo_score: float = betterproto.double_field(11)
    elo_score_para: float = betterproto.double_field(12)
    battle_combat: int = betterproto.uint32_field(13)
    custom_head_id: int = betterproto.uint32_field(14)
    win_add_star: int = betterproto.uint32_field(15)
    lose_del_star: int = betterproto.uint32_field(16)
    card_list: List["TvtCard"] = betterproto.message_field(17)
    lineup_info: "LineupBriefInfo" = betterproto.message_field(18)
    is_robot: bool = betterproto.bool_field(19)
    robot_match_prob: int = betterproto.uint32_field(20)
    voice_id: int = betterproto.uint32_field(21)
    lane_order: int = betterproto.uint32_field(22)
    last_lane_order: int = betterproto.uint32_field(23)


@dataclass(eq=False, repr=False)
class TvtMemberStat(betterproto.Message):
    member: "TvtMember" = betterproto.message_field(1)
    total_score: int = betterproto.uint32_field(2)
    is_mvp: bool = betterproto.bool_field(3)
    old_division: int = betterproto.uint32_field(4)
    old_division_star: int = betterproto.uint32_field(5)
    battle_points_in_stage: float = betterproto.double_field(6)
    stage_scoin_num: int = betterproto.uint32_field(7)
    is_team_match: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class TvtStageSchedule(betterproto.Message):
    day_begin_time: int = betterproto.uint32_field(2)
    day_end_time: int = betterproto.uint32_field(3)
    stage_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TvtTakeMissionGroupRewardReq(betterproto.Message):
    mission_group_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TvtTakeMissionGroupRewardRsp(betterproto.Message):
    retcode: "TvtTakeMissionGroupRewardRspRetcode" = betterproto.enum_field(1)
    reward_list: List["RewardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TvtUpdateLineupInfoNotify(betterproto.Message):
    avatar_id_list: List[int] = betterproto.uint32_field(1)
    elf_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UltraEndlessBriefDataNotify(betterproto.Message):
    main_data: "UltraEndlessMainData" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class UltraEndlessClientReportNotify(betterproto.Message):
    client_report_type: "UltraEndlessClientReportNotifyClientReportType" = (
        betterproto.enum_field(1)
    )
    client_transaction_str: str = betterproto.string_field(2)
    report_msg: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class UltraEndlessCommonNotify(betterproto.Message):
    event_type: "UltraEndlessCommonNotifyEventType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class UltraEndlessEnterSiteReq(betterproto.Message):
    site_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class UltraEndlessEnterSiteRsp(betterproto.Message):
    retcode: "UltraEndlessEnterSiteRspRetcode" = betterproto.enum_field(1)
    site_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UltraEndlessFirstJoinRewardNotify(betterproto.Message):
    medal_reward: "RewardData" = betterproto.message_field(1)
    promote_reward: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class UltraEndlessFloor(betterproto.Message):
    floor: int = betterproto.uint32_field(1)
    max_score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UltraEndlessGetMainDataReq(betterproto.Message):
    player_level: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class UltraEndlessGetMainDataRsp(betterproto.Message):
    retcode: "UltraEndlessGetMainDataRspRetcode" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    group_level: int = betterproto.uint32_field(3)
    top_group_level: int = betterproto.uint32_field(4)
    cup_num: int = betterproto.uint32_field(5)
    main_data: "UltraEndlessMainData" = betterproto.message_field(6)
    last_settle_info: "UltraEndlessSettleInfo" = betterproto.message_field(7)
    is_just_join: bool = betterproto.bool_field(8)
    dynamic_hard_level: int = betterproto.uint32_field(9)
    endless_player_list: List["UltraEndlessPlayer"] = betterproto.message_field(10)
    brief_data_list: List["PlayerFriendBriefData"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class UltraEndlessGetTopRankReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class UltraEndlessGetTopRankRsp(betterproto.Message):
    retcode: "UltraEndlessGetTopRankRspRetcode" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    rank_data: "RankShowData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class UltraEndlessLastSettleRewardNotify(betterproto.Message):
    settle_info: "UltraEndlessSettleInfo" = betterproto.message_field(1)
    settle_reward_data: "RewardData" = betterproto.message_field(2)
    group_level_reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class UltraEndlessMainData(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    effect_time: int = betterproto.uint32_field(2)
    begin_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(4)
    close_time: int = betterproto.uint32_field(5)
    last_schedule_id: int = betterproto.uint32_field(6)
    site_list: List["UltraEndlessSite"] = betterproto.message_field(8)
    last_settle_top_rank_schedule_id: int = betterproto.uint32_field(10)
    cur_season_id: int = betterproto.uint32_field(11)
    last_settle_season_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class UltraEndlessPlayer(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    group_level: int = betterproto.uint32_field(2)
    cup_num: int = betterproto.uint32_field(3)
    max_stage_score: int = betterproto.uint32_field(4)
    score_update_time: int = betterproto.uint32_field(5)
    lineup_info: "LineupBriefInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class UltraEndlessReportSiteFloorReq(betterproto.Message):
    site_id: int = betterproto.uint32_field(1)
    floor: int = betterproto.uint32_field(2)
    score: int = betterproto.uint32_field(3)
    cost_time: int = betterproto.uint32_field(4)
    total_cost_time: int = betterproto.uint32_field(5)
    avatar_id_list: List[int] = betterproto.uint32_field(6)
    elf_id_list: List[int] = betterproto.uint32_field(7)
    is_up_floor: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class UltraEndlessReportSiteFloorRsp(betterproto.Message):
    retcode: "UltraEndlessReportSiteFloorRspRetcode" = betterproto.enum_field(1)
    site_id: int = betterproto.uint32_field(2)
    floor: int = betterproto.uint32_field(3)
    is_up_floor: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class UltraEndlessSettleInfo(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    group_level: int = betterproto.uint32_field(2)
    max_stage_score: int = betterproto.uint32_field(3)
    group_member_num: int = betterproto.uint32_field(4)
    rank: int = betterproto.uint32_field(5)
    cup_num_before: int = betterproto.uint32_field(6)
    cup_num_after_schedule_settle: int = betterproto.uint32_field(7)
    cup_num_after_season_settle: int = betterproto.uint32_field(8)
    cup_num_before_season_settle: int = betterproto.uint32_field(9)
    cup_num: int = betterproto.uint32_field(10)
    old_endless_settle_list: List["OldEndlessPlayerSettle"] = betterproto.message_field(
        11
    )
    mmr_score: int = betterproto.uint32_field(12)
    buffer_cup_before_schedule_settle: int = betterproto.uint32_field(13)
    buffer_cup: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class UltraEndlessSite(betterproto.Message):
    site_id: int = betterproto.uint32_field(1)
    floor_list: List["UltraEndlessFloor"] = betterproto.message_field(2)
    max_score_cost_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class UltraEndlessTopRankRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class UltraEndlessTopRankRewardRsp(betterproto.Message):
    retcode: "UltraEndlessTopRankRewardRspRetcode" = betterproto.enum_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    rank: int = betterproto.uint32_field(3)
    reward_data: "RewardData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class UnbindAccountReq(betterproto.Message):
    account_type: int = betterproto.uint32_field(1)
    account_uid: str = betterproto.string_field(2)
    account_token: str = betterproto.string_field(3)
    token: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class UnbindAccountRsp(betterproto.Message):
    retcode: "UnbindAccountRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class UniqueGachaData(betterproto.Message):
    ticket_hcoin_cost: int = betterproto.uint32_field(2)
    ticket_material_id: int = betterproto.uint32_field(3)
    left_gacha_times: int = betterproto.uint32_field(7)
    select_item_pool: "UniqueGachaSelectItemPool" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class UniqueGachaSelectItemPool(betterproto.Message):
    select_item_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class UnlockAvatarSkillReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    skill_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UnlockAvatarSkillRsp(betterproto.Message):
    retcode: "UnlockAvatarSkillRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class UnlockDeviceSecurityPasswordReq(betterproto.Message):
    password: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class UnlockDeviceSecurityPasswordRsp(betterproto.Message):
    retcode: "UnlockDeviceSecurityPasswordRspRetcode" = betterproto.enum_field(1)
    security_password_info: "SecurityPasswordInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class UnlockDlcPhotoReq(betterproto.Message):
    unique_monster_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class UnlockDlcPhotoRsp(betterproto.Message):
    retcode: "UnlockDlcPhotoRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class UnlockDormHouseReq(betterproto.Message):
    house_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class UnlockDormHouseRsp(betterproto.Message):
    retcode: "UnlockDormHouseRspRetcode" = betterproto.enum_field(1)
    house: "DormHouse" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class UnlockFarmSlotReq(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class UnlockFarmSlotRsp(betterproto.Message):
    retcode: "UnlockFarmSlotRspRetcode" = betterproto.enum_field(1)
    slot_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UnlockFurnitureReq(betterproto.Message):
    furniture_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class UnlockFurnitureRsp(betterproto.Message):
    retcode: "UnlockFurnitureRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class UnlockGobackFundReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class UnlockGobackFundRsp(betterproto.Message):
    retcode: "UnlockGobackFundRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class UnlockPrivilegeReq(betterproto.Message):
    privilege_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class UnlockPrivilegeRsp(betterproto.Message):
    retcode: "UnlockPrivilegeRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class UnlockRpgTaleSiteReq(betterproto.Message):
    site_id: int = betterproto.uint32_field(1)
    tale_id: int = betterproto.uint32_field(2)
    is_only_check: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class UnlockRpgTaleSiteRsp(betterproto.Message):
    retcode: "UnlockRpgTaleSiteRspRetcode" = betterproto.enum_field(1)
    site_id: int = betterproto.uint32_field(2)
    tale_id: int = betterproto.uint32_field(5)
    limit_flag_list: List["RpgTaleFlag"] = betterproto.message_field(6)
    is_only_check: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class UpdateAssistantAvatarIdReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class UpdateAssistantAvatarIdRsp(betterproto.Message):
    retcode: "UpdateAssistantAvatarIdRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class UpdateAvatarTeamNotify(betterproto.Message):
    team: "AvatarTeam" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class UpdateClientSettingNotify(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    data: bytes = betterproto.bytes_field(3)


@dataclass(eq=False, repr=False)
class UpdateClientSettingReq(betterproto.Message):
    client_setting_type: int = betterproto.uint32_field(1)
    is_weekly_guide_switch_on: bool = betterproto.bool_field(2)
    sns_show_priviledge_list: List["SnsShowPriviledge"] = betterproto.message_field(3)
    avatar_artifact_switch: "AvatarArtifactSwitch" = betterproto.message_field(4)
    master_pupil_tag_switch: "MasterPupilTagSwitch" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class UpdateCustomAvatarTeamReq(betterproto.Message):
    team: "CustomAvatarTeam" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class UpdateCustomAvatarTeamRsp(betterproto.Message):
    retcode: "UpdateCustomAvatarTeamRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class UpdateEquipmentProtectedStatusReq(betterproto.Message):
    is_protected: bool = betterproto.bool_field(1)
    weapon_unique_id_list: List[int] = betterproto.uint32_field(2)
    stigmata_unique_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class UpdateEquipmentProtectedStatusRsp(betterproto.Message):
    retcode: "UpdateEquipmentProtectedStatusRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class UpdateLobbyLineupReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    member_info: "MpTeamMemberInfo" = betterproto.message_field(2)
    avatar_trial_id: int = betterproto.uint32_field(4)
    reclaim_avatar_id: int = betterproto.uint32_field(5)
    reclaim_avatar_info: "ReclaimMpAvatar" = betterproto.message_field(6)
    elf_id: int = betterproto.uint32_field(7)
    backup_avatar_id_list: List[int] = betterproto.uint32_field(8)
    sc_dlc_avatar_id: int = betterproto.uint32_field(9)
    sc_dlc_avatar_info: "ScDlcMpAvatar" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class UpdateLobbyLineupRsp(betterproto.Message):
    retcode: "UpdateLobbyLineupRspRetcode" = betterproto.enum_field(1)
    avatar_id: int = betterproto.uint32_field(2)
    avatar_trial_id: int = betterproto.uint32_field(3)
    reclaim_avatar_id: int = betterproto.uint32_field(4)
    elf_id: int = betterproto.uint32_field(5)
    backup_avatar_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class UpdateLobbySettingReq(betterproto.Message):
    team_name: str = betterproto.string_field(1)
    team_description: str = betterproto.string_field(2)
    min_level: int = betterproto.uint32_field(3)
    lobby_enter_type: "LobbyEnterType" = betterproto.enum_field(4)
    max_level: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class UpdateLobbySettingRsp(betterproto.Message):
    retcode: "UpdateLobbySettingRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class UpdateMissionProgressReq(betterproto.Message):
    finish_way: "MissionFinishWay" = betterproto.enum_field(1)
    finish_para: int = betterproto.uint32_field(2)
    finish_para_str: str = betterproto.string_field(3)
    progress_add: int = betterproto.uint32_field(4)
    stage_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class UpdateMissionProgressRsp(betterproto.Message):
    retcode: "UpdateMissionProgressRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class UpdateRogueStageAvatarPositionReq(betterproto.Message):
    avatar_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class UpdateRogueStageAvatarPositionRsp(betterproto.Message):
    retcode: "UpdateRogueStageAvatarPositionRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class UpdateRoomInfoReq(betterproto.Message):
    room_info: "RoomInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class UpdateRoomInfoRsp(betterproto.Message):
    retcode: "UpdateRoomInfoRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class UpdateScDlcFeverSuiteReq(betterproto.Message):
    suite_id: int = betterproto.uint32_field(1)
    suite_name: str = betterproto.string_field(2)
    skill_chip_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class UpdateScDlcFeverSuiteRsp(betterproto.Message):
    retcode: "UpdateScDlcFeverSuiteRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class UpdateTowerRaidBossReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    boss_left_hp: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UpdateTowerRaidBossRsp(betterproto.Message):
    retcode: "UpdateTowerRaidBossRspRetcode" = betterproto.enum_field(1)
    stage_id: int = betterproto.uint32_field(2)
    boss_left_hp: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class UpgradeMissionThemeReq(betterproto.Message):
    theme_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class UpgradeMissionThemeRsp(betterproto.Message):
    retcode: "UpgradeMissionThemeRspRetcode" = betterproto.enum_field(1)
    theme_id: int = betterproto.uint32_field(2)
    reward_data: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class UrgencyMsgNotify(betterproto.Message):
    msg: str = betterproto.string_field(1)
    client_setting: "SettingDict" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class UseMaterialReq(betterproto.Message):
    material_id: int = betterproto.uint32_field(1)
    num: int = betterproto.uint32_field(2)
    parameter: int = betterproto.uint32_field(3)
    simulate_magic: int = betterproto.uint32_field(4)
    consume_item_list: "EquipmentItemList" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class UseMaterialRsp(betterproto.Message):
    retcode: "UseMaterialRspRetcode" = betterproto.enum_field(1)
    gift_reward_list: List["RewardData"] = betterproto.message_field(2)
    drop_item_list: List["DropItem"] = betterproto.message_field(3)
    material_id: int = betterproto.uint32_field(4)
    num: int = betterproto.uint32_field(5)
    overflow_item_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class UseOpenworldEndlessItemReq(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    target_uid: int = betterproto.uint32_field(2)
    invasion: "OpenworldInvasionItem" = betterproto.message_field(3)
    item_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class UseOpenworldEndlessItemRsp(betterproto.Message):
    retcode: "UseOpenworldEndlessItemRspRetcode" = betterproto.enum_field(1)
    new_invasion_id: int = betterproto.uint32_field(2)
    item_id: int = betterproto.uint32_field(3)
    battle_id: int = betterproto.uint32_field(4)
    effect_item_list: List["OpenworldEndlessItem"] = betterproto.message_field(5)
    old_invaison_id: int = betterproto.uint32_field(6)
    target_id: int = betterproto.uint32_field(7)
    invasion_buff_num: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class UseReclaimItemReq(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UseReclaimItemRsp(betterproto.Message):
    retcode: "UseReclaimItemRspRetcode" = betterproto.enum_field(1)
    exp_added: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UserRankData(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)
    rank: int = betterproto.uint32_field(3)
    nick_name: str = betterproto.string_field(4)
    armada_id: int = betterproto.uint32_field(5)
    armada_name: str = betterproto.string_field(6)
    avatar_id: int = betterproto.uint32_field(7)
    dress_id: int = betterproto.uint32_field(8)
    frame_id: int = betterproto.uint32_field(9)
    house_name: str = betterproto.string_field(10)
    custom_head_id: int = betterproto.uint32_field(11)
    is_logoff: bool = betterproto.bool_field(12)
    avatar_info_list: List["AvatarBriefInfo"] = betterproto.message_field(31)
    elf_info_list: List["ElfBriefInfo"] = betterproto.message_field(32)
    dlc_name: str = betterproto.string_field(33)
    weekly_report_endless_info: "UserRankWeeklyReportEndless" = (
        betterproto.message_field(34)
    )
    weekly_report_ex_boss_info: "UserRankWeeklyReportExBoss" = (
        betterproto.message_field(35)
    )
    ultra_endless_group_level: int = betterproto.uint32_field(36)
    weekly_report_ultra_endless_info: "UserRankWeeklyReportUltraEndless" = (
        betterproto.message_field(37)
    )
    slg_battle_info: "UserRankSlgBattle" = betterproto.message_field(39)
    monster_info_list: List["RanchMonsterBriefInfo"] = betterproto.message_field(40)
    monster_card_rank_info: "MonsterCardActivityRankInfo" = betterproto.message_field(
        41
    )


@dataclass(eq=False, repr=False)
class UserRankSlgBattle(betterproto.Message):
    country_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class UserRankWeeklyReportEndless(betterproto.Message):
    final_boss_id: int = betterproto.uint32_field(1)
    reward_type: "EndlessRewardType" = betterproto.enum_field(3)
    battle_config_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class UserRankWeeklyReportExBoss(betterproto.Message):
    finished_boss_info_list: List["FinishedExBossInfo"] = betterproto.message_field(1)
    rank_percent: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UserRankWeeklyReportUltraEndless(betterproto.Message):
    group_level: int = betterproto.uint32_field(1)
    cup_num_before: int = betterproto.uint32_field(2)
    cup_num_after_schedule_settle: int = betterproto.uint32_field(3)
    battle_config_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class VerifyGoogleOrderNotify(betterproto.Message):
    channel: "VerifyGoogleOrderNotifyGoogleType" = betterproto.enum_field(1)
    param: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class VerifyItunesOrderNotify(betterproto.Message):
    receipt_data: str = betterproto.string_field(1)
    device_uuid: str = betterproto.string_field(2)
    is_auto_reissue: bool = betterproto.bool_field(3)
    currency_code: str = betterproto.string_field(4)
    price_amount: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class VerifyMyCardOrderNotify(betterproto.Message):
    auth_code: str = betterproto.string_field(1)
    product_name: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class VerifySamSungOrderNotify(betterproto.Message):
    purchase_id: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class VerifySteamOrderNotify(betterproto.Message):
    order_id: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class VersionActivityData(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)
    is_take_reward: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class VideoPopupData(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)
    middle_image_path: str = betterproto.string_field(4)
    video_icon: str = betterproto.string_field(5)
    video_link: str = betterproto.string_field(6)
    video_link_open_type: int = betterproto.uint32_field(7)
    max_times: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class VipReward(betterproto.Message):
    vip_level: int = betterproto.uint32_field(1)
    pay_hcoin: int = betterproto.uint32_field(2)
    reward_id_list: List[int] = betterproto.uint32_field(3)
    reward_batch: int = betterproto.uint32_field(4)
    special_reward_id_list: List[int] = betterproto.uint32_field(5)
    is_special_shine_list: List[int] = betterproto.uint32_field(6)
    taken_reward_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class VirtualAvatar(betterproto.Message):
    virtual_avatar_id: int = betterproto.uint32_field(1)
    virtual_weapon_id: int = betterproto.uint32_field(2)
    virtual_stigmata_id_1: int = betterproto.uint32_field(3)
    virtual_stigmata_id_2: int = betterproto.uint32_field(4)
    virtual_stigmata_id_3: int = betterproto.uint32_field(5)
    virtual_buff_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class VirtualAvatarGroup(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    virtual_avatar_list: List["VirtualAvatar"] = betterproto.message_field(2)
    virtual_weapon_id_list: List[int] = betterproto.uint32_field(3)
    virtual_stigmata_id_list: List[int] = betterproto.uint32_field(4)
    virtual_avatar_team_list: List[int] = betterproto.uint32_field(5)
    virtual_role_list: List["VirtualTrainRole"] = betterproto.message_field(6)
    is_locked: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class VirtualAvatarGroupBriefData(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    chapter_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class VirtualAvatarGroupChangeNotify(betterproto.Message):
    virtual_avatar_group: "VirtualAvatarGroup" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class VirtualGacha(betterproto.Message):
    box_id: int = betterproto.uint32_field(1)
    status: "VirtualGachaStatus" = betterproto.enum_field(2)
    pool_list: List["VirtualGachaPool"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class VirtualGachaPool(betterproto.Message):
    pool_id: int = betterproto.uint32_field(1)
    gacha_times: int = betterproto.uint32_field(2)
    total_times: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class VirtualGachaReq(betterproto.Message):
    box_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class VirtualGachaRsp(betterproto.Message):
    retcode: "VirtualGachaRspRetcode" = betterproto.enum_field(1)
    item_id: int = betterproto.uint32_field(2)
    candidate_item_id_list: List[int] = betterproto.uint32_field(3)
    gacha_status: "VirtualGacha" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class VirtualTrainCommon(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class VirtualTrainCustom(betterproto.Message):
    custom_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    choosed_index: int = betterproto.uint32_field(3)
    max_index: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class VirtualTrainDirectGachaNotify(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    item_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class VirtualTrainEvoReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    evo_avatar_id: int = betterproto.uint32_field(2)
    is_quick_evo: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class VirtualTrainEvoRsp(betterproto.Message):
    retcode: "VirtualTrainEvoRspRetcode" = betterproto.enum_field(1)
    group_id: int = betterproto.uint32_field(2)
    evo_avatar_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class VirtualTrainItemDrop(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    item_num: int = betterproto.uint32_field(2)
    split_material_list: List["Material"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class VirtualTrainItemDropNotify(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    drop_src_type: "VirtualTrainItemDropNotifyDropSrcType" = betterproto.enum_field(2)
    item_drop_list: List["VirtualTrainItemDrop"] = betterproto.message_field(3)
    stage_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class VirtualTrainRole(betterproto.Message):
    virtual_role_id: int = betterproto.uint32_field(1)
    custom_list: List["VirtualTrainCustom"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class VirtualTrainRoleCustomChooseReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    virtual_role_id: int = betterproto.uint32_field(2)
    custom_id: int = betterproto.uint32_field(3)
    index: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class VirtualTrainRoleCustomChooseRsp(betterproto.Message):
    retcode: "VirtualTrainRoleCustomChooseRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class VirtualTrainRoleCustomLevelUpReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    virtual_role_id: int = betterproto.uint32_field(2)
    custom_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class VirtualTrainRoleCustomLevelUpRsp(betterproto.Message):
    retcode: "VirtualTrainRoleCustomLevelUpRspRetcode" = betterproto.enum_field(1)
    group_id: int = betterproto.uint32_field(2)
    virtual_role_id: int = betterproto.uint32_field(3)
    custom_id: int = betterproto.uint32_field(4)
    level: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class WaitDelMaterialData(betterproto.Message):
    material_id: int = betterproto.uint32_field(1)
    num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WantedMirrorRecoveryReq(betterproto.Message):
    consume_item_list: "EquipmentItemList" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class WantedMirrorRecoveryRsp(betterproto.Message):
    retcode: "WantedMirrorRecoveryRspRetcode" = betterproto.enum_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WareHouseDemand(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WarshipAvatarData(betterproto.Message):
    warship_first_avatar_id: int = betterproto.uint32_field(1)
    warship_second_avatar_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WarshipComponent(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    component_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WarshipItemReturnMaterialNotify(betterproto.Message):
    warship_item_id: int = betterproto.uint32_field(1)
    convert_num: int = betterproto.uint32_field(2)
    return_material_id: int = betterproto.uint32_field(3)
    return_material_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class WarshipThemeData(betterproto.Message):
    warship_id: int = betterproto.uint32_field(1)
    component_list: List["WarshipComponent"] = betterproto.message_field(2)
    bgm_play_mode: int = betterproto.uint32_field(3)
    is_weather_fixed: bool = betterproto.bool_field(4)
    weather_idx: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class WatchReplayReq(betterproto.Message):
    key: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class WatchReplayRsp(betterproto.Message):
    retcode: "WatchReplayRspRetcode" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class Weapon(betterproto.Message):
    unique_id: int = betterproto.uint32_field(1)
    id: int = betterproto.uint32_field(2)
    level: int = betterproto.uint32_field(3)
    exp: int = betterproto.uint32_field(4)
    is_protected: bool = betterproto.bool_field(5)
    cancel_protect_time: int = betterproto.uint32_field(6)
    is_extracted: bool = betterproto.bool_field(7)
    sub_weapon_id: int = betterproto.uint32_field(8)
    quantum_branch_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class WeaponDetailData(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    unique_id: int = betterproto.uint32_field(3)
    sub_weapon_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class WeaponInfo(betterproto.Message):
    weapon_id: int = betterproto.uint32_field(1)
    sub_weapon_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WebActivity(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    show_type: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WeekDayActivity(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    stage_id_list: List[int] = betterproto.uint32_field(2)
    enter_times: int = betterproto.uint32_field(3)
    begin_time: int = betterproto.uint32_field(4)
    end_time: int = betterproto.uint32_field(5)
    activity_end_time: int = betterproto.uint32_field(6)
    exchange_times: int = betterproto.uint32_field(7)
    mp_raid_next_refresh_time: int = betterproto.uint32_field(8)
    mp_raid_reset_times: int = betterproto.uint32_field(9)
    mp_member_today_enter_times: int = betterproto.uint32_field(10)
    challenge_reward_granted_list: List[int] = betterproto.uint32_field(11)
    activity_begin_time: int = betterproto.uint32_field(12)
    force_open_time: int = betterproto.uint32_field(13)
    mp_raid_score_sum: int = betterproto.uint32_field(14)
    is_get_mp_raid_special_reward: bool = betterproto.bool_field(15)
    raid_score_reward_list: List[int] = betterproto.uint32_field(16)
    schedule_id: int = betterproto.uint32_field(17)


@dataclass(eq=False, repr=False)
class WeekDayActivityStageCompensation(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_first_win: bool = betterproto.bool_field(2)
    challenge_reward_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class WeekDayActivitySweepReq(betterproto.Message):
    stage_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class WeekDayActivitySweepRsp(betterproto.Message):
    retcode: "WeekDayActivitySweepRspRetcode" = betterproto.enum_field(1)
    reward_data: "RewardData" = betterproto.message_field(2)
    drop_item_list: List["DropItem"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class WeeklyReportBlockZone(betterproto.Message):
    total_score: int = betterproto.uint32_field(1)
    reward_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WeeklyReportEndless(betterproto.Message):
    endless_type: "EndlessType" = betterproto.enum_field(1)
    begin_time: int = betterproto.uint32_field(2)
    group_level: int = betterproto.uint32_field(3)
    final_boss_id: int = betterproto.uint32_field(4)
    score: int = betterproto.uint32_field(6)
    lineup_info: "LineupBriefInfo" = betterproto.message_field(7)
    reward_progress: int = betterproto.uint32_field(8)
    reward_type: "EndlessRewardType" = betterproto.enum_field(9)
    single_mode_score: int = betterproto.uint32_field(10)
    battle_config_id: int = betterproto.uint32_field(11)
    single_mode_activity_id: int = betterproto.uint32_field(12)
    end_time: int = betterproto.uint32_field(13)
    greedy_reward_data: "RewardData" = betterproto.message_field(14)
    greedy_max_finish_floor: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class WeeklyReportExBoss(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    rank_id: int = betterproto.uint32_field(2)
    times_score: int = betterproto.uint32_field(3)
    boss_group_list: List["WeeklyReportExBossGroup"] = betterproto.message_field(4)
    rank_percent: int = betterproto.uint32_field(5)
    rank: int = betterproto.uint32_field(6)
    begin_time: int = betterproto.uint32_field(7)
    end_time: int = betterproto.uint32_field(8)
    reward_id_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class WeeklyReportExBossGroup(betterproto.Message):
    boss_group_id: int = betterproto.uint32_field(1)
    finished_boss_info: "FinishedExBossInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WeeklyReportUltraEndless(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    group_level: int = betterproto.uint32_field(2)
    max_stage_score: int = betterproto.uint32_field(3)
    group_member_num: int = betterproto.uint32_field(4)
    rank: int = betterproto.uint32_field(5)
    cup_num_before_schedule_begin: int = betterproto.uint32_field(6)
    cup_num_after_schedule_settle: int = betterproto.uint32_field(7)
    top_rank: int = betterproto.uint32_field(8)
    top_rank_reward_id: int = betterproto.uint32_field(9)
    group_level_reward_id: int = betterproto.uint32_field(10)
    lineup_info: "LineupBriefInfo" = betterproto.message_field(11)
    max_mission_num: int = betterproto.uint32_field(12)
    finished_mission_num: int = betterproto.uint32_field(13)
    mission_reward_list: List[int] = betterproto.uint32_field(14)
    begin_time: int = betterproto.uint32_field(15)
    end_time: int = betterproto.uint32_field(16)
    battle_config_id: int = betterproto.uint32_field(17)


@dataclass(eq=False, repr=False)
class WeeklyRoutineMission(betterproto.Message):
    mission_id: int = betterproto.uint32_field(1)
    cur_contribution: int = betterproto.uint32_field(2)
    weekly_contribution: int = betterproto.uint32_field(3)
    mission_finish_times: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class WikiDetailData(betterproto.Message):
    wiki_detail_type: int = betterproto.uint32_field(1)
    wiki_detail_num_get: int = betterproto.uint32_field(2)
    wiki_detail_score: int = betterproto.uint32_field(3)
    wiki_detail_num_total: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class WikiTakeActivitySuitRewardReq(betterproto.Message):
    suit_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class WikiTakeActivitySuitRewardRsp(betterproto.Message):
    retcode: "WikiTakeActivitySuitRewardRspRetcode" = betterproto.enum_field(1)
    suit_id: int = betterproto.uint32_field(2)
    reward: "RewardData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class WishWellData(betterproto.Message):
    left_times: int = betterproto.uint32_field(1)
    set_id: int = betterproto.uint32_field(2)
    material_id: int = betterproto.uint32_field(3)
    material_num: int = betterproto.uint32_field(4)
    equip_need_num: int = betterproto.uint32_field(5)
    equip_list: List["WishWellDataEquip"] = betterproto.message_field(6)
    max_wish_times: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class WishWellDataEquip(betterproto.Message):
    equip_id: int = betterproto.uint32_field(1)
    equip_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WorldMapData(betterproto.Message):
    world_map_id: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)
    high_light_min_level: int = betterproto.uint32_field(4)
    high_light_max_level: int = betterproto.uint32_field(5)
    weight: int = betterproto.uint32_field(6)
    advance_time: int = betterproto.uint32_field(7)
    id: int = betterproto.uint32_field(8)
